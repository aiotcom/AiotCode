                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.4 #10774 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module xmac
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _xmac_driver
                                     12 	.globl _memb_alloc
                                     13 	.globl _memb_init
                                     14 	.globl _list_item_next
                                     15 	.globl _list_add
                                     16 	.globl _list_head
                                     17 	.globl _list_init
                                     18 	.globl _queuebuf_free
                                     19 	.globl _queuebuf_to_packetbuf
                                     20 	.globl _queuebuf_new_from_packetbuf
                                     21 	.globl _packetbuf_addr
                                     22 	.globl _packetbuf_set_addr
                                     23 	.globl _packetbuf_attr
                                     24 	.globl _packetbuf_set_attr
                                     25 	.globl _packetbuf_compact
                                     26 	.globl _packetbuf_totlen
                                     27 	.globl _packetbuf_hdrptr
                                     28 	.globl _packetbuf_dataptr
                                     29 	.globl _rimeaddr_cmp
                                     30 	.globl _rimeaddr_copy
                                     31 	.globl _rtimer_set
                                     32 	.globl ___memcpy
                                     33 	.globl _watchdog_periodic
                                     34 	.globl _watchdog_start
                                     35 	.globl _leds_toggle
                                     36 	.globl _leds_off
                                     37 	.globl _leds_on
                                     38 	.globl _ACTIVE
                                     39 	.globl _TX_BYTE
                                     40 	.globl _RX_BYTE
                                     41 	.globl _ERR
                                     42 	.globl _FE
                                     43 	.globl _SLAVE
                                     44 	.globl _RE
                                     45 	.globl _MODE
                                     46 	.globl _T3OVFIF
                                     47 	.globl _T3CH0IF
                                     48 	.globl _T3CH1IF
                                     49 	.globl _T4OVFIF
                                     50 	.globl _T4CH0IF
                                     51 	.globl _T4CH1IF
                                     52 	.globl _OVFIM
                                     53 	.globl _B_0
                                     54 	.globl _B_1
                                     55 	.globl _B_2
                                     56 	.globl _B_3
                                     57 	.globl _B_4
                                     58 	.globl _B_5
                                     59 	.globl _B_6
                                     60 	.globl _B_7
                                     61 	.globl _P2IF
                                     62 	.globl _UTX0IF
                                     63 	.globl _UTX1IF
                                     64 	.globl _P1IF
                                     65 	.globl _WDTIF
                                     66 	.globl _ACC_0
                                     67 	.globl _ACC_1
                                     68 	.globl _ACC_2
                                     69 	.globl _ACC_3
                                     70 	.globl _ACC_4
                                     71 	.globl _ACC_5
                                     72 	.globl _ACC_6
                                     73 	.globl _ACC_7
                                     74 	.globl _P
                                     75 	.globl _F1
                                     76 	.globl _OV
                                     77 	.globl _RS0
                                     78 	.globl _RS1
                                     79 	.globl _F0
                                     80 	.globl _AC
                                     81 	.globl _CY
                                     82 	.globl _DMAIF
                                     83 	.globl _T1IF
                                     84 	.globl _T2IF
                                     85 	.globl _T3IF
                                     86 	.globl _T4IF
                                     87 	.globl _P0IF
                                     88 	.globl _STIF
                                     89 	.globl _DMAIE
                                     90 	.globl _T1IE
                                     91 	.globl _T2IE
                                     92 	.globl _T3IE
                                     93 	.globl _T4IE
                                     94 	.globl _P0IE
                                     95 	.globl _RFERRIE
                                     96 	.globl _ADCIE
                                     97 	.globl _URX0IE
                                     98 	.globl _URX1IE
                                     99 	.globl _ENCIE
                                    100 	.globl _STIE
                                    101 	.globl _EA
                                    102 	.globl _P2_0
                                    103 	.globl _P2_1
                                    104 	.globl _P2_2
                                    105 	.globl _P2_3
                                    106 	.globl _P2_4
                                    107 	.globl _P2_5
                                    108 	.globl _P2_6
                                    109 	.globl _P2_7
                                    110 	.globl _ENCIF_0
                                    111 	.globl _ENCIF_1
                                    112 	.globl _P1_0
                                    113 	.globl _P1_1
                                    114 	.globl _P1_2
                                    115 	.globl _P1_3
                                    116 	.globl _P1_4
                                    117 	.globl _P1_5
                                    118 	.globl _P1_6
                                    119 	.globl _P1_7
                                    120 	.globl _IT0
                                    121 	.globl _RFERRIF
                                    122 	.globl _IT1
                                    123 	.globl _URX0IF
                                    124 	.globl _ADCIF
                                    125 	.globl _URX1IF
                                    126 	.globl _P0_0
                                    127 	.globl _P0_1
                                    128 	.globl _P0_2
                                    129 	.globl _P0_3
                                    130 	.globl _P0_4
                                    131 	.globl _P0_5
                                    132 	.globl _P0_6
                                    133 	.globl _P0_7
                                    134 	.globl _WDCTL
                                    135 	.globl _U1GCR
                                    136 	.globl _U1UCR
                                    137 	.globl _U1BAUD
                                    138 	.globl _U1DBUF
                                    139 	.globl _U1CSR
                                    140 	.globl _U0GCR
                                    141 	.globl _U0UCR
                                    142 	.globl _U0BAUD
                                    143 	.globl _U0DBUF
                                    144 	.globl _U0CSR
                                    145 	.globl _TIMIF
                                    146 	.globl _T4CC1
                                    147 	.globl _T4CCTL1
                                    148 	.globl _T4CC0
                                    149 	.globl _T4CCTL0
                                    150 	.globl _T4CTL
                                    151 	.globl _T4CNT
                                    152 	.globl _T3CC1
                                    153 	.globl _T3CCTL1
                                    154 	.globl _T3CC0
                                    155 	.globl _T3CCTL0
                                    156 	.globl _T3CTL
                                    157 	.globl _T3CNT
                                    158 	.globl _T2MSEL
                                    159 	.globl _T2IRQM
                                    160 	.globl _T2MOVF2
                                    161 	.globl _T2MOVF1
                                    162 	.globl _T2MOVF0
                                    163 	.globl _T2M1
                                    164 	.globl _T2M0
                                    165 	.globl _T2IRQF
                                    166 	.globl _T2EVTCFG
                                    167 	.globl _T2CTRL
                                    168 	.globl _T1STAT
                                    169 	.globl _T1CCTL2
                                    170 	.globl _T1CCTL1
                                    171 	.globl _T1CCTL0
                                    172 	.globl _T1CTL
                                    173 	.globl _T1CNTH
                                    174 	.globl _T1CNTL
                                    175 	.globl _T1CC2H
                                    176 	.globl _T1CC2L
                                    177 	.globl _T1CC1H
                                    178 	.globl _T1CC1L
                                    179 	.globl _T1CC0H
                                    180 	.globl _T1CC0L
                                    181 	.globl _CLKCONSTA
                                    182 	.globl _CLKCONCMD
                                    183 	.globl _SLEEPSTA
                                    184 	.globl _SLEEPCMD
                                    185 	.globl _STLOAD
                                    186 	.globl _ST2
                                    187 	.globl _ST1
                                    188 	.globl _ST0
                                    189 	.globl _RFERRF
                                    190 	.globl _RFIRQF0
                                    191 	.globl _RFST
                                    192 	.globl _RFD
                                    193 	.globl _RFIRQF1
                                    194 	.globl _PSBANK
                                    195 	.globl _FMAP
                                    196 	.globl _MEMCTR
                                    197 	.globl __XPAGE
                                    198 	.globl _MPAGE
                                    199 	.globl _PMUX
                                    200 	.globl _P2DIR
                                    201 	.globl _P1DIR
                                    202 	.globl _P0DIR
                                    203 	.globl _P2INP
                                    204 	.globl _P1INP
                                    205 	.globl _P2SEL
                                    206 	.globl _P1SEL
                                    207 	.globl _P0SEL
                                    208 	.globl _APCFG
                                    209 	.globl _PERCFG
                                    210 	.globl _P0INP
                                    211 	.globl _P2IEN
                                    212 	.globl _P1IEN
                                    213 	.globl _P0IEN
                                    214 	.globl _PICTL
                                    215 	.globl _P2IFG
                                    216 	.globl _P1IFG
                                    217 	.globl _P0IFG
                                    218 	.globl _DMAREQ
                                    219 	.globl _DMAARM
                                    220 	.globl _DMA0CFGH
                                    221 	.globl _DMA0CFGL
                                    222 	.globl _DMA1CFGH
                                    223 	.globl _DMA1CFGL
                                    224 	.globl _DMAIRQ
                                    225 	.globl _ENCCS
                                    226 	.globl _ENCDO
                                    227 	.globl _ENCDI
                                    228 	.globl _RNDH
                                    229 	.globl _RNDL
                                    230 	.globl _ADCH
                                    231 	.globl _ADCL
                                    232 	.globl _ADCCON3
                                    233 	.globl _ADCCON2
                                    234 	.globl _ADCCON1
                                    235 	.globl _B
                                    236 	.globl _IRCON2
                                    237 	.globl _ACC
                                    238 	.globl _PSW
                                    239 	.globl _IRCON
                                    240 	.globl _IP1
                                    241 	.globl _IEN1
                                    242 	.globl _IP0
                                    243 	.globl _IEN0
                                    244 	.globl _P2
                                    245 	.globl _S1CON
                                    246 	.globl _IEN2
                                    247 	.globl _S0CON
                                    248 	.globl _DPS
                                    249 	.globl _P1
                                    250 	.globl _TCON
                                    251 	.globl _PCON
                                    252 	.globl _DPH1
                                    253 	.globl _DPL1
                                    254 	.globl _DPH0
                                    255 	.globl _DPL0
                                    256 	.globl _SP
                                    257 	.globl _P0
                                    258 	.globl _xmac_config
                                    259 	.globl _X_IEEE_ADDR
                                    260 	.globl _X_INFOPAGE
                                    261 	.globl _X_P2DIR
                                    262 	.globl _X_P1DIR
                                    263 	.globl _X_P0DIR
                                    264 	.globl _X_U1GCR
                                    265 	.globl _X_U1UCR
                                    266 	.globl _X_U1BAUD
                                    267 	.globl _X_U1DBUF
                                    268 	.globl _X_U1CSR
                                    269 	.globl _X_P2INP
                                    270 	.globl _X_P1INP
                                    271 	.globl _X_P2SEL
                                    272 	.globl _X_P1SEL
                                    273 	.globl _X_P0SEL
                                    274 	.globl _X_APCFG
                                    275 	.globl _X_PERCFG
                                    276 	.globl _X_T4CC1
                                    277 	.globl _X_T4CCTL1
                                    278 	.globl _X_T4CC0
                                    279 	.globl _X_T4CCTL0
                                    280 	.globl _X_T4CTL
                                    281 	.globl _X_T4CNT
                                    282 	.globl _X_RFIRQF0
                                    283 	.globl _X_T1CCTL2
                                    284 	.globl _X_T1CCTL1
                                    285 	.globl _X_T1CCTL0
                                    286 	.globl _X_T1CTL
                                    287 	.globl _X_T1CNTH
                                    288 	.globl _X_T1CNTL
                                    289 	.globl _X_RFST
                                    290 	.globl _X_T1CC2H
                                    291 	.globl _X_T1CC2L
                                    292 	.globl _X_T1CC1H
                                    293 	.globl _X_T1CC1L
                                    294 	.globl _X_T1CC0H
                                    295 	.globl _X_T1CC0L
                                    296 	.globl _X_RFD
                                    297 	.globl _X_TIMIF
                                    298 	.globl _X_DMAREQ
                                    299 	.globl _X_DMAARM
                                    300 	.globl _X_DMA0CFGH
                                    301 	.globl _X_DMA0CFGL
                                    302 	.globl _X_DMA1CFGH
                                    303 	.globl _X_DMA1CFGL
                                    304 	.globl _X_DMAIRQ
                                    305 	.globl _X_T3CC1
                                    306 	.globl _X_T3CCTL1
                                    307 	.globl _X_T3CC0
                                    308 	.globl _X_T3CCTL0
                                    309 	.globl _X_T3CTL
                                    310 	.globl _X_T3CNT
                                    311 	.globl _X_WDCTL
                                    312 	.globl _X_MEMCTR
                                    313 	.globl _X_CLKCONCMD
                                    314 	.globl _X_U0GCR
                                    315 	.globl _X_U0UCR
                                    316 	.globl _X_T2MSEL
                                    317 	.globl _X_U0BAUD
                                    318 	.globl _X_U0DBUF
                                    319 	.globl _X_RFERRF
                                    320 	.globl _X_SLEEPCMD
                                    321 	.globl _X_RNDH
                                    322 	.globl _X_RNDL
                                    323 	.globl _X_ADCH
                                    324 	.globl _X_ADCL
                                    325 	.globl _X_ADCCON3
                                    326 	.globl _X_ADCCON2
                                    327 	.globl _X_ADCCON1
                                    328 	.globl _X_ENCCS
                                    329 	.globl _X_ENCDO
                                    330 	.globl _X_ENCDI
                                    331 	.globl _X_T1STAT
                                    332 	.globl _X_PMUX
                                    333 	.globl _X_STLOAD
                                    334 	.globl _X_P2IEN
                                    335 	.globl _X_P0IEN
                                    336 	.globl _X_T2IRQM
                                    337 	.globl _X_T2MOVF2
                                    338 	.globl _X_T2MOVF1
                                    339 	.globl _X_T2MOVF0
                                    340 	.globl _X_T2M1
                                    341 	.globl _X_T2M0
                                    342 	.globl _X_T2IRQF
                                    343 	.globl _X_P2
                                    344 	.globl _X_PSBANK
                                    345 	.globl _X_FMAP
                                    346 	.globl _X_CLKCONSTA
                                    347 	.globl _X_SLEEPSTA
                                    348 	.globl _X_T2EVTCFG
                                    349 	.globl _X_ST2
                                    350 	.globl _X_ST1
                                    351 	.globl _X_ST0
                                    352 	.globl _X_T2CTRL
                                    353 	.globl _X__XPAGE
                                    354 	.globl _X_MPAGE
                                    355 	.globl _X_RFIRQF1
                                    356 	.globl _X_P1
                                    357 	.globl _X_P0INP
                                    358 	.globl _X_P1IEN
                                    359 	.globl _X_PICTL
                                    360 	.globl _X_P2IFG
                                    361 	.globl _X_P1IFG
                                    362 	.globl _X_P0IFG
                                    363 	.globl _X_U0CSR
                                    364 	.globl _X_P0
                                    365 	.globl _USBF5
                                    366 	.globl _USBF4
                                    367 	.globl _USBF3
                                    368 	.globl _USBF2
                                    369 	.globl _USBF1
                                    370 	.globl _USBF0
                                    371 	.globl _USBCNTH
                                    372 	.globl _USBCNTL
                                    373 	.globl _USBCNT0
                                    374 	.globl _USBCSOH
                                    375 	.globl _USBCSOL
                                    376 	.globl _USBMAXO
                                    377 	.globl _USBCSIH
                                    378 	.globl _USBCSIL
                                    379 	.globl _USBCS0
                                    380 	.globl _USBMAXI
                                    381 	.globl _USBCTRL
                                    382 	.globl _USBINDEX
                                    383 	.globl _USBFRMH
                                    384 	.globl _USBFRML
                                    385 	.globl _USBCIE
                                    386 	.globl _USBOIE
                                    387 	.globl _USBIIE
                                    388 	.globl _USBCIF
                                    389 	.globl _USBOIF
                                    390 	.globl _USBIIF
                                    391 	.globl _USBPOW
                                    392 	.globl _USBADDR
                                    393 	.globl _CSPT
                                    394 	.globl _CSPZ
                                    395 	.globl _CSPY
                                    396 	.globl _CSPX
                                    397 	.globl _CSPSTAT
                                    398 	.globl _CSPCTRL
                                    399 	.globl _CSPPROG23
                                    400 	.globl _CSPPROG22
                                    401 	.globl _CSPPROG21
                                    402 	.globl _CSPPROG20
                                    403 	.globl _CSPPROG19
                                    404 	.globl _CSPPROG18
                                    405 	.globl _CSPPROG17
                                    406 	.globl _CSPPROG16
                                    407 	.globl _CSPPROG15
                                    408 	.globl _CSPPROG14
                                    409 	.globl _CSPPROG13
                                    410 	.globl _CSPPROG12
                                    411 	.globl _CSPPROG11
                                    412 	.globl _CSPPROG10
                                    413 	.globl _CSPPROG9
                                    414 	.globl _CSPPROG8
                                    415 	.globl _CSPPROG7
                                    416 	.globl _CSPPROG6
                                    417 	.globl _CSPPROG5
                                    418 	.globl _CSPPROG4
                                    419 	.globl _CSPPROG3
                                    420 	.globl _CSPPROG2
                                    421 	.globl _CSPPROG1
                                    422 	.globl _CSPPROG0
                                    423 	.globl _RFC_OBS_CTRL2
                                    424 	.globl _RFC_OBS_CTRL1
                                    425 	.globl _RFC_OBS_CTRL0
                                    426 	.globl _TXFILTCFG
                                    427 	.globl _PTEST1
                                    428 	.globl _PTEST0
                                    429 	.globl _ATEST
                                    430 	.globl _DACTEST2
                                    431 	.globl _DACTEST1
                                    432 	.globl _DACTEST0
                                    433 	.globl _MDMTEST1
                                    434 	.globl _MDMTEST0
                                    435 	.globl _ADCTEST2
                                    436 	.globl _ADCTEST1
                                    437 	.globl _ADCTEST0
                                    438 	.globl _AGCCTRL3
                                    439 	.globl _AGCCTRL2
                                    440 	.globl _AGCCTRL1
                                    441 	.globl _AGCCTRL0
                                    442 	.globl _FSCAL3
                                    443 	.globl _FSCAL2
                                    444 	.globl _FSCAL1
                                    445 	.globl _FSCAL0
                                    446 	.globl _FSCTRL
                                    447 	.globl _RXCTRL
                                    448 	.globl _FREQEST
                                    449 	.globl _MDMCTRL1
                                    450 	.globl _MDMCTRL0
                                    451 	.globl _RFRND
                                    452 	.globl _RFERRM
                                    453 	.globl _RFIRQM1
                                    454 	.globl _RFIRQM0
                                    455 	.globl _TXLAST_PTR
                                    456 	.globl _TXFIRST_PTR
                                    457 	.globl _RXP1_PTR
                                    458 	.globl _RXLAST_PTR
                                    459 	.globl _RXFIRST_PTR
                                    460 	.globl _TXFIFOCNT
                                    461 	.globl _RXFIFOCNT
                                    462 	.globl _RXFIRST
                                    463 	.globl _RSSISTAT
                                    464 	.globl _RSSI
                                    465 	.globl _CCACTRL1
                                    466 	.globl _CCACTRL0
                                    467 	.globl _FSMCTRL
                                    468 	.globl _FIFOPCTRL
                                    469 	.globl _FSMSTAT1
                                    470 	.globl _FSMSTAT0
                                    471 	.globl _TXCTRL
                                    472 	.globl _TXPOWER
                                    473 	.globl _FREQCTRL
                                    474 	.globl _FREQTUNE
                                    475 	.globl _RXMASKCLR
                                    476 	.globl _RXMASKSET
                                    477 	.globl _RXENABLE
                                    478 	.globl _FRMCTRL1
                                    479 	.globl _FRMCTRL0
                                    480 	.globl _SRCEXTEN2
                                    481 	.globl _SRCEXTEN1
                                    482 	.globl _SRCEXTEN0
                                    483 	.globl _SRCSHORTEN2
                                    484 	.globl _SRCSHORTEN1
                                    485 	.globl _SRCSHORTEN0
                                    486 	.globl _SRCMATCH
                                    487 	.globl _FRMFILT1
                                    488 	.globl _FRMFILT0
                                    489 	.globl _SHORT_ADDR1
                                    490 	.globl _SHORT_ADDR0
                                    491 	.globl _PAN_ID1
                                    492 	.globl _PAN_ID0
                                    493 	.globl _EXT_ADDR7
                                    494 	.globl _EXT_ADDR6
                                    495 	.globl _EXT_ADDR5
                                    496 	.globl _EXT_ADDR4
                                    497 	.globl _EXT_ADDR3
                                    498 	.globl _EXT_ADDR2
                                    499 	.globl _EXT_ADDR1
                                    500 	.globl _EXT_ADDR0
                                    501 	.globl _SRCSHORTPENDEN2
                                    502 	.globl _SRCSHORTPENDEN1
                                    503 	.globl _SRCSHORTPENDEN0
                                    504 	.globl _SRCEXTPENDEN2
                                    505 	.globl _SRCEXTPENDEN1
                                    506 	.globl _SRCEXTPENDEN0
                                    507 	.globl _SRCRESINDEX
                                    508 	.globl _SRCRESMASK2
                                    509 	.globl _SRCRESMASK1
                                    510 	.globl _SRCRESMASK0
                                    511 	.globl _SRC_ADDR_TABLE
                                    512 	.globl _TXFIFO
                                    513 	.globl _RXFIFO
                                    514 	.globl _RFCORE_RAM
                                    515 	.globl _CMPCTL
                                    516 	.globl _OPAMPS
                                    517 	.globl _OPAMPC
                                    518 	.globl _STCV2
                                    519 	.globl _STCV1
                                    520 	.globl _STCV0
                                    521 	.globl _STCS
                                    522 	.globl _STCC
                                    523 	.globl _T1CC4H
                                    524 	.globl _T1CC4L
                                    525 	.globl _T1CC3H
                                    526 	.globl _T1CC3L
                                    527 	.globl _XX_T1CC2H
                                    528 	.globl _XX_T1CC2L
                                    529 	.globl _XX_T1CC1H
                                    530 	.globl _XX_T1CC1L
                                    531 	.globl _XX_T1CC0H
                                    532 	.globl _XX_T1CC0L
                                    533 	.globl _T1CCTL4
                                    534 	.globl _T1CCTL3
                                    535 	.globl _XX_T1CCTL2
                                    536 	.globl _XX_T1CCTL1
                                    537 	.globl _XX_T1CCTL0
                                    538 	.globl _CLD
                                    539 	.globl _IRCTL
                                    540 	.globl _CHIPINFO1
                                    541 	.globl _CHIPINFO0
                                    542 	.globl _FWDATA
                                    543 	.globl _FADDRH
                                    544 	.globl _FADDRL
                                    545 	.globl _FCTL
                                    546 	.globl _IVCTRL
                                    547 	.globl _BATTMON
                                    548 	.globl _SRCRC
                                    549 	.globl _DBGDATA
                                    550 	.globl _TESTREG0
                                    551 	.globl _CHIPID
                                    552 	.globl _CHVER
                                    553 	.globl _OBSSEL5
                                    554 	.globl _OBSSEL4
                                    555 	.globl _OBSSEL3
                                    556 	.globl _OBSSEL2
                                    557 	.globl _OBSSEL1
                                    558 	.globl _OBSSEL0
                                    559 	.globl _I2CIO
                                    560 	.globl _I2CWC
                                    561 	.globl _I2CADDR
                                    562 	.globl _I2CDATA
                                    563 	.globl _I2CSTAT
                                    564 	.globl _I2CCFG
                                    565 	.globl _OPAMPMC
                                    566 	.globl _MONMUX
                                    567 	.globl _xmac_set_announcement_radio_txpower
                                    568 ;--------------------------------------------------------
                                    569 ; special function registers
                                    570 ;--------------------------------------------------------
                                    571 	.area RSEG    (ABS,DATA)
      000000                        572 	.org 0x0000
                           000080   573 _P0	=	0x0080
                           000081   574 _SP	=	0x0081
                           000082   575 _DPL0	=	0x0082
                           000083   576 _DPH0	=	0x0083
                           000084   577 _DPL1	=	0x0084
                           000085   578 _DPH1	=	0x0085
                           000087   579 _PCON	=	0x0087
                           000088   580 _TCON	=	0x0088
                           000090   581 _P1	=	0x0090
                           000092   582 _DPS	=	0x0092
                           000098   583 _S0CON	=	0x0098
                           00009A   584 _IEN2	=	0x009a
                           00009B   585 _S1CON	=	0x009b
                           0000A0   586 _P2	=	0x00a0
                           0000A8   587 _IEN0	=	0x00a8
                           0000A9   588 _IP0	=	0x00a9
                           0000B8   589 _IEN1	=	0x00b8
                           0000B9   590 _IP1	=	0x00b9
                           0000C0   591 _IRCON	=	0x00c0
                           0000D0   592 _PSW	=	0x00d0
                           0000E0   593 _ACC	=	0x00e0
                           0000E8   594 _IRCON2	=	0x00e8
                           0000F0   595 _B	=	0x00f0
                           0000B4   596 _ADCCON1	=	0x00b4
                           0000B5   597 _ADCCON2	=	0x00b5
                           0000B6   598 _ADCCON3	=	0x00b6
                           0000BA   599 _ADCL	=	0x00ba
                           0000BB   600 _ADCH	=	0x00bb
                           0000BC   601 _RNDL	=	0x00bc
                           0000BD   602 _RNDH	=	0x00bd
                           0000B1   603 _ENCDI	=	0x00b1
                           0000B2   604 _ENCDO	=	0x00b2
                           0000B3   605 _ENCCS	=	0x00b3
                           0000D1   606 _DMAIRQ	=	0x00d1
                           0000D2   607 _DMA1CFGL	=	0x00d2
                           0000D3   608 _DMA1CFGH	=	0x00d3
                           0000D4   609 _DMA0CFGL	=	0x00d4
                           0000D5   610 _DMA0CFGH	=	0x00d5
                           0000D6   611 _DMAARM	=	0x00d6
                           0000D7   612 _DMAREQ	=	0x00d7
                           000089   613 _P0IFG	=	0x0089
                           00008A   614 _P1IFG	=	0x008a
                           00008B   615 _P2IFG	=	0x008b
                           00008C   616 _PICTL	=	0x008c
                           0000AB   617 _P0IEN	=	0x00ab
                           00008D   618 _P1IEN	=	0x008d
                           0000AC   619 _P2IEN	=	0x00ac
                           00008F   620 _P0INP	=	0x008f
                           0000F1   621 _PERCFG	=	0x00f1
                           0000F2   622 _APCFG	=	0x00f2
                           0000F3   623 _P0SEL	=	0x00f3
                           0000F4   624 _P1SEL	=	0x00f4
                           0000F5   625 _P2SEL	=	0x00f5
                           0000F6   626 _P1INP	=	0x00f6
                           0000F7   627 _P2INP	=	0x00f7
                           0000FD   628 _P0DIR	=	0x00fd
                           0000FE   629 _P1DIR	=	0x00fe
                           0000FF   630 _P2DIR	=	0x00ff
                           0000AE   631 _PMUX	=	0x00ae
                           000093   632 _MPAGE	=	0x0093
                           000093   633 __XPAGE	=	0x0093
                           0000C7   634 _MEMCTR	=	0x00c7
                           00009F   635 _FMAP	=	0x009f
                           00009F   636 _PSBANK	=	0x009f
                           000091   637 _RFIRQF1	=	0x0091
                           0000D9   638 _RFD	=	0x00d9
                           0000E1   639 _RFST	=	0x00e1
                           0000E9   640 _RFIRQF0	=	0x00e9
                           0000BF   641 _RFERRF	=	0x00bf
                           000095   642 _ST0	=	0x0095
                           000096   643 _ST1	=	0x0096
                           000097   644 _ST2	=	0x0097
                           0000AD   645 _STLOAD	=	0x00ad
                           0000BE   646 _SLEEPCMD	=	0x00be
                           00009D   647 _SLEEPSTA	=	0x009d
                           0000C6   648 _CLKCONCMD	=	0x00c6
                           00009E   649 _CLKCONSTA	=	0x009e
                           0000DA   650 _T1CC0L	=	0x00da
                           0000DB   651 _T1CC0H	=	0x00db
                           0000DC   652 _T1CC1L	=	0x00dc
                           0000DD   653 _T1CC1H	=	0x00dd
                           0000DE   654 _T1CC2L	=	0x00de
                           0000DF   655 _T1CC2H	=	0x00df
                           0000E2   656 _T1CNTL	=	0x00e2
                           0000E3   657 _T1CNTH	=	0x00e3
                           0000E4   658 _T1CTL	=	0x00e4
                           0000E5   659 _T1CCTL0	=	0x00e5
                           0000E6   660 _T1CCTL1	=	0x00e6
                           0000E7   661 _T1CCTL2	=	0x00e7
                           0000AF   662 _T1STAT	=	0x00af
                           000094   663 _T2CTRL	=	0x0094
                           00009C   664 _T2EVTCFG	=	0x009c
                           0000A1   665 _T2IRQF	=	0x00a1
                           0000A2   666 _T2M0	=	0x00a2
                           0000A3   667 _T2M1	=	0x00a3
                           0000A4   668 _T2MOVF0	=	0x00a4
                           0000A5   669 _T2MOVF1	=	0x00a5
                           0000A6   670 _T2MOVF2	=	0x00a6
                           0000A7   671 _T2IRQM	=	0x00a7
                           0000C3   672 _T2MSEL	=	0x00c3
                           0000CA   673 _T3CNT	=	0x00ca
                           0000CB   674 _T3CTL	=	0x00cb
                           0000CC   675 _T3CCTL0	=	0x00cc
                           0000CD   676 _T3CC0	=	0x00cd
                           0000CE   677 _T3CCTL1	=	0x00ce
                           0000CF   678 _T3CC1	=	0x00cf
                           0000EA   679 _T4CNT	=	0x00ea
                           0000EB   680 _T4CTL	=	0x00eb
                           0000EC   681 _T4CCTL0	=	0x00ec
                           0000ED   682 _T4CC0	=	0x00ed
                           0000EE   683 _T4CCTL1	=	0x00ee
                           0000EF   684 _T4CC1	=	0x00ef
                           0000D8   685 _TIMIF	=	0x00d8
                           000086   686 _U0CSR	=	0x0086
                           0000C1   687 _U0DBUF	=	0x00c1
                           0000C2   688 _U0BAUD	=	0x00c2
                           0000C4   689 _U0UCR	=	0x00c4
                           0000C5   690 _U0GCR	=	0x00c5
                           0000F8   691 _U1CSR	=	0x00f8
                           0000F9   692 _U1DBUF	=	0x00f9
                           0000FA   693 _U1BAUD	=	0x00fa
                           0000FB   694 _U1UCR	=	0x00fb
                           0000FC   695 _U1GCR	=	0x00fc
                           0000C9   696 _WDCTL	=	0x00c9
                                    697 ;--------------------------------------------------------
                                    698 ; special function bits
                                    699 ;--------------------------------------------------------
                                    700 	.area RSEG    (ABS,DATA)
      000000                        701 	.org 0x0000
                           000087   702 _P0_7	=	0x0087
                           000086   703 _P0_6	=	0x0086
                           000085   704 _P0_5	=	0x0085
                           000084   705 _P0_4	=	0x0084
                           000083   706 _P0_3	=	0x0083
                           000082   707 _P0_2	=	0x0082
                           000081   708 _P0_1	=	0x0081
                           000080   709 _P0_0	=	0x0080
                           00008F   710 _URX1IF	=	0x008f
                           00008D   711 _ADCIF	=	0x008d
                           00008B   712 _URX0IF	=	0x008b
                           00008A   713 _IT1	=	0x008a
                           000089   714 _RFERRIF	=	0x0089
                           000088   715 _IT0	=	0x0088
                           000097   716 _P1_7	=	0x0097
                           000096   717 _P1_6	=	0x0096
                           000095   718 _P1_5	=	0x0095
                           000094   719 _P1_4	=	0x0094
                           000093   720 _P1_3	=	0x0093
                           000092   721 _P1_2	=	0x0092
                           000091   722 _P1_1	=	0x0091
                           000090   723 _P1_0	=	0x0090
                           000099   724 _ENCIF_1	=	0x0099
                           000098   725 _ENCIF_0	=	0x0098
                           0000A7   726 _P2_7	=	0x00a7
                           0000A6   727 _P2_6	=	0x00a6
                           0000A5   728 _P2_5	=	0x00a5
                           0000A4   729 _P2_4	=	0x00a4
                           0000A3   730 _P2_3	=	0x00a3
                           0000A2   731 _P2_2	=	0x00a2
                           0000A1   732 _P2_1	=	0x00a1
                           0000A0   733 _P2_0	=	0x00a0
                           0000AF   734 _EA	=	0x00af
                           0000AD   735 _STIE	=	0x00ad
                           0000AC   736 _ENCIE	=	0x00ac
                           0000AB   737 _URX1IE	=	0x00ab
                           0000AA   738 _URX0IE	=	0x00aa
                           0000A9   739 _ADCIE	=	0x00a9
                           0000A8   740 _RFERRIE	=	0x00a8
                           0000BD   741 _P0IE	=	0x00bd
                           0000BC   742 _T4IE	=	0x00bc
                           0000BB   743 _T3IE	=	0x00bb
                           0000BA   744 _T2IE	=	0x00ba
                           0000B9   745 _T1IE	=	0x00b9
                           0000B8   746 _DMAIE	=	0x00b8
                           0000C7   747 _STIF	=	0x00c7
                           0000C5   748 _P0IF	=	0x00c5
                           0000C4   749 _T4IF	=	0x00c4
                           0000C3   750 _T3IF	=	0x00c3
                           0000C2   751 _T2IF	=	0x00c2
                           0000C1   752 _T1IF	=	0x00c1
                           0000C0   753 _DMAIF	=	0x00c0
                           0000D7   754 _CY	=	0x00d7
                           0000D6   755 _AC	=	0x00d6
                           0000D5   756 _F0	=	0x00d5
                           0000D4   757 _RS1	=	0x00d4
                           0000D3   758 _RS0	=	0x00d3
                           0000D2   759 _OV	=	0x00d2
                           0000D1   760 _F1	=	0x00d1
                           0000D0   761 _P	=	0x00d0
                           0000E7   762 _ACC_7	=	0x00e7
                           0000E6   763 _ACC_6	=	0x00e6
                           0000E5   764 _ACC_5	=	0x00e5
                           0000E4   765 _ACC_4	=	0x00e4
                           0000E3   766 _ACC_3	=	0x00e3
                           0000E2   767 _ACC_2	=	0x00e2
                           0000E1   768 _ACC_1	=	0x00e1
                           0000E0   769 _ACC_0	=	0x00e0
                           0000EC   770 _WDTIF	=	0x00ec
                           0000EB   771 _P1IF	=	0x00eb
                           0000EA   772 _UTX1IF	=	0x00ea
                           0000E9   773 _UTX0IF	=	0x00e9
                           0000E8   774 _P2IF	=	0x00e8
                           0000F7   775 _B_7	=	0x00f7
                           0000F6   776 _B_6	=	0x00f6
                           0000F5   777 _B_5	=	0x00f5
                           0000F4   778 _B_4	=	0x00f4
                           0000F3   779 _B_3	=	0x00f3
                           0000F2   780 _B_2	=	0x00f2
                           0000F1   781 _B_1	=	0x00f1
                           0000F0   782 _B_0	=	0x00f0
                           0000DE   783 _OVFIM	=	0x00de
                           0000DD   784 _T4CH1IF	=	0x00dd
                           0000DC   785 _T4CH0IF	=	0x00dc
                           0000DB   786 _T4OVFIF	=	0x00db
                           0000DA   787 _T3CH1IF	=	0x00da
                           0000D9   788 _T3CH0IF	=	0x00d9
                           0000D8   789 _T3OVFIF	=	0x00d8
                           0000FF   790 _MODE	=	0x00ff
                           0000FE   791 _RE	=	0x00fe
                           0000FD   792 _SLAVE	=	0x00fd
                           0000FC   793 _FE	=	0x00fc
                           0000FB   794 _ERR	=	0x00fb
                           0000FA   795 _RX_BYTE	=	0x00fa
                           0000F9   796 _TX_BYTE	=	0x00f9
                           0000F8   797 _ACTIVE	=	0x00f8
                                    798 ;--------------------------------------------------------
                                    799 ; overlayable register banks
                                    800 ;--------------------------------------------------------
                                    801 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        802 	.ds 8
                                    803 ;--------------------------------------------------------
                                    804 ; internal ram data
                                    805 ;--------------------------------------------------------
                                    806 	.area DSEG    (DATA)
                                    807 ;--------------------------------------------------------
                                    808 ; overlayable items in internal ram 
                                    809 ;--------------------------------------------------------
                                    810 ;--------------------------------------------------------
                                    811 ; indirectly addressable internal ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area ISEG    (DATA)
                                    814 ;--------------------------------------------------------
                                    815 ; absolute internal ram data
                                    816 ;--------------------------------------------------------
                                    817 	.area IABS    (ABS,DATA)
                                    818 	.area IABS    (ABS,DATA)
                                    819 ;--------------------------------------------------------
                                    820 ; bit data
                                    821 ;--------------------------------------------------------
                                    822 	.area BSEG    (BIT)
                                    823 ;--------------------------------------------------------
                                    824 ; paged external ram data
                                    825 ;--------------------------------------------------------
                                    826 	.area PSEG    (PAG,XDATA)
                                    827 ;--------------------------------------------------------
                                    828 ; external ram data
                                    829 ;--------------------------------------------------------
                                    830 	.area XSEG    (XDATA)
                           0061A6   831 _MONMUX	=	0x61a6
                           0061A6   832 _OPAMPMC	=	0x61a6
                           006230   833 _I2CCFG	=	0x6230
                           006231   834 _I2CSTAT	=	0x6231
                           006232   835 _I2CDATA	=	0x6232
                           006233   836 _I2CADDR	=	0x6233
                           006234   837 _I2CWC	=	0x6234
                           006235   838 _I2CIO	=	0x6235
                           006243   839 _OBSSEL0	=	0x6243
                           006244   840 _OBSSEL1	=	0x6244
                           006245   841 _OBSSEL2	=	0x6245
                           006246   842 _OBSSEL3	=	0x6246
                           006247   843 _OBSSEL4	=	0x6247
                           006248   844 _OBSSEL5	=	0x6248
                           006249   845 _CHVER	=	0x6249
                           00624A   846 _CHIPID	=	0x624a
                           00624B   847 _TESTREG0	=	0x624b
                           006260   848 _DBGDATA	=	0x6260
                           006262   849 _SRCRC	=	0x6262
                           006264   850 _BATTMON	=	0x6264
                           006265   851 _IVCTRL	=	0x6265
                           006270   852 _FCTL	=	0x6270
                           006271   853 _FADDRL	=	0x6271
                           006272   854 _FADDRH	=	0x6272
                           006273   855 _FWDATA	=	0x6273
                           006276   856 _CHIPINFO0	=	0x6276
                           006277   857 _CHIPINFO1	=	0x6277
                           006281   858 _IRCTL	=	0x6281
                           006290   859 _CLD	=	0x6290
                           0062A0   860 _XX_T1CCTL0	=	0x62a0
                           0062A1   861 _XX_T1CCTL1	=	0x62a1
                           0062A2   862 _XX_T1CCTL2	=	0x62a2
                           0062A3   863 _T1CCTL3	=	0x62a3
                           0062A4   864 _T1CCTL4	=	0x62a4
                           0062A6   865 _XX_T1CC0L	=	0x62a6
                           0062A7   866 _XX_T1CC0H	=	0x62a7
                           0062A8   867 _XX_T1CC1L	=	0x62a8
                           0062A9   868 _XX_T1CC1H	=	0x62a9
                           0062AA   869 _XX_T1CC2L	=	0x62aa
                           0062AB   870 _XX_T1CC2H	=	0x62ab
                           0062AC   871 _T1CC3L	=	0x62ac
                           0062AD   872 _T1CC3H	=	0x62ad
                           0062AE   873 _T1CC4L	=	0x62ae
                           0062AF   874 _T1CC4H	=	0x62af
                           0062B0   875 _STCC	=	0x62b0
                           0062B1   876 _STCS	=	0x62b1
                           0062B2   877 _STCV0	=	0x62b2
                           0062B3   878 _STCV1	=	0x62b3
                           0062B4   879 _STCV2	=	0x62b4
                           0062C0   880 _OPAMPC	=	0x62c0
                           0062C1   881 _OPAMPS	=	0x62c1
                           0062D0   882 _CMPCTL	=	0x62d0
                           006000   883 _RFCORE_RAM	=	0x6000
                           006000   884 _RXFIFO	=	0x6000
                           006080   885 _TXFIFO	=	0x6080
                           006100   886 _SRC_ADDR_TABLE	=	0x6100
                           006160   887 _SRCRESMASK0	=	0x6160
                           006161   888 _SRCRESMASK1	=	0x6161
                           006162   889 _SRCRESMASK2	=	0x6162
                           006163   890 _SRCRESINDEX	=	0x6163
                           006164   891 _SRCEXTPENDEN0	=	0x6164
                           006165   892 _SRCEXTPENDEN1	=	0x6165
                           006166   893 _SRCEXTPENDEN2	=	0x6166
                           006167   894 _SRCSHORTPENDEN0	=	0x6167
                           006168   895 _SRCSHORTPENDEN1	=	0x6168
                           006169   896 _SRCSHORTPENDEN2	=	0x6169
                           00616A   897 _EXT_ADDR0	=	0x616a
                           00616B   898 _EXT_ADDR1	=	0x616b
                           00616C   899 _EXT_ADDR2	=	0x616c
                           00616D   900 _EXT_ADDR3	=	0x616d
                           00616E   901 _EXT_ADDR4	=	0x616e
                           00616F   902 _EXT_ADDR5	=	0x616f
                           006170   903 _EXT_ADDR6	=	0x6170
                           006171   904 _EXT_ADDR7	=	0x6171
                           006172   905 _PAN_ID0	=	0x6172
                           006173   906 _PAN_ID1	=	0x6173
                           006174   907 _SHORT_ADDR0	=	0x6174
                           006175   908 _SHORT_ADDR1	=	0x6175
                           006180   909 _FRMFILT0	=	0x6180
                           006181   910 _FRMFILT1	=	0x6181
                           006182   911 _SRCMATCH	=	0x6182
                           006183   912 _SRCSHORTEN0	=	0x6183
                           006184   913 _SRCSHORTEN1	=	0x6184
                           006185   914 _SRCSHORTEN2	=	0x6185
                           006186   915 _SRCEXTEN0	=	0x6186
                           006187   916 _SRCEXTEN1	=	0x6187
                           006188   917 _SRCEXTEN2	=	0x6188
                           006189   918 _FRMCTRL0	=	0x6189
                           00618A   919 _FRMCTRL1	=	0x618a
                           00618B   920 _RXENABLE	=	0x618b
                           00618C   921 _RXMASKSET	=	0x618c
                           00618D   922 _RXMASKCLR	=	0x618d
                           00618E   923 _FREQTUNE	=	0x618e
                           00618F   924 _FREQCTRL	=	0x618f
                           006190   925 _TXPOWER	=	0x6190
                           006191   926 _TXCTRL	=	0x6191
                           006192   927 _FSMSTAT0	=	0x6192
                           006193   928 _FSMSTAT1	=	0x6193
                           006194   929 _FIFOPCTRL	=	0x6194
                           006195   930 _FSMCTRL	=	0x6195
                           006196   931 _CCACTRL0	=	0x6196
                           006197   932 _CCACTRL1	=	0x6197
                           006198   933 _RSSI	=	0x6198
                           006199   934 _RSSISTAT	=	0x6199
                           00619A   935 _RXFIRST	=	0x619a
                           00619B   936 _RXFIFOCNT	=	0x619b
                           00619C   937 _TXFIFOCNT	=	0x619c
                           00619D   938 _RXFIRST_PTR	=	0x619d
                           00619E   939 _RXLAST_PTR	=	0x619e
                           00619F   940 _RXP1_PTR	=	0x619f
                           0061A1   941 _TXFIRST_PTR	=	0x61a1
                           0061A2   942 _TXLAST_PTR	=	0x61a2
                           0061A3   943 _RFIRQM0	=	0x61a3
                           0061A4   944 _RFIRQM1	=	0x61a4
                           0061A5   945 _RFERRM	=	0x61a5
                           0061A7   946 _RFRND	=	0x61a7
                           0061A8   947 _MDMCTRL0	=	0x61a8
                           0061A9   948 _MDMCTRL1	=	0x61a9
                           0061AA   949 _FREQEST	=	0x61aa
                           0061AB   950 _RXCTRL	=	0x61ab
                           0061AC   951 _FSCTRL	=	0x61ac
                           0061AD   952 _FSCAL0	=	0x61ad
                           0061AE   953 _FSCAL1	=	0x61ae
                           0061AF   954 _FSCAL2	=	0x61af
                           0061B0   955 _FSCAL3	=	0x61b0
                           0061B1   956 _AGCCTRL0	=	0x61b1
                           0061B2   957 _AGCCTRL1	=	0x61b2
                           0061B3   958 _AGCCTRL2	=	0x61b3
                           0061B4   959 _AGCCTRL3	=	0x61b4
                           0061B5   960 _ADCTEST0	=	0x61b5
                           0061B6   961 _ADCTEST1	=	0x61b6
                           0061B7   962 _ADCTEST2	=	0x61b7
                           0061B8   963 _MDMTEST0	=	0x61b8
                           0061B9   964 _MDMTEST1	=	0x61b9
                           0061BA   965 _DACTEST0	=	0x61ba
                           0061BB   966 _DACTEST1	=	0x61bb
                           0061BC   967 _DACTEST2	=	0x61bc
                           0061BD   968 _ATEST	=	0x61bd
                           0061BE   969 _PTEST0	=	0x61be
                           0061BF   970 _PTEST1	=	0x61bf
                           0061FA   971 _TXFILTCFG	=	0x61fa
                           0061EB   972 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   973 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   974 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   975 _CSPPROG0	=	0x61c0
                           0061C1   976 _CSPPROG1	=	0x61c1
                           0061C2   977 _CSPPROG2	=	0x61c2
                           0061C3   978 _CSPPROG3	=	0x61c3
                           0061C4   979 _CSPPROG4	=	0x61c4
                           0061C5   980 _CSPPROG5	=	0x61c5
                           0061C6   981 _CSPPROG6	=	0x61c6
                           0061C7   982 _CSPPROG7	=	0x61c7
                           0061C8   983 _CSPPROG8	=	0x61c8
                           0061C9   984 _CSPPROG9	=	0x61c9
                           0061CA   985 _CSPPROG10	=	0x61ca
                           0061CB   986 _CSPPROG11	=	0x61cb
                           0061CC   987 _CSPPROG12	=	0x61cc
                           0061CD   988 _CSPPROG13	=	0x61cd
                           0061CE   989 _CSPPROG14	=	0x61ce
                           0061CF   990 _CSPPROG15	=	0x61cf
                           0061D0   991 _CSPPROG16	=	0x61d0
                           0061D1   992 _CSPPROG17	=	0x61d1
                           0061D2   993 _CSPPROG18	=	0x61d2
                           0061D3   994 _CSPPROG19	=	0x61d3
                           0061D4   995 _CSPPROG20	=	0x61d4
                           0061D5   996 _CSPPROG21	=	0x61d5
                           0061D6   997 _CSPPROG22	=	0x61d6
                           0061D7   998 _CSPPROG23	=	0x61d7
                           0061E0   999 _CSPCTRL	=	0x61e0
                           0061E1  1000 _CSPSTAT	=	0x61e1
                           0061E2  1001 _CSPX	=	0x61e2
                           0061E3  1002 _CSPY	=	0x61e3
                           0061E4  1003 _CSPZ	=	0x61e4
                           0061E5  1004 _CSPT	=	0x61e5
                           006200  1005 _USBADDR	=	0x6200
                           006201  1006 _USBPOW	=	0x6201
                           006202  1007 _USBIIF	=	0x6202
                           006204  1008 _USBOIF	=	0x6204
                           006206  1009 _USBCIF	=	0x6206
                           006207  1010 _USBIIE	=	0x6207
                           006209  1011 _USBOIE	=	0x6209
                           00620B  1012 _USBCIE	=	0x620b
                           00620C  1013 _USBFRML	=	0x620c
                           00620D  1014 _USBFRMH	=	0x620d
                           00620E  1015 _USBINDEX	=	0x620e
                           00620F  1016 _USBCTRL	=	0x620f
                           006210  1017 _USBMAXI	=	0x6210
                           006211  1018 _USBCS0	=	0x6211
                           006211  1019 _USBCSIL	=	0x6211
                           006212  1020 _USBCSIH	=	0x6212
                           006213  1021 _USBMAXO	=	0x6213
                           006214  1022 _USBCSOL	=	0x6214
                           006215  1023 _USBCSOH	=	0x6215
                           006216  1024 _USBCNT0	=	0x6216
                           006216  1025 _USBCNTL	=	0x6216
                           006217  1026 _USBCNTH	=	0x6217
                           006220  1027 _USBF0	=	0x6220
                           006222  1028 _USBF1	=	0x6222
                           006224  1029 _USBF2	=	0x6224
                           006226  1030 _USBF3	=	0x6226
                           006228  1031 _USBF4	=	0x6228
                           00622A  1032 _USBF5	=	0x622a
                           007080  1033 _X_P0	=	0x7080
                           007086  1034 _X_U0CSR	=	0x7086
                           007089  1035 _X_P0IFG	=	0x7089
                           00708A  1036 _X_P1IFG	=	0x708a
                           00708B  1037 _X_P2IFG	=	0x708b
                           00708C  1038 _X_PICTL	=	0x708c
                           00708D  1039 _X_P1IEN	=	0x708d
                           00708F  1040 _X_P0INP	=	0x708f
                           007090  1041 _X_P1	=	0x7090
                           007091  1042 _X_RFIRQF1	=	0x7091
                           007093  1043 _X_MPAGE	=	0x7093
                           007093  1044 _X__XPAGE	=	0x7093
                           007094  1045 _X_T2CTRL	=	0x7094
                           007095  1046 _X_ST0	=	0x7095
                           007096  1047 _X_ST1	=	0x7096
                           007097  1048 _X_ST2	=	0x7097
                           00709C  1049 _X_T2EVTCFG	=	0x709c
                           00709D  1050 _X_SLEEPSTA	=	0x709d
                           00709E  1051 _X_CLKCONSTA	=	0x709e
                           00709F  1052 _X_FMAP	=	0x709f
                           00709F  1053 _X_PSBANK	=	0x709f
                           0070A0  1054 _X_P2	=	0x70a0
                           0070A1  1055 _X_T2IRQF	=	0x70a1
                           0070A2  1056 _X_T2M0	=	0x70a2
                           0070A3  1057 _X_T2M1	=	0x70a3
                           0070A4  1058 _X_T2MOVF0	=	0x70a4
                           0070A5  1059 _X_T2MOVF1	=	0x70a5
                           0070A6  1060 _X_T2MOVF2	=	0x70a6
                           0070A7  1061 _X_T2IRQM	=	0x70a7
                           0070AB  1062 _X_P0IEN	=	0x70ab
                           0070AC  1063 _X_P2IEN	=	0x70ac
                           0070AD  1064 _X_STLOAD	=	0x70ad
                           0070AE  1065 _X_PMUX	=	0x70ae
                           0070AF  1066 _X_T1STAT	=	0x70af
                           0070B1  1067 _X_ENCDI	=	0x70b1
                           0070B2  1068 _X_ENCDO	=	0x70b2
                           0070B3  1069 _X_ENCCS	=	0x70b3
                           0070B4  1070 _X_ADCCON1	=	0x70b4
                           0070B5  1071 _X_ADCCON2	=	0x70b5
                           0070B6  1072 _X_ADCCON3	=	0x70b6
                           0070BA  1073 _X_ADCL	=	0x70ba
                           0070BB  1074 _X_ADCH	=	0x70bb
                           0070BC  1075 _X_RNDL	=	0x70bc
                           0070BD  1076 _X_RNDH	=	0x70bd
                           0070BE  1077 _X_SLEEPCMD	=	0x70be
                           0070BF  1078 _X_RFERRF	=	0x70bf
                           0070C1  1079 _X_U0DBUF	=	0x70c1
                           0070C2  1080 _X_U0BAUD	=	0x70c2
                           0070C3  1081 _X_T2MSEL	=	0x70c3
                           0070C4  1082 _X_U0UCR	=	0x70c4
                           0070C5  1083 _X_U0GCR	=	0x70c5
                           0070C6  1084 _X_CLKCONCMD	=	0x70c6
                           0070C7  1085 _X_MEMCTR	=	0x70c7
                           0070C9  1086 _X_WDCTL	=	0x70c9
                           0070CA  1087 _X_T3CNT	=	0x70ca
                           0070CB  1088 _X_T3CTL	=	0x70cb
                           0070CC  1089 _X_T3CCTL0	=	0x70cc
                           0070CD  1090 _X_T3CC0	=	0x70cd
                           0070CE  1091 _X_T3CCTL1	=	0x70ce
                           0070CF  1092 _X_T3CC1	=	0x70cf
                           0070D1  1093 _X_DMAIRQ	=	0x70d1
                           0070D2  1094 _X_DMA1CFGL	=	0x70d2
                           0070D3  1095 _X_DMA1CFGH	=	0x70d3
                           0070D4  1096 _X_DMA0CFGL	=	0x70d4
                           0070D5  1097 _X_DMA0CFGH	=	0x70d5
                           0070D6  1098 _X_DMAARM	=	0x70d6
                           0070D7  1099 _X_DMAREQ	=	0x70d7
                           0070D8  1100 _X_TIMIF	=	0x70d8
                           0070D9  1101 _X_RFD	=	0x70d9
                           0070DA  1102 _X_T1CC0L	=	0x70da
                           0070DB  1103 _X_T1CC0H	=	0x70db
                           0070DC  1104 _X_T1CC1L	=	0x70dc
                           0070DD  1105 _X_T1CC1H	=	0x70dd
                           0070DE  1106 _X_T1CC2L	=	0x70de
                           0070DF  1107 _X_T1CC2H	=	0x70df
                           0070E1  1108 _X_RFST	=	0x70e1
                           0070E2  1109 _X_T1CNTL	=	0x70e2
                           0070E3  1110 _X_T1CNTH	=	0x70e3
                           0070E4  1111 _X_T1CTL	=	0x70e4
                           0070E5  1112 _X_T1CCTL0	=	0x70e5
                           0070E6  1113 _X_T1CCTL1	=	0x70e6
                           0070E7  1114 _X_T1CCTL2	=	0x70e7
                           0070E9  1115 _X_RFIRQF0	=	0x70e9
                           0070EA  1116 _X_T4CNT	=	0x70ea
                           0070EB  1117 _X_T4CTL	=	0x70eb
                           0070EC  1118 _X_T4CCTL0	=	0x70ec
                           0070ED  1119 _X_T4CC0	=	0x70ed
                           0070EE  1120 _X_T4CCTL1	=	0x70ee
                           0070EF  1121 _X_T4CC1	=	0x70ef
                           0070F1  1122 _X_PERCFG	=	0x70f1
                           0070F2  1123 _X_APCFG	=	0x70f2
                           0070F3  1124 _X_P0SEL	=	0x70f3
                           0070F4  1125 _X_P1SEL	=	0x70f4
                           0070F5  1126 _X_P2SEL	=	0x70f5
                           0070F6  1127 _X_P1INP	=	0x70f6
                           0070F7  1128 _X_P2INP	=	0x70f7
                           0070F8  1129 _X_U1CSR	=	0x70f8
                           0070F9  1130 _X_U1DBUF	=	0x70f9
                           0070FA  1131 _X_U1BAUD	=	0x70fa
                           0070FB  1132 _X_U1UCR	=	0x70fb
                           0070FC  1133 _X_U1GCR	=	0x70fc
                           0070FD  1134 _X_P0DIR	=	0x70fd
                           0070FE  1135 _X_P1DIR	=	0x70fe
                           0070FF  1136 _X_P2DIR	=	0x70ff
                           007800  1137 _X_INFOPAGE	=	0x7800
                           00780C  1138 _X_IEEE_ADDR	=	0x780c
      000000                       1139 _rt:
      000000                       1140 	.ds 8
      000008                       1141 _pt:
      000008                       1142 	.ds 2
      00000A                       1143 _is_listening:
      00000A                       1144 	.ds 1
      00000B                       1145 _encounter_memb_memb_count:
      00000B                       1146 	.ds 4
      00000F                       1147 _encounter_memb_memb_mem:
      00000F                       1148 	.ds 52
      000043                       1149 _is_streaming:
      000043                       1150 	.ds 1
      000044                       1151 _is_streaming_to:
      000044                       1152 	.ds 8
      00004C                       1153 _is_streaming_to_too:
      00004C                       1154 	.ds 8
      000054                       1155 _stream_until:
      000054                       1156 	.ds 2
      000056                       1157 _received_seqnos:
      000056                       1158 	.ds 72
                                   1159 ;--------------------------------------------------------
                                   1160 ; absolute external ram data
                                   1161 ;--------------------------------------------------------
                                   1162 	.area XABS    (ABS,XDATA)
                                   1163 ;--------------------------------------------------------
                                   1164 ; external initialized ram data
                                   1165 ;--------------------------------------------------------
                                   1166 	.area XISEG   (XDATA)
      000000                       1167 _xmac_config::
      000000                       1168 	.ds 8
      000008                       1169 _xmac_is_on:
      000008                       1170 	.ds 1
      000009                       1171 _waiting_for_packet:
      000009                       1172 	.ds 1
      00000A                       1173 _someone_is_sending:
      00000A                       1174 	.ds 1
      00000B                       1175 _we_are_sending:
      00000B                       1176 	.ds 1
      00000C                       1177 _radio_is_on:
      00000C                       1178 	.ds 1
      00000D                       1179 _encounter_list_list:
      00000D                       1180 	.ds 3
      000010                       1181 _encounter_list:
      000010                       1182 	.ds 3
      000013                       1183 _encounter_memb:
      000013                       1184 	.ds 10
                                   1185 	.area HOME    (CODE)
                                   1186 	.area GSINIT0 (CODE)
                                   1187 	.area GSINIT1 (CODE)
                                   1188 	.area GSINIT2 (CODE)
                                   1189 	.area GSINIT3 (CODE)
                                   1190 	.area GSINIT4 (CODE)
                                   1191 	.area GSINIT5 (CODE)
                                   1192 	.area GSINIT  (CODE)
                                   1193 	.area GSFINAL (CODE)
                                   1194 	.area CSEG    (CODE)
                                   1195 ;--------------------------------------------------------
                                   1196 ; global & static initialisations
                                   1197 ;--------------------------------------------------------
                                   1198 	.area HOME    (CODE)
                                   1199 	.area GSINIT  (CODE)
                                   1200 	.area GSFINAL (CODE)
                                   1201 	.area GSINIT  (CODE)
                                   1202 ;--------------------------------------------------------
                                   1203 ; Home
                                   1204 ;--------------------------------------------------------
                                   1205 	.area HOME    (CODE)
                                   1206 	.area HOME    (CODE)
                                   1207 ;--------------------------------------------------------
                                   1208 ; code
                                   1209 ;--------------------------------------------------------
                                   1210 	.area BANK1   (CODE)
                                   1211 ;------------------------------------------------------------
                                   1212 ;Allocation info for local variables in function 'on'
                                   1213 ;------------------------------------------------------------
                                   1214 ;	../../../core/net/mac/xmac.c:233: on(void)
                                   1215 ;	-----------------------------------------
                                   1216 ;	 function on
                                   1217 ;	-----------------------------------------
      000000                       1218 _on:
                           000007  1219 	ar7 = 0x07
                           000006  1220 	ar6 = 0x06
                           000005  1221 	ar5 = 0x05
                           000004  1222 	ar4 = 0x04
                           000003  1223 	ar3 = 0x03
                           000002  1224 	ar2 = 0x02
                           000001  1225 	ar1 = 0x01
                           000000  1226 	ar0 = 0x00
                                   1227 ;	../../../core/net/mac/xmac.c:235: if(xmac_is_on && radio_is_on == 0) {
      000000 90r00r08         [24] 1228 	mov	dptr,#_xmac_is_on
      000003 E0               [24] 1229 	movx	a,@dptr
      000004 60 35            [24] 1230 	jz	00104$
      000006 90r00r0C         [24] 1231 	mov	dptr,#_radio_is_on
      000009 E0               [24] 1232 	movx	a,@dptr
      00000A 70 2F            [24] 1233 	jnz	00104$
                                   1234 ;	../../../core/net/mac/xmac.c:236: radio_is_on = 1;
      00000C 90r00r0C         [24] 1235 	mov	dptr,#_radio_is_on
      00000F 74 01            [12] 1236 	mov	a,#0x01
      000011 F0               [24] 1237 	movx	@dptr,a
                                   1238 ;	../../../core/net/mac/xmac.c:237: NETSTACK_RADIO.on();
      000012 90r00r18         [24] 1239 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      000015 E4               [12] 1240 	clr	a
      000016 93               [24] 1241 	movc	a,@a+dptr
      000017 FD               [12] 1242 	mov	r5,a
      000018 A3               [24] 1243 	inc	dptr
      000019 E4               [12] 1244 	clr	a
      00001A 93               [24] 1245 	movc	a,@a+dptr
      00001B FE               [12] 1246 	mov	r6,a
      00001C A3               [24] 1247 	inc	dptr
      00001D E4               [12] 1248 	clr	a
      00001E 93               [24] 1249 	movc	a,@a+dptr
      00001F FF               [12] 1250 	mov	r7,a
      000020 C0 07            [24] 1251 	push	ar7
      000022 C0 06            [24] 1252 	push	ar6
      000024 C0 05            [24] 1253 	push	ar5
      000026 C0 05            [24] 1254 	push	ar5
      000028 C0 06            [24] 1255 	push	ar6
      00002A C0 07            [24] 1256 	push	ar7
      00002C D0 02            [24] 1257 	pop	ar2
      00002E D0 01            [24] 1258 	pop	ar1
      000030 D0 00            [24] 1259 	pop	ar0
      000032 12r00r00         [24] 1260 	lcall	__sdcc_banked_call
      000035 D0 05            [24] 1261 	pop	ar5
      000037 D0 06            [24] 1262 	pop	ar6
      000039 D0 07            [24] 1263 	pop	ar7
      00003B                       1264 00104$:
                                   1265 ;	../../../core/net/mac/xmac.c:240: }
      00003B 02r00r00         [24] 1266 	ljmp	__sdcc_banked_ret
                                   1267 ;------------------------------------------------------------
                                   1268 ;Allocation info for local variables in function 'off'
                                   1269 ;------------------------------------------------------------
                                   1270 ;	../../../core/net/mac/xmac.c:243: off(void)
                                   1271 ;	-----------------------------------------
                                   1272 ;	 function off
                                   1273 ;	-----------------------------------------
      00003E                       1274 _off:
                                   1275 ;	../../../core/net/mac/xmac.c:245: if(xmac_is_on && radio_is_on != 0 && is_listening == 0 &&
      00003E 90r00r08         [24] 1276 	mov	dptr,#_xmac_is_on
      000041 E0               [24] 1277 	movx	a,@dptr
      000042 60 3F            [24] 1278 	jz	00106$
      000044 90r00r0C         [24] 1279 	mov	dptr,#_radio_is_on
      000047 E0               [24] 1280 	movx	a,@dptr
      000048 60 39            [24] 1281 	jz	00106$
      00004A 90r00r0A         [24] 1282 	mov	dptr,#_is_listening
      00004D E0               [24] 1283 	movx	a,@dptr
      00004E 70 33            [24] 1284 	jnz	00106$
                                   1285 ;	../../../core/net/mac/xmac.c:246: is_streaming == 0) {
      000050 90r00r43         [24] 1286 	mov	dptr,#_is_streaming
      000053 E0               [24] 1287 	movx	a,@dptr
      000054 70 2D            [24] 1288 	jnz	00106$
                                   1289 ;	../../../core/net/mac/xmac.c:247: radio_is_on = 0;
      000056 90r00r0C         [24] 1290 	mov	dptr,#_radio_is_on
      000059 E4               [12] 1291 	clr	a
      00005A F0               [24] 1292 	movx	@dptr,a
                                   1293 ;	../../../core/net/mac/xmac.c:248: NETSTACK_RADIO.off();
      00005B 90r00r1B         [24] 1294 	mov	dptr,#(_cc2530_rf_driver + 0x001b)
                                   1295 ;	genFromRTrack removed	clr	a
      00005E 93               [24] 1296 	movc	a,@a+dptr
      00005F FD               [12] 1297 	mov	r5,a
      000060 A3               [24] 1298 	inc	dptr
      000061 E4               [12] 1299 	clr	a
      000062 93               [24] 1300 	movc	a,@a+dptr
      000063 FE               [12] 1301 	mov	r6,a
      000064 A3               [24] 1302 	inc	dptr
      000065 E4               [12] 1303 	clr	a
      000066 93               [24] 1304 	movc	a,@a+dptr
      000067 FF               [12] 1305 	mov	r7,a
      000068 C0 07            [24] 1306 	push	ar7
      00006A C0 06            [24] 1307 	push	ar6
      00006C C0 05            [24] 1308 	push	ar5
      00006E C0 05            [24] 1309 	push	ar5
      000070 C0 06            [24] 1310 	push	ar6
      000072 C0 07            [24] 1311 	push	ar7
      000074 D0 02            [24] 1312 	pop	ar2
      000076 D0 01            [24] 1313 	pop	ar1
      000078 D0 00            [24] 1314 	pop	ar0
      00007A 12r00r00         [24] 1315 	lcall	__sdcc_banked_call
      00007D D0 05            [24] 1316 	pop	ar5
      00007F D0 06            [24] 1317 	pop	ar6
      000081 D0 07            [24] 1318 	pop	ar7
      000083                       1319 00106$:
                                   1320 ;	../../../core/net/mac/xmac.c:251: }
      000083 02r00r00         [24] 1321 	ljmp	__sdcc_banked_ret
                                   1322 ;------------------------------------------------------------
                                   1323 ;Allocation info for local variables in function 'schedule_powercycle'
                                   1324 ;------------------------------------------------------------
                                   1325 ;time                      Allocated to stack - sp -7
                                   1326 ;t                         Allocated to stack - sp -2
                                   1327 ;r                         Allocated to registers 
                                   1328 ;------------------------------------------------------------
                                   1329 ;	../../../core/net/mac/xmac.c:255: schedule_powercycle(struct rtimer *t, rtimer_clock_t time)
                                   1330 ;	-----------------------------------------
                                   1331 ;	 function schedule_powercycle
                                   1332 ;	-----------------------------------------
      000086                       1333 _schedule_powercycle:
      000086 C0 82            [24] 1334 	push	dpl
      000088 C0 83            [24] 1335 	push	dph
      00008A C0 F0            [24] 1336 	push	b
                                   1337 ;	../../../core/net/mac/xmac.c:258: if(xmac_is_on) {
      00008C 90r00r08         [24] 1338 	mov	dptr,#_xmac_is_on
      00008F E0               [24] 1339 	movx	a,@dptr
      000090 60 5A            [24] 1340 	jz	00103$
                                   1341 ;	../../../core/net/mac/xmac.c:260: (void (*)(struct rtimer *, void *))powercycle, NULL);
      000092 7Ar25            [12] 1342 	mov	r2,#_powercycle
      000094 7Bs01            [12] 1343 	mov	r3,#(_powercycle >> 8)
      000096 7Cs00            [12] 1344 	mov	r4,#(_powercycle >> 16)
                                   1345 ;	../../../core/net/mac/xmac.c:259: r = rtimer_set(t, RTIMER_TIME(t) + time, 1,
      000098 A8 81            [24] 1346 	mov	r0,sp
      00009A 18               [12] 1347 	dec	r0
      00009B 18               [12] 1348 	dec	r0
      00009C 86 82            [24] 1349 	mov	dpl,@r0
      00009E 08               [12] 1350 	inc	r0
      00009F 86 83            [24] 1351 	mov	dph,@r0
      0000A1 08               [12] 1352 	inc	r0
      0000A2 86 F0            [24] 1353 	mov	b,@r0
      0000A4 12r00r00         [24] 1354 	lcall	__gptrget
      0000A7 FE               [12] 1355 	mov	r6,a
      0000A8 A3               [24] 1356 	inc	dptr
      0000A9 12r00r00         [24] 1357 	lcall	__gptrget
      0000AC FF               [12] 1358 	mov	r7,a
      0000AD E5 81            [12] 1359 	mov	a,sp
      0000AF 24 F9            [12] 1360 	add	a,#0xf9
      0000B1 F8               [12] 1361 	mov	r0,a
      0000B2 E6               [12] 1362 	mov	a,@r0
      0000B3 2E               [12] 1363 	add	a,r6
      0000B4 FE               [12] 1364 	mov	r6,a
      0000B5 08               [12] 1365 	inc	r0
      0000B6 E6               [12] 1366 	mov	a,@r0
      0000B7 3F               [12] 1367 	addc	a,r7
      0000B8 FF               [12] 1368 	mov	r7,a
      0000B9 E4               [12] 1369 	clr	a
      0000BA C0 E0            [24] 1370 	push	acc
      0000BC C0 E0            [24] 1371 	push	acc
      0000BE C0 E0            [24] 1372 	push	acc
      0000C0 C0 02            [24] 1373 	push	ar2
      0000C2 C0 03            [24] 1374 	push	ar3
      0000C4 C0 04            [24] 1375 	push	ar4
      0000C6 04               [12] 1376 	inc	a
      0000C7 C0 E0            [24] 1377 	push	acc
      0000C9 E4               [12] 1378 	clr	a
      0000CA C0 E0            [24] 1379 	push	acc
      0000CC C0 06            [24] 1380 	push	ar6
      0000CE C0 07            [24] 1381 	push	ar7
      0000D0 E5 81            [12] 1382 	mov	a,sp
      0000D2 24 F4            [12] 1383 	add	a,#0xf4
      0000D4 F8               [12] 1384 	mov	r0,a
      0000D5 86 82            [24] 1385 	mov	dpl,@r0
      0000D7 08               [12] 1386 	inc	r0
      0000D8 86 83            [24] 1387 	mov	dph,@r0
      0000DA 08               [12] 1388 	inc	r0
      0000DB 86 F0            [24] 1389 	mov	b,@r0
      0000DD 78r00            [12] 1390 	mov	r0,#_rtimer_set
      0000DF 79s00            [12] 1391 	mov	r1,#(_rtimer_set >> 8)
      0000E1 7As00            [12] 1392 	mov	r2,#(_rtimer_set >> 16)
      0000E3 12r00r00         [24] 1393 	lcall	__sdcc_banked_call
      0000E6 E5 81            [12] 1394 	mov	a,sp
      0000E8 24 F6            [12] 1395 	add	a,#0xf6
      0000EA F5 81            [12] 1396 	mov	sp,a
                                   1397 ;	../../../core/net/mac/xmac.c:261: if(r) {
      0000EC                       1398 00103$:
                                   1399 ;	../../../core/net/mac/xmac.c:265: }
      0000EC 15 81            [12] 1400 	dec	sp
      0000EE 15 81            [12] 1401 	dec	sp
      0000F0 15 81            [12] 1402 	dec	sp
      0000F2 02r00r00         [24] 1403 	ljmp	__sdcc_banked_ret
                                   1404 ;------------------------------------------------------------
                                   1405 ;Allocation info for local variables in function 'powercycle_turn_radio_off'
                                   1406 ;------------------------------------------------------------
                                   1407 ;	../../../core/net/mac/xmac.c:267: powercycle_turn_radio_off(void)
                                   1408 ;	-----------------------------------------
                                   1409 ;	 function powercycle_turn_radio_off
                                   1410 ;	-----------------------------------------
      0000F5                       1411 _powercycle_turn_radio_off:
                                   1412 ;	../../../core/net/mac/xmac.c:269: if(we_are_sending == 0 &&
      0000F5 90r00r0B         [24] 1413 	mov	dptr,#_we_are_sending
      0000F8 E0               [24] 1414 	movx	a,@dptr
      0000F9 70 0F            [24] 1415 	jnz	00104$
                                   1416 ;	../../../core/net/mac/xmac.c:270: waiting_for_packet == 0) {
      0000FB 90r00r09         [24] 1417 	mov	dptr,#_waiting_for_packet
      0000FE E0               [24] 1418 	movx	a,@dptr
      0000FF 70 09            [24] 1419 	jnz	00104$
                                   1420 ;	../../../core/net/mac/xmac.c:271: off();
      000101 78r3E            [12] 1421 	mov	r0,#_off
      000103 79s00            [12] 1422 	mov	r1,#(_off >> 8)
      000105 7As00            [12] 1423 	mov	r2,#(_off >> 16)
      000107 12r00r00         [24] 1424 	lcall	__sdcc_banked_call
      00010A                       1425 00104$:
                                   1426 ;	../../../core/net/mac/xmac.c:276: }
      00010A 02r00r00         [24] 1427 	ljmp	__sdcc_banked_ret
                                   1428 ;------------------------------------------------------------
                                   1429 ;Allocation info for local variables in function 'powercycle_turn_radio_on'
                                   1430 ;------------------------------------------------------------
                                   1431 ;	../../../core/net/mac/xmac.c:278: powercycle_turn_radio_on(void)
                                   1432 ;	-----------------------------------------
                                   1433 ;	 function powercycle_turn_radio_on
                                   1434 ;	-----------------------------------------
      00010D                       1435 _powercycle_turn_radio_on:
                                   1436 ;	../../../core/net/mac/xmac.c:280: if(we_are_sending == 0 &&
      00010D 90r00r0B         [24] 1437 	mov	dptr,#_we_are_sending
      000110 E0               [24] 1438 	movx	a,@dptr
      000111 70 0F            [24] 1439 	jnz	00104$
                                   1440 ;	../../../core/net/mac/xmac.c:281: waiting_for_packet == 0) {
      000113 90r00r09         [24] 1441 	mov	dptr,#_waiting_for_packet
      000116 E0               [24] 1442 	movx	a,@dptr
      000117 70 09            [24] 1443 	jnz	00104$
                                   1444 ;	../../../core/net/mac/xmac.c:282: on();
      000119 78r00            [12] 1445 	mov	r0,#_on
      00011B 79s00            [12] 1446 	mov	r1,#(_on >> 8)
      00011D 7As00            [12] 1447 	mov	r2,#(_on >> 16)
      00011F 12r00r00         [24] 1448 	lcall	__sdcc_banked_call
      000122                       1449 00104$:
                                   1450 ;	../../../core/net/mac/xmac.c:284: }
      000122 02r00r00         [24] 1451 	ljmp	__sdcc_banked_ret
                                   1452 ;------------------------------------------------------------
                                   1453 ;Allocation info for local variables in function 'powercycle'
                                   1454 ;------------------------------------------------------------
                                   1455 ;ptr                       Allocated to stack - sp -5
                                   1456 ;t                         Allocated to registers r5 r6 r7 
                                   1457 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   1458 ;------------------------------------------------------------
                                   1459 ;	../../../core/net/mac/xmac.c:286: powercycle(struct rtimer *t, void *ptr)
                                   1460 ;	-----------------------------------------
                                   1461 ;	 function powercycle
                                   1462 ;	-----------------------------------------
      000125                       1463 _powercycle:
      000125 AD 82            [24] 1464 	mov	r5,dpl
      000127 AE 83            [24] 1465 	mov	r6,dph
      000129 AF F0            [24] 1466 	mov	r7,b
                                   1467 ;	../../../core/net/mac/xmac.c:288: if(is_streaming) {
      00012B 90r00r43         [24] 1468 	mov	dptr,#_is_streaming
      00012E E0               [24] 1469 	movx	a,@dptr
      00012F 70 03            [24] 1470 	jnz	00185$
      000131 02r01rB2         [24] 1471 	ljmp	00104$
      000134                       1472 00185$:
                                   1473 ;	../../../core/net/mac/xmac.c:289: if(!RTIMER_CLOCK_LT(RTIMER_NOW(), stream_until)) {
      000134 C0 05            [24] 1474 	push	ar5
      000136 C0 06            [24] 1475 	push	ar6
      000138 C0 07            [24] 1476 	push	ar7
      00013A AB E2            [24] 1477 	mov	r3,_T1CNTL
      00013C 7C 00            [12] 1478 	mov	r4,#0x00
      00013E AA E3            [24] 1479 	mov	r2,_T1CNTH
      000140 8A 07            [24] 1480 	mov	ar7,r2
      000142 E4               [12] 1481 	clr	a
      000143 FA               [12] 1482 	mov	r2,a
      000144 2B               [12] 1483 	add	a,r3
      000145 FB               [12] 1484 	mov	r3,a
      000146 EF               [12] 1485 	mov	a,r7
      000147 3C               [12] 1486 	addc	a,r4
      000148 FC               [12] 1487 	mov	r4,a
      000149 90r00r54         [24] 1488 	mov	dptr,#_stream_until
      00014C E0               [24] 1489 	movx	a,@dptr
      00014D FE               [12] 1490 	mov	r6,a
      00014E A3               [24] 1491 	inc	dptr
      00014F E0               [24] 1492 	movx	a,@dptr
      000150 FF               [12] 1493 	mov	r7,a
      000151 EB               [12] 1494 	mov	a,r3
      000152 C3               [12] 1495 	clr	c
      000153 9E               [12] 1496 	subb	a,r6
      000154 EC               [12] 1497 	mov	a,r4
      000155 9F               [12] 1498 	subb	a,r7
      000156 D0 07            [24] 1499 	pop	ar7
      000158 D0 06            [24] 1500 	pop	ar6
      00015A D0 05            [24] 1501 	pop	ar5
      00015C 20 E7 53         [24] 1502 	jb	acc.7,00104$
                                   1503 ;	../../../core/net/mac/xmac.c:290: is_streaming = 0;
      00015F 90r00r43         [24] 1504 	mov	dptr,#_is_streaming
      000162 E4               [12] 1505 	clr	a
      000163 F0               [24] 1506 	movx	@dptr,a
                                   1507 ;	../../../core/net/mac/xmac.c:291: rimeaddr_copy(&is_streaming_to, &rimeaddr_null);
      000164 C0 07            [24] 1508 	push	ar7
      000166 C0 06            [24] 1509 	push	ar6
      000168 C0 05            [24] 1510 	push	ar5
      00016A 74r00            [12] 1511 	mov	a,#_rimeaddr_null
      00016C C0 E0            [24] 1512 	push	acc
      00016E 74s00            [12] 1513 	mov	a,#(_rimeaddr_null >> 8)
      000170 C0 E0            [24] 1514 	push	acc
      000172 74 80            [12] 1515 	mov	a,#0x80
      000174 C0 E0            [24] 1516 	push	acc
      000176 90r00r44         [24] 1517 	mov	dptr,#_is_streaming_to
      000179 75 F0 00         [24] 1518 	mov	b,#0x00
      00017C 78r00            [12] 1519 	mov	r0,#_rimeaddr_copy
      00017E 79s00            [12] 1520 	mov	r1,#(_rimeaddr_copy >> 8)
      000180 7As00            [12] 1521 	mov	r2,#(_rimeaddr_copy >> 16)
      000182 12r00r00         [24] 1522 	lcall	__sdcc_banked_call
      000185 15 81            [12] 1523 	dec	sp
      000187 15 81            [12] 1524 	dec	sp
      000189 15 81            [12] 1525 	dec	sp
                                   1526 ;	../../../core/net/mac/xmac.c:292: rimeaddr_copy(&is_streaming_to_too, &rimeaddr_null);
      00018B 74r00            [12] 1527 	mov	a,#_rimeaddr_null
      00018D C0 E0            [24] 1528 	push	acc
      00018F 74s00            [12] 1529 	mov	a,#(_rimeaddr_null >> 8)
      000191 C0 E0            [24] 1530 	push	acc
      000193 74 80            [12] 1531 	mov	a,#0x80
      000195 C0 E0            [24] 1532 	push	acc
      000197 90r00r4C         [24] 1533 	mov	dptr,#_is_streaming_to_too
      00019A 75 F0 00         [24] 1534 	mov	b,#0x00
      00019D 78r00            [12] 1535 	mov	r0,#_rimeaddr_copy
      00019F 79s00            [12] 1536 	mov	r1,#(_rimeaddr_copy >> 8)
      0001A1 7As00            [12] 1537 	mov	r2,#(_rimeaddr_copy >> 16)
      0001A3 12r00r00         [24] 1538 	lcall	__sdcc_banked_call
      0001A6 15 81            [12] 1539 	dec	sp
      0001A8 15 81            [12] 1540 	dec	sp
      0001AA 15 81            [12] 1541 	dec	sp
      0001AC D0 05            [24] 1542 	pop	ar5
      0001AE D0 06            [24] 1543 	pop	ar6
      0001B0 D0 07            [24] 1544 	pop	ar7
      0001B2                       1545 00104$:
                                   1546 ;	../../../core/net/mac/xmac.c:296: PT_BEGIN(&pt);
      0001B2 7C 01            [12] 1547 	mov	r4,#0x01
      0001B4 90r00r08         [24] 1548 	mov	dptr,#_pt
      0001B7 E0               [24] 1549 	movx	a,@dptr
      0001B8 FA               [12] 1550 	mov	r2,a
      0001B9 A3               [24] 1551 	inc	dptr
      0001BA E0               [24] 1552 	movx	a,@dptr
      0001BB FB               [12] 1553 	mov	r3,a
      0001BC BA 00 05         [24] 1554 	cjne	r2,#0x00,00187$
      0001BF BB 00 02         [24] 1555 	cjne	r3,#0x00,00187$
      0001C2 80 14            [24] 1556 	sjmp	00128$
      0001C4                       1557 00187$:
      0001C4 BA 33 05         [24] 1558 	cjne	r2,#0x33,00188$
      0001C7 BB 01 02         [24] 1559 	cjne	r3,#0x01,00188$
      0001CA 80 64            [24] 1560 	sjmp	00108$
      0001CC                       1561 00188$:
      0001CC BA 42 06         [24] 1562 	cjne	r2,#0x42,00189$
      0001CF BB 01 03         [24] 1563 	cjne	r3,#0x01,00189$
      0001D2 02r02rFD         [24] 1564 	ljmp	00118$
      0001D5                       1565 00189$:
      0001D5 02r03r08         [24] 1566 	ljmp	00130$
                                   1567 ;	../../../core/net/mac/xmac.c:298: while(1) {
      0001D8                       1568 00128$:
                                   1569 ;	../../../core/net/mac/xmac.c:300: if(someone_is_sending > 0) {
      0001D8 90r00r0A         [24] 1570 	mov	dptr,#_someone_is_sending
      0001DB E0               [24] 1571 	movx	a,@dptr
      0001DC 60 06            [24] 1572 	jz	00107$
                                   1573 ;	../../../core/net/mac/xmac.c:301: someone_is_sending--;
      0001DE 90r00r0A         [24] 1574 	mov	dptr,#_someone_is_sending
      0001E1 E0               [24] 1575 	movx	a,@dptr
      0001E2 14               [12] 1576 	dec	a
      0001E3 F0               [24] 1577 	movx	@dptr,a
      0001E4                       1578 00107$:
                                   1579 ;	../../../core/net/mac/xmac.c:305: powercycle_turn_radio_on();
      0001E4 C0 07            [24] 1580 	push	ar7
      0001E6 C0 06            [24] 1581 	push	ar6
      0001E8 C0 05            [24] 1582 	push	ar5
      0001EA 78r0D            [12] 1583 	mov	r0,#_powercycle_turn_radio_on
      0001EC 79s01            [12] 1584 	mov	r1,#(_powercycle_turn_radio_on >> 8)
      0001EE 7As00            [12] 1585 	mov	r2,#(_powercycle_turn_radio_on >> 16)
      0001F0 12r00r00         [24] 1586 	lcall	__sdcc_banked_call
      0001F3 D0 05            [24] 1587 	pop	ar5
      0001F5 D0 06            [24] 1588 	pop	ar6
      0001F7 D0 07            [24] 1589 	pop	ar7
                                   1590 ;	../../../core/net/mac/xmac.c:306: schedule_powercycle(t, xmac_config.on_time);
      0001F9 90r00r00         [24] 1591 	mov	dptr,#_xmac_config
      0001FC E0               [24] 1592 	movx	a,@dptr
      0001FD FA               [12] 1593 	mov	r2,a
      0001FE A3               [24] 1594 	inc	dptr
      0001FF E0               [24] 1595 	movx	a,@dptr
      000200 FB               [12] 1596 	mov	r3,a
      000201 C0 07            [24] 1597 	push	ar7
      000203 C0 06            [24] 1598 	push	ar6
      000205 C0 05            [24] 1599 	push	ar5
      000207 C0 02            [24] 1600 	push	ar2
      000209 C0 03            [24] 1601 	push	ar3
      00020B 8D 82            [24] 1602 	mov	dpl,r5
      00020D 8E 83            [24] 1603 	mov	dph,r6
      00020F 8F F0            [24] 1604 	mov	b,r7
      000211 78r86            [12] 1605 	mov	r0,#_schedule_powercycle
      000213 79s00            [12] 1606 	mov	r1,#(_schedule_powercycle >> 8)
      000215 7As00            [12] 1607 	mov	r2,#(_schedule_powercycle >> 16)
      000217 12r00r00         [24] 1608 	lcall	__sdcc_banked_call
      00021A 15 81            [12] 1609 	dec	sp
      00021C 15 81            [12] 1610 	dec	sp
      00021E D0 05            [24] 1611 	pop	ar5
      000220 D0 06            [24] 1612 	pop	ar6
      000222 D0 07            [24] 1613 	pop	ar7
                                   1614 ;	../../../core/net/mac/xmac.c:307: PT_YIELD(&pt);
      000224 7C 00            [12] 1615 	mov	r4,#0x00
      000226 90r00r08         [24] 1616 	mov	dptr,#_pt
      000229 74 33            [12] 1617 	mov	a,#0x33
      00022B F0               [24] 1618 	movx	@dptr,a
      00022C 74 01            [12] 1619 	mov	a,#0x01
      00022E A3               [24] 1620 	inc	dptr
      00022F F0               [24] 1621 	movx	@dptr,a
      000230                       1622 00108$:
      000230 EC               [12] 1623 	mov	a,r4
      000231 70 06            [24] 1624 	jnz	00112$
      000233 75 82 01         [24] 1625 	mov	dpl,#0x01
      000236 02r00r00         [24] 1626 	ljmp	__sdcc_banked_ret
      000239                       1627 00112$:
                                   1628 ;	../../../core/net/mac/xmac.c:309: if(xmac_config.off_time > 0 && !NETSTACK_RADIO.receiving_packet()) {
      000239 90r00r02         [24] 1629 	mov	dptr,#(_xmac_config + 0x0002)
      00023C E0               [24] 1630 	movx	a,@dptr
      00023D FA               [12] 1631 	mov	r2,a
      00023E A3               [24] 1632 	inc	dptr
      00023F E0               [24] 1633 	movx	a,@dptr
      000240 FB               [12] 1634 	mov	r3,a
      000241 4A               [12] 1635 	orl	a,r2
      000242 60 94            [24] 1636 	jz	00128$
      000244 C0 05            [24] 1637 	push	ar5
      000246 C0 06            [24] 1638 	push	ar6
      000248 C0 07            [24] 1639 	push	ar7
      00024A 90r00r12         [24] 1640 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      00024D E4               [12] 1641 	clr	a
      00024E 93               [24] 1642 	movc	a,@a+dptr
      00024F FA               [12] 1643 	mov	r2,a
      000250 A3               [24] 1644 	inc	dptr
      000251 E4               [12] 1645 	clr	a
      000252 93               [24] 1646 	movc	a,@a+dptr
      000253 FB               [12] 1647 	mov	r3,a
      000254 A3               [24] 1648 	inc	dptr
      000255 E4               [12] 1649 	clr	a
      000256 93               [24] 1650 	movc	a,@a+dptr
      000257 FF               [12] 1651 	mov	r7,a
      000258 C0 07            [24] 1652 	push	ar7
      00025A C0 06            [24] 1653 	push	ar6
      00025C C0 05            [24] 1654 	push	ar5
      00025E C0 02            [24] 1655 	push	ar2
      000260 C0 03            [24] 1656 	push	ar3
      000262 C0 07            [24] 1657 	push	ar7
      000264 D0 02            [24] 1658 	pop	ar2
      000266 D0 01            [24] 1659 	pop	ar1
      000268 D0 00            [24] 1660 	pop	ar0
      00026A 12r00r00         [24] 1661 	lcall	__sdcc_banked_call
      00026D AA 82            [24] 1662 	mov	r2,dpl
      00026F AB 83            [24] 1663 	mov	r3,dph
      000271 D0 05            [24] 1664 	pop	ar5
      000273 D0 06            [24] 1665 	pop	ar6
      000275 D0 07            [24] 1666 	pop	ar7
      000277 D0 07            [24] 1667 	pop	ar7
      000279 D0 06            [24] 1668 	pop	ar6
      00027B D0 05            [24] 1669 	pop	ar5
      00027D EA               [12] 1670 	mov	a,r2
      00027E 4B               [12] 1671 	orl	a,r3
      00027F 60 03            [24] 1672 	jz	00193$
      000281 02r01rD8         [24] 1673 	ljmp	00128$
      000284                       1674 00193$:
                                   1675 ;	../../../core/net/mac/xmac.c:310: powercycle_turn_radio_off();
      000284 C0 07            [24] 1676 	push	ar7
      000286 C0 06            [24] 1677 	push	ar6
      000288 C0 05            [24] 1678 	push	ar5
      00028A 78rF5            [12] 1679 	mov	r0,#_powercycle_turn_radio_off
      00028C 79s00            [12] 1680 	mov	r1,#(_powercycle_turn_radio_off >> 8)
      00028E 7As00            [12] 1681 	mov	r2,#(_powercycle_turn_radio_off >> 16)
      000290 12r00r00         [24] 1682 	lcall	__sdcc_banked_call
      000293 D0 05            [24] 1683 	pop	ar5
      000295 D0 06            [24] 1684 	pop	ar6
      000297 D0 07            [24] 1685 	pop	ar7
                                   1686 ;	../../../core/net/mac/xmac.c:311: if(waiting_for_packet != 0) {
      000299 90r00r09         [24] 1687 	mov	dptr,#_waiting_for_packet
      00029C E0               [24] 1688 	movx	a,@dptr
      00029D 60 27            [24] 1689 	jz	00117$
                                   1690 ;	../../../core/net/mac/xmac.c:312: waiting_for_packet++;
      00029F 90r00r09         [24] 1691 	mov	dptr,#_waiting_for_packet
      0002A2 E0               [24] 1692 	movx	a,@dptr
      0002A3 24 01            [12] 1693 	add	a,#0x01
      0002A5 F0               [24] 1694 	movx	@dptr,a
                                   1695 ;	../../../core/net/mac/xmac.c:313: if(waiting_for_packet > 2) {
      0002A6 E0               [24] 1696 	movx	a,@dptr
      0002A7 FB               [12] 1697 	mov  r3,a
      0002A8 24 FD            [12] 1698 	add	a,#0xff - 0x02
      0002AA 50 1A            [24] 1699 	jnc	00117$
                                   1700 ;	../../../core/net/mac/xmac.c:317: waiting_for_packet = 0;
      0002AC 90r00r09         [24] 1701 	mov	dptr,#_waiting_for_packet
      0002AF E4               [12] 1702 	clr	a
      0002B0 F0               [24] 1703 	movx	@dptr,a
                                   1704 ;	../../../core/net/mac/xmac.c:318: powercycle_turn_radio_off();
      0002B1 C0 07            [24] 1705 	push	ar7
      0002B3 C0 06            [24] 1706 	push	ar6
      0002B5 C0 05            [24] 1707 	push	ar5
      0002B7 78rF5            [12] 1708 	mov	r0,#_powercycle_turn_radio_off
      0002B9 79s00            [12] 1709 	mov	r1,#(_powercycle_turn_radio_off >> 8)
      0002BB 7As00            [12] 1710 	mov	r2,#(_powercycle_turn_radio_off >> 16)
      0002BD 12r00r00         [24] 1711 	lcall	__sdcc_banked_call
      0002C0 D0 05            [24] 1712 	pop	ar5
      0002C2 D0 06            [24] 1713 	pop	ar6
      0002C4 D0 07            [24] 1714 	pop	ar7
      0002C6                       1715 00117$:
                                   1716 ;	../../../core/net/mac/xmac.c:321: schedule_powercycle(t, xmac_config.off_time);
      0002C6 90r00r02         [24] 1717 	mov	dptr,#(_xmac_config + 0x0002)
      0002C9 E0               [24] 1718 	movx	a,@dptr
      0002CA FA               [12] 1719 	mov	r2,a
      0002CB A3               [24] 1720 	inc	dptr
      0002CC E0               [24] 1721 	movx	a,@dptr
      0002CD FB               [12] 1722 	mov	r3,a
      0002CE C0 07            [24] 1723 	push	ar7
      0002D0 C0 06            [24] 1724 	push	ar6
      0002D2 C0 05            [24] 1725 	push	ar5
      0002D4 C0 02            [24] 1726 	push	ar2
      0002D6 C0 03            [24] 1727 	push	ar3
      0002D8 8D 82            [24] 1728 	mov	dpl,r5
      0002DA 8E 83            [24] 1729 	mov	dph,r6
      0002DC 8F F0            [24] 1730 	mov	b,r7
      0002DE 78r86            [12] 1731 	mov	r0,#_schedule_powercycle
      0002E0 79s00            [12] 1732 	mov	r1,#(_schedule_powercycle >> 8)
      0002E2 7As00            [12] 1733 	mov	r2,#(_schedule_powercycle >> 16)
      0002E4 12r00r00         [24] 1734 	lcall	__sdcc_banked_call
      0002E7 15 81            [12] 1735 	dec	sp
      0002E9 15 81            [12] 1736 	dec	sp
      0002EB D0 05            [24] 1737 	pop	ar5
      0002ED D0 06            [24] 1738 	pop	ar6
      0002EF D0 07            [24] 1739 	pop	ar7
                                   1740 ;	../../../core/net/mac/xmac.c:322: PT_YIELD(&pt);
      0002F1 7C 00            [12] 1741 	mov	r4,#0x00
      0002F3 90r00r08         [24] 1742 	mov	dptr,#_pt
      0002F6 74 42            [12] 1743 	mov	a,#0x42
      0002F8 F0               [24] 1744 	movx	@dptr,a
      0002F9 74 01            [12] 1745 	mov	a,#0x01
      0002FB A3               [24] 1746 	inc	dptr
      0002FC F0               [24] 1747 	movx	@dptr,a
      0002FD                       1748 00118$:
      0002FD EC               [12] 1749 	mov	a,r4
      0002FE 60 03            [24] 1750 	jz	00196$
      000300 02r01rD8         [24] 1751 	ljmp	00128$
      000303                       1752 00196$:
      000303 75 82 01         [24] 1753 	mov	dpl,#0x01
                                   1754 ;	../../../core/net/mac/xmac.c:326: PT_END(&pt);
      000306 80 0A            [24] 1755 	sjmp	00131$
      000308                       1756 00130$:
      000308 90r00r08         [24] 1757 	mov	dptr,#_pt
      00030B E4               [12] 1758 	clr	a
      00030C F0               [24] 1759 	movx	@dptr,a
      00030D A3               [24] 1760 	inc	dptr
      00030E F0               [24] 1761 	movx	@dptr,a
      00030F 75 82 03         [24] 1762 	mov	dpl,#0x03
      000312                       1763 00131$:
                                   1764 ;	../../../core/net/mac/xmac.c:327: }
      000312 02r00r00         [24] 1765 	ljmp	__sdcc_banked_ret
                                   1766 ;------------------------------------------------------------
                                   1767 ;Allocation info for local variables in function 'register_encounter'
                                   1768 ;------------------------------------------------------------
                                   1769 ;time                      Allocated to stack - sp -7
                                   1770 ;neighbor                  Allocated to stack - sp -2
                                   1771 ;e                         Allocated to registers r5 r6 r7 
                                   1772 ;------------------------------------------------------------
                                   1773 ;	../../../core/net/mac/xmac.c:391: register_encounter(const rimeaddr_t *neighbor, rtimer_clock_t time)
                                   1774 ;	-----------------------------------------
                                   1775 ;	 function register_encounter
                                   1776 ;	-----------------------------------------
      000315                       1777 _register_encounter:
      000315 C0 82            [24] 1778 	push	dpl
      000317 C0 83            [24] 1779 	push	dph
      000319 C0 F0            [24] 1780 	push	b
                                   1781 ;	../../../core/net/mac/xmac.c:396: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      00031B 90r00r10         [24] 1782 	mov	dptr,#_encounter_list
      00031E E0               [24] 1783 	movx	a,@dptr
      00031F FA               [12] 1784 	mov	r2,a
      000320 A3               [24] 1785 	inc	dptr
      000321 E0               [24] 1786 	movx	a,@dptr
      000322 FB               [12] 1787 	mov	r3,a
      000323 A3               [24] 1788 	inc	dptr
      000324 E0               [24] 1789 	movx	a,@dptr
      000325 FC               [12] 1790 	mov	r4,a
      000326 8A 82            [24] 1791 	mov	dpl,r2
      000328 8B 83            [24] 1792 	mov	dph,r3
      00032A 8C F0            [24] 1793 	mov	b,r4
      00032C 78r00            [12] 1794 	mov	r0,#_list_head
      00032E 79s00            [12] 1795 	mov	r1,#(_list_head >> 8)
      000330 7As00            [12] 1796 	mov	r2,#(_list_head >> 16)
      000332 12r00r00         [24] 1797 	lcall	__sdcc_banked_call
      000335 AA 82            [24] 1798 	mov	r2,dpl
      000337 AB 83            [24] 1799 	mov	r3,dph
      000339 AC F0            [24] 1800 	mov	r4,b
      00033B                       1801 00109$:
      00033B EA               [12] 1802 	mov	a,r2
      00033C 4B               [12] 1803 	orl	a,r3
      00033D 70 03            [24] 1804 	jnz	00138$
      00033F 02r03rC5         [24] 1805 	ljmp	00103$
      000342                       1806 00138$:
                                   1807 ;	../../../core/net/mac/xmac.c:397: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      000342 74 03            [12] 1808 	mov	a,#0x03
      000344 2A               [12] 1809 	add	a,r2
      000345 FD               [12] 1810 	mov	r5,a
      000346 E4               [12] 1811 	clr	a
      000347 3B               [12] 1812 	addc	a,r3
      000348 FE               [12] 1813 	mov	r6,a
      000349 8C 07            [24] 1814 	mov	ar7,r4
      00034B C0 04            [24] 1815 	push	ar4
      00034D C0 03            [24] 1816 	push	ar3
      00034F C0 02            [24] 1817 	push	ar2
      000351 C0 05            [24] 1818 	push	ar5
      000353 C0 06            [24] 1819 	push	ar6
      000355 C0 07            [24] 1820 	push	ar7
      000357 E5 81            [12] 1821 	mov	a,sp
      000359 24 F8            [12] 1822 	add	a,#0xf8
      00035B F8               [12] 1823 	mov	r0,a
      00035C 86 82            [24] 1824 	mov	dpl,@r0
      00035E 08               [12] 1825 	inc	r0
      00035F 86 83            [24] 1826 	mov	dph,@r0
      000361 08               [12] 1827 	inc	r0
      000362 86 F0            [24] 1828 	mov	b,@r0
      000364 78r00            [12] 1829 	mov	r0,#_rimeaddr_cmp
      000366 79s00            [12] 1830 	mov	r1,#(_rimeaddr_cmp >> 8)
      000368 7As00            [12] 1831 	mov	r2,#(_rimeaddr_cmp >> 16)
      00036A 12r00r00         [24] 1832 	lcall	__sdcc_banked_call
      00036D AE 82            [24] 1833 	mov	r6,dpl
      00036F AF 83            [24] 1834 	mov	r7,dph
      000371 15 81            [12] 1835 	dec	sp
      000373 15 81            [12] 1836 	dec	sp
      000375 15 81            [12] 1837 	dec	sp
      000377 D0 02            [24] 1838 	pop	ar2
      000379 D0 03            [24] 1839 	pop	ar3
      00037B D0 04            [24] 1840 	pop	ar4
      00037D EE               [12] 1841 	mov	a,r6
      00037E 4F               [12] 1842 	orl	a,r7
      00037F 60 20            [24] 1843 	jz	00110$
                                   1844 ;	../../../core/net/mac/xmac.c:398: e->time = time;
      000381 74 0B            [12] 1845 	mov	a,#0x0b
      000383 2A               [12] 1846 	add	a,r2
      000384 FD               [12] 1847 	mov	r5,a
      000385 E4               [12] 1848 	clr	a
      000386 3B               [12] 1849 	addc	a,r3
      000387 FE               [12] 1850 	mov	r6,a
      000388 8C 07            [24] 1851 	mov	ar7,r4
      00038A 8D 82            [24] 1852 	mov	dpl,r5
      00038C 8E 83            [24] 1853 	mov	dph,r6
      00038E 8F F0            [24] 1854 	mov	b,r7
      000390 E5 81            [12] 1855 	mov	a,sp
      000392 24 F9            [12] 1856 	add	a,#0xf9
      000394 F8               [12] 1857 	mov	r0,a
      000395 E6               [12] 1858 	mov	a,@r0
      000396 12r00r00         [24] 1859 	lcall	__gptrput
      000399 A3               [24] 1860 	inc	dptr
      00039A 08               [12] 1861 	inc	r0
      00039B E6               [12] 1862 	mov	a,@r0
      00039C 12r00r00         [24] 1863 	lcall	__gptrput
                                   1864 ;	../../../core/net/mac/xmac.c:399: break;
      00039F 80 24            [24] 1865 	sjmp	00103$
      0003A1                       1866 00110$:
                                   1867 ;	../../../core/net/mac/xmac.c:396: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      0003A1 8A 05            [24] 1868 	mov	ar5,r2
      0003A3 8B 06            [24] 1869 	mov	ar6,r3
      0003A5 8C 07            [24] 1870 	mov	ar7,r4
      0003A7 8D 82            [24] 1871 	mov	dpl,r5
      0003A9 8E 83            [24] 1872 	mov	dph,r6
      0003AB 8F F0            [24] 1873 	mov	b,r7
      0003AD 78r00            [12] 1874 	mov	r0,#_list_item_next
      0003AF 79s00            [12] 1875 	mov	r1,#(_list_item_next >> 8)
      0003B1 7As00            [12] 1876 	mov	r2,#(_list_item_next >> 16)
      0003B3 12r00r00         [24] 1877 	lcall	__sdcc_banked_call
      0003B6 AD 82            [24] 1878 	mov	r5,dpl
      0003B8 AE 83            [24] 1879 	mov	r6,dph
      0003BA AF F0            [24] 1880 	mov	r7,b
      0003BC 8D 02            [24] 1881 	mov	ar2,r5
      0003BE 8E 03            [24] 1882 	mov	ar3,r6
      0003C0 8F 04            [24] 1883 	mov	ar4,r7
      0003C2 02r03r3B         [24] 1884 	ljmp	00109$
      0003C5                       1885 00103$:
                                   1886 ;	../../../core/net/mac/xmac.c:403: if(e == NULL) {
      0003C5 EA               [12] 1887 	mov	a,r2
      0003C6 4B               [12] 1888 	orl	a,r3
      0003C7 60 03            [24] 1889 	jz	00140$
      0003C9 02r04r66         [24] 1890 	ljmp	00111$
      0003CC                       1891 00140$:
                                   1892 ;	../../../core/net/mac/xmac.c:404: e = memb_alloc(&encounter_memb);
      0003CC 90r00r13         [24] 1893 	mov	dptr,#_encounter_memb
      0003CF 75 F0 00         [24] 1894 	mov	b,#0x00
      0003D2 78r00            [12] 1895 	mov	r0,#_memb_alloc
      0003D4 79s00            [12] 1896 	mov	r1,#(_memb_alloc >> 8)
      0003D6 7As00            [12] 1897 	mov	r2,#(_memb_alloc >> 16)
      0003D8 12r00r00         [24] 1898 	lcall	__sdcc_banked_call
      0003DB AD 82            [24] 1899 	mov	r5,dpl
      0003DD AE 83            [24] 1900 	mov	r6,dph
      0003DF AF F0            [24] 1901 	mov	r7,b
                                   1902 ;	../../../core/net/mac/xmac.c:405: if(e == NULL) {
      0003E1 ED               [12] 1903 	mov	a,r5
      0003E2 4E               [12] 1904 	orl	a,r6
      0003E3 70 03            [24] 1905 	jnz	00105$
                                   1906 ;	../../../core/net/mac/xmac.c:407: return;
      0003E5 02r04r66         [24] 1907 	ljmp	00111$
      0003E8                       1908 00105$:
                                   1909 ;	../../../core/net/mac/xmac.c:409: rimeaddr_copy(&e->neighbor, neighbor);
      0003E8 74 03            [12] 1910 	mov	a,#0x03
      0003EA 2D               [12] 1911 	add	a,r5
      0003EB FA               [12] 1912 	mov	r2,a
      0003EC E4               [12] 1913 	clr	a
      0003ED 3E               [12] 1914 	addc	a,r6
      0003EE FB               [12] 1915 	mov	r3,a
      0003EF 8F 04            [24] 1916 	mov	ar4,r7
      0003F1 C0 07            [24] 1917 	push	ar7
      0003F3 C0 06            [24] 1918 	push	ar6
      0003F5 C0 05            [24] 1919 	push	ar5
      0003F7 E5 81            [12] 1920 	mov	a,sp
      0003F9 24 FB            [12] 1921 	add	a,#0xfb
      0003FB F8               [12] 1922 	mov	r0,a
      0003FC E6               [12] 1923 	mov	a,@r0
      0003FD C0 E0            [24] 1924 	push	acc
      0003FF 08               [12] 1925 	inc	r0
      000400 E6               [12] 1926 	mov	a,@r0
      000401 C0 E0            [24] 1927 	push	acc
      000403 08               [12] 1928 	inc	r0
      000404 E6               [12] 1929 	mov	a,@r0
      000405 C0 E0            [24] 1930 	push	acc
      000407 8A 82            [24] 1931 	mov	dpl,r2
      000409 8B 83            [24] 1932 	mov	dph,r3
      00040B 8C F0            [24] 1933 	mov	b,r4
      00040D 78r00            [12] 1934 	mov	r0,#_rimeaddr_copy
      00040F 79s00            [12] 1935 	mov	r1,#(_rimeaddr_copy >> 8)
      000411 7As00            [12] 1936 	mov	r2,#(_rimeaddr_copy >> 16)
      000413 12r00r00         [24] 1937 	lcall	__sdcc_banked_call
      000416 15 81            [12] 1938 	dec	sp
      000418 15 81            [12] 1939 	dec	sp
      00041A 15 81            [12] 1940 	dec	sp
      00041C D0 05            [24] 1941 	pop	ar5
      00041E D0 06            [24] 1942 	pop	ar6
      000420 D0 07            [24] 1943 	pop	ar7
                                   1944 ;	../../../core/net/mac/xmac.c:410: e->time = time;
      000422 74 0B            [12] 1945 	mov	a,#0x0b
      000424 2D               [12] 1946 	add	a,r5
      000425 FA               [12] 1947 	mov	r2,a
      000426 E4               [12] 1948 	clr	a
      000427 3E               [12] 1949 	addc	a,r6
      000428 FB               [12] 1950 	mov	r3,a
      000429 8F 04            [24] 1951 	mov	ar4,r7
      00042B 8A 82            [24] 1952 	mov	dpl,r2
      00042D 8B 83            [24] 1953 	mov	dph,r3
      00042F 8C F0            [24] 1954 	mov	b,r4
      000431 E5 81            [12] 1955 	mov	a,sp
      000433 24 F9            [12] 1956 	add	a,#0xf9
      000435 F8               [12] 1957 	mov	r0,a
      000436 E6               [12] 1958 	mov	a,@r0
      000437 12r00r00         [24] 1959 	lcall	__gptrput
      00043A A3               [24] 1960 	inc	dptr
      00043B 08               [12] 1961 	inc	r0
      00043C E6               [12] 1962 	mov	a,@r0
      00043D 12r00r00         [24] 1963 	lcall	__gptrput
                                   1964 ;	../../../core/net/mac/xmac.c:411: list_add(encounter_list, e);
      000440 90r00r10         [24] 1965 	mov	dptr,#_encounter_list
      000443 E0               [24] 1966 	movx	a,@dptr
      000444 FA               [12] 1967 	mov	r2,a
      000445 A3               [24] 1968 	inc	dptr
      000446 E0               [24] 1969 	movx	a,@dptr
      000447 FB               [12] 1970 	mov	r3,a
      000448 A3               [24] 1971 	inc	dptr
      000449 E0               [24] 1972 	movx	a,@dptr
      00044A FC               [12] 1973 	mov	r4,a
      00044B C0 05            [24] 1974 	push	ar5
      00044D C0 06            [24] 1975 	push	ar6
      00044F C0 07            [24] 1976 	push	ar7
      000451 8A 82            [24] 1977 	mov	dpl,r2
      000453 8B 83            [24] 1978 	mov	dph,r3
      000455 8C F0            [24] 1979 	mov	b,r4
      000457 78r00            [12] 1980 	mov	r0,#_list_add
      000459 79s00            [12] 1981 	mov	r1,#(_list_add >> 8)
      00045B 7As00            [12] 1982 	mov	r2,#(_list_add >> 16)
      00045D 12r00r00         [24] 1983 	lcall	__sdcc_banked_call
      000460 15 81            [12] 1984 	dec	sp
      000462 15 81            [12] 1985 	dec	sp
      000464 15 81            [12] 1986 	dec	sp
      000466                       1987 00111$:
                                   1988 ;	../../../core/net/mac/xmac.c:413: }
      000466 15 81            [12] 1989 	dec	sp
      000468 15 81            [12] 1990 	dec	sp
      00046A 15 81            [12] 1991 	dec	sp
      00046C 02r00r00         [24] 1992 	ljmp	__sdcc_banked_ret
                                   1993 ;------------------------------------------------------------
                                   1994 ;Allocation info for local variables in function 'detect_ack'
                                   1995 ;------------------------------------------------------------
                                   1996 ;wt                        Allocated to registers 
                                   1997 ;ack_received              Allocated to registers r7 
                                   1998 ;len                       Allocated to registers r4 r5 
                                   1999 ;ackbuf                    Allocated to stack - sp -4
                                   2000 ;------------------------------------------------------------
                                   2001 ;	../../../core/net/mac/xmac.c:417: detect_ack(void)
                                   2002 ;	-----------------------------------------
                                   2003 ;	 function detect_ack
                                   2004 ;	-----------------------------------------
      00046F                       2005 _detect_ack:
      00046F E5 81            [12] 2006 	mov	a,sp
      000471 24 05            [12] 2007 	add	a,#0x05
      000473 F5 81            [12] 2008 	mov	sp,a
                                   2009 ;	../../../core/net/mac/xmac.c:423: uint8_t ack_received = 0;
      000475 7F 00            [12] 2010 	mov	r7,#0x00
                                   2011 ;	../../../core/net/mac/xmac.c:425: wt = RTIMER_NOW();
      000477 AD E2            [24] 2012 	mov	r5,_T1CNTL
      000479 7E 00            [12] 2013 	mov	r6,#0x00
      00047B AB E3            [24] 2014 	mov	r3,_T1CNTH
      00047D 8B 04            [24] 2015 	mov	ar4,r3
      00047F E4               [12] 2016 	clr	a
      000480 2D               [12] 2017 	add	a,r5
      000481 FD               [12] 2018 	mov	r5,a
      000482 EC               [12] 2019 	mov	a,r4
      000483 3E               [12] 2020 	addc	a,r6
      000484 FE               [12] 2021 	mov	r6,a
                                   2022 ;	../../../core/net/mac/xmac.c:426: leds_on(LEDS_GREEN);
      000485 75 82 01         [24] 2023 	mov	dpl,#0x01
      000488 C0 07            [24] 2024 	push	ar7
      00048A C0 06            [24] 2025 	push	ar6
      00048C C0 05            [24] 2026 	push	ar5
      00048E 78r00            [12] 2027 	mov	r0,#_leds_on
      000490 79s00            [12] 2028 	mov	r1,#(_leds_on >> 8)
      000492 7As00            [12] 2029 	mov	r2,#(_leds_on >> 16)
      000494 12r00r00         [24] 2030 	lcall	__sdcc_banked_call
      000497 D0 05            [24] 2031 	pop	ar5
      000499 D0 06            [24] 2032 	pop	ar6
      00049B D0 07            [24] 2033 	pop	ar7
                                   2034 ;	../../../core/net/mac/xmac.c:427: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + INTER_PACKET_INTERVAL)) { }
      00049D 74 03            [12] 2035 	mov	a,#0x03
      00049F 2D               [12] 2036 	add	a,r5
      0004A0 FD               [12] 2037 	mov	r5,a
      0004A1 E4               [12] 2038 	clr	a
      0004A2 3E               [12] 2039 	addc	a,r6
      0004A3 FE               [12] 2040 	mov	r6,a
      0004A4                       2041 00101$:
      0004A4 C0 07            [24] 2042 	push	ar7
      0004A6 AB E2            [24] 2043 	mov	r3,_T1CNTL
      0004A8 7C 00            [12] 2044 	mov	r4,#0x00
      0004AA AA E3            [24] 2045 	mov	r2,_T1CNTH
      0004AC 8A 07            [24] 2046 	mov	ar7,r2
      0004AE E4               [12] 2047 	clr	a
      0004AF 2B               [12] 2048 	add	a,r3
      0004B0 FB               [12] 2049 	mov	r3,a
      0004B1 EF               [12] 2050 	mov	a,r7
      0004B2 3C               [12] 2051 	addc	a,r4
      0004B3 FC               [12] 2052 	mov	r4,a
      0004B4 EB               [12] 2053 	mov	a,r3
      0004B5 C3               [12] 2054 	clr	c
      0004B6 9D               [12] 2055 	subb	a,r5
      0004B7 EC               [12] 2056 	mov	a,r4
      0004B8 9E               [12] 2057 	subb	a,r6
      0004B9 D0 07            [24] 2058 	pop	ar7
      0004BB 20 E7 E6         [24] 2059 	jb	acc.7,00101$
                                   2060 ;	../../../core/net/mac/xmac.c:428: leds_off(LEDS_GREEN);
      0004BE 75 82 01         [24] 2061 	mov	dpl,#0x01
      0004C1 C0 07            [24] 2062 	push	ar7
      0004C3 78r00            [12] 2063 	mov	r0,#_leds_off
      0004C5 79s00            [12] 2064 	mov	r1,#(_leds_off >> 8)
      0004C7 7As00            [12] 2065 	mov	r2,#(_leds_off >> 16)
      0004C9 12r00r00         [24] 2066 	lcall	__sdcc_banked_call
                                   2067 ;	../../../core/net/mac/xmac.c:430: if((NETSTACK_RADIO.receiving_packet() ||
      0004CC 90r00r12         [24] 2068 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      0004CF E4               [12] 2069 	clr	a
      0004D0 93               [24] 2070 	movc	a,@a+dptr
      0004D1 FC               [12] 2071 	mov	r4,a
      0004D2 A3               [24] 2072 	inc	dptr
      0004D3 E4               [12] 2073 	clr	a
      0004D4 93               [24] 2074 	movc	a,@a+dptr
      0004D5 FD               [12] 2075 	mov	r5,a
      0004D6 A3               [24] 2076 	inc	dptr
      0004D7 E4               [12] 2077 	clr	a
      0004D8 93               [24] 2078 	movc	a,@a+dptr
      0004D9 FE               [12] 2079 	mov	r6,a
      0004DA C0 06            [24] 2080 	push	ar6
      0004DC C0 04            [24] 2081 	push	ar4
      0004DE C0 05            [24] 2082 	push	ar5
      0004E0 C0 06            [24] 2083 	push	ar6
      0004E2 D0 02            [24] 2084 	pop	ar2
      0004E4 D0 01            [24] 2085 	pop	ar1
      0004E6 D0 00            [24] 2086 	pop	ar0
      0004E8 12r00r00         [24] 2087 	lcall	__sdcc_banked_call
      0004EB AC 82            [24] 2088 	mov	r4,dpl
      0004ED AD 83            [24] 2089 	mov	r5,dph
      0004EF D0 06            [24] 2090 	pop	ar6
      0004F1 D0 07            [24] 2091 	pop	ar7
      0004F3 EC               [12] 2092 	mov	a,r4
      0004F4 4D               [12] 2093 	orl	a,r5
      0004F5 70 5D            [24] 2094 	jnz	00109$
                                   2095 ;	../../../core/net/mac/xmac.c:431: NETSTACK_RADIO.pending_packet() ||
      0004F7 90r00r15         [24] 2096 	mov	dptr,#(_cc2530_rf_driver + 0x0015)
      0004FA E4               [12] 2097 	clr	a
      0004FB 93               [24] 2098 	movc	a,@a+dptr
      0004FC FC               [12] 2099 	mov	r4,a
      0004FD A3               [24] 2100 	inc	dptr
      0004FE E4               [12] 2101 	clr	a
      0004FF 93               [24] 2102 	movc	a,@a+dptr
      000500 FD               [12] 2103 	mov	r5,a
      000501 A3               [24] 2104 	inc	dptr
      000502 E4               [12] 2105 	clr	a
      000503 93               [24] 2106 	movc	a,@a+dptr
      000504 FE               [12] 2107 	mov	r6,a
      000505 C0 07            [24] 2108 	push	ar7
      000507 C0 06            [24] 2109 	push	ar6
      000509 C0 04            [24] 2110 	push	ar4
      00050B C0 05            [24] 2111 	push	ar5
      00050D C0 06            [24] 2112 	push	ar6
      00050F D0 02            [24] 2113 	pop	ar2
      000511 D0 01            [24] 2114 	pop	ar1
      000513 D0 00            [24] 2115 	pop	ar0
      000515 12r00r00         [24] 2116 	lcall	__sdcc_banked_call
      000518 AC 82            [24] 2117 	mov	r4,dpl
      00051A AD 83            [24] 2118 	mov	r5,dph
      00051C D0 06            [24] 2119 	pop	ar6
      00051E D0 07            [24] 2120 	pop	ar7
      000520 EC               [12] 2121 	mov	a,r4
      000521 4D               [12] 2122 	orl	a,r5
      000522 70 30            [24] 2123 	jnz	00109$
                                   2124 ;	../../../core/net/mac/xmac.c:432: NETSTACK_RADIO.channel_clear() == 0)) {
      000524 90r00r0F         [24] 2125 	mov	dptr,#(_cc2530_rf_driver + 0x000f)
      000527 E4               [12] 2126 	clr	a
      000528 93               [24] 2127 	movc	a,@a+dptr
      000529 FC               [12] 2128 	mov	r4,a
      00052A A3               [24] 2129 	inc	dptr
      00052B E4               [12] 2130 	clr	a
      00052C 93               [24] 2131 	movc	a,@a+dptr
      00052D FD               [12] 2132 	mov	r5,a
      00052E A3               [24] 2133 	inc	dptr
      00052F E4               [12] 2134 	clr	a
      000530 93               [24] 2135 	movc	a,@a+dptr
      000531 FE               [12] 2136 	mov	r6,a
      000532 C0 07            [24] 2137 	push	ar7
      000534 C0 06            [24] 2138 	push	ar6
      000536 C0 04            [24] 2139 	push	ar4
      000538 C0 05            [24] 2140 	push	ar5
      00053A C0 06            [24] 2141 	push	ar6
      00053C D0 02            [24] 2142 	pop	ar2
      00053E D0 01            [24] 2143 	pop	ar1
      000540 D0 00            [24] 2144 	pop	ar0
      000542 12r00r00         [24] 2145 	lcall	__sdcc_banked_call
      000545 AC 82            [24] 2146 	mov	r4,dpl
      000547 AD 83            [24] 2147 	mov	r5,dph
      000549 D0 06            [24] 2148 	pop	ar6
      00054B D0 07            [24] 2149 	pop	ar7
      00054D EC               [12] 2150 	mov	a,r4
      00054E 4D               [12] 2151 	orl	a,r5
      00054F 60 03            [24] 2152 	jz	00160$
      000551 02r05rD9         [24] 2153 	ljmp	00110$
      000554                       2154 00160$:
      000554                       2155 00109$:
                                   2156 ;	../../../core/net/mac/xmac.c:436: wt = RTIMER_NOW();
      000554 AD E2            [24] 2157 	mov	r5,_T1CNTL
      000556 7E 00            [12] 2158 	mov	r6,#0x00
      000558 AB E3            [24] 2159 	mov	r3,_T1CNTH
      00055A 8B 04            [24] 2160 	mov	ar4,r3
      00055C E4               [12] 2161 	clr	a
      00055D FB               [12] 2162 	mov	r3,a
      00055E 2D               [12] 2163 	add	a,r5
      00055F FD               [12] 2164 	mov	r5,a
      000560 EC               [12] 2165 	mov	a,r4
      000561 3E               [12] 2166 	addc	a,r6
      000562 FE               [12] 2167 	mov	r6,a
                                   2168 ;	../../../core/net/mac/xmac.c:437: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + AFTER_ACK_DETECTECT_WAIT_TIME)) { }
      000563 74 0F            [12] 2169 	mov	a,#0x0f
      000565 2D               [12] 2170 	add	a,r5
      000566 FD               [12] 2171 	mov	r5,a
      000567 E4               [12] 2172 	clr	a
      000568 3E               [12] 2173 	addc	a,r6
      000569 FE               [12] 2174 	mov	r6,a
      00056A                       2175 00104$:
      00056A C0 07            [24] 2176 	push	ar7
      00056C AB E2            [24] 2177 	mov	r3,_T1CNTL
      00056E 7C 00            [12] 2178 	mov	r4,#0x00
      000570 AA E3            [24] 2179 	mov	r2,_T1CNTH
      000572 8A 07            [24] 2180 	mov	ar7,r2
      000574 E4               [12] 2181 	clr	a
      000575 2B               [12] 2182 	add	a,r3
      000576 FB               [12] 2183 	mov	r3,a
      000577 EF               [12] 2184 	mov	a,r7
      000578 3C               [12] 2185 	addc	a,r4
      000579 FC               [12] 2186 	mov	r4,a
      00057A EB               [12] 2187 	mov	a,r3
      00057B C3               [12] 2188 	clr	c
      00057C 9D               [12] 2189 	subb	a,r5
      00057D EC               [12] 2190 	mov	a,r4
      00057E 9E               [12] 2191 	subb	a,r6
      00057F D0 07            [24] 2192 	pop	ar7
      000581 20 E7 E6         [24] 2193 	jb	acc.7,00104$
                                   2194 ;	../../../core/net/mac/xmac.c:439: len = NETSTACK_RADIO.read(ackbuf, ACK_LEN);
      000584 C0 07            [24] 2195 	push	ar7
      000586 90r00r0C         [24] 2196 	mov	dptr,#(_cc2530_rf_driver + 0x000c)
      000589 E4               [12] 2197 	clr	a
      00058A 93               [24] 2198 	movc	a,@a+dptr
      00058B FC               [12] 2199 	mov	r4,a
      00058C A3               [24] 2200 	inc	dptr
      00058D E4               [12] 2201 	clr	a
      00058E 93               [24] 2202 	movc	a,@a+dptr
      00058F FD               [12] 2203 	mov	r5,a
      000590 A3               [24] 2204 	inc	dptr
      000591 E4               [12] 2205 	clr	a
      000592 93               [24] 2206 	movc	a,@a+dptr
      000593 FE               [12] 2207 	mov	r6,a
      000594 E5 81            [12] 2208 	mov	a,sp
      000596 24 FB            [12] 2209 	add	a,#0xfb
      000598 FA               [12] 2210 	mov	r2,a
      000599 7B 00            [12] 2211 	mov	r3,#0x00
      00059B 7F 40            [12] 2212 	mov	r7,#0x40
      00059D C0 07            [24] 2213 	push	ar7
      00059F C0 06            [24] 2214 	push	ar6
      0005A1 74 03            [12] 2215 	mov	a,#0x03
      0005A3 C0 E0            [24] 2216 	push	acc
      0005A5 E4               [12] 2217 	clr	a
      0005A6 C0 E0            [24] 2218 	push	acc
      0005A8 C0 04            [24] 2219 	push	ar4
      0005AA C0 05            [24] 2220 	push	ar5
      0005AC C0 06            [24] 2221 	push	ar6
      0005AE 8A 82            [24] 2222 	mov	dpl,r2
      0005B0 8B 83            [24] 2223 	mov	dph,r3
      0005B2 8F F0            [24] 2224 	mov	b,r7
      0005B4 D0 02            [24] 2225 	pop	ar2
      0005B6 D0 01            [24] 2226 	pop	ar1
      0005B8 D0 00            [24] 2227 	pop	ar0
      0005BA 12r00r00         [24] 2228 	lcall	__sdcc_banked_call
      0005BD AC 82            [24] 2229 	mov	r4,dpl
      0005BF AD 83            [24] 2230 	mov	r5,dph
      0005C1 15 81            [12] 2231 	dec	sp
      0005C3 15 81            [12] 2232 	dec	sp
      0005C5 D0 06            [24] 2233 	pop	ar6
      0005C7 D0 07            [24] 2234 	pop	ar7
                                   2235 ;	../../../core/net/mac/xmac.c:440: if(len == ACK_LEN) {
      0005C9 BC 03 05         [24] 2236 	cjne	r4,#0x03,00162$
      0005CC BD 00 02         [24] 2237 	cjne	r5,#0x00,00162$
      0005CF 80 04            [24] 2238 	sjmp	00163$
      0005D1                       2239 00162$:
      0005D1 D0 07            [24] 2240 	pop	ar7
      0005D3 80 04            [24] 2241 	sjmp	00110$
      0005D5                       2242 00163$:
      0005D5 D0 07            [24] 2243 	pop	ar7
                                   2244 ;	../../../core/net/mac/xmac.c:441: ack_received = 1;
      0005D7 7F 01            [12] 2245 	mov	r7,#0x01
      0005D9                       2246 00110$:
                                   2247 ;	../../../core/net/mac/xmac.c:444: if(ack_received) {
      0005D9 EF               [12] 2248 	mov	a,r7
      0005DA 60 10            [24] 2249 	jz	00114$
                                   2250 ;	../../../core/net/mac/xmac.c:445: leds_toggle(LEDS_RED);
      0005DC 75 82 02         [24] 2251 	mov	dpl,#0x02
      0005DF C0 07            [24] 2252 	push	ar7
      0005E1 78r00            [12] 2253 	mov	r0,#_leds_toggle
      0005E3 79s00            [12] 2254 	mov	r1,#(_leds_toggle >> 8)
      0005E5 7As00            [12] 2255 	mov	r2,#(_leds_toggle >> 16)
      0005E7 12r00r00         [24] 2256 	lcall	__sdcc_banked_call
      0005EA D0 07            [24] 2257 	pop	ar7
      0005EC                       2258 00114$:
                                   2259 ;	../../../core/net/mac/xmac.c:447: return ack_received;
      0005EC 7E 00            [12] 2260 	mov	r6,#0x00
      0005EE 8F 82            [24] 2261 	mov	dpl,r7
      0005F0 8E 83            [24] 2262 	mov	dph,r6
                                   2263 ;	../../../core/net/mac/xmac.c:448: }
      0005F2 E5 81            [12] 2264 	mov	a,sp
      0005F4 24 FB            [12] 2265 	add	a,#0xfb
      0005F6 F5 81            [12] 2266 	mov	sp,a
      0005F8 02r00r00         [24] 2267 	ljmp	__sdcc_banked_ret
                                   2268 ;------------------------------------------------------------
                                   2269 ;Allocation info for local variables in function 'send_packet'
                                   2270 ;------------------------------------------------------------
                                   2271 ;t0                        Allocated to registers r6 r7 
                                   2272 ;t                         Allocated to stack - sp -70
                                   2273 ;encounter_time            Allocated to registers 
                                   2274 ;strobes                   Allocated to registers 
                                   2275 ;ret                       Allocated to registers 
                                   2276 ;got_strobe_ack            Allocated to stack - sp -64
                                   2277 ;got_ack                   Allocated to stack - sp -63
                                   2278 ;strobe                    Allocated to stack - sp -62
                                   2279 ;strobe_len                Allocated to stack - sp -12
                                   2280 ;len                       Allocated to registers r2 r4 
                                   2281 ;is_broadcast              Allocated to stack - sp -10
                                   2282 ;e                         Allocated to stack - sp -8
                                   2283 ;packet                    Allocated to stack - sp -5
                                   2284 ;is_already_streaming      Allocated to stack - sp -2
                                   2285 ;collisions                Allocated to stack - sp +0
                                   2286 ;neighbor                  Allocated to registers r7 r6 r3 
                                   2287 ;wait                      Allocated to registers r6 r7 
                                   2288 ;now                       Allocated to registers r4 r3 
                                   2289 ;expected                  Allocated to registers r6 r7 
                                   2290 ;sloc0                     Allocated to stack - sp -70
                                   2291 ;sloc1                     Allocated to stack - sp -67
                                   2292 ;sloc2                     Allocated to stack - sp -66
                                   2293 ;------------------------------------------------------------
                                   2294 ;	../../../core/net/mac/xmac.c:451: send_packet(void)
                                   2295 ;	-----------------------------------------
                                   2296 ;	 function send_packet
                                   2297 ;	-----------------------------------------
      0005FB                       2298 _send_packet:
      0005FB E5 81            [12] 2299 	mov	a,sp
      0005FD 24 47            [12] 2300 	add	a,#0x47
                                   2301 ;	../../../core/net/mac/xmac.c:461: uint8_t got_strobe_ack = 0;
      0005FF F5 81            [12] 2302 	mov	sp,a
      000601 24 C0            [12] 2303 	add	a,#0xc0
      000603 F8               [12] 2304 	mov	r0,a
      000604 76 00            [12] 2305 	mov	@r0,#0x00
                                   2306 ;	../../../core/net/mac/xmac.c:462: uint8_t got_ack = 0;
      000606 E5 81            [12] 2307 	mov	a,sp
      000608 24 C1            [12] 2308 	add	a,#0xc1
      00060A F8               [12] 2309 	mov	r0,a
      00060B 76 00            [12] 2310 	mov	@r0,#0x00
                                   2311 ;	../../../core/net/mac/xmac.c:465: int is_broadcast = 0;
      00060D E5 81            [12] 2312 	mov	a,sp
      00060F 24 F6            [12] 2313 	add	a,#0xf6
      000611 F8               [12] 2314 	mov	r0,a
      000612 E4               [12] 2315 	clr	a
      000613 F6               [12] 2316 	mov	@r0,a
      000614 08               [12] 2317 	inc	r0
      000615 F6               [12] 2318 	mov	@r0,a
                                   2319 ;	../../../core/net/mac/xmac.c:469: int is_already_streaming = 0;
      000616 A8 81            [24] 2320 	mov	r0,sp
      000618 18               [12] 2321 	dec	r0
      000619 18               [12] 2322 	dec	r0
      00061A F6               [12] 2323 	mov	@r0,a
      00061B 08               [12] 2324 	inc	r0
      00061C F6               [12] 2325 	mov	@r0,a
                                   2326 ;	../../../core/net/mac/xmac.c:473: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &rimeaddr_node_addr);
      00061D 74r00            [12] 2327 	mov	a,#_rimeaddr_node_addr
      00061F C0 E0            [24] 2328 	push	acc
      000621 74s00            [12] 2329 	mov	a,#(_rimeaddr_node_addr >> 8)
      000623 C0 E0            [24] 2330 	push	acc
      000625 E4               [12] 2331 	clr	a
      000626 C0 E0            [24] 2332 	push	acc
      000628 75 82 18         [24] 2333 	mov	dpl,#0x18
      00062B 78r00            [12] 2334 	mov	r0,#_packetbuf_set_addr
      00062D 79s00            [12] 2335 	mov	r1,#(_packetbuf_set_addr >> 8)
      00062F 7As00            [12] 2336 	mov	r2,#(_packetbuf_set_addr >> 16)
      000631 12r00r00         [24] 2337 	lcall	__sdcc_banked_call
      000634 15 81            [12] 2338 	dec	sp
      000636 15 81            [12] 2339 	dec	sp
      000638 15 81            [12] 2340 	dec	sp
                                   2341 ;	../../../core/net/mac/xmac.c:474: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER), &rimeaddr_null)) {
      00063A 75 82 19         [24] 2342 	mov	dpl,#0x19
      00063D 78r00            [12] 2343 	mov	r0,#_packetbuf_addr
      00063F 79s00            [12] 2344 	mov	r1,#(_packetbuf_addr >> 8)
      000641 7As00            [12] 2345 	mov	r2,#(_packetbuf_addr >> 16)
      000643 12r00r00         [24] 2346 	lcall	__sdcc_banked_call
      000646 AA 82            [24] 2347 	mov	r2,dpl
      000648 AB 83            [24] 2348 	mov	r3,dph
      00064A AE F0            [24] 2349 	mov	r6,b
      00064C 74r00            [12] 2350 	mov	a,#_rimeaddr_null
      00064E C0 E0            [24] 2351 	push	acc
      000650 74s00            [12] 2352 	mov	a,#(_rimeaddr_null >> 8)
      000652 C0 E0            [24] 2353 	push	acc
      000654 74 80            [12] 2354 	mov	a,#0x80
      000656 C0 E0            [24] 2355 	push	acc
      000658 8A 82            [24] 2356 	mov	dpl,r2
      00065A 8B 83            [24] 2357 	mov	dph,r3
      00065C 8E F0            [24] 2358 	mov	b,r6
      00065E 78r00            [12] 2359 	mov	r0,#_rimeaddr_cmp
      000660 79s00            [12] 2360 	mov	r1,#(_rimeaddr_cmp >> 8)
      000662 7As00            [12] 2361 	mov	r2,#(_rimeaddr_cmp >> 16)
      000664 12r00r00         [24] 2362 	lcall	__sdcc_banked_call
      000667 AB 82            [24] 2363 	mov	r3,dpl
      000669 AE 83            [24] 2364 	mov	r6,dph
      00066B 15 81            [12] 2365 	dec	sp
      00066D 15 81            [12] 2366 	dec	sp
      00066F 15 81            [12] 2367 	dec	sp
      000671 EB               [12] 2368 	mov	a,r3
      000672 4E               [12] 2369 	orl	a,r6
      000673 60 0A            [24] 2370 	jz	00102$
                                   2371 ;	../../../core/net/mac/xmac.c:475: is_broadcast = 1;
      000675 E5 81            [12] 2372 	mov	a,sp
      000677 24 F6            [12] 2373 	add	a,#0xf6
      000679 F8               [12] 2374 	mov	r0,a
      00067A 76 01            [12] 2375 	mov	@r0,#0x01
      00067C 08               [12] 2376 	inc	r0
      00067D 76 00            [12] 2377 	mov	@r0,#0x00
      00067F                       2378 00102$:
                                   2379 ;	../../../core/net/mac/xmac.c:497: packetbuf_set_attr(PACKETBUF_ATTR_MAC_ACK, 1);
      00067F 74 01            [12] 2380 	mov	a,#0x01
      000681 C0 E0            [24] 2381 	push	acc
      000683 E4               [12] 2382 	clr	a
      000684 C0 E0            [24] 2383 	push	acc
      000686 75 82 0B         [24] 2384 	mov	dpl,#0x0b
      000689 78r00            [12] 2385 	mov	r0,#_packetbuf_set_attr
      00068B 79s00            [12] 2386 	mov	r1,#(_packetbuf_set_attr >> 8)
      00068D 7As00            [12] 2387 	mov	r2,#(_packetbuf_set_attr >> 16)
      00068F 12r00r00         [24] 2388 	lcall	__sdcc_banked_call
      000692 15 81            [12] 2389 	dec	sp
      000694 15 81            [12] 2390 	dec	sp
                                   2391 ;	../../../core/net/mac/xmac.c:498: len = NETSTACK_FRAMER.create();
      000696 90r00r00         [24] 2392 	mov	dptr,#_framer_802154
      000699 E4               [12] 2393 	clr	a
      00069A 93               [24] 2394 	movc	a,@a+dptr
      00069B FA               [12] 2395 	mov	r2,a
      00069C A3               [24] 2396 	inc	dptr
      00069D E4               [12] 2397 	clr	a
      00069E 93               [24] 2398 	movc	a,@a+dptr
      00069F FB               [12] 2399 	mov	r3,a
      0006A0 A3               [24] 2400 	inc	dptr
      0006A1 E4               [12] 2401 	clr	a
      0006A2 93               [24] 2402 	movc	a,@a+dptr
      0006A3 FE               [12] 2403 	mov	r6,a
      0006A4 C0 06            [24] 2404 	push	ar6
      0006A6 C0 02            [24] 2405 	push	ar2
      0006A8 C0 03            [24] 2406 	push	ar3
      0006AA C0 06            [24] 2407 	push	ar6
      0006AC D0 02            [24] 2408 	pop	ar2
      0006AE D0 01            [24] 2409 	pop	ar1
      0006B0 D0 00            [24] 2410 	pop	ar0
      0006B2 12r00r00         [24] 2411 	lcall	__sdcc_banked_call
      0006B5 AA 82            [24] 2412 	mov	r2,dpl
      0006B7 AB 83            [24] 2413 	mov	r3,dph
      0006B9 D0 06            [24] 2414 	pop	ar6
      0006BB 8B 04            [24] 2415 	mov	ar4,r3
                                   2416 ;	../../../core/net/mac/xmac.c:499: strobe_len = len + sizeof(struct xmac_hdr);
      0006BD E5 81            [12] 2417 	mov	a,sp
      0006BF 24 F4            [12] 2418 	add	a,#0xf4
      0006C1 F8               [12] 2419 	mov	r0,a
      0006C2 74 02            [12] 2420 	mov	a,#0x02
      0006C4 2A               [12] 2421 	add	a,r2
      0006C5 F6               [12] 2422 	mov	@r0,a
      0006C6 E4               [12] 2423 	clr	a
      0006C7 3C               [12] 2424 	addc	a,r4
      0006C8 08               [12] 2425 	inc	r0
      0006C9 F6               [12] 2426 	mov	@r0,a
                                   2427 ;	../../../core/net/mac/xmac.c:500: if(len < 0 || strobe_len > (int)sizeof(strobe)) {
      0006CA EC               [12] 2428 	mov	a,r4
      0006CB 20 E7 15         [24] 2429 	jb	acc.7,00103$
      0006CE E5 81            [12] 2430 	mov	a,sp
      0006D0 24 F4            [12] 2431 	add	a,#0xf4
      0006D2 F8               [12] 2432 	mov	r0,a
      0006D3 C3               [12] 2433 	clr	c
      0006D4 74 32            [12] 2434 	mov	a,#0x32
      0006D6 96               [12] 2435 	subb	a,@r0
      0006D7 74 80            [12] 2436 	mov	a,#(0x00 ^ 0x80)
      0006D9 08               [12] 2437 	inc	r0
      0006DA 86 F0            [24] 2438 	mov	b,@r0
      0006DC 63 F0 80         [24] 2439 	xrl	b,#0x80
      0006DF 95 F0            [12] 2440 	subb	a,b
      0006E1 50 06            [24] 2441 	jnc	00104$
      0006E3                       2442 00103$:
                                   2443 ;	../../../core/net/mac/xmac.c:503: return MAC_TX_ERR_FATAL;
      0006E3 90 00 05         [24] 2444 	mov	dptr,#0x0005
      0006E6 02r0Er19         [24] 2445 	ljmp	00170$
      0006E9                       2446 00104$:
                                   2447 ;	../../../core/net/mac/xmac.c:505: memcpy(strobe, packetbuf_hdrptr(), len);
      0006E9 C0 04            [24] 2448 	push	ar4
      0006EB C0 02            [24] 2449 	push	ar2
      0006ED 78r00            [12] 2450 	mov	r0,#_packetbuf_hdrptr
      0006EF 79s00            [12] 2451 	mov	r1,#(_packetbuf_hdrptr >> 8)
      0006F1 7As00            [12] 2452 	mov	r2,#(_packetbuf_hdrptr >> 16)
      0006F3 12r00r00         [24] 2453 	lcall	__sdcc_banked_call
      0006F6 C8               [12] 2454 	xch	a,r0
      0006F7 E5 81            [12] 2455 	mov	a,sp
      0006F9 24 B8            [12] 2456 	add	a,#0xb8
      0006FB C8               [12] 2457 	xch	a,r0
      0006FC A6 82            [24] 2458 	mov	@r0,dpl
      0006FE 08               [12] 2459 	inc	r0
      0006FF A6 83            [24] 2460 	mov	@r0,dph
      000701 08               [12] 2461 	inc	r0
      000702 A6 F0            [24] 2462 	mov	@r0,b
      000704 D0 02            [24] 2463 	pop	ar2
      000706 D0 04            [24] 2464 	pop	ar4
      000708 E5 81            [12] 2465 	mov	a,sp
      00070A 24 C2            [12] 2466 	add	a,#0xc2
      00070C FE               [12] 2467 	mov	r6,a
      00070D FB               [12] 2468 	mov	r3,a
      00070E 7D 00            [12] 2469 	mov	r5,#0x00
      000710 7F 40            [12] 2470 	mov	r7,#0x40
      000712 C0 06            [24] 2471 	push	ar6
      000714 C0 04            [24] 2472 	push	ar4
      000716 C0 02            [24] 2473 	push	ar2
      000718 C0 02            [24] 2474 	push	ar2
      00071A C0 04            [24] 2475 	push	ar4
      00071C E5 81            [12] 2476 	mov	a,sp
      00071E 24 B5            [12] 2477 	add	a,#0xb5
      000720 F8               [12] 2478 	mov	r0,a
      000721 E6               [12] 2479 	mov	a,@r0
      000722 C0 E0            [24] 2480 	push	acc
      000724 08               [12] 2481 	inc	r0
      000725 E6               [12] 2482 	mov	a,@r0
      000726 C0 E0            [24] 2483 	push	acc
      000728 08               [12] 2484 	inc	r0
      000729 E6               [12] 2485 	mov	a,@r0
      00072A C0 E0            [24] 2486 	push	acc
      00072C 8B 82            [24] 2487 	mov	dpl,r3
      00072E 8D 83            [24] 2488 	mov	dph,r5
      000730 8F F0            [24] 2489 	mov	b,r7
      000732 78r00            [12] 2490 	mov	r0,#___memcpy
      000734 79s00            [12] 2491 	mov	r1,#(___memcpy >> 8)
      000736 7As00            [12] 2492 	mov	r2,#(___memcpy >> 16)
      000738 12r00r00         [24] 2493 	lcall	__sdcc_banked_call
      00073B E5 81            [12] 2494 	mov	a,sp
      00073D 24 FB            [12] 2495 	add	a,#0xfb
      00073F F5 81            [12] 2496 	mov	sp,a
      000741 D0 02            [24] 2497 	pop	ar2
      000743 D0 04            [24] 2498 	pop	ar4
      000745 D0 06            [24] 2499 	pop	ar6
                                   2500 ;	../../../core/net/mac/xmac.c:506: strobe[len] = DISPATCH; /* dispatch */
      000747 EA               [12] 2501 	mov	a,r2
      000748 2E               [12] 2502 	add	a,r6
      000749 F8               [12] 2503 	mov	r0,a
      00074A 76 00            [12] 2504 	mov	@r0,#0x00
                                   2505 ;	../../../core/net/mac/xmac.c:507: strobe[len + 1] = TYPE_STROBE; /* type */
      00074C 8A 07            [24] 2506 	mov	ar7,r2
      00074E EF               [12] 2507 	mov	a,r7
      00074F 04               [12] 2508 	inc	a
      000750 2E               [12] 2509 	add	a,r6
      000751 F8               [12] 2510 	mov	r0,a
      000752 76 10            [12] 2511 	mov	@r0,#0x10
                                   2512 ;	../../../core/net/mac/xmac.c:509: packetbuf_compact();
      000754 78r00            [12] 2513 	mov	r0,#_packetbuf_compact
      000756 79s00            [12] 2514 	mov	r1,#(_packetbuf_compact >> 8)
      000758 7As00            [12] 2515 	mov	r2,#(_packetbuf_compact >> 16)
      00075A 12r00r00         [24] 2516 	lcall	__sdcc_banked_call
                                   2517 ;	../../../core/net/mac/xmac.c:510: packet = queuebuf_new_from_packetbuf();
      00075D 78r00            [12] 2518 	mov	r0,#_queuebuf_new_from_packetbuf
      00075F 79s00            [12] 2519 	mov	r1,#(_queuebuf_new_from_packetbuf >> 8)
      000761 7As00            [12] 2520 	mov	r2,#(_queuebuf_new_from_packetbuf >> 16)
      000763 12r00r00         [24] 2521 	lcall	__sdcc_banked_call
      000766 AD 82            [24] 2522 	mov	r5,dpl
      000768 AE 83            [24] 2523 	mov	r6,dph
      00076A AF F0            [24] 2524 	mov	r7,b
      00076C E5 81            [12] 2525 	mov	a,sp
      00076E 24 FB            [12] 2526 	add	a,#0xfb
      000770 F8               [12] 2527 	mov	r0,a
      000771 A6 05            [24] 2528 	mov	@r0,ar5
      000773 08               [12] 2529 	inc	r0
      000774 A6 06            [24] 2530 	mov	@r0,ar6
      000776 08               [12] 2531 	inc	r0
      000777 A6 07            [24] 2532 	mov	@r0,ar7
                                   2533 ;	../../../core/net/mac/xmac.c:511: if(packet == NULL) {
      000779 E5 81            [12] 2534 	mov	a,sp
      00077B 24 FB            [12] 2535 	add	a,#0xfb
      00077D F8               [12] 2536 	mov	r0,a
      00077E E6               [12] 2537 	mov	a,@r0
      00077F 08               [12] 2538 	inc	r0
      000780 46               [12] 2539 	orl	a,@r0
      000781 70 06            [24] 2540 	jnz	00107$
                                   2541 ;	../../../core/net/mac/xmac.c:515: return MAC_TX_ERR;
      000783 90 00 04         [24] 2542 	mov	dptr,#0x0004
      000786 02r0Er19         [24] 2543 	ljmp	00170$
      000789                       2544 00107$:
                                   2545 ;	../../../core/net/mac/xmac.c:519: if(is_streaming == 1 &&
      000789 90r00r43         [24] 2546 	mov	dptr,#_is_streaming
      00078C E0               [24] 2547 	movx	a,@dptr
      00078D FF               [12] 2548 	mov	r7,a
      00078E BF 01 02         [24] 2549 	cjne	r7,#0x01,00312$
      000791 80 03            [24] 2550 	sjmp	00313$
      000793                       2551 00312$:
      000793 02r08r13         [24] 2552 	ljmp	00109$
      000796                       2553 00313$:
                                   2554 ;	../../../core/net/mac/xmac.c:521: &is_streaming_to) ||
                                   2555 ;	../../../core/net/mac/xmac.c:520: (rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000796 75 82 19         [24] 2556 	mov	dpl,#0x19
      000799 78r00            [12] 2557 	mov	r0,#_packetbuf_addr
      00079B 79s00            [12] 2558 	mov	r1,#(_packetbuf_addr >> 8)
      00079D 7As00            [12] 2559 	mov	r2,#(_packetbuf_addr >> 16)
      00079F 12r00r00         [24] 2560 	lcall	__sdcc_banked_call
      0007A2 AB 82            [24] 2561 	mov	r3,dpl
      0007A4 AE 83            [24] 2562 	mov	r6,dph
      0007A6 AF F0            [24] 2563 	mov	r7,b
      0007A8 74r44            [12] 2564 	mov	a,#_is_streaming_to
      0007AA C0 E0            [24] 2565 	push	acc
      0007AC 74s00            [12] 2566 	mov	a,#(_is_streaming_to >> 8)
      0007AE C0 E0            [24] 2567 	push	acc
      0007B0 E4               [12] 2568 	clr	a
      0007B1 C0 E0            [24] 2569 	push	acc
      0007B3 8B 82            [24] 2570 	mov	dpl,r3
      0007B5 8E 83            [24] 2571 	mov	dph,r6
      0007B7 8F F0            [24] 2572 	mov	b,r7
      0007B9 78r00            [12] 2573 	mov	r0,#_rimeaddr_cmp
      0007BB 79s00            [12] 2574 	mov	r1,#(_rimeaddr_cmp >> 8)
      0007BD 7As00            [12] 2575 	mov	r2,#(_rimeaddr_cmp >> 16)
      0007BF 12r00r00         [24] 2576 	lcall	__sdcc_banked_call
      0007C2 AE 82            [24] 2577 	mov	r6,dpl
      0007C4 AF 83            [24] 2578 	mov	r7,dph
      0007C6 15 81            [12] 2579 	dec	sp
      0007C8 15 81            [12] 2580 	dec	sp
      0007CA 15 81            [12] 2581 	dec	sp
      0007CC EE               [12] 2582 	mov	a,r6
      0007CD 4F               [12] 2583 	orl	a,r7
      0007CE 70 3A            [24] 2584 	jnz	00108$
                                   2585 ;	../../../core/net/mac/xmac.c:523: &is_streaming_to_too))) {
                                   2586 ;	../../../core/net/mac/xmac.c:522: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      0007D0 75 82 19         [24] 2587 	mov	dpl,#0x19
      0007D3 78r00            [12] 2588 	mov	r0,#_packetbuf_addr
      0007D5 79s00            [12] 2589 	mov	r1,#(_packetbuf_addr >> 8)
      0007D7 7As00            [12] 2590 	mov	r2,#(_packetbuf_addr >> 16)
      0007D9 12r00r00         [24] 2591 	lcall	__sdcc_banked_call
      0007DC AB 82            [24] 2592 	mov	r3,dpl
      0007DE AE 83            [24] 2593 	mov	r6,dph
      0007E0 AF F0            [24] 2594 	mov	r7,b
      0007E2 74r4C            [12] 2595 	mov	a,#_is_streaming_to_too
      0007E4 C0 E0            [24] 2596 	push	acc
      0007E6 74s00            [12] 2597 	mov	a,#(_is_streaming_to_too >> 8)
      0007E8 C0 E0            [24] 2598 	push	acc
      0007EA E4               [12] 2599 	clr	a
      0007EB C0 E0            [24] 2600 	push	acc
      0007ED 8B 82            [24] 2601 	mov	dpl,r3
      0007EF 8E 83            [24] 2602 	mov	dph,r6
      0007F1 8F F0            [24] 2603 	mov	b,r7
      0007F3 78r00            [12] 2604 	mov	r0,#_rimeaddr_cmp
      0007F5 79s00            [12] 2605 	mov	r1,#(_rimeaddr_cmp >> 8)
      0007F7 7As00            [12] 2606 	mov	r2,#(_rimeaddr_cmp >> 16)
      0007F9 12r00r00         [24] 2607 	lcall	__sdcc_banked_call
      0007FC AE 82            [24] 2608 	mov	r6,dpl
      0007FE AF 83            [24] 2609 	mov	r7,dph
      000800 15 81            [12] 2610 	dec	sp
      000802 15 81            [12] 2611 	dec	sp
      000804 15 81            [12] 2612 	dec	sp
      000806 EE               [12] 2613 	mov	a,r6
      000807 4F               [12] 2614 	orl	a,r7
      000808 60 09            [24] 2615 	jz	00109$
      00080A                       2616 00108$:
                                   2617 ;	../../../core/net/mac/xmac.c:524: is_already_streaming = 1;
      00080A A8 81            [24] 2618 	mov	r0,sp
      00080C 18               [12] 2619 	dec	r0
      00080D 18               [12] 2620 	dec	r0
      00080E 76 01            [12] 2621 	mov	@r0,#0x01
      000810 08               [12] 2622 	inc	r0
      000811 76 00            [12] 2623 	mov	@r0,#0x00
      000813                       2624 00109$:
                                   2625 ;	../../../core/net/mac/xmac.c:526: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
      000813 75 82 0E         [24] 2626 	mov	dpl,#0x0e
      000816 78r00            [12] 2627 	mov	r0,#_packetbuf_attr
      000818 79s00            [12] 2628 	mov	r1,#(_packetbuf_attr >> 8)
      00081A 7As00            [12] 2629 	mov	r2,#(_packetbuf_attr >> 16)
      00081C 12r00r00         [24] 2630 	lcall	__sdcc_banked_call
      00081F AE 82            [24] 2631 	mov	r6,dpl
      000821 AF 83            [24] 2632 	mov	r7,dph
      000823 BE 02 05         [24] 2633 	cjne	r6,#0x02,00316$
      000826 BF 00 02         [24] 2634 	cjne	r7,#0x00,00316$
      000829 80 03            [24] 2635 	sjmp	00317$
      00082B                       2636 00316$:
      00082B 02r09r09         [24] 2637 	ljmp	00118$
      00082E                       2638 00317$:
                                   2639 ;	../../../core/net/mac/xmac.c:528: is_streaming = 1;
      00082E 90r00r43         [24] 2640 	mov	dptr,#_is_streaming
      000831 74 01            [12] 2641 	mov	a,#0x01
      000833 F0               [24] 2642 	movx	@dptr,a
                                   2643 ;	../../../core/net/mac/xmac.c:529: if(rimeaddr_cmp(&is_streaming_to, &rimeaddr_null)) {
      000834 74r00            [12] 2644 	mov	a,#_rimeaddr_null
      000836 C0 E0            [24] 2645 	push	acc
      000838 74s00            [12] 2646 	mov	a,#(_rimeaddr_null >> 8)
      00083A C0 E0            [24] 2647 	push	acc
      00083C 74 80            [12] 2648 	mov	a,#0x80
      00083E C0 E0            [24] 2649 	push	acc
      000840 90r00r44         [24] 2650 	mov	dptr,#_is_streaming_to
      000843 75 F0 00         [24] 2651 	mov	b,#0x00
      000846 78r00            [12] 2652 	mov	r0,#_rimeaddr_cmp
      000848 79s00            [12] 2653 	mov	r1,#(_rimeaddr_cmp >> 8)
      00084A 7As00            [12] 2654 	mov	r2,#(_rimeaddr_cmp >> 16)
      00084C 12r00r00         [24] 2655 	lcall	__sdcc_banked_call
      00084F AE 82            [24] 2656 	mov	r6,dpl
      000851 AF 83            [24] 2657 	mov	r7,dph
      000853 15 81            [12] 2658 	dec	sp
      000855 15 81            [12] 2659 	dec	sp
      000857 15 81            [12] 2660 	dec	sp
      000859 EE               [12] 2661 	mov	a,r6
      00085A 4F               [12] 2662 	orl	a,r7
      00085B 60 2F            [24] 2663 	jz	00115$
                                   2664 ;	../../../core/net/mac/xmac.c:530: rimeaddr_copy(&is_streaming_to, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      00085D 75 82 19         [24] 2665 	mov	dpl,#0x19
      000860 78r00            [12] 2666 	mov	r0,#_packetbuf_addr
      000862 79s00            [12] 2667 	mov	r1,#(_packetbuf_addr >> 8)
      000864 7As00            [12] 2668 	mov	r2,#(_packetbuf_addr >> 16)
      000866 12r00r00         [24] 2669 	lcall	__sdcc_banked_call
      000869 AB 82            [24] 2670 	mov	r3,dpl
      00086B AE 83            [24] 2671 	mov	r6,dph
      00086D AF F0            [24] 2672 	mov	r7,b
      00086F C0 03            [24] 2673 	push	ar3
      000871 C0 06            [24] 2674 	push	ar6
      000873 C0 07            [24] 2675 	push	ar7
      000875 90r00r44         [24] 2676 	mov	dptr,#_is_streaming_to
      000878 75 F0 00         [24] 2677 	mov	b,#0x00
      00087B 78r00            [12] 2678 	mov	r0,#_rimeaddr_copy
      00087D 79s00            [12] 2679 	mov	r1,#(_rimeaddr_copy >> 8)
      00087F 7As00            [12] 2680 	mov	r2,#(_rimeaddr_copy >> 16)
      000881 12r00r00         [24] 2681 	lcall	__sdcc_banked_call
      000884 15 81            [12] 2682 	dec	sp
      000886 15 81            [12] 2683 	dec	sp
      000888 15 81            [12] 2684 	dec	sp
      00088A 80 62            [24] 2685 	sjmp	00116$
      00088C                       2686 00115$:
                                   2687 ;	../../../core/net/mac/xmac.c:531: } else if(!rimeaddr_cmp(&is_streaming_to, packetbuf_addr(PACKETBUF_ADDR_RECEIVER))) {
      00088C 75 82 19         [24] 2688 	mov	dpl,#0x19
      00088F 78r00            [12] 2689 	mov	r0,#_packetbuf_addr
      000891 79s00            [12] 2690 	mov	r1,#(_packetbuf_addr >> 8)
      000893 7As00            [12] 2691 	mov	r2,#(_packetbuf_addr >> 16)
      000895 12r00r00         [24] 2692 	lcall	__sdcc_banked_call
      000898 AB 82            [24] 2693 	mov	r3,dpl
      00089A AE 83            [24] 2694 	mov	r6,dph
      00089C AF F0            [24] 2695 	mov	r7,b
      00089E C0 03            [24] 2696 	push	ar3
      0008A0 C0 06            [24] 2697 	push	ar6
      0008A2 C0 07            [24] 2698 	push	ar7
      0008A4 90r00r44         [24] 2699 	mov	dptr,#_is_streaming_to
      0008A7 75 F0 00         [24] 2700 	mov	b,#0x00
      0008AA 78r00            [12] 2701 	mov	r0,#_rimeaddr_cmp
      0008AC 79s00            [12] 2702 	mov	r1,#(_rimeaddr_cmp >> 8)
      0008AE 7As00            [12] 2703 	mov	r2,#(_rimeaddr_cmp >> 16)
      0008B0 12r00r00         [24] 2704 	lcall	__sdcc_banked_call
      0008B3 AE 82            [24] 2705 	mov	r6,dpl
      0008B5 AF 83            [24] 2706 	mov	r7,dph
      0008B7 15 81            [12] 2707 	dec	sp
      0008B9 15 81            [12] 2708 	dec	sp
      0008BB 15 81            [12] 2709 	dec	sp
      0008BD EE               [12] 2710 	mov	a,r6
      0008BE 4F               [12] 2711 	orl	a,r7
      0008BF 70 2D            [24] 2712 	jnz	00116$
                                   2713 ;	../../../core/net/mac/xmac.c:532: rimeaddr_copy(&is_streaming_to_too, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      0008C1 75 82 19         [24] 2714 	mov	dpl,#0x19
      0008C4 78r00            [12] 2715 	mov	r0,#_packetbuf_addr
      0008C6 79s00            [12] 2716 	mov	r1,#(_packetbuf_addr >> 8)
      0008C8 7As00            [12] 2717 	mov	r2,#(_packetbuf_addr >> 16)
      0008CA 12r00r00         [24] 2718 	lcall	__sdcc_banked_call
      0008CD AB 82            [24] 2719 	mov	r3,dpl
      0008CF AE 83            [24] 2720 	mov	r6,dph
      0008D1 AF F0            [24] 2721 	mov	r7,b
      0008D3 C0 03            [24] 2722 	push	ar3
      0008D5 C0 06            [24] 2723 	push	ar6
      0008D7 C0 07            [24] 2724 	push	ar7
      0008D9 90r00r4C         [24] 2725 	mov	dptr,#_is_streaming_to_too
      0008DC 75 F0 00         [24] 2726 	mov	b,#0x00
      0008DF 78r00            [12] 2727 	mov	r0,#_rimeaddr_copy
      0008E1 79s00            [12] 2728 	mov	r1,#(_rimeaddr_copy >> 8)
      0008E3 7As00            [12] 2729 	mov	r2,#(_rimeaddr_copy >> 16)
      0008E5 12r00r00         [24] 2730 	lcall	__sdcc_banked_call
      0008E8 15 81            [12] 2731 	dec	sp
      0008EA 15 81            [12] 2732 	dec	sp
      0008EC 15 81            [12] 2733 	dec	sp
      0008EE                       2734 00116$:
                                   2735 ;	../../../core/net/mac/xmac.c:534: stream_until = RTIMER_NOW() + DEFAULT_STREAM_TIME;
      0008EE AE E2            [24] 2736 	mov	r6,_T1CNTL
      0008F0 7F 00            [12] 2737 	mov	r7,#0x00
      0008F2 AA E3            [24] 2738 	mov	r2,_T1CNTH
      0008F4 8A 03            [24] 2739 	mov	ar3,r2
      0008F6 E4               [12] 2740 	clr	a
      0008F7 FA               [12] 2741 	mov	r2,a
      0008F8 2E               [12] 2742 	add	a,r6
      0008F9 FE               [12] 2743 	mov	r6,a
      0008FA EB               [12] 2744 	mov	a,r3
      0008FB 3F               [12] 2745 	addc	a,r7
      0008FC FF               [12] 2746 	mov	r7,a
      0008FD 90r00r54         [24] 2747 	mov	dptr,#_stream_until
      000900 74 09            [12] 2748 	mov	a,#0x09
      000902 2E               [12] 2749 	add	a,r6
      000903 F0               [24] 2750 	movx	@dptr,a
      000904 74 3D            [12] 2751 	mov	a,#0x3d
      000906 3F               [12] 2752 	addc	a,r7
      000907 A3               [24] 2753 	inc	dptr
      000908 F0               [24] 2754 	movx	@dptr,a
      000909                       2755 00118$:
                                   2756 ;	../../../core/net/mac/xmac.c:538: off();
      000909 78r3E            [12] 2757 	mov	r0,#_off
      00090B 79s00            [12] 2758 	mov	r1,#(_off >> 8)
      00090D 7As00            [12] 2759 	mov	r2,#(_off >> 16)
      00090F 12r00r00         [24] 2760 	lcall	__sdcc_banked_call
                                   2761 ;	../../../core/net/mac/xmac.c:545: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000912 90r00r10         [24] 2762 	mov	dptr,#_encounter_list
      000915 E0               [24] 2763 	movx	a,@dptr
      000916 FB               [12] 2764 	mov	r3,a
      000917 A3               [24] 2765 	inc	dptr
      000918 E0               [24] 2766 	movx	a,@dptr
      000919 FE               [12] 2767 	mov	r6,a
      00091A A3               [24] 2768 	inc	dptr
      00091B E0               [24] 2769 	movx	a,@dptr
      00091C FF               [12] 2770 	mov	r7,a
      00091D 8B 82            [24] 2771 	mov	dpl,r3
      00091F 8E 83            [24] 2772 	mov	dph,r6
      000921 8F F0            [24] 2773 	mov	b,r7
      000923 78r00            [12] 2774 	mov	r0,#_list_head
      000925 79s00            [12] 2775 	mov	r1,#(_list_head >> 8)
      000927 7As00            [12] 2776 	mov	r2,#(_list_head >> 16)
      000929 12r00r00         [24] 2777 	lcall	__sdcc_banked_call
      00092C AB 82            [24] 2778 	mov	r3,dpl
      00092E AE 83            [24] 2779 	mov	r6,dph
      000930 AF F0            [24] 2780 	mov	r7,b
      000932 E5 81            [12] 2781 	mov	a,sp
      000934 24 F8            [12] 2782 	add	a,#0xf8
      000936 F8               [12] 2783 	mov	r0,a
      000937 A6 03            [24] 2784 	mov	@r0,ar3
      000939 08               [12] 2785 	inc	r0
      00093A A6 06            [24] 2786 	mov	@r0,ar6
      00093C 08               [12] 2787 	inc	r0
      00093D A6 07            [24] 2788 	mov	@r0,ar7
      00093F                       2789 00163$:
      00093F E5 81            [12] 2790 	mov	a,sp
      000941 24 F8            [12] 2791 	add	a,#0xf8
      000943 F8               [12] 2792 	mov	r0,a
      000944 E6               [12] 2793 	mov	a,@r0
      000945 08               [12] 2794 	inc	r0
      000946 46               [12] 2795 	orl	a,@r0
      000947 70 03            [24] 2796 	jnz	00320$
      000949 02r0Ar53         [24] 2797 	ljmp	00126$
      00094C                       2798 00320$:
                                   2799 ;	../../../core/net/mac/xmac.c:546: const rimeaddr_t *neighbor = packetbuf_addr(PACKETBUF_ADDR_RECEIVER);
      00094C 75 82 19         [24] 2800 	mov	dpl,#0x19
      00094F 78r00            [12] 2801 	mov	r0,#_packetbuf_addr
      000951 79s00            [12] 2802 	mov	r1,#(_packetbuf_addr >> 8)
      000953 7As00            [12] 2803 	mov	r2,#(_packetbuf_addr >> 16)
      000955 12r00r00         [24] 2804 	lcall	__sdcc_banked_call
      000958 AF 82            [24] 2805 	mov	r7,dpl
      00095A AE 83            [24] 2806 	mov	r6,dph
      00095C AD F0            [24] 2807 	mov	r5,b
      00095E 8D 03            [24] 2808 	mov	ar3,r5
                                   2809 ;	../../../core/net/mac/xmac.c:548: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      000960 E5 81            [12] 2810 	mov	a,sp
      000962 24 F8            [12] 2811 	add	a,#0xf8
      000964 F8               [12] 2812 	mov	r0,a
      000965 74 03            [12] 2813 	mov	a,#0x03
      000967 26               [12] 2814 	add	a,@r0
      000968 FA               [12] 2815 	mov	r2,a
      000969 E4               [12] 2816 	clr	a
      00096A 08               [12] 2817 	inc	r0
      00096B 36               [12] 2818 	addc	a,@r0
      00096C FC               [12] 2819 	mov	r4,a
      00096D 08               [12] 2820 	inc	r0
      00096E 86 05            [24] 2821 	mov	ar5,@r0
      000970 C0 02            [24] 2822 	push	ar2
      000972 C0 04            [24] 2823 	push	ar4
      000974 C0 05            [24] 2824 	push	ar5
      000976 8F 82            [24] 2825 	mov	dpl,r7
      000978 8E 83            [24] 2826 	mov	dph,r6
      00097A 8B F0            [24] 2827 	mov	b,r3
      00097C 78r00            [12] 2828 	mov	r0,#_rimeaddr_cmp
      00097E 79s00            [12] 2829 	mov	r1,#(_rimeaddr_cmp >> 8)
      000980 7As00            [12] 2830 	mov	r2,#(_rimeaddr_cmp >> 16)
      000982 12r00r00         [24] 2831 	lcall	__sdcc_banked_call
      000985 AC 82            [24] 2832 	mov	r4,dpl
      000987 AD 83            [24] 2833 	mov	r5,dph
      000989 15 81            [12] 2834 	dec	sp
      00098B 15 81            [12] 2835 	dec	sp
      00098D 15 81            [12] 2836 	dec	sp
      00098F EC               [12] 2837 	mov	a,r4
      000990 4D               [12] 2838 	orl	a,r5
      000991 70 03            [24] 2839 	jnz	00321$
      000993 02r0Ar21         [24] 2840 	ljmp	00164$
      000996                       2841 00321$:
                                   2842 ;	../../../core/net/mac/xmac.c:558: now = RTIMER_NOW();
      000996 AA E2            [24] 2843 	mov	r2,_T1CNTL
      000998 7D 00            [12] 2844 	mov	r5,#0x00
      00099A AC E3            [24] 2845 	mov	r4,_T1CNTH
      00099C 8C 07            [24] 2846 	mov	ar7,r4
      00099E E4               [12] 2847 	clr	a
      00099F 2A               [12] 2848 	add	a,r2
      0009A0 FA               [12] 2849 	mov	r2,a
      0009A1 EF               [12] 2850 	mov	a,r7
      0009A2 3D               [12] 2851 	addc	a,r5
      0009A3 FD               [12] 2852 	mov	r5,a
      0009A4 8A 04            [24] 2853 	mov	ar4,r2
      0009A6 8D 03            [24] 2854 	mov	ar3,r5
                                   2855 ;	../../../core/net/mac/xmac.c:559: wait = ((rtimer_clock_t)(e->time - now)) % (DEFAULT_PERIOD);
      0009A8 E5 81            [12] 2856 	mov	a,sp
      0009AA 24 F8            [12] 2857 	add	a,#0xf8
      0009AC F8               [12] 2858 	mov	r0,a
      0009AD 74 0B            [12] 2859 	mov	a,#0x0b
      0009AF 26               [12] 2860 	add	a,@r0
      0009B0 FD               [12] 2861 	mov	r5,a
      0009B1 E4               [12] 2862 	clr	a
      0009B2 08               [12] 2863 	inc	r0
      0009B3 36               [12] 2864 	addc	a,@r0
      0009B4 FE               [12] 2865 	mov	r6,a
      0009B5 08               [12] 2866 	inc	r0
      0009B6 86 07            [24] 2867 	mov	ar7,@r0
      0009B8 8D 82            [24] 2868 	mov	dpl,r5
      0009BA 8E 83            [24] 2869 	mov	dph,r6
      0009BC 8F F0            [24] 2870 	mov	b,r7
      0009BE 12r00r00         [24] 2871 	lcall	__gptrget
      0009C1 FD               [12] 2872 	mov	r5,a
      0009C2 A3               [24] 2873 	inc	dptr
      0009C3 12r00r00         [24] 2874 	lcall	__gptrget
      0009C6 FE               [12] 2875 	mov	r6,a
      0009C7 ED               [12] 2876 	mov	a,r5
      0009C8 C3               [12] 2877 	clr	c
      0009C9 9C               [12] 2878 	subb	a,r4
      0009CA FD               [12] 2879 	mov	r5,a
      0009CB EE               [12] 2880 	mov	a,r6
      0009CC 9B               [12] 2881 	subb	a,r3
      0009CD FE               [12] 2882 	mov	r6,a
      0009CE C0 04            [24] 2883 	push	ar4
      0009D0 C0 03            [24] 2884 	push	ar3
      0009D2 74 A1            [12] 2885 	mov	a,#0xa1
      0009D4 C0 E0            [24] 2886 	push	acc
      0009D6 74 07            [12] 2887 	mov	a,#0x07
      0009D8 C0 E0            [24] 2888 	push	acc
      0009DA 8D 82            [24] 2889 	mov	dpl,r5
      0009DC 8E 83            [24] 2890 	mov	dph,r6
      0009DE 12r00r00         [24] 2891 	lcall	__moduint
      0009E1 AE 82            [24] 2892 	mov	r6,dpl
      0009E3 AF 83            [24] 2893 	mov	r7,dph
      0009E5 15 81            [12] 2894 	dec	sp
      0009E7 15 81            [12] 2895 	dec	sp
      0009E9 D0 03            [24] 2896 	pop	ar3
      0009EB D0 04            [24] 2897 	pop	ar4
                                   2898 ;	../../../core/net/mac/xmac.c:560: if(wait < 2 * DEFAULT_ON_TIME) {
      0009ED C3               [12] 2899 	clr	c
      0009EE EE               [12] 2900 	mov	a,r6
      0009EF 94 C2            [12] 2901 	subb	a,#0xc2
      0009F1 EF               [12] 2902 	mov	a,r7
      0009F2 94 00            [12] 2903 	subb	a,#0x00
      0009F4 50 04            [24] 2904 	jnc	00120$
                                   2905 ;	../../../core/net/mac/xmac.c:561: wait = DEFAULT_PERIOD;
      0009F6 7E A1            [12] 2906 	mov	r6,#0xa1
      0009F8 7F 07            [12] 2907 	mov	r7,#0x07
      0009FA                       2908 00120$:
                                   2909 ;	../../../core/net/mac/xmac.c:563: expected = now + wait - 2 * DEFAULT_ON_TIME;
      0009FA EE               [12] 2910 	mov	a,r6
      0009FB 2C               [12] 2911 	add	a,r4
      0009FC FE               [12] 2912 	mov	r6,a
      0009FD EF               [12] 2913 	mov	a,r7
      0009FE 3B               [12] 2914 	addc	a,r3
      0009FF FF               [12] 2915 	mov	r7,a
      000A00 EE               [12] 2916 	mov	a,r6
      000A01 24 3E            [12] 2917 	add	a,#0x3e
      000A03 FE               [12] 2918 	mov	r6,a
      000A04 EF               [12] 2919 	mov	a,r7
      000A05 34 FF            [12] 2920 	addc	a,#0xff
      000A07 FF               [12] 2921 	mov	r7,a
                                   2922 ;	../../../core/net/mac/xmac.c:576: while(RTIMER_CLOCK_LT(RTIMER_NOW(), expected));
      000A08                       2923 00121$:
      000A08 AA E2            [24] 2924 	mov	r2,_T1CNTL
      000A0A 7B 00            [12] 2925 	mov	r3,#0x00
      000A0C AC E3            [24] 2926 	mov	r4,_T1CNTH
      000A0E 8C 05            [24] 2927 	mov	ar5,r4
      000A10 E4               [12] 2928 	clr	a
      000A11 FC               [12] 2929 	mov	r4,a
      000A12 2A               [12] 2930 	add	a,r2
      000A13 FA               [12] 2931 	mov	r2,a
      000A14 ED               [12] 2932 	mov	a,r5
      000A15 3B               [12] 2933 	addc	a,r3
      000A16 FB               [12] 2934 	mov	r3,a
      000A17 EA               [12] 2935 	mov	a,r2
      000A18 C3               [12] 2936 	clr	c
      000A19 9E               [12] 2937 	subb	a,r6
      000A1A FA               [12] 2938 	mov	r2,a
      000A1B EB               [12] 2939 	mov	a,r3
      000A1C 9F               [12] 2940 	subb	a,r7
      000A1D FB               [12] 2941 	mov	r3,a
      000A1E 20 E7 E7         [24] 2942 	jb	acc.7,00121$
      000A21                       2943 00164$:
                                   2944 ;	../../../core/net/mac/xmac.c:545: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000A21 E5 81            [12] 2945 	mov	a,sp
      000A23 24 F8            [12] 2946 	add	a,#0xf8
      000A25 F8               [12] 2947 	mov	r0,a
      000A26 86 03            [24] 2948 	mov	ar3,@r0
      000A28 08               [12] 2949 	inc	r0
      000A29 86 06            [24] 2950 	mov	ar6,@r0
      000A2B 08               [12] 2951 	inc	r0
      000A2C 86 07            [24] 2952 	mov	ar7,@r0
      000A2E 8B 82            [24] 2953 	mov	dpl,r3
      000A30 8E 83            [24] 2954 	mov	dph,r6
      000A32 8F F0            [24] 2955 	mov	b,r7
      000A34 78r00            [12] 2956 	mov	r0,#_list_item_next
      000A36 79s00            [12] 2957 	mov	r1,#(_list_item_next >> 8)
      000A38 7As00            [12] 2958 	mov	r2,#(_list_item_next >> 16)
      000A3A 12r00r00         [24] 2959 	lcall	__sdcc_banked_call
      000A3D AB 82            [24] 2960 	mov	r3,dpl
      000A3F AE 83            [24] 2961 	mov	r6,dph
      000A41 AF F0            [24] 2962 	mov	r7,b
      000A43 E5 81            [12] 2963 	mov	a,sp
      000A45 24 F8            [12] 2964 	add	a,#0xf8
      000A47 F8               [12] 2965 	mov	r0,a
      000A48 A6 03            [24] 2966 	mov	@r0,ar3
      000A4A 08               [12] 2967 	inc	r0
      000A4B A6 06            [24] 2968 	mov	@r0,ar6
      000A4D 08               [12] 2969 	inc	r0
      000A4E A6 07            [24] 2970 	mov	@r0,ar7
      000A50 02r09r3F         [24] 2971 	ljmp	00163$
      000A53                       2972 00126$:
                                   2973 ;	../../../core/net/mac/xmac.c:584: we_are_sending = 1;
      000A53 90r00r0B         [24] 2974 	mov	dptr,#_we_are_sending
      000A56 74 01            [12] 2975 	mov	a,#0x01
      000A58 F0               [24] 2976 	movx	@dptr,a
                                   2977 ;	../../../core/net/mac/xmac.c:586: t0 = RTIMER_NOW();
      000A59 AE E2            [24] 2978 	mov	r6,_T1CNTL
      000A5B 7F 00            [12] 2979 	mov	r7,#0x00
      000A5D AA E3            [24] 2980 	mov	r2,_T1CNTH
      000A5F 8A 03            [24] 2981 	mov	ar3,r2
      000A61 E4               [12] 2982 	clr	a
      000A62 FA               [12] 2983 	mov	r2,a
      000A63 2E               [12] 2984 	add	a,r6
      000A64 FE               [12] 2985 	mov	r6,a
      000A65 EB               [12] 2986 	mov	a,r3
      000A66 3F               [12] 2987 	addc	a,r7
      000A67 FF               [12] 2988 	mov	r7,a
                                   2989 ;	../../../core/net/mac/xmac.c:595: collisions = 0;
      000A68 A8 81            [24] 2990 	mov	r0,sp
      000A6A 76 00            [12] 2991 	mov	@r0,#0x00
                                   2992 ;	../../../core/net/mac/xmac.c:596: if(!is_already_streaming) {
      000A6C A8 81            [24] 2993 	mov	r0,sp
      000A6E 18               [12] 2994 	dec	r0
      000A6F 18               [12] 2995 	dec	r0
      000A70 E6               [12] 2996 	mov	a,@r0
      000A71 08               [12] 2997 	inc	r0
      000A72 46               [12] 2998 	orl	a,@r0
      000A73 60 03            [24] 2999 	jz	00324$
      000A75 02r0CrBF         [24] 3000 	ljmp	00142$
      000A78                       3001 00324$:
                                   3002 ;	../../../core/net/mac/xmac.c:597: watchdog_stop();
      000A78 C0 06            [24] 3003 	push	ar6
      000A7A C0 07            [24] 3004 	push	ar7
      000A7C C0 07            [24] 3005 	push	ar7
      000A7E C0 06            [24] 3006 	push	ar6
      000A80 78r00            [12] 3007 	mov	r0,#_watchdog_periodic
      000A82 79s00            [12] 3008 	mov	r1,#(_watchdog_periodic >> 8)
      000A84 7As00            [12] 3009 	mov	r2,#(_watchdog_periodic >> 16)
      000A86 12r00r00         [24] 3010 	lcall	__sdcc_banked_call
      000A89 D0 06            [24] 3011 	pop	ar6
      000A8B D0 07            [24] 3012 	pop	ar7
                                   3013 ;	../../../core/net/mac/xmac.c:598: got_strobe_ack = 0;
      000A8D E5 81            [12] 3014 	mov	a,sp
      000A8F 24 BE            [12] 3015 	add	a,#0xbe
      000A91 F8               [12] 3016 	mov	r0,a
      000A92 76 00            [12] 3017 	mov	@r0,#0x00
                                   3018 ;	../../../core/net/mac/xmac.c:599: t = RTIMER_NOW();
      000A94 AA E2            [24] 3019 	mov	r2,_T1CNTL
      000A96 7F 00            [12] 3020 	mov	r7,#0x00
      000A98 AD E3            [24] 3021 	mov	r5,_T1CNTH
      000A9A 8D 06            [24] 3022 	mov	ar6,r5
      000A9C E4               [12] 3023 	clr	a
      000A9D FD               [12] 3024 	mov	r5,a
      000A9E 2A               [12] 3025 	add	a,r2
      000A9F FA               [12] 3026 	mov	r2,a
      000AA0 EE               [12] 3027 	mov	a,r6
      000AA1 3F               [12] 3028 	addc	a,r7
      000AA2 FF               [12] 3029 	mov	r7,a
      000AA3 E5 81            [12] 3030 	mov	a,sp
      000AA5 24 B8            [12] 3031 	add	a,#0xb8
      000AA7 F8               [12] 3032 	mov	r0,a
      000AA8 A6 02            [24] 3033 	mov	@r0,ar2
      000AAA 08               [12] 3034 	inc	r0
      000AAB A6 07            [24] 3035 	mov	@r0,ar7
                                   3036 ;	../../../core/net/mac/xmac.c:600: for(strobes = 0, collisions = 0;
      000AAD A8 81            [24] 3037 	mov	r0,sp
      000AAF 18               [12] 3038 	dec	r0
      000AB0 18               [12] 3039 	dec	r0
      000AB1 76 00            [12] 3040 	mov	@r0,#0x00
      000AB3 E5 81            [12] 3041 	mov	a,sp
      000AB5 24 BB            [12] 3042 	add	a,#0xbb
      000AB7 F8               [12] 3043 	mov	r0,a
      000AB8 E5 81            [12] 3044 	mov	a,sp
      000ABA 24 C0            [12] 3045 	add	a,#0xc0
      000ABC F6               [12] 3046 	mov	@r0,a
                                   3047 ;	../../../core/net/mac/xmac.c:757: return MAC_TX_COLLISION;
      000ABD D0 07            [24] 3048 	pop	ar7
      000ABF D0 06            [24] 3049 	pop	ar6
                                   3050 ;	../../../core/net/mac/xmac.c:600: for(strobes = 0, collisions = 0;
      000AC1                       3051 00168$:
                                   3052 ;	../../../core/net/mac/xmac.c:601: got_strobe_ack == 0 && collisions == 0 &&
      000AC1 E5 81            [12] 3053 	mov	a,sp
      000AC3 24 C0            [12] 3054 	add	a,#0xc0
      000AC5 F8               [12] 3055 	mov	r0,a
      000AC6 E6               [12] 3056 	mov	a,@r0
      000AC7 60 03            [24] 3057 	jz	00325$
      000AC9 02r0CrBF         [24] 3058 	ljmp	00142$
      000ACC                       3059 00325$:
      000ACC A8 81            [24] 3060 	mov	r0,sp
      000ACE E6               [12] 3061 	mov	a,@r0
      000ACF 60 03            [24] 3062 	jz	00326$
      000AD1 02r0CrBF         [24] 3063 	ljmp	00142$
      000AD4                       3064 00326$:
                                   3065 ;	../../../core/net/mac/xmac.c:602: RTIMER_CLOCK_LT(RTIMER_NOW(), t0 + xmac_config.strobe_time);
      000AD4 AC E2            [24] 3066 	mov	r4,_T1CNTL
      000AD6 7D 00            [12] 3067 	mov	r5,#0x00
      000AD8 AA E3            [24] 3068 	mov	r2,_T1CNTH
      000ADA 8A 03            [24] 3069 	mov	ar3,r2
      000ADC E4               [12] 3070 	clr	a
      000ADD 2C               [12] 3071 	add	a,r4
      000ADE FC               [12] 3072 	mov	r4,a
      000ADF EB               [12] 3073 	mov	a,r3
      000AE0 3D               [12] 3074 	addc	a,r5
      000AE1 FD               [12] 3075 	mov	r5,a
      000AE2 90r00r04         [24] 3076 	mov	dptr,#(_xmac_config + 0x0004)
      000AE5 E0               [24] 3077 	movx	a,@dptr
      000AE6 FA               [12] 3078 	mov	r2,a
      000AE7 A3               [24] 3079 	inc	dptr
      000AE8 E0               [24] 3080 	movx	a,@dptr
      000AE9 FB               [12] 3081 	mov	r3,a
      000AEA EA               [12] 3082 	mov	a,r2
      000AEB 2E               [12] 3083 	add	a,r6
      000AEC FA               [12] 3084 	mov	r2,a
      000AED EB               [12] 3085 	mov	a,r3
      000AEE 3F               [12] 3086 	addc	a,r7
      000AEF FB               [12] 3087 	mov	r3,a
      000AF0 EC               [12] 3088 	mov	a,r4
      000AF1 C3               [12] 3089 	clr	c
      000AF2 9A               [12] 3090 	subb	a,r2
      000AF3 FA               [12] 3091 	mov	r2,a
      000AF4 ED               [12] 3092 	mov	a,r5
      000AF5 9B               [12] 3093 	subb	a,r3
      000AF6 FB               [12] 3094 	mov	r3,a
      000AF7 20 E7 03         [24] 3095 	jb	acc.7,00327$
      000AFA 02r0CrBF         [24] 3096 	ljmp	00142$
      000AFD                       3097 00327$:
                                   3098 ;	../../../core/net/mac/xmac.c:605: while(got_strobe_ack == 0 &&
      000AFD 90r00r06         [24] 3099 	mov	dptr,#(_xmac_config + 0x0006)
      000B00 E0               [24] 3100 	movx	a,@dptr
      000B01 FC               [12] 3101 	mov	r4,a
      000B02 A3               [24] 3102 	inc	dptr
      000B03 E0               [24] 3103 	movx	a,@dptr
      000B04 FD               [12] 3104 	mov	r5,a
      000B05 E5 81            [12] 3105 	mov	a,sp
      000B07 24 BA            [12] 3106 	add	a,#0xba
      000B09 F8               [12] 3107 	mov	r0,a
      000B0A EC               [12] 3108 	mov	a,r4
      000B0B 26               [12] 3109 	add	a,@r0
      000B0C FC               [12] 3110 	mov	r4,a
      000B0D ED               [12] 3111 	mov	a,r5
      000B0E 08               [12] 3112 	inc	r0
      000B0F 36               [12] 3113 	addc	a,@r0
      000B10 FD               [12] 3114 	mov	r5,a
      000B11                       3115 00128$:
      000B11 E5 81            [12] 3116 	mov	a,sp
      000B13 24 C0            [12] 3117 	add	a,#0xc0
      000B15 F8               [12] 3118 	mov	r0,a
      000B16 E6               [12] 3119 	mov	a,@r0
      000B17 70 1E            [24] 3120 	jnz	00130$
                                   3121 ;	../../../core/net/mac/xmac.c:606: RTIMER_CLOCK_LT(RTIMER_NOW(), t + xmac_config.strobe_wait_time)) {
      000B19 C0 06            [24] 3122 	push	ar6
      000B1B C0 07            [24] 3123 	push	ar7
      000B1D AA E2            [24] 3124 	mov	r2,_T1CNTL
      000B1F 7F 00            [12] 3125 	mov	r7,#0x00
      000B21 AB E3            [24] 3126 	mov	r3,_T1CNTH
      000B23 8B 06            [24] 3127 	mov	ar6,r3
      000B25 E4               [12] 3128 	clr	a
      000B26 2A               [12] 3129 	add	a,r2
      000B27 FA               [12] 3130 	mov	r2,a
      000B28 EE               [12] 3131 	mov	a,r6
      000B29 3F               [12] 3132 	addc	a,r7
      000B2A FF               [12] 3133 	mov	r7,a
      000B2B EA               [12] 3134 	mov	a,r2
      000B2C C3               [12] 3135 	clr	c
      000B2D 9C               [12] 3136 	subb	a,r4
      000B2E EF               [12] 3137 	mov	a,r7
      000B2F 9D               [12] 3138 	subb	a,r5
      000B30 D0 07            [24] 3139 	pop	ar7
      000B32 D0 06            [24] 3140 	pop	ar6
      000B34 20 E7 DA         [24] 3141 	jb	acc.7,00128$
      000B37                       3142 00130$:
                                   3143 ;	../../../core/net/mac/xmac.c:638: t = RTIMER_NOW();
      000B37 AC E2            [24] 3144 	mov	r4,_T1CNTL
      000B39 7D 00            [12] 3145 	mov	r5,#0x00
      000B3B AA E3            [24] 3146 	mov	r2,_T1CNTH
      000B3D 8A 03            [24] 3147 	mov	ar3,r2
      000B3F E4               [12] 3148 	clr	a
      000B40 FA               [12] 3149 	mov	r2,a
      000B41 2C               [12] 3150 	add	a,r4
      000B42 FC               [12] 3151 	mov	r4,a
      000B43 EB               [12] 3152 	mov	a,r3
      000B44 3D               [12] 3153 	addc	a,r5
      000B45 FD               [12] 3154 	mov	r5,a
      000B46 E5 81            [12] 3155 	mov	a,sp
      000B48 24 BA            [12] 3156 	add	a,#0xba
      000B4A F8               [12] 3157 	mov	r0,a
      000B4B A6 04            [24] 3158 	mov	@r0,ar4
      000B4D 08               [12] 3159 	inc	r0
      000B4E A6 05            [24] 3160 	mov	@r0,ar5
                                   3161 ;	../../../core/net/mac/xmac.c:640: if(got_strobe_ack == 0 && collisions == 0) {
      000B50 E5 81            [12] 3162 	mov	a,sp
      000B52 24 C0            [12] 3163 	add	a,#0xc0
      000B54 F8               [12] 3164 	mov	r0,a
      000B55 E6               [12] 3165 	mov	a,@r0
      000B56 60 03            [24] 3166 	jz	00330$
      000B58 02r0ArC1         [24] 3167 	ljmp	00168$
      000B5B                       3168 00330$:
      000B5B A8 81            [24] 3169 	mov	r0,sp
      000B5D E6               [12] 3170 	mov	a,@r0
      000B5E 60 03            [24] 3171 	jz	00331$
      000B60 02r0ArC1         [24] 3172 	ljmp	00168$
      000B63                       3173 00331$:
                                   3174 ;	../../../core/net/mac/xmac.c:642: if(is_broadcast) {
      000B63 E5 81            [12] 3175 	mov	a,sp
      000B65 24 F6            [12] 3176 	add	a,#0xf6
      000B67 F8               [12] 3177 	mov	r0,a
      000B68 E6               [12] 3178 	mov	a,@r0
      000B69 08               [12] 3179 	inc	r0
      000B6A 46               [12] 3180 	orl	a,@r0
      000B6B 70 03            [24] 3181 	jnz	00332$
      000B6D 02r0Cr24         [24] 3182 	ljmp	00135$
      000B70                       3183 00332$:
                                   3184 ;	../../../core/net/mac/xmac.c:647: queuebuf_to_packetbuf(packet);
      000B70 C0 06            [24] 3185 	push	ar6
      000B72 C0 07            [24] 3186 	push	ar7
      000B74 E5 81            [12] 3187 	mov	a,sp
      000B76 24 F9            [12] 3188 	add	a,#0xf9
      000B78 F8               [12] 3189 	mov	r0,a
      000B79 86 82            [24] 3190 	mov	dpl,@r0
      000B7B 08               [12] 3191 	inc	r0
      000B7C 86 83            [24] 3192 	mov	dph,@r0
      000B7E 08               [12] 3193 	inc	r0
      000B7F 86 F0            [24] 3194 	mov	b,@r0
      000B81 C0 07            [24] 3195 	push	ar7
      000B83 C0 06            [24] 3196 	push	ar6
      000B85 78r00            [12] 3197 	mov	r0,#_queuebuf_to_packetbuf
      000B87 79s00            [12] 3198 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000B89 7As00            [12] 3199 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000B8B 12r00r00         [24] 3200 	lcall	__sdcc_banked_call
                                   3201 ;	../../../core/net/mac/xmac.c:648: ret = NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      000B8E 90r00r09         [24] 3202 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000B91 E4               [12] 3203 	clr	a
      000B92 93               [24] 3204 	movc	a,@a+dptr
      000B93 FB               [12] 3205 	mov	r3,a
      000B94 A3               [24] 3206 	inc	dptr
      000B95 E4               [12] 3207 	clr	a
      000B96 93               [24] 3208 	movc	a,@a+dptr
      000B97 FC               [12] 3209 	mov	r4,a
      000B98 A3               [24] 3210 	inc	dptr
      000B99 E4               [12] 3211 	clr	a
      000B9A 93               [24] 3212 	movc	a,@a+dptr
      000B9B FD               [12] 3213 	mov	r5,a
      000B9C C0 05            [24] 3214 	push	ar5
      000B9E C0 04            [24] 3215 	push	ar4
      000BA0 C0 03            [24] 3216 	push	ar3
      000BA2 78r00            [12] 3217 	mov	r0,#_packetbuf_totlen
      000BA4 79s00            [12] 3218 	mov	r1,#(_packetbuf_totlen >> 8)
      000BA6 7As00            [12] 3219 	mov	r2,#(_packetbuf_totlen >> 16)
      000BA8 12r00r00         [24] 3220 	lcall	__sdcc_banked_call
      000BAB C8               [12] 3221 	xch	a,r0
      000BAC E5 81            [12] 3222 	mov	a,sp
      000BAE 24 B7            [12] 3223 	add	a,#0xb7
      000BB0 C8               [12] 3224 	xch	a,r0
      000BB1 A6 82            [24] 3225 	mov	@r0,dpl
      000BB3 08               [12] 3226 	inc	r0
      000BB4 A6 83            [24] 3227 	mov	@r0,dph
      000BB6 D0 03            [24] 3228 	pop	ar3
      000BB8 D0 04            [24] 3229 	pop	ar4
      000BBA D0 05            [24] 3230 	pop	ar5
      000BBC D0 06            [24] 3231 	pop	ar6
      000BBE D0 07            [24] 3232 	pop	ar7
      000BC0 C0 05            [24] 3233 	push	ar5
      000BC2 C0 04            [24] 3234 	push	ar4
      000BC4 C0 03            [24] 3235 	push	ar3
      000BC6 78r00            [12] 3236 	mov	r0,#_packetbuf_hdrptr
      000BC8 79s00            [12] 3237 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000BCA 7As00            [12] 3238 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000BCC 12r00r00         [24] 3239 	lcall	__sdcc_banked_call
      000BCF AA 82            [24] 3240 	mov	r2,dpl
      000BD1 AE 83            [24] 3241 	mov	r6,dph
      000BD3 AF F0            [24] 3242 	mov	r7,b
      000BD5 D0 03            [24] 3243 	pop	ar3
      000BD7 D0 04            [24] 3244 	pop	ar4
      000BD9 D0 05            [24] 3245 	pop	ar5
      000BDB C0 07            [24] 3246 	push	ar7
      000BDD C0 06            [24] 3247 	push	ar6
      000BDF C0 05            [24] 3248 	push	ar5
      000BE1 C0 04            [24] 3249 	push	ar4
      000BE3 C0 03            [24] 3250 	push	ar3
      000BE5 E5 81            [12] 3251 	mov	a,sp
      000BE7 24 B7            [12] 3252 	add	a,#0xb7
      000BE9 F8               [12] 3253 	mov	r0,a
      000BEA E6               [12] 3254 	mov	a,@r0
      000BEB C0 E0            [24] 3255 	push	acc
      000BED 08               [12] 3256 	inc	r0
      000BEE E6               [12] 3257 	mov	a,@r0
      000BEF C0 E0            [24] 3258 	push	acc
      000BF1 C0 03            [24] 3259 	push	ar3
      000BF3 C0 04            [24] 3260 	push	ar4
      000BF5 C0 05            [24] 3261 	push	ar5
      000BF7 8A 82            [24] 3262 	mov	dpl,r2
      000BF9 8E 83            [24] 3263 	mov	dph,r6
      000BFB 8F F0            [24] 3264 	mov	b,r7
      000BFD D0 02            [24] 3265 	pop	ar2
      000BFF D0 01            [24] 3266 	pop	ar1
      000C01 D0 00            [24] 3267 	pop	ar0
      000C03 12r00r00         [24] 3268 	lcall	__sdcc_banked_call
      000C06 15 81            [12] 3269 	dec	sp
      000C08 15 81            [12] 3270 	dec	sp
      000C0A D0 03            [24] 3271 	pop	ar3
      000C0C D0 04            [24] 3272 	pop	ar4
      000C0E D0 05            [24] 3273 	pop	ar5
                                   3274 ;	../../../core/net/mac/xmac.c:650: off();
      000C10 78r3E            [12] 3275 	mov	r0,#_off
      000C12 79s00            [12] 3276 	mov	r1,#(_off >> 8)
      000C14 7As00            [12] 3277 	mov	r2,#(_off >> 16)
      000C16 12r00r00         [24] 3278 	lcall	__sdcc_banked_call
      000C19 D0 06            [24] 3279 	pop	ar6
      000C1B D0 07            [24] 3280 	pop	ar7
      000C1D D0 07            [24] 3281 	pop	ar7
      000C1F D0 06            [24] 3282 	pop	ar6
      000C21 02r0ArC1         [24] 3283 	ljmp	00168$
      000C24                       3284 00135$:
                                   3285 ;	../../../core/net/mac/xmac.c:655: on();
      000C24 C0 06            [24] 3286 	push	ar6
      000C26 C0 07            [24] 3287 	push	ar7
      000C28 C0 07            [24] 3288 	push	ar7
      000C2A C0 06            [24] 3289 	push	ar6
      000C2C 78r00            [12] 3290 	mov	r0,#_on
      000C2E 79s00            [12] 3291 	mov	r1,#(_on >> 8)
      000C30 7As00            [12] 3292 	mov	r2,#(_on >> 16)
      000C32 12r00r00         [24] 3293 	lcall	__sdcc_banked_call
      000C35 D0 06            [24] 3294 	pop	ar6
      000C37 D0 07            [24] 3295 	pop	ar7
                                   3296 ;	../../../core/net/mac/xmac.c:656: ret = NETSTACK_RADIO.send(strobe, strobe_len);
      000C39 90r00r09         [24] 3297 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000C3C E4               [12] 3298 	clr	a
      000C3D 93               [24] 3299 	movc	a,@a+dptr
      000C3E FB               [12] 3300 	mov	r3,a
      000C3F A3               [24] 3301 	inc	dptr
      000C40 E4               [12] 3302 	clr	a
      000C41 93               [24] 3303 	movc	a,@a+dptr
      000C42 FC               [12] 3304 	mov	r4,a
      000C43 A3               [24] 3305 	inc	dptr
      000C44 E4               [12] 3306 	clr	a
      000C45 93               [24] 3307 	movc	a,@a+dptr
      000C46 FD               [12] 3308 	mov	r5,a
      000C47 E5 81            [12] 3309 	mov	a,sp
      000C49 24 BB            [12] 3310 	add	a,#0xbb
      000C4B F8               [12] 3311 	mov	r0,a
      000C4C 86 02            [24] 3312 	mov	ar2,@r0
      000C4E 7E 00            [12] 3313 	mov	r6,#0x00
      000C50 7F 40            [12] 3314 	mov	r7,#0x40
      000C52 C0 07            [24] 3315 	push	ar7
      000C54 C0 06            [24] 3316 	push	ar6
      000C56 C0 05            [24] 3317 	push	ar5
      000C58 C0 04            [24] 3318 	push	ar4
      000C5A C0 03            [24] 3319 	push	ar3
      000C5C E5 81            [12] 3320 	mov	a,sp
      000C5E 24 ED            [12] 3321 	add	a,#0xed
      000C60 F8               [12] 3322 	mov	r0,a
      000C61 E6               [12] 3323 	mov	a,@r0
      000C62 C0 E0            [24] 3324 	push	acc
      000C64 08               [12] 3325 	inc	r0
      000C65 E6               [12] 3326 	mov	a,@r0
      000C66 C0 E0            [24] 3327 	push	acc
      000C68 C0 03            [24] 3328 	push	ar3
      000C6A C0 04            [24] 3329 	push	ar4
      000C6C C0 05            [24] 3330 	push	ar5
      000C6E 8A 82            [24] 3331 	mov	dpl,r2
      000C70 8E 83            [24] 3332 	mov	dph,r6
      000C72 8F F0            [24] 3333 	mov	b,r7
      000C74 D0 02            [24] 3334 	pop	ar2
      000C76 D0 01            [24] 3335 	pop	ar1
      000C78 D0 00            [24] 3336 	pop	ar0
      000C7A 12r00r00         [24] 3337 	lcall	__sdcc_banked_call
      000C7D 15 81            [12] 3338 	dec	sp
      000C7F 15 81            [12] 3339 	dec	sp
      000C81 D0 03            [24] 3340 	pop	ar3
      000C83 D0 04            [24] 3341 	pop	ar4
      000C85 D0 05            [24] 3342 	pop	ar5
                                   3343 ;	../../../core/net/mac/xmac.c:672: if(detect_ack()) {
      000C87 78r6F            [12] 3344 	mov	r0,#_detect_ack
      000C89 79s04            [12] 3345 	mov	r1,#(_detect_ack >> 8)
      000C8B 7As00            [12] 3346 	mov	r2,#(_detect_ack >> 16)
      000C8D 12r00r00         [24] 3347 	lcall	__sdcc_banked_call
      000C90 E5 82            [12] 3348 	mov	a,dpl
      000C92 85 83 F0         [24] 3349 	mov	b,dph
      000C95 D0 06            [24] 3350 	pop	ar6
      000C97 D0 07            [24] 3351 	pop	ar7
      000C99 D0 07            [24] 3352 	pop	ar7
      000C9B D0 06            [24] 3353 	pop	ar6
      000C9D 45 F0            [12] 3354 	orl	a,b
      000C9F 60 0A            [24] 3355 	jz	00132$
                                   3356 ;	../../../core/net/mac/xmac.c:673: got_strobe_ack = 1;
      000CA1 E5 81            [12] 3357 	mov	a,sp
      000CA3 24 C0            [12] 3358 	add	a,#0xc0
      000CA5 F8               [12] 3359 	mov	r0,a
      000CA6 76 01            [12] 3360 	mov	@r0,#0x01
      000CA8 02r0ArC1         [24] 3361 	ljmp	00168$
      000CAB                       3362 00132$:
                                   3363 ;	../../../core/net/mac/xmac.c:675: off();
      000CAB C0 07            [24] 3364 	push	ar7
      000CAD C0 06            [24] 3365 	push	ar6
      000CAF 78r3E            [12] 3366 	mov	r0,#_off
      000CB1 79s00            [12] 3367 	mov	r1,#(_off >> 8)
      000CB3 7As00            [12] 3368 	mov	r2,#(_off >> 16)
      000CB5 12r00r00         [24] 3369 	lcall	__sdcc_banked_call
      000CB8 D0 06            [24] 3370 	pop	ar6
      000CBA D0 07            [24] 3371 	pop	ar7
                                   3372 ;	../../../core/net/mac/xmac.c:603: strobes++) {
      000CBC 02r0ArC1         [24] 3373 	ljmp	00168$
      000CBF                       3374 00142$:
                                   3375 ;	../../../core/net/mac/xmac.c:700: queuebuf_to_packetbuf(packet);
      000CBF E5 81            [12] 3376 	mov	a,sp
      000CC1 24 FB            [12] 3377 	add	a,#0xfb
      000CC3 F8               [12] 3378 	mov	r0,a
      000CC4 86 82            [24] 3379 	mov	dpl,@r0
      000CC6 08               [12] 3380 	inc	r0
      000CC7 86 83            [24] 3381 	mov	dph,@r0
      000CC9 08               [12] 3382 	inc	r0
      000CCA 86 F0            [24] 3383 	mov	b,@r0
      000CCC 78r00            [12] 3384 	mov	r0,#_queuebuf_to_packetbuf
      000CCE 79s00            [12] 3385 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000CD0 7As00            [12] 3386 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000CD2 12r00r00         [24] 3387 	lcall	__sdcc_banked_call
                                   3388 ;	../../../core/net/mac/xmac.c:701: queuebuf_free(packet);
      000CD5 E5 81            [12] 3389 	mov	a,sp
      000CD7 24 FB            [12] 3390 	add	a,#0xfb
      000CD9 F8               [12] 3391 	mov	r0,a
      000CDA 86 82            [24] 3392 	mov	dpl,@r0
      000CDC 08               [12] 3393 	inc	r0
      000CDD 86 83            [24] 3394 	mov	dph,@r0
      000CDF 08               [12] 3395 	inc	r0
      000CE0 86 F0            [24] 3396 	mov	b,@r0
      000CE2 78r00            [12] 3397 	mov	r0,#_queuebuf_free
      000CE4 79s00            [12] 3398 	mov	r1,#(_queuebuf_free >> 8)
      000CE6 7As00            [12] 3399 	mov	r2,#(_queuebuf_free >> 16)
      000CE8 12r00r00         [24] 3400 	lcall	__sdcc_banked_call
                                   3401 ;	../../../core/net/mac/xmac.c:704: if((is_broadcast || got_strobe_ack || is_streaming) && collisions == 0) {
      000CEB E5 81            [12] 3402 	mov	a,sp
      000CED 24 F6            [12] 3403 	add	a,#0xf6
      000CEF F8               [12] 3404 	mov	r0,a
      000CF0 E6               [12] 3405 	mov	a,@r0
      000CF1 08               [12] 3406 	inc	r0
      000CF2 46               [12] 3407 	orl	a,@r0
      000CF3 70 11            [24] 3408 	jnz	00151$
      000CF5 E5 81            [12] 3409 	mov	a,sp
      000CF7 24 C0            [12] 3410 	add	a,#0xc0
      000CF9 F8               [12] 3411 	mov	r0,a
      000CFA E6               [12] 3412 	mov	a,@r0
      000CFB 70 09            [24] 3413 	jnz	00151$
      000CFD 90r00r43         [24] 3414 	mov	dptr,#_is_streaming
      000D00 E0               [24] 3415 	movx	a,@dptr
      000D01 70 03            [24] 3416 	jnz	00336$
      000D03 02r0Dr9F         [24] 3417 	ljmp	00148$
      000D06                       3418 00336$:
      000D06                       3419 00151$:
      000D06 A8 81            [24] 3420 	mov	r0,sp
      000D08 E6               [12] 3421 	mov	a,@r0
      000D09 60 03            [24] 3422 	jz	00337$
      000D0B 02r0Dr9F         [24] 3423 	ljmp	00148$
      000D0E                       3424 00337$:
                                   3425 ;	../../../core/net/mac/xmac.c:705: ret = NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      000D0E 90r00r09         [24] 3426 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000D11 E4               [12] 3427 	clr	a
      000D12 93               [24] 3428 	movc	a,@a+dptr
      000D13 FD               [12] 3429 	mov	r5,a
      000D14 A3               [24] 3430 	inc	dptr
      000D15 E4               [12] 3431 	clr	a
      000D16 93               [24] 3432 	movc	a,@a+dptr
      000D17 FE               [12] 3433 	mov	r6,a
      000D18 A3               [24] 3434 	inc	dptr
      000D19 E4               [12] 3435 	clr	a
      000D1A 93               [24] 3436 	movc	a,@a+dptr
      000D1B FF               [12] 3437 	mov	r7,a
      000D1C C0 07            [24] 3438 	push	ar7
      000D1E C0 06            [24] 3439 	push	ar6
      000D20 C0 05            [24] 3440 	push	ar5
      000D22 78r00            [12] 3441 	mov	r0,#_packetbuf_totlen
      000D24 79s00            [12] 3442 	mov	r1,#(_packetbuf_totlen >> 8)
      000D26 7As00            [12] 3443 	mov	r2,#(_packetbuf_totlen >> 16)
      000D28 12r00r00         [24] 3444 	lcall	__sdcc_banked_call
      000D2B C8               [12] 3445 	xch	a,r0
      000D2C E5 81            [12] 3446 	mov	a,sp
      000D2E 24 BB            [12] 3447 	add	a,#0xbb
      000D30 C8               [12] 3448 	xch	a,r0
      000D31 A6 82            [24] 3449 	mov	@r0,dpl
      000D33 08               [12] 3450 	inc	r0
      000D34 A6 83            [24] 3451 	mov	@r0,dph
      000D36 78r00            [12] 3452 	mov	r0,#_packetbuf_hdrptr
      000D38 79s00            [12] 3453 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000D3A 7As00            [12] 3454 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000D3C 12r00r00         [24] 3455 	lcall	__sdcc_banked_call
      000D3F AA 82            [24] 3456 	mov	r2,dpl
      000D41 AB 83            [24] 3457 	mov	r3,dph
      000D43 AC F0            [24] 3458 	mov	r4,b
      000D45 D0 05            [24] 3459 	pop	ar5
      000D47 D0 06            [24] 3460 	pop	ar6
      000D49 D0 07            [24] 3461 	pop	ar7
      000D4B C0 07            [24] 3462 	push	ar7
      000D4D C0 06            [24] 3463 	push	ar6
      000D4F C0 05            [24] 3464 	push	ar5
      000D51 E5 81            [12] 3465 	mov	a,sp
      000D53 24 BB            [12] 3466 	add	a,#0xbb
      000D55 F8               [12] 3467 	mov	r0,a
      000D56 E6               [12] 3468 	mov	a,@r0
      000D57 C0 E0            [24] 3469 	push	acc
      000D59 08               [12] 3470 	inc	r0
      000D5A E6               [12] 3471 	mov	a,@r0
      000D5B C0 E0            [24] 3472 	push	acc
      000D5D C0 05            [24] 3473 	push	ar5
      000D5F C0 06            [24] 3474 	push	ar6
      000D61 C0 07            [24] 3475 	push	ar7
      000D63 8A 82            [24] 3476 	mov	dpl,r2
      000D65 8B 83            [24] 3477 	mov	dph,r3
      000D67 8C F0            [24] 3478 	mov	b,r4
      000D69 D0 02            [24] 3479 	pop	ar2
      000D6B D0 01            [24] 3480 	pop	ar1
      000D6D D0 00            [24] 3481 	pop	ar0
      000D6F 12r00r00         [24] 3482 	lcall	__sdcc_banked_call
      000D72 15 81            [12] 3483 	dec	sp
      000D74 15 81            [12] 3484 	dec	sp
      000D76 D0 05            [24] 3485 	pop	ar5
      000D78 D0 06            [24] 3486 	pop	ar6
      000D7A D0 07            [24] 3487 	pop	ar7
                                   3488 ;	../../../core/net/mac/xmac.c:707: if(!is_broadcast) {
      000D7C E5 81            [12] 3489 	mov	a,sp
      000D7E 24 F6            [12] 3490 	add	a,#0xf6
      000D80 F8               [12] 3491 	mov	r0,a
      000D81 E6               [12] 3492 	mov	a,@r0
      000D82 08               [12] 3493 	inc	r0
      000D83 46               [12] 3494 	orl	a,@r0
      000D84 70 19            [24] 3495 	jnz	00148$
                                   3496 ;	../../../core/net/mac/xmac.c:713: if(detect_ack()) {
      000D86 78r6F            [12] 3497 	mov	r0,#_detect_ack
      000D88 79s04            [12] 3498 	mov	r1,#(_detect_ack >> 8)
      000D8A 7As00            [12] 3499 	mov	r2,#(_detect_ack >> 16)
      000D8C 12r00r00         [24] 3500 	lcall	__sdcc_banked_call
      000D8F E5 82            [12] 3501 	mov	a,dpl
      000D91 85 83 F0         [24] 3502 	mov	b,dph
      000D94 45 F0            [12] 3503 	orl	a,b
      000D96 60 07            [24] 3504 	jz	00148$
                                   3505 ;	../../../core/net/mac/xmac.c:714: got_ack = 1;
      000D98 E5 81            [12] 3506 	mov	a,sp
      000D9A 24 C1            [12] 3507 	add	a,#0xc1
      000D9C F8               [12] 3508 	mov	r0,a
      000D9D 76 01            [12] 3509 	mov	@r0,#0x01
      000D9F                       3510 00148$:
                                   3511 ;	../../../core/net/mac/xmac.c:719: off();
      000D9F 78r3E            [12] 3512 	mov	r0,#_off
      000DA1 79s00            [12] 3513 	mov	r1,#(_off >> 8)
      000DA3 7As00            [12] 3514 	mov	r2,#(_off >> 16)
      000DA5 12r00r00         [24] 3515 	lcall	__sdcc_banked_call
                                   3516 ;	../../../core/net/mac/xmac.c:722: if(got_strobe_ack && !is_streaming) {
      000DA8 E5 81            [12] 3517 	mov	a,sp
      000DAA 24 C0            [12] 3518 	add	a,#0xc0
      000DAC F8               [12] 3519 	mov	r0,a
      000DAD E6               [12] 3520 	mov	a,@r0
      000DAE 60 30            [24] 3521 	jz	00153$
      000DB0 90r00r43         [24] 3522 	mov	dptr,#_is_streaming
      000DB3 E0               [24] 3523 	movx	a,@dptr
      000DB4 70 2A            [24] 3524 	jnz	00153$
                                   3525 ;	../../../core/net/mac/xmac.c:723: register_encounter(packetbuf_addr(PACKETBUF_ADDR_RECEIVER), encounter_time);
      000DB6 75 82 19         [24] 3526 	mov	dpl,#0x19
      000DB9 78r00            [12] 3527 	mov	r0,#_packetbuf_addr
      000DBB 79s00            [12] 3528 	mov	r1,#(_packetbuf_addr >> 8)
      000DBD 7As00            [12] 3529 	mov	r2,#(_packetbuf_addr >> 16)
      000DBF 12r00r00         [24] 3530 	lcall	__sdcc_banked_call
      000DC2 AD 82            [24] 3531 	mov	r5,dpl
      000DC4 AE 83            [24] 3532 	mov	r6,dph
      000DC6 AF F0            [24] 3533 	mov	r7,b
      000DC8 E4               [12] 3534 	clr	a
      000DC9 C0 E0            [24] 3535 	push	acc
      000DCB C0 E0            [24] 3536 	push	acc
      000DCD 8D 82            [24] 3537 	mov	dpl,r5
      000DCF 8E 83            [24] 3538 	mov	dph,r6
      000DD1 8F F0            [24] 3539 	mov	b,r7
      000DD3 78r15            [12] 3540 	mov	r0,#_register_encounter
      000DD5 79s03            [12] 3541 	mov	r1,#(_register_encounter >> 8)
      000DD7 7As00            [12] 3542 	mov	r2,#(_register_encounter >> 16)
      000DD9 12r00r00         [24] 3543 	lcall	__sdcc_banked_call
      000DDC 15 81            [12] 3544 	dec	sp
      000DDE 15 81            [12] 3545 	dec	sp
      000DE0                       3546 00153$:
                                   3547 ;	../../../core/net/mac/xmac.c:726: watchdog_start();
      000DE0 78r00            [12] 3548 	mov	r0,#_watchdog_start
      000DE2 79s00            [12] 3549 	mov	r1,#(_watchdog_start >> 8)
      000DE4 7As00            [12] 3550 	mov	r2,#(_watchdog_start >> 16)
      000DE6 12r00r00         [24] 3551 	lcall	__sdcc_banked_call
                                   3552 ;	../../../core/net/mac/xmac.c:746: we_are_sending = 0;
      000DE9 90r00r0B         [24] 3553 	mov	dptr,#_we_are_sending
      000DEC E4               [12] 3554 	clr	a
      000DED F0               [24] 3555 	movx	@dptr,a
                                   3556 ;	../../../core/net/mac/xmac.c:749: if(collisions == 0) {
      000DEE A8 81            [24] 3557 	mov	r0,sp
      000DF0 E6               [12] 3558 	mov	a,@r0
      000DF1 70 1C            [24] 3559 	jnz	00160$
                                   3560 ;	../../../core/net/mac/xmac.c:750: if(is_broadcast == 0 && got_ack == 0) {
      000DF3 E5 81            [12] 3561 	mov	a,sp
      000DF5 24 F6            [12] 3562 	add	a,#0xf6
      000DF7 F8               [12] 3563 	mov	r0,a
      000DF8 E6               [12] 3564 	mov	a,@r0
      000DF9 08               [12] 3565 	inc	r0
      000DFA 46               [12] 3566 	orl	a,@r0
      000DFB 70 0D            [24] 3567 	jnz	00156$
      000DFD E5 81            [12] 3568 	mov	a,sp
      000DFF 24 C1            [12] 3569 	add	a,#0xc1
      000E01 F8               [12] 3570 	mov	r0,a
      000E02 E6               [12] 3571 	mov	a,@r0
      000E03 70 05            [24] 3572 	jnz	00156$
                                   3573 ;	../../../core/net/mac/xmac.c:751: return MAC_TX_NOACK;
      000E05 90 00 02         [24] 3574 	mov	dptr,#0x0002
      000E08 80 0F            [24] 3575 	sjmp	00170$
      000E0A                       3576 00156$:
                                   3577 ;	../../../core/net/mac/xmac.c:753: return MAC_TX_OK;
      000E0A 90 00 00         [24] 3578 	mov	dptr,#0x0000
      000E0D 80 0A            [24] 3579 	sjmp	00170$
      000E0F                       3580 00160$:
                                   3581 ;	../../../core/net/mac/xmac.c:756: someone_is_sending++;
      000E0F 90r00r0A         [24] 3582 	mov	dptr,#_someone_is_sending
      000E12 E0               [24] 3583 	movx	a,@dptr
      000E13 24 01            [12] 3584 	add	a,#0x01
      000E15 F0               [24] 3585 	movx	@dptr,a
                                   3586 ;	../../../core/net/mac/xmac.c:757: return MAC_TX_COLLISION;
      000E16 90 00 01         [24] 3587 	mov	dptr,#0x0001
      000E19                       3588 00170$:
                                   3589 ;	../../../core/net/mac/xmac.c:760: }
      000E19 E5 81            [12] 3590 	mov	a,sp
      000E1B 24 B9            [12] 3591 	add	a,#0xb9
      000E1D F5 81            [12] 3592 	mov	sp,a
      000E1F 02r00r00         [24] 3593 	ljmp	__sdcc_banked_ret
                                   3594 ;------------------------------------------------------------
                                   3595 ;Allocation info for local variables in function 'qsend_packet'
                                   3596 ;------------------------------------------------------------
                                   3597 ;ptr                       Allocated to stack - sp -7
                                   3598 ;sent                      Allocated to registers r5 r6 r7 
                                   3599 ;ret                       Allocated to stack - sp -1
                                   3600 ;sloc0                     Allocated to stack - sp -1
                                   3601 ;------------------------------------------------------------
                                   3602 ;	../../../core/net/mac/xmac.c:763: qsend_packet(mac_callback_t sent, void *ptr)
                                   3603 ;	-----------------------------------------
                                   3604 ;	 function qsend_packet
                                   3605 ;	-----------------------------------------
      000E22                       3606 _qsend_packet:
      000E22 05 81            [12] 3607 	inc	sp
      000E24 05 81            [12] 3608 	inc	sp
      000E26 AD 82            [24] 3609 	mov	r5,dpl
      000E28 AE 83            [24] 3610 	mov	r6,dph
      000E2A AF F0            [24] 3611 	mov	r7,b
                                   3612 ;	../../../core/net/mac/xmac.c:767: if(someone_is_sending) {
      000E2C 90r00r0A         [24] 3613 	mov	dptr,#_someone_is_sending
      000E2F E0               [24] 3614 	movx	a,@dptr
      000E30 60 41            [24] 3615 	jz	00102$
                                   3616 ;	../../../core/net/mac/xmac.c:770: RIMESTATS_ADD(sendingdrop);
      000E32 C0 05            [24] 3617 	push	ar5
      000E34 C0 06            [24] 3618 	push	ar6
      000E36 C0 07            [24] 3619 	push	ar7
      000E38 90r00r3C         [24] 3620 	mov	dptr,#(_rimestats + 0x003c)
      000E3B E0               [24] 3621 	movx	a,@dptr
      000E3C FA               [12] 3622 	mov	r2,a
      000E3D A3               [24] 3623 	inc	dptr
      000E3E E0               [24] 3624 	movx	a,@dptr
      000E3F FB               [12] 3625 	mov	r3,a
      000E40 A3               [24] 3626 	inc	dptr
      000E41 E0               [24] 3627 	movx	a,@dptr
      000E42 FC               [12] 3628 	mov	r4,a
      000E43 A3               [24] 3629 	inc	dptr
      000E44 E0               [24] 3630 	movx	a,@dptr
      000E45 FF               [12] 3631 	mov	r7,a
      000E46 0A               [12] 3632 	inc	r2
      000E47 BA 00 09         [24] 3633 	cjne	r2,#0x00,00120$
      000E4A 0B               [12] 3634 	inc	r3
      000E4B BB 00 05         [24] 3635 	cjne	r3,#0x00,00120$
      000E4E 0C               [12] 3636 	inc	r4
      000E4F BC 00 01         [24] 3637 	cjne	r4,#0x00,00120$
      000E52 0F               [12] 3638 	inc	r7
      000E53                       3639 00120$:
      000E53 90r00r3C         [24] 3640 	mov	dptr,#(_rimestats + 0x003c)
      000E56 EA               [12] 3641 	mov	a,r2
      000E57 F0               [24] 3642 	movx	@dptr,a
      000E58 EB               [12] 3643 	mov	a,r3
      000E59 A3               [24] 3644 	inc	dptr
      000E5A F0               [24] 3645 	movx	@dptr,a
      000E5B EC               [12] 3646 	mov	a,r4
      000E5C A3               [24] 3647 	inc	dptr
      000E5D F0               [24] 3648 	movx	@dptr,a
      000E5E EF               [12] 3649 	mov	a,r7
      000E5F A3               [24] 3650 	inc	dptr
      000E60 F0               [24] 3651 	movx	@dptr,a
                                   3652 ;	../../../core/net/mac/xmac.c:771: ret = MAC_TX_COLLISION;
      000E61 E5 81            [12] 3653 	mov	a,sp
      000E63 24 FC            [12] 3654 	add	a,#0xfc
      000E65 F8               [12] 3655 	mov	r0,a
      000E66 76 01            [12] 3656 	mov	@r0,#0x01
      000E68 08               [12] 3657 	inc	r0
      000E69 76 00            [12] 3658 	mov	@r0,#0x00
      000E6B D0 07            [24] 3659 	pop	ar7
      000E6D D0 06            [24] 3660 	pop	ar6
      000E6F D0 05            [24] 3661 	pop	ar5
      000E71 80 21            [24] 3662 	sjmp	00106$
      000E73                       3663 00102$:
                                   3664 ;	../../../core/net/mac/xmac.c:774: ret = send_packet();
      000E73 C0 07            [24] 3665 	push	ar7
      000E75 C0 06            [24] 3666 	push	ar6
      000E77 C0 05            [24] 3667 	push	ar5
      000E79 78rFB            [12] 3668 	mov	r0,#_send_packet
      000E7B 79s05            [12] 3669 	mov	r1,#(_send_packet >> 8)
      000E7D 7As00            [12] 3670 	mov	r2,#(_send_packet >> 16)
      000E7F 12r00r00         [24] 3671 	lcall	__sdcc_banked_call
      000E82 AB 82            [24] 3672 	mov	r3,dpl
      000E84 AC 83            [24] 3673 	mov	r4,dph
      000E86 D0 05            [24] 3674 	pop	ar5
      000E88 D0 06            [24] 3675 	pop	ar6
      000E8A D0 07            [24] 3676 	pop	ar7
      000E8C A8 81            [24] 3677 	mov	r0,sp
      000E8E 18               [12] 3678 	dec	r0
      000E8F A6 03            [24] 3679 	mov	@r0,ar3
      000E91 08               [12] 3680 	inc	r0
      000E92 A6 04            [24] 3681 	mov	@r0,ar4
                                   3682 ;	../../../core/net/mac/xmac.c:777: mac_call_sent_callback(sent, ptr, ret, 1);
      000E94                       3683 00106$:
      000E94 ED               [12] 3684 	mov	a,r5
      000E95 4E               [12] 3685 	orl	a,r6
      000E96 60 41            [24] 3686 	jz	00109$
      000E98 C0 07            [24] 3687 	push	ar7
      000E9A C0 06            [24] 3688 	push	ar6
      000E9C C0 05            [24] 3689 	push	ar5
      000E9E 74 01            [12] 3690 	mov	a,#0x01
      000EA0 C0 E0            [24] 3691 	push	acc
      000EA2 E4               [12] 3692 	clr	a
      000EA3 C0 E0            [24] 3693 	push	acc
      000EA5 E5 81            [12] 3694 	mov	a,sp
      000EA7 24 FA            [12] 3695 	add	a,#0xfa
      000EA9 F8               [12] 3696 	mov	r0,a
      000EAA E6               [12] 3697 	mov	a,@r0
      000EAB C0 E0            [24] 3698 	push	acc
      000EAD 08               [12] 3699 	inc	r0
      000EAE E6               [12] 3700 	mov	a,@r0
      000EAF C0 E0            [24] 3701 	push	acc
      000EB1 C0 05            [24] 3702 	push	ar5
      000EB3 C0 06            [24] 3703 	push	ar6
      000EB5 C0 07            [24] 3704 	push	ar7
      000EB7 E5 81            [12] 3705 	mov	a,sp
      000EB9 24 EF            [12] 3706 	add	a,#0xef
      000EBB F8               [12] 3707 	mov	r0,a
      000EBC 86 82            [24] 3708 	mov	dpl,@r0
      000EBE 08               [12] 3709 	inc	r0
      000EBF 86 83            [24] 3710 	mov	dph,@r0
      000EC1 08               [12] 3711 	inc	r0
      000EC2 86 F0            [24] 3712 	mov	b,@r0
      000EC4 D0 02            [24] 3713 	pop	ar2
      000EC6 D0 01            [24] 3714 	pop	ar1
      000EC8 D0 00            [24] 3715 	pop	ar0
      000ECA 12r00r00         [24] 3716 	lcall	__sdcc_banked_call
      000ECD E5 81            [12] 3717 	mov	a,sp
      000ECF 24 FC            [12] 3718 	add	a,#0xfc
      000ED1 F5 81            [12] 3719 	mov	sp,a
      000ED3 D0 05            [24] 3720 	pop	ar5
      000ED5 D0 06            [24] 3721 	pop	ar6
      000ED7 D0 07            [24] 3722 	pop	ar7
      000ED9                       3723 00109$:
                                   3724 ;	../../../core/net/mac/xmac.c:778: }
      000ED9 15 81            [12] 3725 	dec	sp
      000EDB 15 81            [12] 3726 	dec	sp
      000EDD 02r00r00         [24] 3727 	ljmp	__sdcc_banked_ret
                                   3728 ;------------------------------------------------------------
                                   3729 ;Allocation info for local variables in function 'qsend_list'
                                   3730 ;------------------------------------------------------------
                                   3731 ;ptr                       Allocated to stack - sp -5
                                   3732 ;buf_list                  Allocated to stack - sp -8
                                   3733 ;sent                      Allocated to registers r5 r6 r7 
                                   3734 ;------------------------------------------------------------
                                   3735 ;	../../../core/net/mac/xmac.c:781: qsend_list(mac_callback_t sent, void *ptr, struct rdc_buf_list *buf_list)
                                   3736 ;	-----------------------------------------
                                   3737 ;	 function qsend_list
                                   3738 ;	-----------------------------------------
      000EE0                       3739 _qsend_list:
      000EE0 AD 82            [24] 3740 	mov	r5,dpl
      000EE2 AE 83            [24] 3741 	mov	r6,dph
      000EE4 AF F0            [24] 3742 	mov	r7,b
                                   3743 ;	../../../core/net/mac/xmac.c:783: if(buf_list != NULL) {
      000EE6 E5 81            [12] 3744 	mov	a,sp
      000EE8 24 F8            [12] 3745 	add	a,#0xf8
      000EEA F8               [12] 3746 	mov	r0,a
      000EEB E6               [12] 3747 	mov	a,@r0
      000EEC 08               [12] 3748 	inc	r0
      000EED 46               [12] 3749 	orl	a,@r0
      000EEE 60 68            [24] 3750 	jz	00103$
                                   3751 ;	../../../core/net/mac/xmac.c:784: queuebuf_to_packetbuf(buf_list->buf);
      000EF0 E5 81            [12] 3752 	mov	a,sp
      000EF2 24 F8            [12] 3753 	add	a,#0xf8
      000EF4 F8               [12] 3754 	mov	r0,a
      000EF5 86 02            [24] 3755 	mov	ar2,@r0
      000EF7 08               [12] 3756 	inc	r0
      000EF8 86 03            [24] 3757 	mov	ar3,@r0
      000EFA 08               [12] 3758 	inc	r0
      000EFB 86 04            [24] 3759 	mov	ar4,@r0
      000EFD 74 03            [12] 3760 	mov	a,#0x03
      000EFF 2A               [12] 3761 	add	a,r2
      000F00 FA               [12] 3762 	mov	r2,a
      000F01 E4               [12] 3763 	clr	a
      000F02 3B               [12] 3764 	addc	a,r3
      000F03 FB               [12] 3765 	mov	r3,a
      000F04 8A 82            [24] 3766 	mov	dpl,r2
      000F06 8B 83            [24] 3767 	mov	dph,r3
      000F08 8C F0            [24] 3768 	mov	b,r4
      000F0A 12r00r00         [24] 3769 	lcall	__gptrget
      000F0D FA               [12] 3770 	mov	r2,a
      000F0E A3               [24] 3771 	inc	dptr
      000F0F 12r00r00         [24] 3772 	lcall	__gptrget
      000F12 FB               [12] 3773 	mov	r3,a
      000F13 A3               [24] 3774 	inc	dptr
      000F14 12r00r00         [24] 3775 	lcall	__gptrget
      000F17 FC               [12] 3776 	mov	r4,a
      000F18 8A 82            [24] 3777 	mov	dpl,r2
      000F1A 8B 83            [24] 3778 	mov	dph,r3
      000F1C 8C F0            [24] 3779 	mov	b,r4
      000F1E C0 07            [24] 3780 	push	ar7
      000F20 C0 06            [24] 3781 	push	ar6
      000F22 C0 05            [24] 3782 	push	ar5
      000F24 78r00            [12] 3783 	mov	r0,#_queuebuf_to_packetbuf
      000F26 79s00            [12] 3784 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000F28 7As00            [12] 3785 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000F2A 12r00r00         [24] 3786 	lcall	__sdcc_banked_call
      000F2D D0 05            [24] 3787 	pop	ar5
      000F2F D0 06            [24] 3788 	pop	ar6
      000F31 D0 07            [24] 3789 	pop	ar7
                                   3790 ;	../../../core/net/mac/xmac.c:785: qsend_packet(sent, ptr);
      000F33 E5 81            [12] 3791 	mov	a,sp
      000F35 24 FB            [12] 3792 	add	a,#0xfb
      000F37 F8               [12] 3793 	mov	r0,a
      000F38 E6               [12] 3794 	mov	a,@r0
      000F39 C0 E0            [24] 3795 	push	acc
      000F3B 08               [12] 3796 	inc	r0
      000F3C E6               [12] 3797 	mov	a,@r0
      000F3D C0 E0            [24] 3798 	push	acc
      000F3F 08               [12] 3799 	inc	r0
      000F40 E6               [12] 3800 	mov	a,@r0
      000F41 C0 E0            [24] 3801 	push	acc
      000F43 8D 82            [24] 3802 	mov	dpl,r5
      000F45 8E 83            [24] 3803 	mov	dph,r6
      000F47 8F F0            [24] 3804 	mov	b,r7
      000F49 78r22            [12] 3805 	mov	r0,#_qsend_packet
      000F4B 79s0E            [12] 3806 	mov	r1,#(_qsend_packet >> 8)
      000F4D 7As00            [12] 3807 	mov	r2,#(_qsend_packet >> 16)
      000F4F 12r00r00         [24] 3808 	lcall	__sdcc_banked_call
      000F52 15 81            [12] 3809 	dec	sp
      000F54 15 81            [12] 3810 	dec	sp
      000F56 15 81            [12] 3811 	dec	sp
      000F58                       3812 00103$:
                                   3813 ;	../../../core/net/mac/xmac.c:787: }
      000F58 02r00r00         [24] 3814 	ljmp	__sdcc_banked_ret
                                   3815 ;------------------------------------------------------------
                                   3816 ;Allocation info for local variables in function 'input_packet'
                                   3817 ;------------------------------------------------------------
                                   3818 ;hdr                       Allocated to registers r5 r6 r7 
                                   3819 ;i                         Allocated to registers r7 r6 
                                   3820 ;sloc0                     Allocated to stack - sp -8
                                   3821 ;sloc1                     Allocated to stack - sp -6
                                   3822 ;sloc2                     Allocated to stack - sp +1
                                   3823 ;sloc3                     Allocated to stack - sp -4
                                   3824 ;sloc4                     Allocated to stack - sp -2
                                   3825 ;sloc5                     Allocated to stack - sp +8
                                   3826 ;------------------------------------------------------------
                                   3827 ;	../../../core/net/mac/xmac.c:790: input_packet(void)
                                   3828 ;	-----------------------------------------
                                   3829 ;	 function input_packet
                                   3830 ;	-----------------------------------------
      000F5B                       3831 _input_packet:
      000F5B E5 81            [12] 3832 	mov	a,sp
      000F5D 24 09            [12] 3833 	add	a,#0x09
      000F5F F5 81            [12] 3834 	mov	sp,a
                                   3835 ;	../../../core/net/mac/xmac.c:794: if(NETSTACK_FRAMER.parse() >= 0) {
      000F61 90r00r03         [24] 3836 	mov	dptr,#(_framer_802154 + 0x0003)
      000F64 E4               [12] 3837 	clr	a
      000F65 93               [24] 3838 	movc	a,@a+dptr
      000F66 FD               [12] 3839 	mov	r5,a
      000F67 A3               [24] 3840 	inc	dptr
      000F68 E4               [12] 3841 	clr	a
      000F69 93               [24] 3842 	movc	a,@a+dptr
      000F6A FE               [12] 3843 	mov	r6,a
      000F6B A3               [24] 3844 	inc	dptr
      000F6C E4               [12] 3845 	clr	a
      000F6D 93               [24] 3846 	movc	a,@a+dptr
      000F6E FF               [12] 3847 	mov	r7,a
      000F6F C0 07            [24] 3848 	push	ar7
      000F71 C0 05            [24] 3849 	push	ar5
      000F73 C0 06            [24] 3850 	push	ar6
      000F75 C0 07            [24] 3851 	push	ar7
      000F77 D0 02            [24] 3852 	pop	ar2
      000F79 D0 01            [24] 3853 	pop	ar1
      000F7B D0 00            [24] 3854 	pop	ar0
      000F7D 12r00r00         [24] 3855 	lcall	__sdcc_banked_call
      000F80 AD 82            [24] 3856 	mov	r5,dpl
      000F82 AE 83            [24] 3857 	mov	r6,dph
      000F84 D0 07            [24] 3858 	pop	ar7
      000F86 EE               [12] 3859 	mov	a,r6
      000F87 30 E7 03         [24] 3860 	jnb	acc.7,00189$
      000F8A 02r12rE5         [24] 3861 	ljmp	00126$
      000F8D                       3862 00189$:
                                   3863 ;	../../../core/net/mac/xmac.c:795: hdr = packetbuf_dataptr();
      000F8D 78r00            [12] 3864 	mov	r0,#_packetbuf_dataptr
      000F8F 79s00            [12] 3865 	mov	r1,#(_packetbuf_dataptr >> 8)
      000F91 7As00            [12] 3866 	mov	r2,#(_packetbuf_dataptr >> 16)
      000F93 12r00r00         [24] 3867 	lcall	__sdcc_banked_call
                                   3868 ;	../../../core/net/mac/xmac.c:797: if(hdr->dispatch != DISPATCH) {
      000F96 AD 82            [24] 3869 	mov	r5,dpl
      000F98 AE 83            [24] 3870 	mov	r6,dph
      000F9A AF F0            [24] 3871 	mov	r7,b
      000F9C 12r00r00         [24] 3872 	lcall	__gptrget
      000F9F 70 03            [24] 3873 	jnz	00190$
      000FA1 02r12r3C         [24] 3874 	ljmp	00118$
      000FA4                       3875 00190$:
                                   3876 ;	../../../core/net/mac/xmac.c:798: someone_is_sending = 0;
      000FA4 90r00r0A         [24] 3877 	mov	dptr,#_someone_is_sending
      000FA7 E4               [12] 3878 	clr	a
      000FA8 F0               [24] 3879 	movx	@dptr,a
                                   3880 ;	../../../core/net/mac/xmac.c:800: &rimeaddr_node_addr) ||
                                   3881 ;	../../../core/net/mac/xmac.c:799: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000FA9 75 82 19         [24] 3882 	mov	dpl,#0x19
      000FAC 78r00            [12] 3883 	mov	r0,#_packetbuf_addr
      000FAE 79s00            [12] 3884 	mov	r1,#(_packetbuf_addr >> 8)
      000FB0 7As00            [12] 3885 	mov	r2,#(_packetbuf_addr >> 16)
      000FB2 12r00r00         [24] 3886 	lcall	__sdcc_banked_call
      000FB5 AA 82            [24] 3887 	mov	r2,dpl
      000FB7 AB 83            [24] 3888 	mov	r3,dph
      000FB9 AC F0            [24] 3889 	mov	r4,b
      000FBB 74r00            [12] 3890 	mov	a,#_rimeaddr_node_addr
      000FBD C0 E0            [24] 3891 	push	acc
      000FBF 74s00            [12] 3892 	mov	a,#(_rimeaddr_node_addr >> 8)
      000FC1 C0 E0            [24] 3893 	push	acc
      000FC3 E4               [12] 3894 	clr	a
      000FC4 C0 E0            [24] 3895 	push	acc
      000FC6 8A 82            [24] 3896 	mov	dpl,r2
      000FC8 8B 83            [24] 3897 	mov	dph,r3
      000FCA 8C F0            [24] 3898 	mov	b,r4
      000FCC 78r00            [12] 3899 	mov	r0,#_rimeaddr_cmp
      000FCE 79s00            [12] 3900 	mov	r1,#(_rimeaddr_cmp >> 8)
      000FD0 7As00            [12] 3901 	mov	r2,#(_rimeaddr_cmp >> 16)
      000FD2 12r00r00         [24] 3902 	lcall	__sdcc_banked_call
      000FD5 AB 82            [24] 3903 	mov	r3,dpl
      000FD7 AC 83            [24] 3904 	mov	r4,dph
      000FD9 15 81            [12] 3905 	dec	sp
      000FDB 15 81            [12] 3906 	dec	sp
      000FDD 15 81            [12] 3907 	dec	sp
      000FDF EB               [12] 3908 	mov	a,r3
      000FE0 4C               [12] 3909 	orl	a,r4
      000FE1 70 3E            [24] 3910 	jnz	00106$
                                   3911 ;	../../../core/net/mac/xmac.c:802: &rimeaddr_null)) {
                                   3912 ;	../../../core/net/mac/xmac.c:801: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000FE3 75 82 19         [24] 3913 	mov	dpl,#0x19
      000FE6 78r00            [12] 3914 	mov	r0,#_packetbuf_addr
      000FE8 79s00            [12] 3915 	mov	r1,#(_packetbuf_addr >> 8)
      000FEA 7As00            [12] 3916 	mov	r2,#(_packetbuf_addr >> 16)
      000FEC 12r00r00         [24] 3917 	lcall	__sdcc_banked_call
      000FEF AA 82            [24] 3918 	mov	r2,dpl
      000FF1 AB 83            [24] 3919 	mov	r3,dph
      000FF3 AC F0            [24] 3920 	mov	r4,b
      000FF5 74r00            [12] 3921 	mov	a,#_rimeaddr_null
      000FF7 C0 E0            [24] 3922 	push	acc
      000FF9 74s00            [12] 3923 	mov	a,#(_rimeaddr_null >> 8)
      000FFB C0 E0            [24] 3924 	push	acc
      000FFD 74 80            [12] 3925 	mov	a,#0x80
      000FFF C0 E0            [24] 3926 	push	acc
      001001 8A 82            [24] 3927 	mov	dpl,r2
      001003 8B 83            [24] 3928 	mov	dph,r3
      001005 8C F0            [24] 3929 	mov	b,r4
      001007 78r00            [12] 3930 	mov	r0,#_rimeaddr_cmp
      001009 79s00            [12] 3931 	mov	r1,#(_rimeaddr_cmp >> 8)
      00100B 7As00            [12] 3932 	mov	r2,#(_rimeaddr_cmp >> 16)
      00100D 12r00r00         [24] 3933 	lcall	__sdcc_banked_call
      001010 AB 82            [24] 3934 	mov	r3,dpl
      001012 AC 83            [24] 3935 	mov	r4,dph
      001014 15 81            [12] 3936 	dec	sp
      001016 15 81            [12] 3937 	dec	sp
      001018 15 81            [12] 3938 	dec	sp
      00101A EB               [12] 3939 	mov	a,r3
      00101B 4C               [12] 3940 	orl	a,r4
      00101C 70 03            [24] 3941 	jnz	00192$
      00101E 02r12rE5         [24] 3942 	ljmp	00126$
      001021                       3943 00192$:
      001021                       3944 00106$:
                                   3945 ;	../../../core/net/mac/xmac.c:808: off();
      001021 78r3E            [12] 3946 	mov	r0,#_off
      001023 79s00            [12] 3947 	mov	r1,#(_off >> 8)
      001025 7As00            [12] 3948 	mov	r2,#(_off >> 16)
      001027 12r00r00         [24] 3949 	lcall	__sdcc_banked_call
                                   3950 ;	../../../core/net/mac/xmac.c:814: for(i = 0; i < MAX_SEQNOS; ++i) {
      00102A E4               [12] 3951 	clr	a
      00102B FB               [12] 3952 	mov	r3,a
      00102C FC               [12] 3953 	mov	r4,a
      00102D E5 81            [12] 3954 	mov	a,sp
      00102F 24 F8            [12] 3955 	add	a,#0xf8
      001031 F8               [12] 3956 	mov	r0,a
      001032 A6 03            [24] 3957 	mov	@r0,ar3
      001034 08               [12] 3958 	inc	r0
      001035 A6 04            [24] 3959 	mov	@r0,ar4
      001037 74 09            [12] 3960 	mov	a,#0x09
      001039 C0 E0            [24] 3961 	push	acc
      00103B E4               [12] 3962 	clr	a
      00103C C0 E0            [24] 3963 	push	acc
      00103E 8B 82            [24] 3964 	mov	dpl,r3
      001040 8C 83            [24] 3965 	mov	dph,r4
      001042 12r00r00         [24] 3966 	lcall	__mulint
      001045 C8               [12] 3967 	xch	a,r0
      001046 E5 81            [12] 3968 	mov	a,sp
      001048 24 FA            [12] 3969 	add	a,#0xfa
      00104A C8               [12] 3970 	xch	a,r0
      00104B A6 82            [24] 3971 	mov	@r0,dpl
      00104D 08               [12] 3972 	inc	r0
      00104E A6 83            [24] 3973 	mov	@r0,dph
      001050 15 81            [12] 3974 	dec	sp
      001052 15 81            [12] 3975 	dec	sp
      001054 E5 81            [12] 3976 	mov	a,sp
      001056 24 FC            [12] 3977 	add	a,#0xfc
      001058 F8               [12] 3978 	mov	r0,a
      001059 E5 81            [12] 3979 	mov	a,sp
      00105B 24 FA            [12] 3980 	add	a,#0xfa
      00105D F9               [12] 3981 	mov	r1,a
      00105E E6               [12] 3982 	mov	a,@r0
      00105F F7               [12] 3983 	mov	@r1,a
      001060 08               [12] 3984 	inc	r0
      001061 09               [12] 3985 	inc	r1
      001062 E6               [12] 3986 	mov	a,@r0
      001063 F7               [12] 3987 	mov	@r1,a
      001064                       3988 00122$:
                                   3989 ;	../../../core/net/mac/xmac.c:815: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_ID) == received_seqnos[i].seqno &&
      001064 75 82 0D         [24] 3990 	mov	dpl,#0x0d
      001067 78r00            [12] 3991 	mov	r0,#_packetbuf_attr
      001069 79s00            [12] 3992 	mov	r1,#(_packetbuf_attr >> 8)
      00106B 7As00            [12] 3993 	mov	r2,#(_packetbuf_attr >> 16)
      00106D 12r00r00         [24] 3994 	lcall	__sdcc_banked_call
      001070 AF 82            [24] 3995 	mov	r7,dpl
      001072 AE 83            [24] 3996 	mov	r6,dph
      001074 E5 81            [12] 3997 	mov	a,sp
      001076 24 FA            [12] 3998 	add	a,#0xfa
      001078 F8               [12] 3999 	mov	r0,a
      001079 E6               [12] 4000 	mov	a,@r0
      00107A 24r56            [12] 4001 	add	a,#_received_seqnos
      00107C FB               [12] 4002 	mov	r3,a
      00107D 08               [12] 4003 	inc	r0
      00107E E6               [12] 4004 	mov	a,@r0
      00107F 34s00            [12] 4005 	addc	a,#(_received_seqnos >> 8)
      001081 FC               [12] 4006 	mov	r4,a
      001082 74 08            [12] 4007 	mov	a,#0x08
      001084 2B               [12] 4008 	add	a,r3
      001085 F5 82            [12] 4009 	mov	dpl,a
      001087 E4               [12] 4010 	clr	a
      001088 3C               [12] 4011 	addc	a,r4
      001089 F5 83            [12] 4012 	mov	dph,a
      00108B E0               [24] 4013 	movx	a,@dptr
      00108C FC               [12] 4014 	mov	r4,a
      00108D 7B 00            [12] 4015 	mov	r3,#0x00
      00108F EF               [12] 4016 	mov	a,r7
      001090 B5 04 44         [24] 4017 	cjne	a,ar4,00123$
      001093 EE               [12] 4018 	mov	a,r6
      001094 B5 03 40         [24] 4019 	cjne	a,ar3,00123$
                                   4020 ;	../../../core/net/mac/xmac.c:817: &received_seqnos[i].sender)) {
      001097 E5 81            [12] 4021 	mov	a,sp
      001099 24 FC            [12] 4022 	add	a,#0xfc
      00109B F8               [12] 4023 	mov	r0,a
      00109C E6               [12] 4024 	mov	a,@r0
      00109D 24r56            [12] 4025 	add	a,#_received_seqnos
      00109F FA               [12] 4026 	mov	r2,a
      0010A0 08               [12] 4027 	inc	r0
      0010A1 E6               [12] 4028 	mov	a,@r0
      0010A2 34s00            [12] 4029 	addc	a,#(_received_seqnos >> 8)
      0010A4 FC               [12] 4030 	mov	r4,a
      0010A5 8A 07            [24] 4031 	mov	ar7,r2
      0010A7 8C 06            [24] 4032 	mov	ar6,r4
      0010A9 7D 00            [12] 4033 	mov	r5,#0x00
                                   4034 ;	../../../core/net/mac/xmac.c:816: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_SENDER),
      0010AB 75 82 18         [24] 4035 	mov	dpl,#0x18
      0010AE C0 07            [24] 4036 	push	ar7
      0010B0 C0 06            [24] 4037 	push	ar6
      0010B2 C0 05            [24] 4038 	push	ar5
      0010B4 78r00            [12] 4039 	mov	r0,#_packetbuf_addr
      0010B6 79s00            [12] 4040 	mov	r1,#(_packetbuf_addr >> 8)
      0010B8 7As00            [12] 4041 	mov	r2,#(_packetbuf_addr >> 16)
      0010BA 12r00r00         [24] 4042 	lcall	__sdcc_banked_call
      0010BD 78r00            [12] 4043 	mov	r0,#_rimeaddr_cmp
      0010BF 79s00            [12] 4044 	mov	r1,#(_rimeaddr_cmp >> 8)
      0010C1 7As00            [12] 4045 	mov	r2,#(_rimeaddr_cmp >> 16)
      0010C3 12r00r00         [24] 4046 	lcall	__sdcc_banked_call
      0010C6 AB 82            [24] 4047 	mov	r3,dpl
      0010C8 AC 83            [24] 4048 	mov	r4,dph
      0010CA 15 81            [12] 4049 	dec	sp
      0010CC 15 81            [12] 4050 	dec	sp
      0010CE 15 81            [12] 4051 	dec	sp
      0010D0 EB               [12] 4052 	mov	a,r3
      0010D1 4C               [12] 4053 	orl	a,r4
      0010D2 60 03            [24] 4054 	jz	00123$
                                   4055 ;	../../../core/net/mac/xmac.c:819: return;
      0010D4 02r12rE5         [24] 4056 	ljmp	00126$
      0010D7                       4057 00123$:
                                   4058 ;	../../../core/net/mac/xmac.c:814: for(i = 0; i < MAX_SEQNOS; ++i) {
      0010D7 E5 81            [12] 4059 	mov	a,sp
      0010D9 24 FC            [12] 4060 	add	a,#0xfc
      0010DB F8               [12] 4061 	mov	r0,a
      0010DC 74 09            [12] 4062 	mov	a,#0x09
      0010DE 26               [12] 4063 	add	a,@r0
      0010DF F6               [12] 4064 	mov	@r0,a
      0010E0 E4               [12] 4065 	clr	a
      0010E1 08               [12] 4066 	inc	r0
      0010E2 36               [12] 4067 	addc	a,@r0
      0010E3 F6               [12] 4068 	mov	@r0,a
      0010E4 E5 81            [12] 4069 	mov	a,sp
      0010E6 24 FA            [12] 4070 	add	a,#0xfa
      0010E8 F8               [12] 4071 	mov	r0,a
      0010E9 74 09            [12] 4072 	mov	a,#0x09
      0010EB 26               [12] 4073 	add	a,@r0
      0010EC F6               [12] 4074 	mov	@r0,a
      0010ED E4               [12] 4075 	clr	a
      0010EE 08               [12] 4076 	inc	r0
      0010EF 36               [12] 4077 	addc	a,@r0
      0010F0 F6               [12] 4078 	mov	@r0,a
      0010F1 E5 81            [12] 4079 	mov	a,sp
      0010F3 24 F8            [12] 4080 	add	a,#0xf8
      0010F5 F8               [12] 4081 	mov	r0,a
      0010F6 06               [12] 4082 	inc	@r0
      0010F7 B6 00 02         [24] 4083 	cjne	@r0,#0x00,00196$
      0010FA 08               [12] 4084 	inc	r0
      0010FB 06               [12] 4085 	inc	@r0
      0010FC                       4086 00196$:
      0010FC E5 81            [12] 4087 	mov	a,sp
      0010FE 24 F8            [12] 4088 	add	a,#0xf8
      001100 F8               [12] 4089 	mov	r0,a
      001101 C3               [12] 4090 	clr	c
      001102 E6               [12] 4091 	mov	a,@r0
      001103 94 08            [12] 4092 	subb	a,#0x08
      001105 08               [12] 4093 	inc	r0
      001106 E6               [12] 4094 	mov	a,@r0
      001107 64 80            [12] 4095 	xrl	a,#0x80
      001109 94 80            [12] 4096 	subb	a,#0x80
      00110B 50 03            [24] 4097 	jnc	00197$
      00110D 02r10r64         [24] 4098 	ljmp	00122$
      001110                       4099 00197$:
                                   4100 ;	../../../core/net/mac/xmac.c:822: for(i = MAX_SEQNOS - 1; i > 0; --i) {
      001110 7F 07            [12] 4101 	mov	r7,#0x07
      001112 7E 00            [12] 4102 	mov	r6,#0x00
      001114 E5 81            [12] 4103 	mov	a,sp
      001116 24 FC            [12] 4104 	add	a,#0xfc
      001118 F8               [12] 4105 	mov	r0,a
      001119 A6 07            [24] 4106 	mov	@r0,ar7
      00111B 08               [12] 4107 	inc	r0
      00111C A6 06            [24] 4108 	mov	@r0,ar6
      00111E 74 09            [12] 4109 	mov	a,#0x09
      001120 C0 E0            [24] 4110 	push	acc
      001122 E4               [12] 4111 	clr	a
      001123 C0 E0            [24] 4112 	push	acc
      001125 8F 82            [24] 4113 	mov	dpl,r7
      001127 8E 83            [24] 4114 	mov	dph,r6
      001129 12r00r00         [24] 4115 	lcall	__mulint
      00112C C8               [12] 4116 	xch	a,r0
      00112D E5 81            [12] 4117 	mov	a,sp
      00112F 24 FC            [12] 4118 	add	a,#0xfc
      001131 C8               [12] 4119 	xch	a,r0
      001132 A6 82            [24] 4120 	mov	@r0,dpl
      001134 08               [12] 4121 	inc	r0
      001135 A6 83            [24] 4122 	mov	@r0,dph
      001137 15 81            [12] 4123 	dec	sp
      001139 15 81            [12] 4124 	dec	sp
      00113B                       4125 00124$:
                                   4126 ;	../../../core/net/mac/xmac.c:823: memcpy(&received_seqnos[i], &received_seqnos[i - 1],
      00113B E5 81            [12] 4127 	mov	a,sp
      00113D 24 FC            [12] 4128 	add	a,#0xfc
      00113F F8               [12] 4129 	mov	r0,a
      001140 86 03            [24] 4130 	mov	ar3,@r0
      001142 1B               [12] 4131 	dec	r3
      001143 C2 D5            [12] 4132 	clr	F0
      001145 75 F0 09         [24] 4133 	mov	b,#0x09
      001148 EB               [12] 4134 	mov	a,r3
      001149 30 E7 04         [24] 4135 	jnb	acc.7,00198$
      00114C B2 D5            [12] 4136 	cpl	F0
      00114E F4               [12] 4137 	cpl	a
      00114F 04               [12] 4138 	inc	a
      001150                       4139 00198$:
      001150 A4               [48] 4140 	mul	ab
      001151 30 D5 0A         [24] 4141 	jnb	F0,00199$
      001154 F4               [12] 4142 	cpl	a
      001155 24 01            [12] 4143 	add	a,#0x01
      001157 C5 F0            [12] 4144 	xch	a,b
      001159 F4               [12] 4145 	cpl	a
      00115A 34 00            [12] 4146 	addc	a,#0x00
      00115C C5 F0            [12] 4147 	xch	a,b
      00115E                       4148 00199$:
      00115E 24r56            [12] 4149 	add	a,#_received_seqnos
      001160 FB               [12] 4150 	mov	r3,a
      001161 74s00            [12] 4151 	mov	a,#(_received_seqnos >> 8)
      001163 35 F0            [12] 4152 	addc	a,b
      001165 FC               [12] 4153 	mov	r4,a
      001166 8B 07            [24] 4154 	mov	ar7,r3
      001168 8C 06            [24] 4155 	mov	ar6,r4
      00116A 7D 00            [12] 4156 	mov	r5,#0x00
      00116C A8 81            [24] 4157 	mov	r0,sp
      00116E 18               [12] 4158 	dec	r0
      00116F 18               [12] 4159 	dec	r0
      001170 E6               [12] 4160 	mov	a,@r0
      001171 24r56            [12] 4161 	add	a,#_received_seqnos
      001173 FB               [12] 4162 	mov	r3,a
      001174 08               [12] 4163 	inc	r0
      001175 E6               [12] 4164 	mov	a,@r0
      001176 34s00            [12] 4165 	addc	a,#(_received_seqnos >> 8)
      001178 FC               [12] 4166 	mov	r4,a
      001179 7A 00            [12] 4167 	mov	r2,#0x00
      00117B 74 09            [12] 4168 	mov	a,#0x09
      00117D C0 E0            [24] 4169 	push	acc
      00117F E4               [12] 4170 	clr	a
      001180 C0 E0            [24] 4171 	push	acc
      001182 C0 07            [24] 4172 	push	ar7
      001184 C0 06            [24] 4173 	push	ar6
      001186 C0 05            [24] 4174 	push	ar5
      001188 8B 82            [24] 4175 	mov	dpl,r3
      00118A 8C 83            [24] 4176 	mov	dph,r4
      00118C 8A F0            [24] 4177 	mov	b,r2
      00118E 78r00            [12] 4178 	mov	r0,#___memcpy
      001190 79s00            [12] 4179 	mov	r1,#(___memcpy >> 8)
      001192 7As00            [12] 4180 	mov	r2,#(___memcpy >> 16)
      001194 12r00r00         [24] 4181 	lcall	__sdcc_banked_call
      001197 E5 81            [12] 4182 	mov	a,sp
      001199 24 FB            [12] 4183 	add	a,#0xfb
      00119B F5 81            [12] 4184 	mov	sp,a
                                   4185 ;	../../../core/net/mac/xmac.c:822: for(i = MAX_SEQNOS - 1; i > 0; --i) {
      00119D A8 81            [24] 4186 	mov	r0,sp
      00119F 18               [12] 4187 	dec	r0
      0011A0 18               [12] 4188 	dec	r0
      0011A1 E6               [12] 4189 	mov	a,@r0
      0011A2 24 F7            [12] 4190 	add	a,#0xf7
      0011A4 F6               [12] 4191 	mov	@r0,a
      0011A5 08               [12] 4192 	inc	r0
      0011A6 E6               [12] 4193 	mov	a,@r0
      0011A7 34 FF            [12] 4194 	addc	a,#0xff
      0011A9 F6               [12] 4195 	mov	@r0,a
      0011AA E5 81            [12] 4196 	mov	a,sp
      0011AC 24 FC            [12] 4197 	add	a,#0xfc
      0011AE F8               [12] 4198 	mov	r0,a
      0011AF 16               [12] 4199 	dec	@r0
      0011B0 B6 FF 02         [24] 4200 	cjne	@r0,#0xff,00200$
      0011B3 08               [12] 4201 	inc	r0
      0011B4 16               [12] 4202 	dec	@r0
      0011B5                       4203 00200$:
      0011B5 E5 81            [12] 4204 	mov	a,sp
      0011B7 24 FC            [12] 4205 	add	a,#0xfc
      0011B9 F8               [12] 4206 	mov	r0,a
      0011BA C3               [12] 4207 	clr	c
      0011BB E4               [12] 4208 	clr	a
      0011BC 96               [12] 4209 	subb	a,@r0
      0011BD 74 80            [12] 4210 	mov	a,#(0x00 ^ 0x80)
      0011BF 08               [12] 4211 	inc	r0
      0011C0 86 F0            [24] 4212 	mov	b,@r0
      0011C2 63 F0 80         [24] 4213 	xrl	b,#0x80
      0011C5 95 F0            [12] 4214 	subb	a,b
      0011C7 50 03            [24] 4215 	jnc	00201$
      0011C9 02r11r3B         [24] 4216 	ljmp	00124$
      0011CC                       4217 00201$:
                                   4218 ;	../../../core/net/mac/xmac.c:826: received_seqnos[0].seqno = packetbuf_attr(PACKETBUF_ATTR_PACKET_ID);
      0011CC 75 82 0D         [24] 4219 	mov	dpl,#0x0d
      0011CF 78r00            [12] 4220 	mov	r0,#_packetbuf_attr
      0011D1 79s00            [12] 4221 	mov	r1,#(_packetbuf_attr >> 8)
      0011D3 7As00            [12] 4222 	mov	r2,#(_packetbuf_attr >> 16)
      0011D5 12r00r00         [24] 4223 	lcall	__sdcc_banked_call
      0011D8 AB 82            [24] 4224 	mov	r3,dpl
      0011DA 90r00r5E         [24] 4225 	mov	dptr,#(_received_seqnos + 0x0008)
      0011DD EB               [12] 4226 	mov	a,r3
      0011DE F0               [24] 4227 	movx	@dptr,a
                                   4228 ;	../../../core/net/mac/xmac.c:828: packetbuf_addr(PACKETBUF_ADDR_SENDER));
      0011DF 75 82 18         [24] 4229 	mov	dpl,#0x18
      0011E2 78r00            [12] 4230 	mov	r0,#_packetbuf_addr
      0011E4 79s00            [12] 4231 	mov	r1,#(_packetbuf_addr >> 8)
      0011E6 7As00            [12] 4232 	mov	r2,#(_packetbuf_addr >> 16)
      0011E8 12r00r00         [24] 4233 	lcall	__sdcc_banked_call
      0011EB AA 82            [24] 4234 	mov	r2,dpl
      0011ED AB 83            [24] 4235 	mov	r3,dph
      0011EF AC F0            [24] 4236 	mov	r4,b
                                   4237 ;	../../../core/net/mac/xmac.c:827: rimeaddr_copy(&received_seqnos[0].sender,
      0011F1 C0 02            [24] 4238 	push	ar2
      0011F3 C0 03            [24] 4239 	push	ar3
      0011F5 C0 04            [24] 4240 	push	ar4
      0011F7 90r00r56         [24] 4241 	mov	dptr,#_received_seqnos
      0011FA 75 F0 00         [24] 4242 	mov	b,#0x00
      0011FD 78r00            [12] 4243 	mov	r0,#_rimeaddr_copy
      0011FF 79s00            [12] 4244 	mov	r1,#(_rimeaddr_copy >> 8)
      001201 7As00            [12] 4245 	mov	r2,#(_rimeaddr_copy >> 16)
      001203 12r00r00         [24] 4246 	lcall	__sdcc_banked_call
      001206 15 81            [12] 4247 	dec	sp
      001208 15 81            [12] 4248 	dec	sp
      00120A 15 81            [12] 4249 	dec	sp
                                   4250 ;	../../../core/net/mac/xmac.c:845: waiting_for_packet = 0;
      00120C 90r00r09         [24] 4251 	mov	dptr,#_waiting_for_packet
      00120F E4               [12] 4252 	clr	a
      001210 F0               [24] 4253 	movx	@dptr,a
                                   4254 ;	../../../core/net/mac/xmac.c:848: NETSTACK_MAC.input();
      001211 90r00r09         [24] 4255 	mov	dptr,#(_csma_driver + 0x0009)
                                   4256 ;	genFromRTrack removed	clr	a
      001214 93               [24] 4257 	movc	a,@a+dptr
      001215 FA               [12] 4258 	mov	r2,a
      001216 A3               [24] 4259 	inc	dptr
      001217 E4               [12] 4260 	clr	a
      001218 93               [24] 4261 	movc	a,@a+dptr
      001219 FB               [12] 4262 	mov	r3,a
      00121A A3               [24] 4263 	inc	dptr
      00121B E4               [12] 4264 	clr	a
      00121C 93               [24] 4265 	movc	a,@a+dptr
      00121D FC               [12] 4266 	mov	r4,a
      00121E C0 04            [24] 4267 	push	ar4
      001220 C0 03            [24] 4268 	push	ar3
      001222 C0 02            [24] 4269 	push	ar2
      001224 C0 02            [24] 4270 	push	ar2
      001226 C0 03            [24] 4271 	push	ar3
      001228 C0 04            [24] 4272 	push	ar4
      00122A D0 02            [24] 4273 	pop	ar2
      00122C D0 01            [24] 4274 	pop	ar1
      00122E D0 00            [24] 4275 	pop	ar0
      001230 12r00r00         [24] 4276 	lcall	__sdcc_banked_call
      001233 D0 02            [24] 4277 	pop	ar2
      001235 D0 03            [24] 4278 	pop	ar3
      001237 D0 04            [24] 4279 	pop	ar4
                                   4280 ;	../../../core/net/mac/xmac.c:849: return;
      001239 02r12rE5         [24] 4281 	ljmp	00126$
      00123C                       4282 00118$:
                                   4283 ;	../../../core/net/mac/xmac.c:854: } else if(hdr->type == TYPE_STROBE) {
      00123C 0D               [12] 4284 	inc	r5
      00123D BD 00 01         [24] 4285 	cjne	r5,#0x00,00202$
      001240 0E               [12] 4286 	inc	r6
      001241                       4287 00202$:
      001241 8D 82            [24] 4288 	mov	dpl,r5
      001243 8E 83            [24] 4289 	mov	dph,r6
      001245 8F F0            [24] 4290 	mov	b,r7
      001247 12r00r00         [24] 4291 	lcall	__gptrget
      00124A FD               [12] 4292 	mov	r5,a
      00124B BD 10 02         [24] 4293 	cjne	r5,#0x10,00203$
      00124E 80 03            [24] 4294 	sjmp	00204$
      001250                       4295 00203$:
      001250 02r12rE5         [24] 4296 	ljmp	00126$
      001253                       4297 00204$:
                                   4298 ;	../../../core/net/mac/xmac.c:855: someone_is_sending = 2;
      001253 90r00r0A         [24] 4299 	mov	dptr,#_someone_is_sending
      001256 74 02            [12] 4300 	mov	a,#0x02
      001258 F0               [24] 4301 	movx	@dptr,a
                                   4302 ;	../../../core/net/mac/xmac.c:858: &rimeaddr_node_addr)) {
                                   4303 ;	../../../core/net/mac/xmac.c:857: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      001259 75 82 19         [24] 4304 	mov	dpl,#0x19
      00125C 78r00            [12] 4305 	mov	r0,#_packetbuf_addr
      00125E 79s00            [12] 4306 	mov	r1,#(_packetbuf_addr >> 8)
      001260 7As00            [12] 4307 	mov	r2,#(_packetbuf_addr >> 16)
      001262 12r00r00         [24] 4308 	lcall	__sdcc_banked_call
      001265 AD 82            [24] 4309 	mov	r5,dpl
      001267 AE 83            [24] 4310 	mov	r6,dph
      001269 AF F0            [24] 4311 	mov	r7,b
      00126B 74r00            [12] 4312 	mov	a,#_rimeaddr_node_addr
      00126D C0 E0            [24] 4313 	push	acc
      00126F 74s00            [12] 4314 	mov	a,#(_rimeaddr_node_addr >> 8)
      001271 C0 E0            [24] 4315 	push	acc
      001273 E4               [12] 4316 	clr	a
      001274 C0 E0            [24] 4317 	push	acc
      001276 8D 82            [24] 4318 	mov	dpl,r5
      001278 8E 83            [24] 4319 	mov	dph,r6
      00127A 8F F0            [24] 4320 	mov	b,r7
      00127C 78r00            [12] 4321 	mov	r0,#_rimeaddr_cmp
      00127E 79s00            [12] 4322 	mov	r1,#(_rimeaddr_cmp >> 8)
      001280 7As00            [12] 4323 	mov	r2,#(_rimeaddr_cmp >> 16)
      001282 12r00r00         [24] 4324 	lcall	__sdcc_banked_call
      001285 AE 82            [24] 4325 	mov	r6,dpl
      001287 AF 83            [24] 4326 	mov	r7,dph
      001289 15 81            [12] 4327 	dec	sp
      00128B 15 81            [12] 4328 	dec	sp
      00128D 15 81            [12] 4329 	dec	sp
      00128F EE               [12] 4330 	mov	a,r6
      001290 4F               [12] 4331 	orl	a,r7
      001291 60 08            [24] 4332 	jz	00112$
                                   4333 ;	../../../core/net/mac/xmac.c:865: waiting_for_packet = 1;
      001293 90r00r09         [24] 4334 	mov	dptr,#_waiting_for_packet
      001296 74 01            [12] 4335 	mov	a,#0x01
      001298 F0               [24] 4336 	movx	@dptr,a
      001299 80 4A            [24] 4337 	sjmp	00113$
      00129B                       4338 00112$:
                                   4339 ;	../../../core/net/mac/xmac.c:885: &rimeaddr_null)) {
                                   4340 ;	../../../core/net/mac/xmac.c:884: } else if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      00129B 75 82 19         [24] 4341 	mov	dpl,#0x19
      00129E 78r00            [12] 4342 	mov	r0,#_packetbuf_addr
      0012A0 79s00            [12] 4343 	mov	r1,#(_packetbuf_addr >> 8)
      0012A2 7As00            [12] 4344 	mov	r2,#(_packetbuf_addr >> 16)
      0012A4 12r00r00         [24] 4345 	lcall	__sdcc_banked_call
      0012A7 AD 82            [24] 4346 	mov	r5,dpl
      0012A9 AE 83            [24] 4347 	mov	r6,dph
      0012AB AF F0            [24] 4348 	mov	r7,b
      0012AD 74r00            [12] 4349 	mov	a,#_rimeaddr_null
      0012AF C0 E0            [24] 4350 	push	acc
      0012B1 74s00            [12] 4351 	mov	a,#(_rimeaddr_null >> 8)
      0012B3 C0 E0            [24] 4352 	push	acc
      0012B5 74 80            [12] 4353 	mov	a,#0x80
      0012B7 C0 E0            [24] 4354 	push	acc
      0012B9 8D 82            [24] 4355 	mov	dpl,r5
      0012BB 8E 83            [24] 4356 	mov	dph,r6
      0012BD 8F F0            [24] 4357 	mov	b,r7
      0012BF 78r00            [12] 4358 	mov	r0,#_rimeaddr_cmp
      0012C1 79s00            [12] 4359 	mov	r1,#(_rimeaddr_cmp >> 8)
      0012C3 7As00            [12] 4360 	mov	r2,#(_rimeaddr_cmp >> 16)
      0012C5 12r00r00         [24] 4361 	lcall	__sdcc_banked_call
      0012C8 AE 82            [24] 4362 	mov	r6,dpl
      0012CA AF 83            [24] 4363 	mov	r7,dph
      0012CC 15 81            [12] 4364 	dec	sp
      0012CE 15 81            [12] 4365 	dec	sp
      0012D0 15 81            [12] 4366 	dec	sp
      0012D2 EE               [12] 4367 	mov	a,r6
      0012D3 4F               [12] 4368 	orl	a,r7
      0012D4 60 0F            [24] 4369 	jz	00113$
                                   4370 ;	../../../core/net/mac/xmac.c:890: waiting_for_packet = 1;
      0012D6 90r00r09         [24] 4371 	mov	dptr,#_waiting_for_packet
      0012D9 74 01            [12] 4372 	mov	a,#0x01
      0012DB F0               [24] 4373 	movx	@dptr,a
                                   4374 ;	../../../core/net/mac/xmac.c:891: on();
      0012DC 78r00            [12] 4375 	mov	r0,#_on
      0012DE 79s00            [12] 4376 	mov	r1,#(_on >> 8)
      0012E0 7As00            [12] 4377 	mov	r2,#(_on >> 16)
      0012E2 12r00r00         [24] 4378 	lcall	__sdcc_banked_call
      0012E5                       4379 00113$:
                                   4380 ;	../../../core/net/mac/xmac.c:898: return;
                                   4381 ;	../../../core/net/mac/xmac.c:904: } else if(hdr->type == TYPE_STROBE_ACK) {
      0012E5                       4382 00126$:
                                   4383 ;	../../../core/net/mac/xmac.c:913: }
      0012E5 E5 81            [12] 4384 	mov	a,sp
      0012E7 24 F7            [12] 4385 	add	a,#0xf7
      0012E9 F5 81            [12] 4386 	mov	sp,a
      0012EB 02r00r00         [24] 4387 	ljmp	__sdcc_banked_ret
                                   4388 ;------------------------------------------------------------
                                   4389 ;Allocation info for local variables in function 'xmac_set_announcement_radio_txpower'
                                   4390 ;------------------------------------------------------------
                                   4391 ;txpower                   Allocated to registers 
                                   4392 ;------------------------------------------------------------
                                   4393 ;	../../../core/net/mac/xmac.c:964: xmac_set_announcement_radio_txpower(int txpower)
                                   4394 ;	-----------------------------------------
                                   4395 ;	 function xmac_set_announcement_radio_txpower
                                   4396 ;	-----------------------------------------
      0012EE                       4397 _xmac_set_announcement_radio_txpower:
                                   4398 ;	../../../core/net/mac/xmac.c:969: }
      0012EE 02r00r00         [24] 4399 	ljmp	__sdcc_banked_ret
                                   4400 ;------------------------------------------------------------
                                   4401 ;Allocation info for local variables in function 'init'
                                   4402 ;------------------------------------------------------------
                                   4403 ;	../../../core/net/mac/xmac.c:972: init(void)
                                   4404 ;	-----------------------------------------
                                   4405 ;	 function init
                                   4406 ;	-----------------------------------------
      0012F1                       4407 _init:
                                   4408 ;	../../../core/net/mac/xmac.c:974: radio_is_on = 0;
      0012F1 90r00r0C         [24] 4409 	mov	dptr,#_radio_is_on
      0012F4 E4               [12] 4410 	clr	a
      0012F5 F0               [24] 4411 	movx	@dptr,a
                                   4412 ;	../../../core/net/mac/xmac.c:975: waiting_for_packet = 0;
      0012F6 90r00r09         [24] 4413 	mov	dptr,#_waiting_for_packet
      0012F9 F0               [24] 4414 	movx	@dptr,a
                                   4415 ;	../../../core/net/mac/xmac.c:976: PT_INIT(&pt);
      0012FA 90r00r08         [24] 4416 	mov	dptr,#_pt
      0012FD F0               [24] 4417 	movx	@dptr,a
      0012FE A3               [24] 4418 	inc	dptr
      0012FF F0               [24] 4419 	movx	@dptr,a
                                   4420 ;	../../../core/net/mac/xmac.c:978: (void (*)(struct rtimer *, void *))powercycle, NULL);
      001300 7Dr25            [12] 4421 	mov	r5,#_powercycle
      001302 7Es01            [12] 4422 	mov	r6,#(_powercycle >> 8)
      001304 7Fs00            [12] 4423 	mov	r7,#(_powercycle >> 16)
                                   4424 ;	../../../core/net/mac/xmac.c:977: rtimer_set(&rt, RTIMER_NOW() + xmac_config.off_time, 1,
      001306 AB E2            [24] 4425 	mov	r3,_T1CNTL
      001308 7C 00            [12] 4426 	mov	r4,#0x00
      00130A A9 E3            [24] 4427 	mov	r1,_T1CNTH
      00130C 89 02            [24] 4428 	mov	ar2,r1
      00130E E4               [12] 4429 	clr	a
      00130F 2B               [12] 4430 	add	a,r3
      001310 FB               [12] 4431 	mov	r3,a
      001311 EA               [12] 4432 	mov	a,r2
      001312 3C               [12] 4433 	addc	a,r4
      001313 FC               [12] 4434 	mov	r4,a
      001314 90r00r02         [24] 4435 	mov	dptr,#(_xmac_config + 0x0002)
      001317 E0               [24] 4436 	movx	a,@dptr
      001318 F9               [12] 4437 	mov	r1,a
      001319 A3               [24] 4438 	inc	dptr
      00131A E0               [24] 4439 	movx	a,@dptr
      00131B FA               [12] 4440 	mov	r2,a
      00131C E9               [12] 4441 	mov	a,r1
      00131D 2B               [12] 4442 	add	a,r3
      00131E F9               [12] 4443 	mov	r1,a
      00131F EA               [12] 4444 	mov	a,r2
      001320 3C               [12] 4445 	addc	a,r4
      001321 FA               [12] 4446 	mov	r2,a
      001322 E4               [12] 4447 	clr	a
      001323 C0 E0            [24] 4448 	push	acc
      001325 C0 E0            [24] 4449 	push	acc
      001327 C0 E0            [24] 4450 	push	acc
      001329 C0 05            [24] 4451 	push	ar5
      00132B C0 06            [24] 4452 	push	ar6
      00132D C0 07            [24] 4453 	push	ar7
      00132F 04               [12] 4454 	inc	a
      001330 C0 E0            [24] 4455 	push	acc
      001332 E4               [12] 4456 	clr	a
      001333 C0 E0            [24] 4457 	push	acc
      001335 C0 01            [24] 4458 	push	ar1
      001337 C0 02            [24] 4459 	push	ar2
      001339 90r00r00         [24] 4460 	mov	dptr,#_rt
      00133C 75 F0 00         [24] 4461 	mov	b,#0x00
      00133F 78r00            [12] 4462 	mov	r0,#_rtimer_set
      001341 79s00            [12] 4463 	mov	r1,#(_rtimer_set >> 8)
      001343 7As00            [12] 4464 	mov	r2,#(_rtimer_set >> 16)
      001345 12r00r00         [24] 4465 	lcall	__sdcc_banked_call
      001348 E5 81            [12] 4466 	mov	a,sp
      00134A 24 F6            [12] 4467 	add	a,#0xf6
      00134C F5 81            [12] 4468 	mov	sp,a
                                   4469 ;	../../../core/net/mac/xmac.c:980: xmac_is_on = 1;
      00134E 90r00r08         [24] 4470 	mov	dptr,#_xmac_is_on
      001351 74 01            [12] 4471 	mov	a,#0x01
      001353 F0               [24] 4472 	movx	@dptr,a
                                   4473 ;	../../../core/net/mac/xmac.c:983: list_init(encounter_list);
      001354 90r00r10         [24] 4474 	mov	dptr,#_encounter_list
      001357 E0               [24] 4475 	movx	a,@dptr
      001358 FD               [12] 4476 	mov	r5,a
      001359 A3               [24] 4477 	inc	dptr
      00135A E0               [24] 4478 	movx	a,@dptr
      00135B FE               [12] 4479 	mov	r6,a
      00135C A3               [24] 4480 	inc	dptr
      00135D E0               [24] 4481 	movx	a,@dptr
      00135E FF               [12] 4482 	mov	r7,a
      00135F 8D 82            [24] 4483 	mov	dpl,r5
      001361 8E 83            [24] 4484 	mov	dph,r6
      001363 8F F0            [24] 4485 	mov	b,r7
      001365 78r00            [12] 4486 	mov	r0,#_list_init
      001367 79s00            [12] 4487 	mov	r1,#(_list_init >> 8)
      001369 7As00            [12] 4488 	mov	r2,#(_list_init >> 16)
      00136B 12r00r00         [24] 4489 	lcall	__sdcc_banked_call
                                   4490 ;	../../../core/net/mac/xmac.c:984: memb_init(&encounter_memb);
      00136E 90r00r13         [24] 4491 	mov	dptr,#_encounter_memb
      001371 75 F0 00         [24] 4492 	mov	b,#0x00
      001374 78r00            [12] 4493 	mov	r0,#_memb_init
      001376 79s00            [12] 4494 	mov	r1,#(_memb_init >> 8)
      001378 7As00            [12] 4495 	mov	r2,#(_memb_init >> 16)
      00137A 12r00r00         [24] 4496 	lcall	__sdcc_banked_call
                                   4497 ;	../../../core/net/mac/xmac.c:992: }
      00137D 02r00r00         [24] 4498 	ljmp	__sdcc_banked_ret
                                   4499 ;------------------------------------------------------------
                                   4500 ;Allocation info for local variables in function 'turn_on'
                                   4501 ;------------------------------------------------------------
                                   4502 ;	../../../core/net/mac/xmac.c:995: turn_on(void)
                                   4503 ;	-----------------------------------------
                                   4504 ;	 function turn_on
                                   4505 ;	-----------------------------------------
      001380                       4506 _turn_on:
                                   4507 ;	../../../core/net/mac/xmac.c:997: xmac_is_on = 1;
      001380 90r00r08         [24] 4508 	mov	dptr,#_xmac_is_on
      001383 74 01            [12] 4509 	mov	a,#0x01
      001385 F0               [24] 4510 	movx	@dptr,a
                                   4511 ;	../../../core/net/mac/xmac.c:999: (void (*)(struct rtimer *, void *))powercycle, NULL);
      001386 7Dr25            [12] 4512 	mov	r5,#_powercycle
      001388 7Es01            [12] 4513 	mov	r6,#(_powercycle >> 8)
      00138A 7Fs00            [12] 4514 	mov	r7,#(_powercycle >> 16)
                                   4515 ;	../../../core/net/mac/xmac.c:998: rtimer_set(&rt, RTIMER_NOW() + xmac_config.off_time, 1,
      00138C AB E2            [24] 4516 	mov	r3,_T1CNTL
      00138E 7C 00            [12] 4517 	mov	r4,#0x00
      001390 A9 E3            [24] 4518 	mov	r1,_T1CNTH
      001392 89 02            [24] 4519 	mov	ar2,r1
      001394 E4               [12] 4520 	clr	a
      001395 2B               [12] 4521 	add	a,r3
      001396 FB               [12] 4522 	mov	r3,a
      001397 EA               [12] 4523 	mov	a,r2
      001398 3C               [12] 4524 	addc	a,r4
      001399 FC               [12] 4525 	mov	r4,a
      00139A 90r00r02         [24] 4526 	mov	dptr,#(_xmac_config + 0x0002)
      00139D E0               [24] 4527 	movx	a,@dptr
      00139E F9               [12] 4528 	mov	r1,a
      00139F A3               [24] 4529 	inc	dptr
      0013A0 E0               [24] 4530 	movx	a,@dptr
      0013A1 FA               [12] 4531 	mov	r2,a
      0013A2 E9               [12] 4532 	mov	a,r1
      0013A3 2B               [12] 4533 	add	a,r3
      0013A4 F9               [12] 4534 	mov	r1,a
      0013A5 EA               [12] 4535 	mov	a,r2
      0013A6 3C               [12] 4536 	addc	a,r4
      0013A7 FA               [12] 4537 	mov	r2,a
      0013A8 E4               [12] 4538 	clr	a
      0013A9 C0 E0            [24] 4539 	push	acc
      0013AB C0 E0            [24] 4540 	push	acc
      0013AD C0 E0            [24] 4541 	push	acc
      0013AF C0 05            [24] 4542 	push	ar5
      0013B1 C0 06            [24] 4543 	push	ar6
      0013B3 C0 07            [24] 4544 	push	ar7
      0013B5 04               [12] 4545 	inc	a
      0013B6 C0 E0            [24] 4546 	push	acc
      0013B8 E4               [12] 4547 	clr	a
      0013B9 C0 E0            [24] 4548 	push	acc
      0013BB C0 01            [24] 4549 	push	ar1
      0013BD C0 02            [24] 4550 	push	ar2
      0013BF 90r00r00         [24] 4551 	mov	dptr,#_rt
      0013C2 75 F0 00         [24] 4552 	mov	b,#0x00
      0013C5 78r00            [12] 4553 	mov	r0,#_rtimer_set
      0013C7 79s00            [12] 4554 	mov	r1,#(_rtimer_set >> 8)
      0013C9 7As00            [12] 4555 	mov	r2,#(_rtimer_set >> 16)
      0013CB 12r00r00         [24] 4556 	lcall	__sdcc_banked_call
      0013CE E5 81            [12] 4557 	mov	a,sp
      0013D0 24 F6            [12] 4558 	add	a,#0xf6
      0013D2 F5 81            [12] 4559 	mov	sp,a
                                   4560 ;	../../../core/net/mac/xmac.c:1000: return 1;
      0013D4 90 00 01         [24] 4561 	mov	dptr,#0x0001
                                   4562 ;	../../../core/net/mac/xmac.c:1001: }
      0013D7 02r00r00         [24] 4563 	ljmp	__sdcc_banked_ret
                                   4564 ;------------------------------------------------------------
                                   4565 ;Allocation info for local variables in function 'turn_off'
                                   4566 ;------------------------------------------------------------
                                   4567 ;keep_radio_on             Allocated to registers r6 r7 
                                   4568 ;------------------------------------------------------------
                                   4569 ;	../../../core/net/mac/xmac.c:1004: turn_off(int keep_radio_on)
                                   4570 ;	-----------------------------------------
                                   4571 ;	 function turn_off
                                   4572 ;	-----------------------------------------
      0013DA                       4573 _turn_off:
      0013DA AE 82            [24] 4574 	mov	r6,dpl
      0013DC AF 83            [24] 4575 	mov	r7,dph
                                   4576 ;	../../../core/net/mac/xmac.c:1006: xmac_is_on = 0;
      0013DE 90r00r08         [24] 4577 	mov	dptr,#_xmac_is_on
      0013E1 E4               [12] 4578 	clr	a
      0013E2 F0               [24] 4579 	movx	@dptr,a
                                   4580 ;	../../../core/net/mac/xmac.c:1007: if(keep_radio_on) {
      0013E3 EE               [12] 4581 	mov	a,r6
      0013E4 4F               [12] 4582 	orl	a,r7
      0013E5 60 2B            [24] 4583 	jz	00102$
                                   4584 ;	../../../core/net/mac/xmac.c:1008: return NETSTACK_RADIO.on();
      0013E7 90r00r18         [24] 4585 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      0013EA E4               [12] 4586 	clr	a
      0013EB 93               [24] 4587 	movc	a,@a+dptr
      0013EC FD               [12] 4588 	mov	r5,a
      0013ED A3               [24] 4589 	inc	dptr
      0013EE E4               [12] 4590 	clr	a
      0013EF 93               [24] 4591 	movc	a,@a+dptr
      0013F0 FE               [12] 4592 	mov	r6,a
      0013F1 A3               [24] 4593 	inc	dptr
      0013F2 E4               [12] 4594 	clr	a
      0013F3 93               [24] 4595 	movc	a,@a+dptr
      0013F4 FF               [12] 4596 	mov	r7,a
      0013F5 C0 07            [24] 4597 	push	ar7
      0013F7 C0 05            [24] 4598 	push	ar5
      0013F9 C0 06            [24] 4599 	push	ar6
      0013FB C0 07            [24] 4600 	push	ar7
      0013FD D0 02            [24] 4601 	pop	ar2
      0013FF D0 01            [24] 4602 	pop	ar1
      001401 D0 00            [24] 4603 	pop	ar0
      001403 12r00r00         [24] 4604 	lcall	__sdcc_banked_call
      001406 AD 82            [24] 4605 	mov	r5,dpl
      001408 AE 83            [24] 4606 	mov	r6,dph
      00140A D0 07            [24] 4607 	pop	ar7
      00140C 8D 82            [24] 4608 	mov	dpl,r5
      00140E 8E 83            [24] 4609 	mov	dph,r6
      001410 80 29            [24] 4610 	sjmp	00104$
      001412                       4611 00102$:
                                   4612 ;	../../../core/net/mac/xmac.c:1010: return NETSTACK_RADIO.off();
      001412 90r00r1B         [24] 4613 	mov	dptr,#(_cc2530_rf_driver + 0x001b)
      001415 E4               [12] 4614 	clr	a
      001416 93               [24] 4615 	movc	a,@a+dptr
      001417 FD               [12] 4616 	mov	r5,a
      001418 A3               [24] 4617 	inc	dptr
      001419 E4               [12] 4618 	clr	a
      00141A 93               [24] 4619 	movc	a,@a+dptr
      00141B FE               [12] 4620 	mov	r6,a
      00141C A3               [24] 4621 	inc	dptr
      00141D E4               [12] 4622 	clr	a
      00141E 93               [24] 4623 	movc	a,@a+dptr
      00141F FF               [12] 4624 	mov	r7,a
      001420 C0 07            [24] 4625 	push	ar7
      001422 C0 05            [24] 4626 	push	ar5
      001424 C0 06            [24] 4627 	push	ar6
      001426 C0 07            [24] 4628 	push	ar7
      001428 D0 02            [24] 4629 	pop	ar2
      00142A D0 01            [24] 4630 	pop	ar1
      00142C D0 00            [24] 4631 	pop	ar0
      00142E 12r00r00         [24] 4632 	lcall	__sdcc_banked_call
      001431 AD 82            [24] 4633 	mov	r5,dpl
      001433 AE 83            [24] 4634 	mov	r6,dph
      001435 D0 07            [24] 4635 	pop	ar7
      001437 8D 82            [24] 4636 	mov	dpl,r5
      001439 8E 83            [24] 4637 	mov	dph,r6
      00143B                       4638 00104$:
                                   4639 ;	../../../core/net/mac/xmac.c:1012: }
      00143B 02r00r00         [24] 4640 	ljmp	__sdcc_banked_ret
                                   4641 ;------------------------------------------------------------
                                   4642 ;Allocation info for local variables in function 'channel_check_interval'
                                   4643 ;------------------------------------------------------------
                                   4644 ;	../../../core/net/mac/xmac.c:1015: channel_check_interval(void)
                                   4645 ;	-----------------------------------------
                                   4646 ;	 function channel_check_interval
                                   4647 ;	-----------------------------------------
      00143E                       4648 _channel_check_interval:
                                   4649 ;	../../../core/net/mac/xmac.c:1017: return (1ul * CLOCK_SECOND * DEFAULT_PERIOD) / RTIMER_ARCH_SECOND;
      00143E 90 00 0F         [24] 4650 	mov	dptr,#0x000f
                                   4651 ;	../../../core/net/mac/xmac.c:1018: }
      001441 02r00r00         [24] 4652 	ljmp	__sdcc_banked_ret
                                   4653 	.area CSEG    (CODE)
                                   4654 	.area CONST   (CODE)
      000000                       4655 _xmac_driver:
      000000r18s00 80              4656 	.byte __str_0, (__str_0 >> 8),#0x80
      000003rF1s12s00              4657 	.byte _init, (_init >> 8), (_init >> 16)
      000006r22s0Es00              4658 	.byte _qsend_packet, (_qsend_packet >> 8), (_qsend_packet >> 16)
      000009rE0s0Es00              4659 	.byte _qsend_list, (_qsend_list >> 8), (_qsend_list >> 16)
      00000Cr5Bs0Fs00              4660 	.byte _input_packet, (_input_packet >> 8), (_input_packet >> 16)
      00000Fr80s13s00              4661 	.byte _turn_on, (_turn_on >> 8), (_turn_on >> 16)
      000012rDAs13s00              4662 	.byte _turn_off, (_turn_off >> 8), (_turn_off >> 16)
      000015r3Es14s00              4663 	.byte _channel_check_interval, (_channel_check_interval >> 8), (_channel_check_interval >> 16)
      000018                       4664 __str_0:
      000018 58 2D 4D 41 43        4665 	.ascii "X-MAC"
      00001D 00                    4666 	.db 0x00
                                   4667 	.area XINIT   (CODE)
      000000                       4668 __xinit__xmac_config:
      000000 61 00                 4669 	.byte #0x61,#0x00	; 97
      000002 40 07                 4670 	.byte #0x40,#0x07	; 1856
      000004 C4 08                 4671 	.byte #0xc4,#0x08	; 2244
      000006 3C 00                 4672 	.byte #0x3c,#0x00	; 60
      000008                       4673 __xinit__xmac_is_on:
      000008 00                    4674 	.db #0x00	; 0
      000009                       4675 __xinit__waiting_for_packet:
      000009 00                    4676 	.db #0x00	; 0
      00000A                       4677 __xinit__someone_is_sending:
      00000A 00                    4678 	.db #0x00	; 0
      00000B                       4679 __xinit__we_are_sending:
      00000B 00                    4680 	.db #0x00	; 0
      00000C                       4681 __xinit__radio_is_on:
      00000C 00                    4682 	.db #0x00	; 0
      00000D                       4683 __xinit__encounter_list_list:
                                   4684 ; generic printIvalPtr
      00000D 00 00 00              4685 	.byte #0x00,#0x00,#0x00
      000010                       4686 __xinit__encounter_list:
      000010r0Ds00 00              4687 	.byte _encounter_list_list, (_encounter_list_list >> 8),#0x00
      000013                       4688 __xinit__encounter_memb:
      000013 0D 00                 4689 	.byte #0x0d,#0x00	; 13
      000015 04 00                 4690 	.byte #0x04,#0x00	; 4
      000017r0Bs00 00              4691 	.byte _encounter_memb_memb_count, (_encounter_memb_memb_count >> 8),#0x00
      00001Ar0Fs00 00              4692 	.byte _encounter_memb_memb_mem, (_encounter_memb_memb_mem >> 8),#0x00
                                   4693 	.area CABS    (ABS,CODE)
