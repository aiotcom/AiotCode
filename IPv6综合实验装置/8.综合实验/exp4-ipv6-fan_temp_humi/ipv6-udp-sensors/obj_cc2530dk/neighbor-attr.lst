                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.4 #10774 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module neighbor_attr
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _rimeaddr_cmp
                                     12 	.globl _rimeaddr_copy
                                     13 	.globl _list_remove
                                     14 	.globl _list_push
                                     15 	.globl _list_head
                                     16 	.globl _memb_inmemb
                                     17 	.globl _memb_free
                                     18 	.globl _memb_alloc
                                     19 	.globl _ctimer_stop
                                     20 	.globl _ctimer_set
                                     21 	.globl ___memcpy
                                     22 	.globl _memset
                                     23 	.globl _ACTIVE
                                     24 	.globl _TX_BYTE
                                     25 	.globl _RX_BYTE
                                     26 	.globl _ERR
                                     27 	.globl _FE
                                     28 	.globl _SLAVE
                                     29 	.globl _RE
                                     30 	.globl _MODE
                                     31 	.globl _T3OVFIF
                                     32 	.globl _T3CH0IF
                                     33 	.globl _T3CH1IF
                                     34 	.globl _T4OVFIF
                                     35 	.globl _T4CH0IF
                                     36 	.globl _T4CH1IF
                                     37 	.globl _OVFIM
                                     38 	.globl _B_0
                                     39 	.globl _B_1
                                     40 	.globl _B_2
                                     41 	.globl _B_3
                                     42 	.globl _B_4
                                     43 	.globl _B_5
                                     44 	.globl _B_6
                                     45 	.globl _B_7
                                     46 	.globl _P2IF
                                     47 	.globl _UTX0IF
                                     48 	.globl _UTX1IF
                                     49 	.globl _P1IF
                                     50 	.globl _WDTIF
                                     51 	.globl _ACC_0
                                     52 	.globl _ACC_1
                                     53 	.globl _ACC_2
                                     54 	.globl _ACC_3
                                     55 	.globl _ACC_4
                                     56 	.globl _ACC_5
                                     57 	.globl _ACC_6
                                     58 	.globl _ACC_7
                                     59 	.globl _P
                                     60 	.globl _F1
                                     61 	.globl _OV
                                     62 	.globl _RS0
                                     63 	.globl _RS1
                                     64 	.globl _F0
                                     65 	.globl _AC
                                     66 	.globl _CY
                                     67 	.globl _DMAIF
                                     68 	.globl _T1IF
                                     69 	.globl _T2IF
                                     70 	.globl _T3IF
                                     71 	.globl _T4IF
                                     72 	.globl _P0IF
                                     73 	.globl _STIF
                                     74 	.globl _DMAIE
                                     75 	.globl _T1IE
                                     76 	.globl _T2IE
                                     77 	.globl _T3IE
                                     78 	.globl _T4IE
                                     79 	.globl _P0IE
                                     80 	.globl _RFERRIE
                                     81 	.globl _ADCIE
                                     82 	.globl _URX0IE
                                     83 	.globl _URX1IE
                                     84 	.globl _ENCIE
                                     85 	.globl _STIE
                                     86 	.globl _EA
                                     87 	.globl _P2_0
                                     88 	.globl _P2_1
                                     89 	.globl _P2_2
                                     90 	.globl _P2_3
                                     91 	.globl _P2_4
                                     92 	.globl _P2_5
                                     93 	.globl _P2_6
                                     94 	.globl _P2_7
                                     95 	.globl _ENCIF_0
                                     96 	.globl _ENCIF_1
                                     97 	.globl _P1_0
                                     98 	.globl _P1_1
                                     99 	.globl _P1_2
                                    100 	.globl _P1_3
                                    101 	.globl _P1_4
                                    102 	.globl _P1_5
                                    103 	.globl _P1_6
                                    104 	.globl _P1_7
                                    105 	.globl _IT0
                                    106 	.globl _RFERRIF
                                    107 	.globl _IT1
                                    108 	.globl _URX0IF
                                    109 	.globl _ADCIF
                                    110 	.globl _URX1IF
                                    111 	.globl _P0_0
                                    112 	.globl _P0_1
                                    113 	.globl _P0_2
                                    114 	.globl _P0_3
                                    115 	.globl _P0_4
                                    116 	.globl _P0_5
                                    117 	.globl _P0_6
                                    118 	.globl _P0_7
                                    119 	.globl _WDCTL
                                    120 	.globl _U1GCR
                                    121 	.globl _U1UCR
                                    122 	.globl _U1BAUD
                                    123 	.globl _U1DBUF
                                    124 	.globl _U1CSR
                                    125 	.globl _U0GCR
                                    126 	.globl _U0UCR
                                    127 	.globl _U0BAUD
                                    128 	.globl _U0DBUF
                                    129 	.globl _U0CSR
                                    130 	.globl _TIMIF
                                    131 	.globl _T4CC1
                                    132 	.globl _T4CCTL1
                                    133 	.globl _T4CC0
                                    134 	.globl _T4CCTL0
                                    135 	.globl _T4CTL
                                    136 	.globl _T4CNT
                                    137 	.globl _T3CC1
                                    138 	.globl _T3CCTL1
                                    139 	.globl _T3CC0
                                    140 	.globl _T3CCTL0
                                    141 	.globl _T3CTL
                                    142 	.globl _T3CNT
                                    143 	.globl _T2MSEL
                                    144 	.globl _T2IRQM
                                    145 	.globl _T2MOVF2
                                    146 	.globl _T2MOVF1
                                    147 	.globl _T2MOVF0
                                    148 	.globl _T2M1
                                    149 	.globl _T2M0
                                    150 	.globl _T2IRQF
                                    151 	.globl _T2EVTCFG
                                    152 	.globl _T2CTRL
                                    153 	.globl _T1STAT
                                    154 	.globl _T1CCTL2
                                    155 	.globl _T1CCTL1
                                    156 	.globl _T1CCTL0
                                    157 	.globl _T1CTL
                                    158 	.globl _T1CNTH
                                    159 	.globl _T1CNTL
                                    160 	.globl _T1CC2H
                                    161 	.globl _T1CC2L
                                    162 	.globl _T1CC1H
                                    163 	.globl _T1CC1L
                                    164 	.globl _T1CC0H
                                    165 	.globl _T1CC0L
                                    166 	.globl _CLKCONSTA
                                    167 	.globl _CLKCONCMD
                                    168 	.globl _SLEEPSTA
                                    169 	.globl _SLEEPCMD
                                    170 	.globl _STLOAD
                                    171 	.globl _ST2
                                    172 	.globl _ST1
                                    173 	.globl _ST0
                                    174 	.globl _RFERRF
                                    175 	.globl _RFIRQF0
                                    176 	.globl _RFST
                                    177 	.globl _RFD
                                    178 	.globl _RFIRQF1
                                    179 	.globl _PSBANK
                                    180 	.globl _FMAP
                                    181 	.globl _MEMCTR
                                    182 	.globl __XPAGE
                                    183 	.globl _MPAGE
                                    184 	.globl _PMUX
                                    185 	.globl _P2DIR
                                    186 	.globl _P1DIR
                                    187 	.globl _P0DIR
                                    188 	.globl _P2INP
                                    189 	.globl _P1INP
                                    190 	.globl _P2SEL
                                    191 	.globl _P1SEL
                                    192 	.globl _P0SEL
                                    193 	.globl _APCFG
                                    194 	.globl _PERCFG
                                    195 	.globl _P0INP
                                    196 	.globl _P2IEN
                                    197 	.globl _P1IEN
                                    198 	.globl _P0IEN
                                    199 	.globl _PICTL
                                    200 	.globl _P2IFG
                                    201 	.globl _P1IFG
                                    202 	.globl _P0IFG
                                    203 	.globl _DMAREQ
                                    204 	.globl _DMAARM
                                    205 	.globl _DMA0CFGH
                                    206 	.globl _DMA0CFGL
                                    207 	.globl _DMA1CFGH
                                    208 	.globl _DMA1CFGL
                                    209 	.globl _DMAIRQ
                                    210 	.globl _ENCCS
                                    211 	.globl _ENCDO
                                    212 	.globl _ENCDI
                                    213 	.globl _RNDH
                                    214 	.globl _RNDL
                                    215 	.globl _ADCH
                                    216 	.globl _ADCL
                                    217 	.globl _ADCCON3
                                    218 	.globl _ADCCON2
                                    219 	.globl _ADCCON1
                                    220 	.globl _B
                                    221 	.globl _IRCON2
                                    222 	.globl _ACC
                                    223 	.globl _PSW
                                    224 	.globl _IRCON
                                    225 	.globl _IP1
                                    226 	.globl _IEN1
                                    227 	.globl _IP0
                                    228 	.globl _IEN0
                                    229 	.globl _P2
                                    230 	.globl _S1CON
                                    231 	.globl _IEN2
                                    232 	.globl _S0CON
                                    233 	.globl _DPS
                                    234 	.globl _P1
                                    235 	.globl _TCON
                                    236 	.globl _PCON
                                    237 	.globl _DPH1
                                    238 	.globl _DPL1
                                    239 	.globl _DPH0
                                    240 	.globl _DPL0
                                    241 	.globl _SP
                                    242 	.globl _P0
                                    243 	.globl _X_IEEE_ADDR
                                    244 	.globl _X_INFOPAGE
                                    245 	.globl _X_P2DIR
                                    246 	.globl _X_P1DIR
                                    247 	.globl _X_P0DIR
                                    248 	.globl _X_U1GCR
                                    249 	.globl _X_U1UCR
                                    250 	.globl _X_U1BAUD
                                    251 	.globl _X_U1DBUF
                                    252 	.globl _X_U1CSR
                                    253 	.globl _X_P2INP
                                    254 	.globl _X_P1INP
                                    255 	.globl _X_P2SEL
                                    256 	.globl _X_P1SEL
                                    257 	.globl _X_P0SEL
                                    258 	.globl _X_APCFG
                                    259 	.globl _X_PERCFG
                                    260 	.globl _X_T4CC1
                                    261 	.globl _X_T4CCTL1
                                    262 	.globl _X_T4CC0
                                    263 	.globl _X_T4CCTL0
                                    264 	.globl _X_T4CTL
                                    265 	.globl _X_T4CNT
                                    266 	.globl _X_RFIRQF0
                                    267 	.globl _X_T1CCTL2
                                    268 	.globl _X_T1CCTL1
                                    269 	.globl _X_T1CCTL0
                                    270 	.globl _X_T1CTL
                                    271 	.globl _X_T1CNTH
                                    272 	.globl _X_T1CNTL
                                    273 	.globl _X_RFST
                                    274 	.globl _X_T1CC2H
                                    275 	.globl _X_T1CC2L
                                    276 	.globl _X_T1CC1H
                                    277 	.globl _X_T1CC1L
                                    278 	.globl _X_T1CC0H
                                    279 	.globl _X_T1CC0L
                                    280 	.globl _X_RFD
                                    281 	.globl _X_TIMIF
                                    282 	.globl _X_DMAREQ
                                    283 	.globl _X_DMAARM
                                    284 	.globl _X_DMA0CFGH
                                    285 	.globl _X_DMA0CFGL
                                    286 	.globl _X_DMA1CFGH
                                    287 	.globl _X_DMA1CFGL
                                    288 	.globl _X_DMAIRQ
                                    289 	.globl _X_T3CC1
                                    290 	.globl _X_T3CCTL1
                                    291 	.globl _X_T3CC0
                                    292 	.globl _X_T3CCTL0
                                    293 	.globl _X_T3CTL
                                    294 	.globl _X_T3CNT
                                    295 	.globl _X_WDCTL
                                    296 	.globl _X_MEMCTR
                                    297 	.globl _X_CLKCONCMD
                                    298 	.globl _X_U0GCR
                                    299 	.globl _X_U0UCR
                                    300 	.globl _X_T2MSEL
                                    301 	.globl _X_U0BAUD
                                    302 	.globl _X_U0DBUF
                                    303 	.globl _X_RFERRF
                                    304 	.globl _X_SLEEPCMD
                                    305 	.globl _X_RNDH
                                    306 	.globl _X_RNDL
                                    307 	.globl _X_ADCH
                                    308 	.globl _X_ADCL
                                    309 	.globl _X_ADCCON3
                                    310 	.globl _X_ADCCON2
                                    311 	.globl _X_ADCCON1
                                    312 	.globl _X_ENCCS
                                    313 	.globl _X_ENCDO
                                    314 	.globl _X_ENCDI
                                    315 	.globl _X_T1STAT
                                    316 	.globl _X_PMUX
                                    317 	.globl _X_STLOAD
                                    318 	.globl _X_P2IEN
                                    319 	.globl _X_P0IEN
                                    320 	.globl _X_T2IRQM
                                    321 	.globl _X_T2MOVF2
                                    322 	.globl _X_T2MOVF1
                                    323 	.globl _X_T2MOVF0
                                    324 	.globl _X_T2M1
                                    325 	.globl _X_T2M0
                                    326 	.globl _X_T2IRQF
                                    327 	.globl _X_P2
                                    328 	.globl _X_PSBANK
                                    329 	.globl _X_FMAP
                                    330 	.globl _X_CLKCONSTA
                                    331 	.globl _X_SLEEPSTA
                                    332 	.globl _X_T2EVTCFG
                                    333 	.globl _X_ST2
                                    334 	.globl _X_ST1
                                    335 	.globl _X_ST0
                                    336 	.globl _X_T2CTRL
                                    337 	.globl _X__XPAGE
                                    338 	.globl _X_MPAGE
                                    339 	.globl _X_RFIRQF1
                                    340 	.globl _X_P1
                                    341 	.globl _X_P0INP
                                    342 	.globl _X_P1IEN
                                    343 	.globl _X_PICTL
                                    344 	.globl _X_P2IFG
                                    345 	.globl _X_P1IFG
                                    346 	.globl _X_P0IFG
                                    347 	.globl _X_U0CSR
                                    348 	.globl _X_P0
                                    349 	.globl _USBF5
                                    350 	.globl _USBF4
                                    351 	.globl _USBF3
                                    352 	.globl _USBF2
                                    353 	.globl _USBF1
                                    354 	.globl _USBF0
                                    355 	.globl _USBCNTH
                                    356 	.globl _USBCNTL
                                    357 	.globl _USBCNT0
                                    358 	.globl _USBCSOH
                                    359 	.globl _USBCSOL
                                    360 	.globl _USBMAXO
                                    361 	.globl _USBCSIH
                                    362 	.globl _USBCSIL
                                    363 	.globl _USBCS0
                                    364 	.globl _USBMAXI
                                    365 	.globl _USBCTRL
                                    366 	.globl _USBINDEX
                                    367 	.globl _USBFRMH
                                    368 	.globl _USBFRML
                                    369 	.globl _USBCIE
                                    370 	.globl _USBOIE
                                    371 	.globl _USBIIE
                                    372 	.globl _USBCIF
                                    373 	.globl _USBOIF
                                    374 	.globl _USBIIF
                                    375 	.globl _USBPOW
                                    376 	.globl _USBADDR
                                    377 	.globl _CSPT
                                    378 	.globl _CSPZ
                                    379 	.globl _CSPY
                                    380 	.globl _CSPX
                                    381 	.globl _CSPSTAT
                                    382 	.globl _CSPCTRL
                                    383 	.globl _CSPPROG23
                                    384 	.globl _CSPPROG22
                                    385 	.globl _CSPPROG21
                                    386 	.globl _CSPPROG20
                                    387 	.globl _CSPPROG19
                                    388 	.globl _CSPPROG18
                                    389 	.globl _CSPPROG17
                                    390 	.globl _CSPPROG16
                                    391 	.globl _CSPPROG15
                                    392 	.globl _CSPPROG14
                                    393 	.globl _CSPPROG13
                                    394 	.globl _CSPPROG12
                                    395 	.globl _CSPPROG11
                                    396 	.globl _CSPPROG10
                                    397 	.globl _CSPPROG9
                                    398 	.globl _CSPPROG8
                                    399 	.globl _CSPPROG7
                                    400 	.globl _CSPPROG6
                                    401 	.globl _CSPPROG5
                                    402 	.globl _CSPPROG4
                                    403 	.globl _CSPPROG3
                                    404 	.globl _CSPPROG2
                                    405 	.globl _CSPPROG1
                                    406 	.globl _CSPPROG0
                                    407 	.globl _RFC_OBS_CTRL2
                                    408 	.globl _RFC_OBS_CTRL1
                                    409 	.globl _RFC_OBS_CTRL0
                                    410 	.globl _TXFILTCFG
                                    411 	.globl _PTEST1
                                    412 	.globl _PTEST0
                                    413 	.globl _ATEST
                                    414 	.globl _DACTEST2
                                    415 	.globl _DACTEST1
                                    416 	.globl _DACTEST0
                                    417 	.globl _MDMTEST1
                                    418 	.globl _MDMTEST0
                                    419 	.globl _ADCTEST2
                                    420 	.globl _ADCTEST1
                                    421 	.globl _ADCTEST0
                                    422 	.globl _AGCCTRL3
                                    423 	.globl _AGCCTRL2
                                    424 	.globl _AGCCTRL1
                                    425 	.globl _AGCCTRL0
                                    426 	.globl _FSCAL3
                                    427 	.globl _FSCAL2
                                    428 	.globl _FSCAL1
                                    429 	.globl _FSCAL0
                                    430 	.globl _FSCTRL
                                    431 	.globl _RXCTRL
                                    432 	.globl _FREQEST
                                    433 	.globl _MDMCTRL1
                                    434 	.globl _MDMCTRL0
                                    435 	.globl _RFRND
                                    436 	.globl _RFERRM
                                    437 	.globl _RFIRQM1
                                    438 	.globl _RFIRQM0
                                    439 	.globl _TXLAST_PTR
                                    440 	.globl _TXFIRST_PTR
                                    441 	.globl _RXP1_PTR
                                    442 	.globl _RXLAST_PTR
                                    443 	.globl _RXFIRST_PTR
                                    444 	.globl _TXFIFOCNT
                                    445 	.globl _RXFIFOCNT
                                    446 	.globl _RXFIRST
                                    447 	.globl _RSSISTAT
                                    448 	.globl _RSSI
                                    449 	.globl _CCACTRL1
                                    450 	.globl _CCACTRL0
                                    451 	.globl _FSMCTRL
                                    452 	.globl _FIFOPCTRL
                                    453 	.globl _FSMSTAT1
                                    454 	.globl _FSMSTAT0
                                    455 	.globl _TXCTRL
                                    456 	.globl _TXPOWER
                                    457 	.globl _FREQCTRL
                                    458 	.globl _FREQTUNE
                                    459 	.globl _RXMASKCLR
                                    460 	.globl _RXMASKSET
                                    461 	.globl _RXENABLE
                                    462 	.globl _FRMCTRL1
                                    463 	.globl _FRMCTRL0
                                    464 	.globl _SRCEXTEN2
                                    465 	.globl _SRCEXTEN1
                                    466 	.globl _SRCEXTEN0
                                    467 	.globl _SRCSHORTEN2
                                    468 	.globl _SRCSHORTEN1
                                    469 	.globl _SRCSHORTEN0
                                    470 	.globl _SRCMATCH
                                    471 	.globl _FRMFILT1
                                    472 	.globl _FRMFILT0
                                    473 	.globl _SHORT_ADDR1
                                    474 	.globl _SHORT_ADDR0
                                    475 	.globl _PAN_ID1
                                    476 	.globl _PAN_ID0
                                    477 	.globl _EXT_ADDR7
                                    478 	.globl _EXT_ADDR6
                                    479 	.globl _EXT_ADDR5
                                    480 	.globl _EXT_ADDR4
                                    481 	.globl _EXT_ADDR3
                                    482 	.globl _EXT_ADDR2
                                    483 	.globl _EXT_ADDR1
                                    484 	.globl _EXT_ADDR0
                                    485 	.globl _SRCSHORTPENDEN2
                                    486 	.globl _SRCSHORTPENDEN1
                                    487 	.globl _SRCSHORTPENDEN0
                                    488 	.globl _SRCEXTPENDEN2
                                    489 	.globl _SRCEXTPENDEN1
                                    490 	.globl _SRCEXTPENDEN0
                                    491 	.globl _SRCRESINDEX
                                    492 	.globl _SRCRESMASK2
                                    493 	.globl _SRCRESMASK1
                                    494 	.globl _SRCRESMASK0
                                    495 	.globl _SRC_ADDR_TABLE
                                    496 	.globl _TXFIFO
                                    497 	.globl _RXFIFO
                                    498 	.globl _RFCORE_RAM
                                    499 	.globl _CMPCTL
                                    500 	.globl _OPAMPS
                                    501 	.globl _OPAMPC
                                    502 	.globl _STCV2
                                    503 	.globl _STCV1
                                    504 	.globl _STCV0
                                    505 	.globl _STCS
                                    506 	.globl _STCC
                                    507 	.globl _T1CC4H
                                    508 	.globl _T1CC4L
                                    509 	.globl _T1CC3H
                                    510 	.globl _T1CC3L
                                    511 	.globl _XX_T1CC2H
                                    512 	.globl _XX_T1CC2L
                                    513 	.globl _XX_T1CC1H
                                    514 	.globl _XX_T1CC1L
                                    515 	.globl _XX_T1CC0H
                                    516 	.globl _XX_T1CC0L
                                    517 	.globl _T1CCTL4
                                    518 	.globl _T1CCTL3
                                    519 	.globl _XX_T1CCTL2
                                    520 	.globl _XX_T1CCTL1
                                    521 	.globl _XX_T1CCTL0
                                    522 	.globl _CLD
                                    523 	.globl _IRCTL
                                    524 	.globl _CHIPINFO1
                                    525 	.globl _CHIPINFO0
                                    526 	.globl _FWDATA
                                    527 	.globl _FADDRH
                                    528 	.globl _FADDRL
                                    529 	.globl _FCTL
                                    530 	.globl _IVCTRL
                                    531 	.globl _BATTMON
                                    532 	.globl _SRCRC
                                    533 	.globl _DBGDATA
                                    534 	.globl _TESTREG0
                                    535 	.globl _CHIPID
                                    536 	.globl _CHVER
                                    537 	.globl _OBSSEL5
                                    538 	.globl _OBSSEL4
                                    539 	.globl _OBSSEL3
                                    540 	.globl _OBSSEL2
                                    541 	.globl _OBSSEL1
                                    542 	.globl _OBSSEL0
                                    543 	.globl _I2CIO
                                    544 	.globl _I2CWC
                                    545 	.globl _I2CADDR
                                    546 	.globl _I2CDATA
                                    547 	.globl _I2CSTAT
                                    548 	.globl _I2CCFG
                                    549 	.globl _OPAMPMC
                                    550 	.globl _MONMUX
                                    551 	.globl _neighbor_attr_list_neighbors
                                    552 	.globl _neighbor_attr_register
                                    553 	.globl _neighbor_attr_has_neighbor
                                    554 	.globl _neighbor_attr_add_neighbor
                                    555 	.globl _neighbor_attr_remove_neighbor
                                    556 	.globl _neighbor_attr_get_data
                                    557 	.globl _neighbor_attr_set_data
                                    558 	.globl _neighbor_attr_tick
                                    559 	.globl _neighbor_attr_get_timeout
                                    560 	.globl _neighbor_attr_set_timeout
                                    561 ;--------------------------------------------------------
                                    562 ; special function registers
                                    563 ;--------------------------------------------------------
                                    564 	.area RSEG    (ABS,DATA)
      000000                        565 	.org 0x0000
                           000080   566 _P0	=	0x0080
                           000081   567 _SP	=	0x0081
                           000082   568 _DPL0	=	0x0082
                           000083   569 _DPH0	=	0x0083
                           000084   570 _DPL1	=	0x0084
                           000085   571 _DPH1	=	0x0085
                           000087   572 _PCON	=	0x0087
                           000088   573 _TCON	=	0x0088
                           000090   574 _P1	=	0x0090
                           000092   575 _DPS	=	0x0092
                           000098   576 _S0CON	=	0x0098
                           00009A   577 _IEN2	=	0x009a
                           00009B   578 _S1CON	=	0x009b
                           0000A0   579 _P2	=	0x00a0
                           0000A8   580 _IEN0	=	0x00a8
                           0000A9   581 _IP0	=	0x00a9
                           0000B8   582 _IEN1	=	0x00b8
                           0000B9   583 _IP1	=	0x00b9
                           0000C0   584 _IRCON	=	0x00c0
                           0000D0   585 _PSW	=	0x00d0
                           0000E0   586 _ACC	=	0x00e0
                           0000E8   587 _IRCON2	=	0x00e8
                           0000F0   588 _B	=	0x00f0
                           0000B4   589 _ADCCON1	=	0x00b4
                           0000B5   590 _ADCCON2	=	0x00b5
                           0000B6   591 _ADCCON3	=	0x00b6
                           0000BA   592 _ADCL	=	0x00ba
                           0000BB   593 _ADCH	=	0x00bb
                           0000BC   594 _RNDL	=	0x00bc
                           0000BD   595 _RNDH	=	0x00bd
                           0000B1   596 _ENCDI	=	0x00b1
                           0000B2   597 _ENCDO	=	0x00b2
                           0000B3   598 _ENCCS	=	0x00b3
                           0000D1   599 _DMAIRQ	=	0x00d1
                           0000D2   600 _DMA1CFGL	=	0x00d2
                           0000D3   601 _DMA1CFGH	=	0x00d3
                           0000D4   602 _DMA0CFGL	=	0x00d4
                           0000D5   603 _DMA0CFGH	=	0x00d5
                           0000D6   604 _DMAARM	=	0x00d6
                           0000D7   605 _DMAREQ	=	0x00d7
                           000089   606 _P0IFG	=	0x0089
                           00008A   607 _P1IFG	=	0x008a
                           00008B   608 _P2IFG	=	0x008b
                           00008C   609 _PICTL	=	0x008c
                           0000AB   610 _P0IEN	=	0x00ab
                           00008D   611 _P1IEN	=	0x008d
                           0000AC   612 _P2IEN	=	0x00ac
                           00008F   613 _P0INP	=	0x008f
                           0000F1   614 _PERCFG	=	0x00f1
                           0000F2   615 _APCFG	=	0x00f2
                           0000F3   616 _P0SEL	=	0x00f3
                           0000F4   617 _P1SEL	=	0x00f4
                           0000F5   618 _P2SEL	=	0x00f5
                           0000F6   619 _P1INP	=	0x00f6
                           0000F7   620 _P2INP	=	0x00f7
                           0000FD   621 _P0DIR	=	0x00fd
                           0000FE   622 _P1DIR	=	0x00fe
                           0000FF   623 _P2DIR	=	0x00ff
                           0000AE   624 _PMUX	=	0x00ae
                           000093   625 _MPAGE	=	0x0093
                           000093   626 __XPAGE	=	0x0093
                           0000C7   627 _MEMCTR	=	0x00c7
                           00009F   628 _FMAP	=	0x009f
                           00009F   629 _PSBANK	=	0x009f
                           000091   630 _RFIRQF1	=	0x0091
                           0000D9   631 _RFD	=	0x00d9
                           0000E1   632 _RFST	=	0x00e1
                           0000E9   633 _RFIRQF0	=	0x00e9
                           0000BF   634 _RFERRF	=	0x00bf
                           000095   635 _ST0	=	0x0095
                           000096   636 _ST1	=	0x0096
                           000097   637 _ST2	=	0x0097
                           0000AD   638 _STLOAD	=	0x00ad
                           0000BE   639 _SLEEPCMD	=	0x00be
                           00009D   640 _SLEEPSTA	=	0x009d
                           0000C6   641 _CLKCONCMD	=	0x00c6
                           00009E   642 _CLKCONSTA	=	0x009e
                           0000DA   643 _T1CC0L	=	0x00da
                           0000DB   644 _T1CC0H	=	0x00db
                           0000DC   645 _T1CC1L	=	0x00dc
                           0000DD   646 _T1CC1H	=	0x00dd
                           0000DE   647 _T1CC2L	=	0x00de
                           0000DF   648 _T1CC2H	=	0x00df
                           0000E2   649 _T1CNTL	=	0x00e2
                           0000E3   650 _T1CNTH	=	0x00e3
                           0000E4   651 _T1CTL	=	0x00e4
                           0000E5   652 _T1CCTL0	=	0x00e5
                           0000E6   653 _T1CCTL1	=	0x00e6
                           0000E7   654 _T1CCTL2	=	0x00e7
                           0000AF   655 _T1STAT	=	0x00af
                           000094   656 _T2CTRL	=	0x0094
                           00009C   657 _T2EVTCFG	=	0x009c
                           0000A1   658 _T2IRQF	=	0x00a1
                           0000A2   659 _T2M0	=	0x00a2
                           0000A3   660 _T2M1	=	0x00a3
                           0000A4   661 _T2MOVF0	=	0x00a4
                           0000A5   662 _T2MOVF1	=	0x00a5
                           0000A6   663 _T2MOVF2	=	0x00a6
                           0000A7   664 _T2IRQM	=	0x00a7
                           0000C3   665 _T2MSEL	=	0x00c3
                           0000CA   666 _T3CNT	=	0x00ca
                           0000CB   667 _T3CTL	=	0x00cb
                           0000CC   668 _T3CCTL0	=	0x00cc
                           0000CD   669 _T3CC0	=	0x00cd
                           0000CE   670 _T3CCTL1	=	0x00ce
                           0000CF   671 _T3CC1	=	0x00cf
                           0000EA   672 _T4CNT	=	0x00ea
                           0000EB   673 _T4CTL	=	0x00eb
                           0000EC   674 _T4CCTL0	=	0x00ec
                           0000ED   675 _T4CC0	=	0x00ed
                           0000EE   676 _T4CCTL1	=	0x00ee
                           0000EF   677 _T4CC1	=	0x00ef
                           0000D8   678 _TIMIF	=	0x00d8
                           000086   679 _U0CSR	=	0x0086
                           0000C1   680 _U0DBUF	=	0x00c1
                           0000C2   681 _U0BAUD	=	0x00c2
                           0000C4   682 _U0UCR	=	0x00c4
                           0000C5   683 _U0GCR	=	0x00c5
                           0000F8   684 _U1CSR	=	0x00f8
                           0000F9   685 _U1DBUF	=	0x00f9
                           0000FA   686 _U1BAUD	=	0x00fa
                           0000FB   687 _U1UCR	=	0x00fb
                           0000FC   688 _U1GCR	=	0x00fc
                           0000C9   689 _WDCTL	=	0x00c9
                                    690 ;--------------------------------------------------------
                                    691 ; special function bits
                                    692 ;--------------------------------------------------------
                                    693 	.area RSEG    (ABS,DATA)
      000000                        694 	.org 0x0000
                           000087   695 _P0_7	=	0x0087
                           000086   696 _P0_6	=	0x0086
                           000085   697 _P0_5	=	0x0085
                           000084   698 _P0_4	=	0x0084
                           000083   699 _P0_3	=	0x0083
                           000082   700 _P0_2	=	0x0082
                           000081   701 _P0_1	=	0x0081
                           000080   702 _P0_0	=	0x0080
                           00008F   703 _URX1IF	=	0x008f
                           00008D   704 _ADCIF	=	0x008d
                           00008B   705 _URX0IF	=	0x008b
                           00008A   706 _IT1	=	0x008a
                           000089   707 _RFERRIF	=	0x0089
                           000088   708 _IT0	=	0x0088
                           000097   709 _P1_7	=	0x0097
                           000096   710 _P1_6	=	0x0096
                           000095   711 _P1_5	=	0x0095
                           000094   712 _P1_4	=	0x0094
                           000093   713 _P1_3	=	0x0093
                           000092   714 _P1_2	=	0x0092
                           000091   715 _P1_1	=	0x0091
                           000090   716 _P1_0	=	0x0090
                           000099   717 _ENCIF_1	=	0x0099
                           000098   718 _ENCIF_0	=	0x0098
                           0000A7   719 _P2_7	=	0x00a7
                           0000A6   720 _P2_6	=	0x00a6
                           0000A5   721 _P2_5	=	0x00a5
                           0000A4   722 _P2_4	=	0x00a4
                           0000A3   723 _P2_3	=	0x00a3
                           0000A2   724 _P2_2	=	0x00a2
                           0000A1   725 _P2_1	=	0x00a1
                           0000A0   726 _P2_0	=	0x00a0
                           0000AF   727 _EA	=	0x00af
                           0000AD   728 _STIE	=	0x00ad
                           0000AC   729 _ENCIE	=	0x00ac
                           0000AB   730 _URX1IE	=	0x00ab
                           0000AA   731 _URX0IE	=	0x00aa
                           0000A9   732 _ADCIE	=	0x00a9
                           0000A8   733 _RFERRIE	=	0x00a8
                           0000BD   734 _P0IE	=	0x00bd
                           0000BC   735 _T4IE	=	0x00bc
                           0000BB   736 _T3IE	=	0x00bb
                           0000BA   737 _T2IE	=	0x00ba
                           0000B9   738 _T1IE	=	0x00b9
                           0000B8   739 _DMAIE	=	0x00b8
                           0000C7   740 _STIF	=	0x00c7
                           0000C5   741 _P0IF	=	0x00c5
                           0000C4   742 _T4IF	=	0x00c4
                           0000C3   743 _T3IF	=	0x00c3
                           0000C2   744 _T2IF	=	0x00c2
                           0000C1   745 _T1IF	=	0x00c1
                           0000C0   746 _DMAIF	=	0x00c0
                           0000D7   747 _CY	=	0x00d7
                           0000D6   748 _AC	=	0x00d6
                           0000D5   749 _F0	=	0x00d5
                           0000D4   750 _RS1	=	0x00d4
                           0000D3   751 _RS0	=	0x00d3
                           0000D2   752 _OV	=	0x00d2
                           0000D1   753 _F1	=	0x00d1
                           0000D0   754 _P	=	0x00d0
                           0000E7   755 _ACC_7	=	0x00e7
                           0000E6   756 _ACC_6	=	0x00e6
                           0000E5   757 _ACC_5	=	0x00e5
                           0000E4   758 _ACC_4	=	0x00e4
                           0000E3   759 _ACC_3	=	0x00e3
                           0000E2   760 _ACC_2	=	0x00e2
                           0000E1   761 _ACC_1	=	0x00e1
                           0000E0   762 _ACC_0	=	0x00e0
                           0000EC   763 _WDTIF	=	0x00ec
                           0000EB   764 _P1IF	=	0x00eb
                           0000EA   765 _UTX1IF	=	0x00ea
                           0000E9   766 _UTX0IF	=	0x00e9
                           0000E8   767 _P2IF	=	0x00e8
                           0000F7   768 _B_7	=	0x00f7
                           0000F6   769 _B_6	=	0x00f6
                           0000F5   770 _B_5	=	0x00f5
                           0000F4   771 _B_4	=	0x00f4
                           0000F3   772 _B_3	=	0x00f3
                           0000F2   773 _B_2	=	0x00f2
                           0000F1   774 _B_1	=	0x00f1
                           0000F0   775 _B_0	=	0x00f0
                           0000DE   776 _OVFIM	=	0x00de
                           0000DD   777 _T4CH1IF	=	0x00dd
                           0000DC   778 _T4CH0IF	=	0x00dc
                           0000DB   779 _T4OVFIF	=	0x00db
                           0000DA   780 _T3CH1IF	=	0x00da
                           0000D9   781 _T3CH0IF	=	0x00d9
                           0000D8   782 _T3OVFIF	=	0x00d8
                           0000FF   783 _MODE	=	0x00ff
                           0000FE   784 _RE	=	0x00fe
                           0000FD   785 _SLAVE	=	0x00fd
                           0000FC   786 _FE	=	0x00fc
                           0000FB   787 _ERR	=	0x00fb
                           0000FA   788 _RX_BYTE	=	0x00fa
                           0000F9   789 _TX_BYTE	=	0x00f9
                           0000F8   790 _ACTIVE	=	0x00f8
                                    791 ;--------------------------------------------------------
                                    792 ; overlayable register banks
                                    793 ;--------------------------------------------------------
                                    794 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        795 	.ds 8
                                    796 ;--------------------------------------------------------
                                    797 ; overlayable bit register bank
                                    798 ;--------------------------------------------------------
                                    799 	.area BIT_BANK	(REL,OVR,DATA)
      000000                        800 bits:
      000000                        801 	.ds 1
                           008000   802 	b0 = bits[0]
                           008100   803 	b1 = bits[1]
                           008200   804 	b2 = bits[2]
                           008300   805 	b3 = bits[3]
                           008400   806 	b4 = bits[4]
                           008500   807 	b5 = bits[5]
                           008600   808 	b6 = bits[6]
                           008700   809 	b7 = bits[7]
                                    810 ;--------------------------------------------------------
                                    811 ; internal ram data
                                    812 ;--------------------------------------------------------
                                    813 	.area DSEG    (DATA)
                                    814 ;--------------------------------------------------------
                                    815 ; overlayable items in internal ram 
                                    816 ;--------------------------------------------------------
                                    817 ;--------------------------------------------------------
                                    818 ; indirectly addressable internal ram data
                                    819 ;--------------------------------------------------------
                                    820 	.area ISEG    (DATA)
                                    821 ;--------------------------------------------------------
                                    822 ; absolute internal ram data
                                    823 ;--------------------------------------------------------
                                    824 	.area IABS    (ABS,DATA)
                                    825 	.area IABS    (ABS,DATA)
                                    826 ;--------------------------------------------------------
                                    827 ; bit data
                                    828 ;--------------------------------------------------------
                                    829 	.area BSEG    (BIT)
                                    830 ;--------------------------------------------------------
                                    831 ; paged external ram data
                                    832 ;--------------------------------------------------------
                                    833 	.area PSEG    (PAG,XDATA)
                                    834 ;--------------------------------------------------------
                                    835 ; external ram data
                                    836 ;--------------------------------------------------------
                                    837 	.area XSEG    (XDATA)
                           0061A6   838 _MONMUX	=	0x61a6
                           0061A6   839 _OPAMPMC	=	0x61a6
                           006230   840 _I2CCFG	=	0x6230
                           006231   841 _I2CSTAT	=	0x6231
                           006232   842 _I2CDATA	=	0x6232
                           006233   843 _I2CADDR	=	0x6233
                           006234   844 _I2CWC	=	0x6234
                           006235   845 _I2CIO	=	0x6235
                           006243   846 _OBSSEL0	=	0x6243
                           006244   847 _OBSSEL1	=	0x6244
                           006245   848 _OBSSEL2	=	0x6245
                           006246   849 _OBSSEL3	=	0x6246
                           006247   850 _OBSSEL4	=	0x6247
                           006248   851 _OBSSEL5	=	0x6248
                           006249   852 _CHVER	=	0x6249
                           00624A   853 _CHIPID	=	0x624a
                           00624B   854 _TESTREG0	=	0x624b
                           006260   855 _DBGDATA	=	0x6260
                           006262   856 _SRCRC	=	0x6262
                           006264   857 _BATTMON	=	0x6264
                           006265   858 _IVCTRL	=	0x6265
                           006270   859 _FCTL	=	0x6270
                           006271   860 _FADDRL	=	0x6271
                           006272   861 _FADDRH	=	0x6272
                           006273   862 _FWDATA	=	0x6273
                           006276   863 _CHIPINFO0	=	0x6276
                           006277   864 _CHIPINFO1	=	0x6277
                           006281   865 _IRCTL	=	0x6281
                           006290   866 _CLD	=	0x6290
                           0062A0   867 _XX_T1CCTL0	=	0x62a0
                           0062A1   868 _XX_T1CCTL1	=	0x62a1
                           0062A2   869 _XX_T1CCTL2	=	0x62a2
                           0062A3   870 _T1CCTL3	=	0x62a3
                           0062A4   871 _T1CCTL4	=	0x62a4
                           0062A6   872 _XX_T1CC0L	=	0x62a6
                           0062A7   873 _XX_T1CC0H	=	0x62a7
                           0062A8   874 _XX_T1CC1L	=	0x62a8
                           0062A9   875 _XX_T1CC1H	=	0x62a9
                           0062AA   876 _XX_T1CC2L	=	0x62aa
                           0062AB   877 _XX_T1CC2H	=	0x62ab
                           0062AC   878 _T1CC3L	=	0x62ac
                           0062AD   879 _T1CC3H	=	0x62ad
                           0062AE   880 _T1CC4L	=	0x62ae
                           0062AF   881 _T1CC4H	=	0x62af
                           0062B0   882 _STCC	=	0x62b0
                           0062B1   883 _STCS	=	0x62b1
                           0062B2   884 _STCV0	=	0x62b2
                           0062B3   885 _STCV1	=	0x62b3
                           0062B4   886 _STCV2	=	0x62b4
                           0062C0   887 _OPAMPC	=	0x62c0
                           0062C1   888 _OPAMPS	=	0x62c1
                           0062D0   889 _CMPCTL	=	0x62d0
                           006000   890 _RFCORE_RAM	=	0x6000
                           006000   891 _RXFIFO	=	0x6000
                           006080   892 _TXFIFO	=	0x6080
                           006100   893 _SRC_ADDR_TABLE	=	0x6100
                           006160   894 _SRCRESMASK0	=	0x6160
                           006161   895 _SRCRESMASK1	=	0x6161
                           006162   896 _SRCRESMASK2	=	0x6162
                           006163   897 _SRCRESINDEX	=	0x6163
                           006164   898 _SRCEXTPENDEN0	=	0x6164
                           006165   899 _SRCEXTPENDEN1	=	0x6165
                           006166   900 _SRCEXTPENDEN2	=	0x6166
                           006167   901 _SRCSHORTPENDEN0	=	0x6167
                           006168   902 _SRCSHORTPENDEN1	=	0x6168
                           006169   903 _SRCSHORTPENDEN2	=	0x6169
                           00616A   904 _EXT_ADDR0	=	0x616a
                           00616B   905 _EXT_ADDR1	=	0x616b
                           00616C   906 _EXT_ADDR2	=	0x616c
                           00616D   907 _EXT_ADDR3	=	0x616d
                           00616E   908 _EXT_ADDR4	=	0x616e
                           00616F   909 _EXT_ADDR5	=	0x616f
                           006170   910 _EXT_ADDR6	=	0x6170
                           006171   911 _EXT_ADDR7	=	0x6171
                           006172   912 _PAN_ID0	=	0x6172
                           006173   913 _PAN_ID1	=	0x6173
                           006174   914 _SHORT_ADDR0	=	0x6174
                           006175   915 _SHORT_ADDR1	=	0x6175
                           006180   916 _FRMFILT0	=	0x6180
                           006181   917 _FRMFILT1	=	0x6181
                           006182   918 _SRCMATCH	=	0x6182
                           006183   919 _SRCSHORTEN0	=	0x6183
                           006184   920 _SRCSHORTEN1	=	0x6184
                           006185   921 _SRCSHORTEN2	=	0x6185
                           006186   922 _SRCEXTEN0	=	0x6186
                           006187   923 _SRCEXTEN1	=	0x6187
                           006188   924 _SRCEXTEN2	=	0x6188
                           006189   925 _FRMCTRL0	=	0x6189
                           00618A   926 _FRMCTRL1	=	0x618a
                           00618B   927 _RXENABLE	=	0x618b
                           00618C   928 _RXMASKSET	=	0x618c
                           00618D   929 _RXMASKCLR	=	0x618d
                           00618E   930 _FREQTUNE	=	0x618e
                           00618F   931 _FREQCTRL	=	0x618f
                           006190   932 _TXPOWER	=	0x6190
                           006191   933 _TXCTRL	=	0x6191
                           006192   934 _FSMSTAT0	=	0x6192
                           006193   935 _FSMSTAT1	=	0x6193
                           006194   936 _FIFOPCTRL	=	0x6194
                           006195   937 _FSMCTRL	=	0x6195
                           006196   938 _CCACTRL0	=	0x6196
                           006197   939 _CCACTRL1	=	0x6197
                           006198   940 _RSSI	=	0x6198
                           006199   941 _RSSISTAT	=	0x6199
                           00619A   942 _RXFIRST	=	0x619a
                           00619B   943 _RXFIFOCNT	=	0x619b
                           00619C   944 _TXFIFOCNT	=	0x619c
                           00619D   945 _RXFIRST_PTR	=	0x619d
                           00619E   946 _RXLAST_PTR	=	0x619e
                           00619F   947 _RXP1_PTR	=	0x619f
                           0061A1   948 _TXFIRST_PTR	=	0x61a1
                           0061A2   949 _TXLAST_PTR	=	0x61a2
                           0061A3   950 _RFIRQM0	=	0x61a3
                           0061A4   951 _RFIRQM1	=	0x61a4
                           0061A5   952 _RFERRM	=	0x61a5
                           0061A7   953 _RFRND	=	0x61a7
                           0061A8   954 _MDMCTRL0	=	0x61a8
                           0061A9   955 _MDMCTRL1	=	0x61a9
                           0061AA   956 _FREQEST	=	0x61aa
                           0061AB   957 _RXCTRL	=	0x61ab
                           0061AC   958 _FSCTRL	=	0x61ac
                           0061AD   959 _FSCAL0	=	0x61ad
                           0061AE   960 _FSCAL1	=	0x61ae
                           0061AF   961 _FSCAL2	=	0x61af
                           0061B0   962 _FSCAL3	=	0x61b0
                           0061B1   963 _AGCCTRL0	=	0x61b1
                           0061B2   964 _AGCCTRL1	=	0x61b2
                           0061B3   965 _AGCCTRL2	=	0x61b3
                           0061B4   966 _AGCCTRL3	=	0x61b4
                           0061B5   967 _ADCTEST0	=	0x61b5
                           0061B6   968 _ADCTEST1	=	0x61b6
                           0061B7   969 _ADCTEST2	=	0x61b7
                           0061B8   970 _MDMTEST0	=	0x61b8
                           0061B9   971 _MDMTEST1	=	0x61b9
                           0061BA   972 _DACTEST0	=	0x61ba
                           0061BB   973 _DACTEST1	=	0x61bb
                           0061BC   974 _DACTEST2	=	0x61bc
                           0061BD   975 _ATEST	=	0x61bd
                           0061BE   976 _PTEST0	=	0x61be
                           0061BF   977 _PTEST1	=	0x61bf
                           0061FA   978 _TXFILTCFG	=	0x61fa
                           0061EB   979 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   980 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   981 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   982 _CSPPROG0	=	0x61c0
                           0061C1   983 _CSPPROG1	=	0x61c1
                           0061C2   984 _CSPPROG2	=	0x61c2
                           0061C3   985 _CSPPROG3	=	0x61c3
                           0061C4   986 _CSPPROG4	=	0x61c4
                           0061C5   987 _CSPPROG5	=	0x61c5
                           0061C6   988 _CSPPROG6	=	0x61c6
                           0061C7   989 _CSPPROG7	=	0x61c7
                           0061C8   990 _CSPPROG8	=	0x61c8
                           0061C9   991 _CSPPROG9	=	0x61c9
                           0061CA   992 _CSPPROG10	=	0x61ca
                           0061CB   993 _CSPPROG11	=	0x61cb
                           0061CC   994 _CSPPROG12	=	0x61cc
                           0061CD   995 _CSPPROG13	=	0x61cd
                           0061CE   996 _CSPPROG14	=	0x61ce
                           0061CF   997 _CSPPROG15	=	0x61cf
                           0061D0   998 _CSPPROG16	=	0x61d0
                           0061D1   999 _CSPPROG17	=	0x61d1
                           0061D2  1000 _CSPPROG18	=	0x61d2
                           0061D3  1001 _CSPPROG19	=	0x61d3
                           0061D4  1002 _CSPPROG20	=	0x61d4
                           0061D5  1003 _CSPPROG21	=	0x61d5
                           0061D6  1004 _CSPPROG22	=	0x61d6
                           0061D7  1005 _CSPPROG23	=	0x61d7
                           0061E0  1006 _CSPCTRL	=	0x61e0
                           0061E1  1007 _CSPSTAT	=	0x61e1
                           0061E2  1008 _CSPX	=	0x61e2
                           0061E3  1009 _CSPY	=	0x61e3
                           0061E4  1010 _CSPZ	=	0x61e4
                           0061E5  1011 _CSPT	=	0x61e5
                           006200  1012 _USBADDR	=	0x6200
                           006201  1013 _USBPOW	=	0x6201
                           006202  1014 _USBIIF	=	0x6202
                           006204  1015 _USBOIF	=	0x6204
                           006206  1016 _USBCIF	=	0x6206
                           006207  1017 _USBIIE	=	0x6207
                           006209  1018 _USBOIE	=	0x6209
                           00620B  1019 _USBCIE	=	0x620b
                           00620C  1020 _USBFRML	=	0x620c
                           00620D  1021 _USBFRMH	=	0x620d
                           00620E  1022 _USBINDEX	=	0x620e
                           00620F  1023 _USBCTRL	=	0x620f
                           006210  1024 _USBMAXI	=	0x6210
                           006211  1025 _USBCS0	=	0x6211
                           006211  1026 _USBCSIL	=	0x6211
                           006212  1027 _USBCSIH	=	0x6212
                           006213  1028 _USBMAXO	=	0x6213
                           006214  1029 _USBCSOL	=	0x6214
                           006215  1030 _USBCSOH	=	0x6215
                           006216  1031 _USBCNT0	=	0x6216
                           006216  1032 _USBCNTL	=	0x6216
                           006217  1033 _USBCNTH	=	0x6217
                           006220  1034 _USBF0	=	0x6220
                           006222  1035 _USBF1	=	0x6222
                           006224  1036 _USBF2	=	0x6224
                           006226  1037 _USBF3	=	0x6226
                           006228  1038 _USBF4	=	0x6228
                           00622A  1039 _USBF5	=	0x622a
                           007080  1040 _X_P0	=	0x7080
                           007086  1041 _X_U0CSR	=	0x7086
                           007089  1042 _X_P0IFG	=	0x7089
                           00708A  1043 _X_P1IFG	=	0x708a
                           00708B  1044 _X_P2IFG	=	0x708b
                           00708C  1045 _X_PICTL	=	0x708c
                           00708D  1046 _X_P1IEN	=	0x708d
                           00708F  1047 _X_P0INP	=	0x708f
                           007090  1048 _X_P1	=	0x7090
                           007091  1049 _X_RFIRQF1	=	0x7091
                           007093  1050 _X_MPAGE	=	0x7093
                           007093  1051 _X__XPAGE	=	0x7093
                           007094  1052 _X_T2CTRL	=	0x7094
                           007095  1053 _X_ST0	=	0x7095
                           007096  1054 _X_ST1	=	0x7096
                           007097  1055 _X_ST2	=	0x7097
                           00709C  1056 _X_T2EVTCFG	=	0x709c
                           00709D  1057 _X_SLEEPSTA	=	0x709d
                           00709E  1058 _X_CLKCONSTA	=	0x709e
                           00709F  1059 _X_FMAP	=	0x709f
                           00709F  1060 _X_PSBANK	=	0x709f
                           0070A0  1061 _X_P2	=	0x70a0
                           0070A1  1062 _X_T2IRQF	=	0x70a1
                           0070A2  1063 _X_T2M0	=	0x70a2
                           0070A3  1064 _X_T2M1	=	0x70a3
                           0070A4  1065 _X_T2MOVF0	=	0x70a4
                           0070A5  1066 _X_T2MOVF1	=	0x70a5
                           0070A6  1067 _X_T2MOVF2	=	0x70a6
                           0070A7  1068 _X_T2IRQM	=	0x70a7
                           0070AB  1069 _X_P0IEN	=	0x70ab
                           0070AC  1070 _X_P2IEN	=	0x70ac
                           0070AD  1071 _X_STLOAD	=	0x70ad
                           0070AE  1072 _X_PMUX	=	0x70ae
                           0070AF  1073 _X_T1STAT	=	0x70af
                           0070B1  1074 _X_ENCDI	=	0x70b1
                           0070B2  1075 _X_ENCDO	=	0x70b2
                           0070B3  1076 _X_ENCCS	=	0x70b3
                           0070B4  1077 _X_ADCCON1	=	0x70b4
                           0070B5  1078 _X_ADCCON2	=	0x70b5
                           0070B6  1079 _X_ADCCON3	=	0x70b6
                           0070BA  1080 _X_ADCL	=	0x70ba
                           0070BB  1081 _X_ADCH	=	0x70bb
                           0070BC  1082 _X_RNDL	=	0x70bc
                           0070BD  1083 _X_RNDH	=	0x70bd
                           0070BE  1084 _X_SLEEPCMD	=	0x70be
                           0070BF  1085 _X_RFERRF	=	0x70bf
                           0070C1  1086 _X_U0DBUF	=	0x70c1
                           0070C2  1087 _X_U0BAUD	=	0x70c2
                           0070C3  1088 _X_T2MSEL	=	0x70c3
                           0070C4  1089 _X_U0UCR	=	0x70c4
                           0070C5  1090 _X_U0GCR	=	0x70c5
                           0070C6  1091 _X_CLKCONCMD	=	0x70c6
                           0070C7  1092 _X_MEMCTR	=	0x70c7
                           0070C9  1093 _X_WDCTL	=	0x70c9
                           0070CA  1094 _X_T3CNT	=	0x70ca
                           0070CB  1095 _X_T3CTL	=	0x70cb
                           0070CC  1096 _X_T3CCTL0	=	0x70cc
                           0070CD  1097 _X_T3CC0	=	0x70cd
                           0070CE  1098 _X_T3CCTL1	=	0x70ce
                           0070CF  1099 _X_T3CC1	=	0x70cf
                           0070D1  1100 _X_DMAIRQ	=	0x70d1
                           0070D2  1101 _X_DMA1CFGL	=	0x70d2
                           0070D3  1102 _X_DMA1CFGH	=	0x70d3
                           0070D4  1103 _X_DMA0CFGL	=	0x70d4
                           0070D5  1104 _X_DMA0CFGH	=	0x70d5
                           0070D6  1105 _X_DMAARM	=	0x70d6
                           0070D7  1106 _X_DMAREQ	=	0x70d7
                           0070D8  1107 _X_TIMIF	=	0x70d8
                           0070D9  1108 _X_RFD	=	0x70d9
                           0070DA  1109 _X_T1CC0L	=	0x70da
                           0070DB  1110 _X_T1CC0H	=	0x70db
                           0070DC  1111 _X_T1CC1L	=	0x70dc
                           0070DD  1112 _X_T1CC1H	=	0x70dd
                           0070DE  1113 _X_T1CC2L	=	0x70de
                           0070DF  1114 _X_T1CC2H	=	0x70df
                           0070E1  1115 _X_RFST	=	0x70e1
                           0070E2  1116 _X_T1CNTL	=	0x70e2
                           0070E3  1117 _X_T1CNTH	=	0x70e3
                           0070E4  1118 _X_T1CTL	=	0x70e4
                           0070E5  1119 _X_T1CCTL0	=	0x70e5
                           0070E6  1120 _X_T1CCTL1	=	0x70e6
                           0070E7  1121 _X_T1CCTL2	=	0x70e7
                           0070E9  1122 _X_RFIRQF0	=	0x70e9
                           0070EA  1123 _X_T4CNT	=	0x70ea
                           0070EB  1124 _X_T4CTL	=	0x70eb
                           0070EC  1125 _X_T4CCTL0	=	0x70ec
                           0070ED  1126 _X_T4CC0	=	0x70ed
                           0070EE  1127 _X_T4CCTL1	=	0x70ee
                           0070EF  1128 _X_T4CC1	=	0x70ef
                           0070F1  1129 _X_PERCFG	=	0x70f1
                           0070F2  1130 _X_APCFG	=	0x70f2
                           0070F3  1131 _X_P0SEL	=	0x70f3
                           0070F4  1132 _X_P1SEL	=	0x70f4
                           0070F5  1133 _X_P2SEL	=	0x70f5
                           0070F6  1134 _X_P1INP	=	0x70f6
                           0070F7  1135 _X_P2INP	=	0x70f7
                           0070F8  1136 _X_U1CSR	=	0x70f8
                           0070F9  1137 _X_U1DBUF	=	0x70f9
                           0070FA  1138 _X_U1BAUD	=	0x70fa
                           0070FB  1139 _X_U1UCR	=	0x70fb
                           0070FC  1140 _X_U1GCR	=	0x70fc
                           0070FD  1141 _X_P0DIR	=	0x70fd
                           0070FE  1142 _X_P1DIR	=	0x70fe
                           0070FF  1143 _X_P2DIR	=	0x70ff
                           007800  1144 _X_INFOPAGE	=	0x7800
                           00780C  1145 _X_IEEE_ADDR	=	0x780c
      000000                       1146 _neighbor_addr_mem_memb_count:
      000000                       1147 	.ds 12
      00000C                       1148 _neighbor_addr_mem_memb_mem:
      00000C                       1149 	.ds 180
      0000C0                       1150 _ct:
      0000C0                       1151 	.ds 22
                                   1152 ;--------------------------------------------------------
                                   1153 ; absolute external ram data
                                   1154 ;--------------------------------------------------------
                                   1155 	.area XABS    (ABS,XDATA)
                                   1156 ;--------------------------------------------------------
                                   1157 ; external initialized ram data
                                   1158 ;--------------------------------------------------------
                                   1159 	.area XISEG   (XDATA)
      000000                       1160 _timeout:
      000000                       1161 	.ds 2
      000002                       1162 _neighbor_addr_mem:
      000002                       1163 	.ds 10
      00000C                       1164 _neighbor_addrs_list:
      00000C                       1165 	.ds 3
      00000F                       1166 _neighbor_addrs:
      00000F                       1167 	.ds 3
      000012                       1168 _neighbor_attrs_list:
      000012                       1169 	.ds 3
      000015                       1170 _neighbor_attrs:
      000015                       1171 	.ds 3
                                   1172 	.area HOME    (CODE)
                                   1173 	.area GSINIT0 (CODE)
                                   1174 	.area GSINIT1 (CODE)
                                   1175 	.area GSINIT2 (CODE)
                                   1176 	.area GSINIT3 (CODE)
                                   1177 	.area GSINIT4 (CODE)
                                   1178 	.area GSINIT5 (CODE)
                                   1179 	.area GSINIT  (CODE)
                                   1180 	.area GSFINAL (CODE)
                                   1181 	.area CSEG    (CODE)
                                   1182 ;--------------------------------------------------------
                                   1183 ; global & static initialisations
                                   1184 ;--------------------------------------------------------
                                   1185 	.area HOME    (CODE)
                                   1186 	.area GSINIT  (CODE)
                                   1187 	.area GSFINAL (CODE)
                                   1188 	.area GSINIT  (CODE)
                                   1189 ;--------------------------------------------------------
                                   1190 ; Home
                                   1191 ;--------------------------------------------------------
                                   1192 	.area HOME    (CODE)
                                   1193 	.area HOME    (CODE)
                                   1194 ;--------------------------------------------------------
                                   1195 ; code
                                   1196 ;--------------------------------------------------------
                                   1197 	.area BANK1   (CODE)
                                   1198 ;------------------------------------------------------------
                                   1199 ;Allocation info for local variables in function 'neighbor_addr_get'
                                   1200 ;------------------------------------------------------------
                                   1201 ;addr                      Allocated to stack - sp -2
                                   1202 ;item                      Allocated to registers r2 r3 r4 
                                   1203 ;------------------------------------------------------------
                                   1204 ;	../../../core/net/neighbor-attr.c:59: neighbor_addr_get(const rimeaddr_t *addr)
                                   1205 ;	-----------------------------------------
                                   1206 ;	 function neighbor_addr_get
                                   1207 ;	-----------------------------------------
      000000                       1208 _neighbor_addr_get:
                           000007  1209 	ar7 = 0x07
                           000006  1210 	ar6 = 0x06
                           000005  1211 	ar5 = 0x05
                           000004  1212 	ar4 = 0x04
                           000003  1213 	ar3 = 0x03
                           000002  1214 	ar2 = 0x02
                           000001  1215 	ar1 = 0x01
                           000000  1216 	ar0 = 0x00
      000000 C0 82            [24] 1217 	push	dpl
      000002 C0 83            [24] 1218 	push	dph
      000004 C0 F0            [24] 1219 	push	b
                                   1220 ;	../../../core/net/neighbor-attr.c:64: if(memb_inmemb(&neighbor_addr_mem, (char *)addr)) {
      000006 A8 81            [24] 1221 	mov	r0,sp
      000008 18               [12] 1222 	dec	r0
      000009 18               [12] 1223 	dec	r0
      00000A 86 02            [24] 1224 	mov	ar2,@r0
      00000C 08               [12] 1225 	inc	r0
      00000D 86 03            [24] 1226 	mov	ar3,@r0
      00000F 08               [12] 1227 	inc	r0
      000010 86 04            [24] 1228 	mov	ar4,@r0
      000012 C0 02            [24] 1229 	push	ar2
      000014 C0 03            [24] 1230 	push	ar3
      000016 C0 04            [24] 1231 	push	ar4
      000018 90r00r02         [24] 1232 	mov	dptr,#_neighbor_addr_mem
      00001B 75 F0 00         [24] 1233 	mov	b,#0x00
      00001E 78r00            [12] 1234 	mov	r0,#_memb_inmemb
      000020 79s00            [12] 1235 	mov	r1,#(_memb_inmemb >> 8)
      000022 7As00            [12] 1236 	mov	r2,#(_memb_inmemb >> 16)
      000024 12r00r00         [24] 1237 	lcall	__sdcc_banked_call
      000027 AB 82            [24] 1238 	mov	r3,dpl
      000029 AC 83            [24] 1239 	mov	r4,dph
      00002B 15 81            [12] 1240 	dec	sp
      00002D 15 81            [12] 1241 	dec	sp
      00002F 15 81            [12] 1242 	dec	sp
      000031 EB               [12] 1243 	mov	a,r3
      000032 4C               [12] 1244 	orl	a,r4
      000033 60 1D            [24] 1245 	jz	00102$
                                   1246 ;	../../../core/net/neighbor-attr.c:66: (((char *)addr) - offsetof(struct neighbor_addr, addr));
      000035 A8 81            [24] 1247 	mov	r0,sp
      000037 18               [12] 1248 	dec	r0
      000038 18               [12] 1249 	dec	r0
      000039 86 02            [24] 1250 	mov	ar2,@r0
      00003B 08               [12] 1251 	inc	r0
      00003C 86 03            [24] 1252 	mov	ar3,@r0
      00003E 08               [12] 1253 	inc	r0
      00003F 86 04            [24] 1254 	mov	ar4,@r0
      000041 EA               [12] 1255 	mov	a,r2
      000042 24 FD            [12] 1256 	add	a,#0xfd
      000044 FA               [12] 1257 	mov	r2,a
      000045 EB               [12] 1258 	mov	a,r3
      000046 34 FF            [12] 1259 	addc	a,#0xff
      000048 FB               [12] 1260 	mov	r3,a
      000049 8A 82            [24] 1261 	mov	dpl,r2
      00004B 8B 83            [24] 1262 	mov	dph,r3
      00004D 8C F0            [24] 1263 	mov	b,r4
      00004F 02r00rD9         [24] 1264 	ljmp	00108$
      000052                       1265 00102$:
                                   1266 ;	../../../core/net/neighbor-attr.c:69: item = list_head(neighbor_addrs);
      000052 90r00r0F         [24] 1267 	mov	dptr,#_neighbor_addrs
      000055 E0               [24] 1268 	movx	a,@dptr
      000056 FA               [12] 1269 	mov	r2,a
      000057 A3               [24] 1270 	inc	dptr
      000058 E0               [24] 1271 	movx	a,@dptr
      000059 FB               [12] 1272 	mov	r3,a
      00005A A3               [24] 1273 	inc	dptr
      00005B E0               [24] 1274 	movx	a,@dptr
      00005C FC               [12] 1275 	mov	r4,a
      00005D 8A 82            [24] 1276 	mov	dpl,r2
      00005F 8B 83            [24] 1277 	mov	dph,r3
      000061 8C F0            [24] 1278 	mov	b,r4
      000063 78r00            [12] 1279 	mov	r0,#_list_head
      000065 79s00            [12] 1280 	mov	r1,#(_list_head >> 8)
      000067 7As00            [12] 1281 	mov	r2,#(_list_head >> 16)
      000069 12r00r00         [24] 1282 	lcall	__sdcc_banked_call
      00006C AA 82            [24] 1283 	mov	r2,dpl
      00006E AB 83            [24] 1284 	mov	r3,dph
      000070 AC F0            [24] 1285 	mov	r4,b
                                   1286 ;	../../../core/net/neighbor-attr.c:70: while(item != NULL) {
      000072                       1287 00105$:
      000072 EA               [12] 1288 	mov	a,r2
      000073 4B               [12] 1289 	orl	a,r3
      000074 60 5D            [24] 1290 	jz	00107$
                                   1291 ;	../../../core/net/neighbor-attr.c:71: if(rimeaddr_cmp(addr, &item->addr)) {
      000076 74 03            [12] 1292 	mov	a,#0x03
      000078 2A               [12] 1293 	add	a,r2
      000079 FD               [12] 1294 	mov	r5,a
      00007A E4               [12] 1295 	clr	a
      00007B 3B               [12] 1296 	addc	a,r3
      00007C FE               [12] 1297 	mov	r6,a
      00007D 8C 07            [24] 1298 	mov	ar7,r4
      00007F C0 04            [24] 1299 	push	ar4
      000081 C0 03            [24] 1300 	push	ar3
      000083 C0 02            [24] 1301 	push	ar2
      000085 C0 05            [24] 1302 	push	ar5
      000087 C0 06            [24] 1303 	push	ar6
      000089 C0 07            [24] 1304 	push	ar7
      00008B E5 81            [12] 1305 	mov	a,sp
      00008D 24 F8            [12] 1306 	add	a,#0xf8
      00008F F8               [12] 1307 	mov	r0,a
      000090 86 82            [24] 1308 	mov	dpl,@r0
      000092 08               [12] 1309 	inc	r0
      000093 86 83            [24] 1310 	mov	dph,@r0
      000095 08               [12] 1311 	inc	r0
      000096 86 F0            [24] 1312 	mov	b,@r0
      000098 78r00            [12] 1313 	mov	r0,#_rimeaddr_cmp
      00009A 79s00            [12] 1314 	mov	r1,#(_rimeaddr_cmp >> 8)
      00009C 7As00            [12] 1315 	mov	r2,#(_rimeaddr_cmp >> 16)
      00009E 12r00r00         [24] 1316 	lcall	__sdcc_banked_call
      0000A1 AE 82            [24] 1317 	mov	r6,dpl
      0000A3 AF 83            [24] 1318 	mov	r7,dph
      0000A5 15 81            [12] 1319 	dec	sp
      0000A7 15 81            [12] 1320 	dec	sp
      0000A9 15 81            [12] 1321 	dec	sp
      0000AB D0 02            [24] 1322 	pop	ar2
      0000AD D0 03            [24] 1323 	pop	ar3
      0000AF D0 04            [24] 1324 	pop	ar4
      0000B1 EE               [12] 1325 	mov	a,r6
      0000B2 4F               [12] 1326 	orl	a,r7
      0000B3 60 08            [24] 1327 	jz	00104$
                                   1328 ;	../../../core/net/neighbor-attr.c:72: return item;
      0000B5 8A 82            [24] 1329 	mov	dpl,r2
      0000B7 8B 83            [24] 1330 	mov	dph,r3
      0000B9 8C F0            [24] 1331 	mov	b,r4
      0000BB 80 1C            [24] 1332 	sjmp	00108$
      0000BD                       1333 00104$:
                                   1334 ;	../../../core/net/neighbor-attr.c:74: item = item->next;
      0000BD 8A 82            [24] 1335 	mov	dpl,r2
      0000BF 8B 83            [24] 1336 	mov	dph,r3
      0000C1 8C F0            [24] 1337 	mov	b,r4
      0000C3 12r00r00         [24] 1338 	lcall	__gptrget
      0000C6 FA               [12] 1339 	mov	r2,a
      0000C7 A3               [24] 1340 	inc	dptr
      0000C8 12r00r00         [24] 1341 	lcall	__gptrget
      0000CB FB               [12] 1342 	mov	r3,a
      0000CC A3               [24] 1343 	inc	dptr
      0000CD 12r00r00         [24] 1344 	lcall	__gptrget
      0000D0 FC               [12] 1345 	mov	r4,a
      0000D1 80 9F            [24] 1346 	sjmp	00105$
      0000D3                       1347 00107$:
                                   1348 ;	../../../core/net/neighbor-attr.c:76: return NULL;
      0000D3 90 00 00         [24] 1349 	mov	dptr,#0x0000
      0000D6 75 F0 00         [24] 1350 	mov	b,#0x00
      0000D9                       1351 00108$:
                                   1352 ;	../../../core/net/neighbor-attr.c:77: }
      0000D9 15 81            [12] 1353 	dec	sp
      0000DB 15 81            [12] 1354 	dec	sp
      0000DD 15 81            [12] 1355 	dec	sp
      0000DF 02r00r00         [24] 1356 	ljmp	__sdcc_banked_ret
                                   1357 ;------------------------------------------------------------
                                   1358 ;Allocation info for local variables in function 'neighbor_attr_list_neighbors'
                                   1359 ;------------------------------------------------------------
                                   1360 ;	../../../core/net/neighbor-attr.c:80: neighbor_attr_list_neighbors(void)
                                   1361 ;	-----------------------------------------
                                   1362 ;	 function neighbor_attr_list_neighbors
                                   1363 ;	-----------------------------------------
      0000E2                       1364 _neighbor_attr_list_neighbors:
                                   1365 ;	../../../core/net/neighbor-attr.c:82: return list_head(neighbor_addrs);
      0000E2 90r00r0F         [24] 1366 	mov	dptr,#_neighbor_addrs
      0000E5 E0               [24] 1367 	movx	a,@dptr
      0000E6 FD               [12] 1368 	mov	r5,a
      0000E7 A3               [24] 1369 	inc	dptr
      0000E8 E0               [24] 1370 	movx	a,@dptr
      0000E9 FE               [12] 1371 	mov	r6,a
      0000EA A3               [24] 1372 	inc	dptr
      0000EB E0               [24] 1373 	movx	a,@dptr
      0000EC FF               [12] 1374 	mov	r7,a
      0000ED 8D 82            [24] 1375 	mov	dpl,r5
      0000EF 8E 83            [24] 1376 	mov	dph,r6
      0000F1 8F F0            [24] 1377 	mov	b,r7
      0000F3 78r00            [12] 1378 	mov	r0,#_list_head
      0000F5 79s00            [12] 1379 	mov	r1,#(_list_head >> 8)
      0000F7 7As00            [12] 1380 	mov	r2,#(_list_head >> 16)
      0000F9 12r00r00         [24] 1381 	lcall	__sdcc_banked_call
      0000FC AD 82            [24] 1382 	mov	r5,dpl
      0000FE AE 83            [24] 1383 	mov	r6,dph
      000100 AF F0            [24] 1384 	mov	r7,b
                                   1385 ;	../../../core/net/neighbor-attr.c:83: }
      000102 02r00r00         [24] 1386 	ljmp	__sdcc_banked_ret
                                   1387 ;------------------------------------------------------------
                                   1388 ;Allocation info for local variables in function 'set_attr'
                                   1389 ;------------------------------------------------------------
                                   1390 ;index                     Allocated to stack - sp -13
                                   1391 ;attr                      Allocated to stack - sp -8
                                   1392 ;sloc0                     Allocated to stack - sp -5
                                   1393 ;sloc1                     Allocated to stack - sp -2
                                   1394 ;------------------------------------------------------------
                                   1395 ;	../../../core/net/neighbor-attr.c:86: set_attr(struct neighbor_attr *attr, uint16_t index)
                                   1396 ;	-----------------------------------------
                                   1397 ;	 function set_attr
                                   1398 ;	-----------------------------------------
      000105                       1399 _set_attr:
      000105 C0 82            [24] 1400 	push	dpl
      000107 C0 83            [24] 1401 	push	dph
      000109 C0 F0            [24] 1402 	push	b
      00010B E5 81            [12] 1403 	mov	a,sp
      00010D 24 06            [12] 1404 	add	a,#0x06
                                   1405 ;	../../../core/net/neighbor-attr.c:88: if(attr->default_value != NULL) {
      00010F F5 81            [12] 1406 	mov	sp,a
      000111 24 F8            [12] 1407 	add	a,#0xf8
      000113 F8               [12] 1408 	mov	r0,a
      000114 74 05            [12] 1409 	mov	a,#0x05
      000116 26               [12] 1410 	add	a,@r0
      000117 FA               [12] 1411 	mov	r2,a
      000118 E4               [12] 1412 	clr	a
      000119 08               [12] 1413 	inc	r0
      00011A 36               [12] 1414 	addc	a,@r0
      00011B FB               [12] 1415 	mov	r3,a
      00011C 08               [12] 1416 	inc	r0
      00011D 86 04            [24] 1417 	mov	ar4,@r0
      00011F 8A 82            [24] 1418 	mov	dpl,r2
      000121 8B 83            [24] 1419 	mov	dph,r3
      000123 8C F0            [24] 1420 	mov	b,r4
      000125 12r00r00         [24] 1421 	lcall	__gptrget
      000128 FA               [12] 1422 	mov	r2,a
      000129 A3               [24] 1423 	inc	dptr
      00012A 12r00r00         [24] 1424 	lcall	__gptrget
      00012D FB               [12] 1425 	mov	r3,a
      00012E A3               [24] 1426 	inc	dptr
      00012F 12r00r00         [24] 1427 	lcall	__gptrget
      000132 FC               [12] 1428 	mov	r4,a
      000133 EA               [12] 1429 	mov	a,r2
      000134 4B               [12] 1430 	orl	a,r3
      000135 70 03            [24] 1431 	jnz	00110$
      000137 02r02r0F         [24] 1432 	ljmp	00102$
      00013A                       1433 00110$:
                                   1434 ;	../../../core/net/neighbor-attr.c:89: memcpy((char *)attr->data + index * attr->size,
      00013A E5 81            [12] 1435 	mov	a,sp
      00013C 24 F8            [12] 1436 	add	a,#0xf8
      00013E F8               [12] 1437 	mov	r0,a
      00013F 74 03            [12] 1438 	mov	a,#0x03
      000141 26               [12] 1439 	add	a,@r0
      000142 FA               [12] 1440 	mov	r2,a
      000143 E4               [12] 1441 	clr	a
      000144 08               [12] 1442 	inc	r0
      000145 36               [12] 1443 	addc	a,@r0
      000146 FB               [12] 1444 	mov	r3,a
      000147 08               [12] 1445 	inc	r0
      000148 86 04            [24] 1446 	mov	ar4,@r0
      00014A 8A 82            [24] 1447 	mov	dpl,r2
      00014C 8B 83            [24] 1448 	mov	dph,r3
      00014E 8C F0            [24] 1449 	mov	b,r4
      000150 12r00r00         [24] 1450 	lcall	__gptrget
      000153 FA               [12] 1451 	mov	r2,a
      000154 A3               [24] 1452 	inc	dptr
      000155 12r00r00         [24] 1453 	lcall	__gptrget
      000158 FB               [12] 1454 	mov	r3,a
      000159 E5 81            [12] 1455 	mov	a,sp
      00015B 24 F8            [12] 1456 	add	a,#0xf8
      00015D F8               [12] 1457 	mov	r0,a
      00015E 74 05            [12] 1458 	mov	a,#0x05
      000160 26               [12] 1459 	add	a,@r0
      000161 FC               [12] 1460 	mov	r4,a
      000162 E4               [12] 1461 	clr	a
      000163 08               [12] 1462 	inc	r0
      000164 36               [12] 1463 	addc	a,@r0
      000165 FE               [12] 1464 	mov	r6,a
      000166 08               [12] 1465 	inc	r0
      000167 86 07            [24] 1466 	mov	ar7,@r0
      000169 8C 82            [24] 1467 	mov	dpl,r4
      00016B 8E 83            [24] 1468 	mov	dph,r6
      00016D 8F F0            [24] 1469 	mov	b,r7
      00016F E5 81            [12] 1470 	mov	a,sp
      000171 24 FB            [12] 1471 	add	a,#0xfb
      000173 F8               [12] 1472 	mov	r0,a
      000174 12r00r00         [24] 1473 	lcall	__gptrget
      000177 F6               [12] 1474 	mov	@r0,a
      000178 A3               [24] 1475 	inc	dptr
      000179 12r00r00         [24] 1476 	lcall	__gptrget
      00017C 08               [12] 1477 	inc	r0
      00017D F6               [12] 1478 	mov	@r0,a
      00017E A3               [24] 1479 	inc	dptr
      00017F 12r00r00         [24] 1480 	lcall	__gptrget
      000182 08               [12] 1481 	inc	r0
      000183 F6               [12] 1482 	mov	@r0,a
      000184 E5 81            [12] 1483 	mov	a,sp
      000186 24 F8            [12] 1484 	add	a,#0xf8
      000188 F8               [12] 1485 	mov	r0,a
      000189 74 08            [12] 1486 	mov	a,#0x08
      00018B 26               [12] 1487 	add	a,@r0
      00018C FD               [12] 1488 	mov	r5,a
      00018D E4               [12] 1489 	clr	a
      00018E 08               [12] 1490 	inc	r0
      00018F 36               [12] 1491 	addc	a,@r0
      000190 FE               [12] 1492 	mov	r6,a
      000191 08               [12] 1493 	inc	r0
      000192 86 07            [24] 1494 	mov	ar7,@r0
      000194 8D 82            [24] 1495 	mov	dpl,r5
      000196 8E 83            [24] 1496 	mov	dph,r6
      000198 8F F0            [24] 1497 	mov	b,r7
      00019A 12r00r00         [24] 1498 	lcall	__gptrget
      00019D FD               [12] 1499 	mov	r5,a
      00019E A3               [24] 1500 	inc	dptr
      00019F 12r00r00         [24] 1501 	lcall	__gptrget
      0001A2 FE               [12] 1502 	mov	r6,a
      0001A3 A3               [24] 1503 	inc	dptr
      0001A4 12r00r00         [24] 1504 	lcall	__gptrget
      0001A7 FF               [12] 1505 	mov	r7,a
      0001A8 A8 81            [24] 1506 	mov	r0,sp
      0001AA 18               [12] 1507 	dec	r0
      0001AB 18               [12] 1508 	dec	r0
      0001AC A6 05            [24] 1509 	mov	@r0,ar5
      0001AE 08               [12] 1510 	inc	r0
      0001AF A6 06            [24] 1511 	mov	@r0,ar6
      0001B1 08               [12] 1512 	inc	r0
      0001B2 A6 07            [24] 1513 	mov	@r0,ar7
      0001B4 C0 03            [24] 1514 	push	ar3
      0001B6 C0 02            [24] 1515 	push	ar2
      0001B8 C0 02            [24] 1516 	push	ar2
      0001BA C0 03            [24] 1517 	push	ar3
      0001BC E5 81            [12] 1518 	mov	a,sp
      0001BE 24 EF            [12] 1519 	add	a,#0xef
      0001C0 F8               [12] 1520 	mov	r0,a
      0001C1 86 82            [24] 1521 	mov	dpl,@r0
      0001C3 08               [12] 1522 	inc	r0
      0001C4 86 83            [24] 1523 	mov	dph,@r0
      0001C6 12r00r00         [24] 1524 	lcall	__mulint
      0001C9 AC 82            [24] 1525 	mov	r4,dpl
      0001CB AF 83            [24] 1526 	mov	r7,dph
      0001CD 15 81            [12] 1527 	dec	sp
      0001CF 15 81            [12] 1528 	dec	sp
      0001D1 D0 02            [24] 1529 	pop	ar2
      0001D3 D0 03            [24] 1530 	pop	ar3
      0001D5 A8 81            [24] 1531 	mov	r0,sp
      0001D7 18               [12] 1532 	dec	r0
      0001D8 18               [12] 1533 	dec	r0
      0001D9 EC               [12] 1534 	mov	a,r4
      0001DA 26               [12] 1535 	add	a,@r0
      0001DB FC               [12] 1536 	mov	r4,a
      0001DC EF               [12] 1537 	mov	a,r7
      0001DD 08               [12] 1538 	inc	r0
      0001DE 36               [12] 1539 	addc	a,@r0
      0001DF FF               [12] 1540 	mov	r7,a
      0001E0 08               [12] 1541 	inc	r0
      0001E1 86 06            [24] 1542 	mov	ar6,@r0
      0001E3 C0 02            [24] 1543 	push	ar2
      0001E5 C0 03            [24] 1544 	push	ar3
      0001E7 E5 81            [12] 1545 	mov	a,sp
      0001E9 24 F9            [12] 1546 	add	a,#0xf9
      0001EB F8               [12] 1547 	mov	r0,a
      0001EC E6               [12] 1548 	mov	a,@r0
      0001ED C0 E0            [24] 1549 	push	acc
      0001EF 08               [12] 1550 	inc	r0
      0001F0 E6               [12] 1551 	mov	a,@r0
      0001F1 C0 E0            [24] 1552 	push	acc
      0001F3 08               [12] 1553 	inc	r0
      0001F4 E6               [12] 1554 	mov	a,@r0
      0001F5 C0 E0            [24] 1555 	push	acc
      0001F7 8C 82            [24] 1556 	mov	dpl,r4
      0001F9 8F 83            [24] 1557 	mov	dph,r7
      0001FB 8E F0            [24] 1558 	mov	b,r6
      0001FD 78r00            [12] 1559 	mov	r0,#___memcpy
      0001FF 79s00            [12] 1560 	mov	r1,#(___memcpy >> 8)
      000201 7As00            [12] 1561 	mov	r2,#(___memcpy >> 16)
      000203 12r00r00         [24] 1562 	lcall	__sdcc_banked_call
      000206 E5 81            [12] 1563 	mov	a,sp
      000208 24 FB            [12] 1564 	add	a,#0xfb
      00020A F5 81            [12] 1565 	mov	sp,a
      00020C 02r02rA9         [24] 1566 	ljmp	00104$
      00020F                       1567 00102$:
                                   1568 ;	../../../core/net/neighbor-attr.c:93: memset((char *)attr->data + index * attr->size, 0, attr->size);
      00020F E5 81            [12] 1569 	mov	a,sp
      000211 24 F8            [12] 1570 	add	a,#0xf8
      000213 F8               [12] 1571 	mov	r0,a
      000214 74 03            [12] 1572 	mov	a,#0x03
      000216 26               [12] 1573 	add	a,@r0
      000217 FD               [12] 1574 	mov	r5,a
      000218 E4               [12] 1575 	clr	a
      000219 08               [12] 1576 	inc	r0
      00021A 36               [12] 1577 	addc	a,@r0
      00021B FE               [12] 1578 	mov	r6,a
      00021C 08               [12] 1579 	inc	r0
      00021D 86 07            [24] 1580 	mov	ar7,@r0
      00021F 8D 82            [24] 1581 	mov	dpl,r5
      000221 8E 83            [24] 1582 	mov	dph,r6
      000223 8F F0            [24] 1583 	mov	b,r7
      000225 12r00r00         [24] 1584 	lcall	__gptrget
      000228 FD               [12] 1585 	mov	r5,a
      000229 A3               [24] 1586 	inc	dptr
      00022A 12r00r00         [24] 1587 	lcall	__gptrget
      00022D FE               [12] 1588 	mov	r6,a
      00022E E5 81            [12] 1589 	mov	a,sp
      000230 24 F8            [12] 1590 	add	a,#0xf8
      000232 F8               [12] 1591 	mov	r0,a
      000233 74 08            [12] 1592 	mov	a,#0x08
      000235 26               [12] 1593 	add	a,@r0
      000236 FB               [12] 1594 	mov	r3,a
      000237 E4               [12] 1595 	clr	a
      000238 08               [12] 1596 	inc	r0
      000239 36               [12] 1597 	addc	a,@r0
      00023A FC               [12] 1598 	mov	r4,a
      00023B 08               [12] 1599 	inc	r0
      00023C 86 07            [24] 1600 	mov	ar7,@r0
      00023E 8B 82            [24] 1601 	mov	dpl,r3
      000240 8C 83            [24] 1602 	mov	dph,r4
      000242 8F F0            [24] 1603 	mov	b,r7
      000244 12r00r00         [24] 1604 	lcall	__gptrget
      000247 FB               [12] 1605 	mov	r3,a
      000248 A3               [24] 1606 	inc	dptr
      000249 12r00r00         [24] 1607 	lcall	__gptrget
      00024C FC               [12] 1608 	mov	r4,a
      00024D A3               [24] 1609 	inc	dptr
      00024E 12r00r00         [24] 1610 	lcall	__gptrget
      000251 FF               [12] 1611 	mov	r7,a
      000252 A8 81            [24] 1612 	mov	r0,sp
      000254 18               [12] 1613 	dec	r0
      000255 18               [12] 1614 	dec	r0
      000256 A6 03            [24] 1615 	mov	@r0,ar3
      000258 08               [12] 1616 	inc	r0
      000259 A6 04            [24] 1617 	mov	@r0,ar4
      00025B 08               [12] 1618 	inc	r0
      00025C A6 07            [24] 1619 	mov	@r0,ar7
      00025E C0 06            [24] 1620 	push	ar6
      000260 C0 05            [24] 1621 	push	ar5
      000262 C0 05            [24] 1622 	push	ar5
      000264 C0 06            [24] 1623 	push	ar6
      000266 E5 81            [12] 1624 	mov	a,sp
      000268 24 EF            [12] 1625 	add	a,#0xef
      00026A F8               [12] 1626 	mov	r0,a
      00026B 86 82            [24] 1627 	mov	dpl,@r0
      00026D 08               [12] 1628 	inc	r0
      00026E 86 83            [24] 1629 	mov	dph,@r0
      000270 12r00r00         [24] 1630 	lcall	__mulint
      000273 AA 82            [24] 1631 	mov	r2,dpl
      000275 AF 83            [24] 1632 	mov	r7,dph
      000277 15 81            [12] 1633 	dec	sp
      000279 15 81            [12] 1634 	dec	sp
      00027B D0 05            [24] 1635 	pop	ar5
      00027D D0 06            [24] 1636 	pop	ar6
      00027F A8 81            [24] 1637 	mov	r0,sp
      000281 18               [12] 1638 	dec	r0
      000282 18               [12] 1639 	dec	r0
      000283 EA               [12] 1640 	mov	a,r2
      000284 26               [12] 1641 	add	a,@r0
      000285 FA               [12] 1642 	mov	r2,a
      000286 EF               [12] 1643 	mov	a,r7
      000287 08               [12] 1644 	inc	r0
      000288 36               [12] 1645 	addc	a,@r0
      000289 FF               [12] 1646 	mov	r7,a
      00028A 08               [12] 1647 	inc	r0
      00028B 86 04            [24] 1648 	mov	ar4,@r0
      00028D C0 05            [24] 1649 	push	ar5
      00028F C0 06            [24] 1650 	push	ar6
      000291 E4               [12] 1651 	clr	a
      000292 C0 E0            [24] 1652 	push	acc
      000294 8A 82            [24] 1653 	mov	dpl,r2
      000296 8F 83            [24] 1654 	mov	dph,r7
      000298 8C F0            [24] 1655 	mov	b,r4
      00029A 78r00            [12] 1656 	mov	r0,#_memset
      00029C 79s00            [12] 1657 	mov	r1,#(_memset >> 8)
      00029E 7As00            [12] 1658 	mov	r2,#(_memset >> 16)
      0002A0 12r00r00         [24] 1659 	lcall	__sdcc_banked_call
      0002A3 15 81            [12] 1660 	dec	sp
      0002A5 15 81            [12] 1661 	dec	sp
      0002A7 15 81            [12] 1662 	dec	sp
      0002A9                       1663 00104$:
                                   1664 ;	../../../core/net/neighbor-attr.c:95: }
      0002A9 E5 81            [12] 1665 	mov	a,sp
      0002AB 24 F7            [12] 1666 	add	a,#0xf7
      0002AD F5 81            [12] 1667 	mov	sp,a
      0002AF 02r00r00         [24] 1668 	ljmp	__sdcc_banked_ret
                                   1669 ;------------------------------------------------------------
                                   1670 ;Allocation info for local variables in function 'neighbor_attr_register'
                                   1671 ;------------------------------------------------------------
                                   1672 ;def                       Allocated to stack - sp -2
                                   1673 ;addr                      Allocated to registers r5 r6 r7 
                                   1674 ;------------------------------------------------------------
                                   1675 ;	../../../core/net/neighbor-attr.c:98: neighbor_attr_register(struct neighbor_attr *def)
                                   1676 ;	-----------------------------------------
                                   1677 ;	 function neighbor_attr_register
                                   1678 ;	-----------------------------------------
      0002B2                       1679 _neighbor_attr_register:
      0002B2 C0 82            [24] 1680 	push	dpl
      0002B4 C0 83            [24] 1681 	push	dph
      0002B6 C0 F0            [24] 1682 	push	b
                                   1683 ;	../../../core/net/neighbor-attr.c:102: list_push(neighbor_attrs, def);
      0002B8 A8 81            [24] 1684 	mov	r0,sp
      0002BA 18               [12] 1685 	dec	r0
      0002BB 18               [12] 1686 	dec	r0
      0002BC 86 02            [24] 1687 	mov	ar2,@r0
      0002BE 08               [12] 1688 	inc	r0
      0002BF 86 03            [24] 1689 	mov	ar3,@r0
      0002C1 08               [12] 1690 	inc	r0
      0002C2 86 04            [24] 1691 	mov	ar4,@r0
      0002C4 90r00r15         [24] 1692 	mov	dptr,#_neighbor_attrs
      0002C7 E0               [24] 1693 	movx	a,@dptr
      0002C8 FD               [12] 1694 	mov	r5,a
      0002C9 A3               [24] 1695 	inc	dptr
      0002CA E0               [24] 1696 	movx	a,@dptr
      0002CB FE               [12] 1697 	mov	r6,a
      0002CC A3               [24] 1698 	inc	dptr
      0002CD E0               [24] 1699 	movx	a,@dptr
      0002CE FF               [12] 1700 	mov	r7,a
      0002CF C0 02            [24] 1701 	push	ar2
      0002D1 C0 03            [24] 1702 	push	ar3
      0002D3 C0 04            [24] 1703 	push	ar4
      0002D5 8D 82            [24] 1704 	mov	dpl,r5
      0002D7 8E 83            [24] 1705 	mov	dph,r6
      0002D9 8F F0            [24] 1706 	mov	b,r7
      0002DB 78r00            [12] 1707 	mov	r0,#_list_push
      0002DD 79s00            [12] 1708 	mov	r1,#(_list_push >> 8)
      0002DF 7As00            [12] 1709 	mov	r2,#(_list_push >> 16)
      0002E1 12r00r00         [24] 1710 	lcall	__sdcc_banked_call
      0002E4 15 81            [12] 1711 	dec	sp
      0002E6 15 81            [12] 1712 	dec	sp
      0002E8 15 81            [12] 1713 	dec	sp
                                   1714 ;	../../../core/net/neighbor-attr.c:105: for(addr = list_head(neighbor_addrs); addr != NULL; addr = addr->next) {
      0002EA 90r00r0F         [24] 1715 	mov	dptr,#_neighbor_addrs
      0002ED E0               [24] 1716 	movx	a,@dptr
      0002EE FD               [12] 1717 	mov	r5,a
      0002EF A3               [24] 1718 	inc	dptr
      0002F0 E0               [24] 1719 	movx	a,@dptr
      0002F1 FE               [12] 1720 	mov	r6,a
      0002F2 A3               [24] 1721 	inc	dptr
      0002F3 E0               [24] 1722 	movx	a,@dptr
      0002F4 FF               [12] 1723 	mov	r7,a
      0002F5 8D 82            [24] 1724 	mov	dpl,r5
      0002F7 8E 83            [24] 1725 	mov	dph,r6
      0002F9 8F F0            [24] 1726 	mov	b,r7
      0002FB 78r00            [12] 1727 	mov	r0,#_list_head
      0002FD 79s00            [12] 1728 	mov	r1,#(_list_head >> 8)
      0002FF 7As00            [12] 1729 	mov	r2,#(_list_head >> 16)
      000301 12r00r00         [24] 1730 	lcall	__sdcc_banked_call
      000304 AD 82            [24] 1731 	mov	r5,dpl
      000306 AE 83            [24] 1732 	mov	r6,dph
      000308 AF F0            [24] 1733 	mov	r7,b
      00030A                       1734 00103$:
      00030A ED               [12] 1735 	mov	a,r5
      00030B 4E               [12] 1736 	orl	a,r6
      00030C 60 58            [24] 1737 	jz	00101$
                                   1738 ;	../../../core/net/neighbor-attr.c:106: set_attr(def, addr->index);
      00030E 74 0D            [12] 1739 	mov	a,#0x0d
      000310 2D               [12] 1740 	add	a,r5
      000311 FA               [12] 1741 	mov	r2,a
      000312 E4               [12] 1742 	clr	a
      000313 3E               [12] 1743 	addc	a,r6
      000314 FB               [12] 1744 	mov	r3,a
      000315 8F 04            [24] 1745 	mov	ar4,r7
      000317 8A 82            [24] 1746 	mov	dpl,r2
      000319 8B 83            [24] 1747 	mov	dph,r3
      00031B 8C F0            [24] 1748 	mov	b,r4
      00031D 12r00r00         [24] 1749 	lcall	__gptrget
      000320 FA               [12] 1750 	mov	r2,a
      000321 A3               [24] 1751 	inc	dptr
      000322 12r00r00         [24] 1752 	lcall	__gptrget
      000325 FB               [12] 1753 	mov	r3,a
      000326 C0 07            [24] 1754 	push	ar7
      000328 C0 06            [24] 1755 	push	ar6
      00032A C0 05            [24] 1756 	push	ar5
      00032C C0 02            [24] 1757 	push	ar2
      00032E C0 03            [24] 1758 	push	ar3
      000330 E5 81            [12] 1759 	mov	a,sp
      000332 24 F9            [12] 1760 	add	a,#0xf9
      000334 F8               [12] 1761 	mov	r0,a
      000335 86 82            [24] 1762 	mov	dpl,@r0
      000337 08               [12] 1763 	inc	r0
      000338 86 83            [24] 1764 	mov	dph,@r0
      00033A 08               [12] 1765 	inc	r0
      00033B 86 F0            [24] 1766 	mov	b,@r0
      00033D 78r05            [12] 1767 	mov	r0,#_set_attr
      00033F 79s01            [12] 1768 	mov	r1,#(_set_attr >> 8)
      000341 7As00            [12] 1769 	mov	r2,#(_set_attr >> 16)
      000343 12r00r00         [24] 1770 	lcall	__sdcc_banked_call
      000346 15 81            [12] 1771 	dec	sp
      000348 15 81            [12] 1772 	dec	sp
      00034A D0 05            [24] 1773 	pop	ar5
      00034C D0 06            [24] 1774 	pop	ar6
      00034E D0 07            [24] 1775 	pop	ar7
                                   1776 ;	../../../core/net/neighbor-attr.c:105: for(addr = list_head(neighbor_addrs); addr != NULL; addr = addr->next) {
      000350 8D 82            [24] 1777 	mov	dpl,r5
      000352 8E 83            [24] 1778 	mov	dph,r6
      000354 8F F0            [24] 1779 	mov	b,r7
      000356 12r00r00         [24] 1780 	lcall	__gptrget
      000359 FD               [12] 1781 	mov	r5,a
      00035A A3               [24] 1782 	inc	dptr
      00035B 12r00r00         [24] 1783 	lcall	__gptrget
      00035E FE               [12] 1784 	mov	r6,a
      00035F A3               [24] 1785 	inc	dptr
      000360 12r00r00         [24] 1786 	lcall	__gptrget
      000363 FF               [12] 1787 	mov	r7,a
      000364 80 A4            [24] 1788 	sjmp	00103$
      000366                       1789 00101$:
                                   1790 ;	../../../core/net/neighbor-attr.c:108: return 1;
      000366 90 00 01         [24] 1791 	mov	dptr,#0x0001
                                   1792 ;	../../../core/net/neighbor-attr.c:109: }
      000369 15 81            [12] 1793 	dec	sp
      00036B 15 81            [12] 1794 	dec	sp
      00036D 15 81            [12] 1795 	dec	sp
      00036F 02r00r00         [24] 1796 	ljmp	__sdcc_banked_ret
                                   1797 ;------------------------------------------------------------
                                   1798 ;Allocation info for local variables in function 'neighbor_attr_has_neighbor'
                                   1799 ;------------------------------------------------------------
                                   1800 ;addr                      Allocated to registers r5 r6 r7 
                                   1801 ;------------------------------------------------------------
                                   1802 ;	../../../core/net/neighbor-attr.c:112: neighbor_attr_has_neighbor(const rimeaddr_t *addr)
                                   1803 ;	-----------------------------------------
                                   1804 ;	 function neighbor_attr_has_neighbor
                                   1805 ;	-----------------------------------------
      000372                       1806 _neighbor_attr_has_neighbor:
                                   1807 ;	../../../core/net/neighbor-attr.c:114: return neighbor_addr_get(addr) != NULL;
      000372 78r00            [12] 1808 	mov	r0,#_neighbor_addr_get
      000374 79s00            [12] 1809 	mov	r1,#(_neighbor_addr_get >> 8)
      000376 7As00            [12] 1810 	mov	r2,#(_neighbor_addr_get >> 16)
      000378 12r00r00         [24] 1811 	lcall	__sdcc_banked_call
      00037B AD 82            [24] 1812 	mov	r5,dpl
      00037D AE 83            [24] 1813 	mov	r6,dph
      00037F ED               [12] 1814 	mov	a,r5
      000380 4E               [12] 1815 	orl	a,r6
      000381 B4 01 00         [24] 1816 	cjne	a,#0x01,00103$
      000384                       1817 00103$:
      000384 B3               [12] 1818 	cpl	c
      000385 92*00            [24] 1819 	mov	b0,c
      000387 E4               [12] 1820 	clr	a
      000388 33               [12] 1821 	rlc	a
      000389 FE               [12] 1822 	mov	r6,a
      00038A 7F 00            [12] 1823 	mov	r7,#0x00
      00038C 8E 82            [24] 1824 	mov	dpl,r6
      00038E 8F 83            [24] 1825 	mov	dph,r7
                                   1826 ;	../../../core/net/neighbor-attr.c:115: }
      000390 02r00r00         [24] 1827 	ljmp	__sdcc_banked_ret
                                   1828 ;------------------------------------------------------------
                                   1829 ;Allocation info for local variables in function 'neighbor_attr_add_neighbor'
                                   1830 ;------------------------------------------------------------
                                   1831 ;addr                      Allocated to stack - sp -10
                                   1832 ;def                       Allocated to registers r3 r4 r5 
                                   1833 ;item                      Allocated to stack - sp -5
                                   1834 ;ptr                       Allocated to stack - sp -2
                                   1835 ;i                         Allocated to registers r6 r7 
                                   1836 ;sloc0                     Allocated to stack - sp -7
                                   1837 ;------------------------------------------------------------
                                   1838 ;	../../../core/net/neighbor-attr.c:118: neighbor_attr_add_neighbor(const rimeaddr_t *addr)
                                   1839 ;	-----------------------------------------
                                   1840 ;	 function neighbor_attr_add_neighbor
                                   1841 ;	-----------------------------------------
      000393                       1842 _neighbor_attr_add_neighbor:
      000393 C0 82            [24] 1843 	push	dpl
      000395 C0 83            [24] 1844 	push	dph
      000397 C0 F0            [24] 1845 	push	b
      000399 E5 81            [12] 1846 	mov	a,sp
      00039B 24 08            [12] 1847 	add	a,#0x08
                                   1848 ;	../../../core/net/neighbor-attr.c:125: if(neighbor_attr_has_neighbor(addr)) {
      00039D F5 81            [12] 1849 	mov	sp,a
      00039F 24 F6            [12] 1850 	add	a,#0xf6
      0003A1 F8               [12] 1851 	mov	r0,a
      0003A2 86 82            [24] 1852 	mov	dpl,@r0
      0003A4 08               [12] 1853 	inc	r0
      0003A5 86 83            [24] 1854 	mov	dph,@r0
      0003A7 08               [12] 1855 	inc	r0
      0003A8 86 F0            [24] 1856 	mov	b,@r0
      0003AA 78r72            [12] 1857 	mov	r0,#_neighbor_attr_has_neighbor
      0003AC 79s03            [12] 1858 	mov	r1,#(_neighbor_attr_has_neighbor >> 8)
      0003AE 7As00            [12] 1859 	mov	r2,#(_neighbor_attr_has_neighbor >> 16)
      0003B0 12r00r00         [24] 1860 	lcall	__sdcc_banked_call
      0003B3 E5 82            [12] 1861 	mov	a,dpl
      0003B5 85 83 F0         [24] 1862 	mov	b,dph
      0003B8 45 F0            [12] 1863 	orl	a,b
      0003BA 60 06            [24] 1864 	jz	00102$
                                   1865 ;	../../../core/net/neighbor-attr.c:126: return 0;
      0003BC 90 00 00         [24] 1866 	mov	dptr,#0x0000
      0003BF 02r05rA2         [24] 1867 	ljmp	00115$
      0003C2                       1868 00102$:
                                   1869 ;	../../../core/net/neighbor-attr.c:129: item = memb_alloc(&neighbor_addr_mem);
      0003C2 90r00r02         [24] 1870 	mov	dptr,#_neighbor_addr_mem
      0003C5 75 F0 00         [24] 1871 	mov	b,#0x00
      0003C8 78r00            [12] 1872 	mov	r0,#_memb_alloc
      0003CA 79s00            [12] 1873 	mov	r1,#(_memb_alloc >> 8)
      0003CC 7As00            [12] 1874 	mov	r2,#(_memb_alloc >> 16)
      0003CE 12r00r00         [24] 1875 	lcall	__sdcc_banked_call
      0003D1 AA 82            [24] 1876 	mov	r2,dpl
      0003D3 AB 83            [24] 1877 	mov	r3,dph
      0003D5 AC F0            [24] 1878 	mov	r4,b
      0003D7 E5 81            [12] 1879 	mov	a,sp
      0003D9 24 FB            [12] 1880 	add	a,#0xfb
      0003DB F8               [12] 1881 	mov	r0,a
      0003DC A6 02            [24] 1882 	mov	@r0,ar2
      0003DE 08               [12] 1883 	inc	r0
      0003DF A6 03            [24] 1884 	mov	@r0,ar3
      0003E1 08               [12] 1885 	inc	r0
      0003E2 A6 04            [24] 1886 	mov	@r0,ar4
                                   1887 ;	../../../core/net/neighbor-attr.c:130: if(item == NULL) {
      0003E4 E5 81            [12] 1888 	mov	a,sp
      0003E6 24 FB            [12] 1889 	add	a,#0xfb
      0003E8 F8               [12] 1890 	mov	r0,a
      0003E9 E6               [12] 1891 	mov	a,@r0
      0003EA 08               [12] 1892 	inc	r0
      0003EB 46               [12] 1893 	orl	a,@r0
      0003EC 70 06            [24] 1894 	jnz	00104$
                                   1895 ;	../../../core/net/neighbor-attr.c:131: return -1;
      0003EE 90 FF FF         [24] 1896 	mov	dptr,#0xffff
      0003F1 02r05rA2         [24] 1897 	ljmp	00115$
      0003F4                       1898 00104$:
                                   1899 ;	../../../core/net/neighbor-attr.c:134: list_push(neighbor_addrs, item);
      0003F4 E5 81            [12] 1900 	mov	a,sp
      0003F6 24 FB            [12] 1901 	add	a,#0xfb
      0003F8 F8               [12] 1902 	mov	r0,a
      0003F9 86 05            [24] 1903 	mov	ar5,@r0
      0003FB 08               [12] 1904 	inc	r0
      0003FC 86 06            [24] 1905 	mov	ar6,@r0
      0003FE 08               [12] 1906 	inc	r0
      0003FF 86 07            [24] 1907 	mov	ar7,@r0
      000401 90r00r0F         [24] 1908 	mov	dptr,#_neighbor_addrs
      000404 E0               [24] 1909 	movx	a,@dptr
      000405 FA               [12] 1910 	mov	r2,a
      000406 A3               [24] 1911 	inc	dptr
      000407 E0               [24] 1912 	movx	a,@dptr
      000408 FB               [12] 1913 	mov	r3,a
      000409 A3               [24] 1914 	inc	dptr
      00040A E0               [24] 1915 	movx	a,@dptr
      00040B FC               [12] 1916 	mov	r4,a
      00040C C0 05            [24] 1917 	push	ar5
      00040E C0 06            [24] 1918 	push	ar6
      000410 C0 07            [24] 1919 	push	ar7
      000412 8A 82            [24] 1920 	mov	dpl,r2
      000414 8B 83            [24] 1921 	mov	dph,r3
      000416 8C F0            [24] 1922 	mov	b,r4
      000418 78r00            [12] 1923 	mov	r0,#_list_push
      00041A 79s00            [12] 1924 	mov	r1,#(_list_push >> 8)
      00041C 7As00            [12] 1925 	mov	r2,#(_list_push >> 16)
      00041E 12r00r00         [24] 1926 	lcall	__sdcc_banked_call
      000421 15 81            [12] 1927 	dec	sp
      000423 15 81            [12] 1928 	dec	sp
      000425 15 81            [12] 1929 	dec	sp
                                   1930 ;	../../../core/net/neighbor-attr.c:136: item->time = 0;
      000427 E5 81            [12] 1931 	mov	a,sp
      000429 24 FB            [12] 1932 	add	a,#0xfb
      00042B F8               [12] 1933 	mov	r0,a
      00042C 74 0B            [12] 1934 	mov	a,#0x0b
      00042E 26               [12] 1935 	add	a,@r0
      00042F FD               [12] 1936 	mov	r5,a
      000430 E4               [12] 1937 	clr	a
      000431 08               [12] 1938 	inc	r0
      000432 36               [12] 1939 	addc	a,@r0
      000433 FE               [12] 1940 	mov	r6,a
      000434 08               [12] 1941 	inc	r0
      000435 86 07            [24] 1942 	mov	ar7,@r0
      000437 8D 82            [24] 1943 	mov	dpl,r5
      000439 8E 83            [24] 1944 	mov	dph,r6
      00043B 8F F0            [24] 1945 	mov	b,r7
      00043D E4               [12] 1946 	clr	a
      00043E 12r00r00         [24] 1947 	lcall	__gptrput
      000441 A3               [24] 1948 	inc	dptr
      000442 12r00r00         [24] 1949 	lcall	__gptrput
                                   1950 ;	../../../core/net/neighbor-attr.c:137: rimeaddr_copy(&item->addr, addr);
      000445 E5 81            [12] 1951 	mov	a,sp
      000447 24 FB            [12] 1952 	add	a,#0xfb
      000449 F8               [12] 1953 	mov	r0,a
      00044A 74 03            [12] 1954 	mov	a,#0x03
      00044C 26               [12] 1955 	add	a,@r0
      00044D FD               [12] 1956 	mov	r5,a
      00044E E4               [12] 1957 	clr	a
      00044F 08               [12] 1958 	inc	r0
      000450 36               [12] 1959 	addc	a,@r0
      000451 FE               [12] 1960 	mov	r6,a
      000452 08               [12] 1961 	inc	r0
      000453 86 07            [24] 1962 	mov	ar7,@r0
      000455 E5 81            [12] 1963 	mov	a,sp
      000457 24 F6            [12] 1964 	add	a,#0xf6
      000459 F8               [12] 1965 	mov	r0,a
      00045A E6               [12] 1966 	mov	a,@r0
      00045B C0 E0            [24] 1967 	push	acc
      00045D 08               [12] 1968 	inc	r0
      00045E E6               [12] 1969 	mov	a,@r0
      00045F C0 E0            [24] 1970 	push	acc
      000461 08               [12] 1971 	inc	r0
      000462 E6               [12] 1972 	mov	a,@r0
      000463 C0 E0            [24] 1973 	push	acc
      000465 8D 82            [24] 1974 	mov	dpl,r5
      000467 8E 83            [24] 1975 	mov	dph,r6
      000469 8F F0            [24] 1976 	mov	b,r7
      00046B 78r00            [12] 1977 	mov	r0,#_rimeaddr_copy
      00046D 79s00            [12] 1978 	mov	r1,#(_rimeaddr_copy >> 8)
      00046F 7As00            [12] 1979 	mov	r2,#(_rimeaddr_copy >> 16)
      000471 12r00r00         [24] 1980 	lcall	__sdcc_banked_call
      000474 15 81            [12] 1981 	dec	sp
      000476 15 81            [12] 1982 	dec	sp
      000478 15 81            [12] 1983 	dec	sp
                                   1984 ;	../../../core/net/neighbor-attr.c:140: ptr = neighbor_addr_mem.mem;
      00047A 90r00r09         [24] 1985 	mov	dptr,#(_neighbor_addr_mem + 0x0007)
      00047D E0               [24] 1986 	movx	a,@dptr
      00047E FD               [12] 1987 	mov	r5,a
      00047F A3               [24] 1988 	inc	dptr
      000480 E0               [24] 1989 	movx	a,@dptr
      000481 FE               [12] 1990 	mov	r6,a
      000482 A3               [24] 1991 	inc	dptr
      000483 E0               [24] 1992 	movx	a,@dptr
      000484 FF               [12] 1993 	mov	r7,a
      000485 A8 81            [24] 1994 	mov	r0,sp
      000487 18               [12] 1995 	dec	r0
      000488 18               [12] 1996 	dec	r0
      000489 A6 05            [24] 1997 	mov	@r0,ar5
      00048B 08               [12] 1998 	inc	r0
      00048C A6 06            [24] 1999 	mov	@r0,ar6
      00048E 08               [12] 2000 	inc	r0
      00048F A6 07            [24] 2001 	mov	@r0,ar7
                                   2002 ;	../../../core/net/neighbor-attr.c:141: for(i = 0; i < neighbor_addr_mem.num; ++i) {
      000491 E4               [12] 2003 	clr	a
      000492 FB               [12] 2004 	mov	r3,a
      000493 FC               [12] 2005 	mov	r4,a
      000494 E5 81            [12] 2006 	mov	a,sp
      000496 24 F9            [12] 2007 	add	a,#0xf9
      000498 F8               [12] 2008 	mov	r0,a
      000499 A6 03            [24] 2009 	mov	@r0,ar3
      00049B 08               [12] 2010 	inc	r0
      00049C A6 04            [24] 2011 	mov	@r0,ar4
      00049E 74 0F            [12] 2012 	mov	a,#0x0f
      0004A0 C0 E0            [24] 2013 	push	acc
      0004A2 E4               [12] 2014 	clr	a
      0004A3 C0 E0            [24] 2015 	push	acc
      0004A5 8B 82            [24] 2016 	mov	dpl,r3
      0004A7 8C 83            [24] 2017 	mov	dph,r4
      0004A9 12r00r00         [24] 2018 	lcall	__mulint
      0004AC AB 82            [24] 2019 	mov	r3,dpl
      0004AE AC 83            [24] 2020 	mov	r4,dph
      0004B0 15 81            [12] 2021 	dec	sp
      0004B2 15 81            [12] 2022 	dec	sp
      0004B4                       2023 00110$:
      0004B4 90r00r04         [24] 2024 	mov	dptr,#(_neighbor_addr_mem + 0x0002)
      0004B7 E0               [24] 2025 	movx	a,@dptr
      0004B8 FA               [12] 2026 	mov	r2,a
      0004B9 A3               [24] 2027 	inc	dptr
      0004BA E0               [24] 2028 	movx	a,@dptr
      0004BB FF               [12] 2029 	mov	r7,a
      0004BC E5 81            [12] 2030 	mov	a,sp
      0004BE 24 F9            [12] 2031 	add	a,#0xf9
      0004C0 F8               [12] 2032 	mov	r0,a
      0004C1 C3               [12] 2033 	clr	c
      0004C2 E6               [12] 2034 	mov	a,@r0
      0004C3 9A               [12] 2035 	subb	a,r2
      0004C4 08               [12] 2036 	inc	r0
      0004C5 E6               [12] 2037 	mov	a,@r0
      0004C6 9F               [12] 2038 	subb	a,r7
      0004C7 50 40            [24] 2039 	jnc	00124$
                                   2040 ;	../../../core/net/neighbor-attr.c:142: if(&ptr[i] == item) {
      0004C9 A8 81            [24] 2041 	mov	r0,sp
      0004CB 18               [12] 2042 	dec	r0
      0004CC 18               [12] 2043 	dec	r0
      0004CD EB               [12] 2044 	mov	a,r3
      0004CE 26               [12] 2045 	add	a,@r0
      0004CF FA               [12] 2046 	mov	r2,a
      0004D0 EC               [12] 2047 	mov	a,r4
      0004D1 08               [12] 2048 	inc	r0
      0004D2 36               [12] 2049 	addc	a,@r0
      0004D3 FE               [12] 2050 	mov	r6,a
      0004D4 08               [12] 2051 	inc	r0
      0004D5 86 07            [24] 2052 	mov	ar7,@r0
      0004D7 E5 81            [12] 2053 	mov	a,sp
      0004D9 24 FB            [12] 2054 	add	a,#0xfb
      0004DB F8               [12] 2055 	mov	r0,a
      0004DC C0 02            [24] 2056 	push	ar2
      0004DE C0 06            [24] 2057 	push	ar6
      0004E0 C0 07            [24] 2058 	push	ar7
      0004E2 86 82            [24] 2059 	mov	dpl,@r0
      0004E4 08               [12] 2060 	inc	r0
      0004E5 86 83            [24] 2061 	mov	dph,@r0
      0004E7 08               [12] 2062 	inc	r0
      0004E8 86 F0            [24] 2063 	mov	b,@r0
      0004EA 12r00r00         [24] 2064 	lcall	___gptr_cmp
      0004ED 15 81            [12] 2065 	dec	sp
      0004EF 15 81            [12] 2066 	dec	sp
      0004F1 15 81            [12] 2067 	dec	sp
      0004F3 60 14            [24] 2068 	jz	00124$
                                   2069 ;	../../../core/net/neighbor-attr.c:141: for(i = 0; i < neighbor_addr_mem.num; ++i) {
      0004F5 74 0F            [12] 2070 	mov	a,#0x0f
      0004F7 2B               [12] 2071 	add	a,r3
      0004F8 FB               [12] 2072 	mov	r3,a
      0004F9 E4               [12] 2073 	clr	a
      0004FA 3C               [12] 2074 	addc	a,r4
      0004FB FC               [12] 2075 	mov	r4,a
      0004FC E5 81            [12] 2076 	mov	a,sp
      0004FE 24 F9            [12] 2077 	add	a,#0xf9
      000500 F8               [12] 2078 	mov	r0,a
      000501 06               [12] 2079 	inc	@r0
      000502 B6 00 02         [24] 2080 	cjne	@r0,#0x00,00157$
      000505 08               [12] 2081 	inc	r0
      000506 06               [12] 2082 	inc	@r0
      000507                       2083 00157$:
      000507 80 AB            [24] 2084 	sjmp	00110$
      000509                       2085 00124$:
      000509 E5 81            [12] 2086 	mov	a,sp
      00050B 24 F9            [12] 2087 	add	a,#0xf9
      00050D F8               [12] 2088 	mov	r0,a
      00050E 86 06            [24] 2089 	mov	ar6,@r0
      000510 08               [12] 2090 	inc	r0
      000511 86 07            [24] 2091 	mov	ar7,@r0
                                   2092 ;	../../../core/net/neighbor-attr.c:147: item->index = i;
      000513 E5 81            [12] 2093 	mov	a,sp
      000515 24 FB            [12] 2094 	add	a,#0xfb
      000517 F8               [12] 2095 	mov	r0,a
      000518 74 0D            [12] 2096 	mov	a,#0x0d
      00051A 26               [12] 2097 	add	a,@r0
      00051B FB               [12] 2098 	mov	r3,a
      00051C E4               [12] 2099 	clr	a
      00051D 08               [12] 2100 	inc	r0
      00051E 36               [12] 2101 	addc	a,@r0
      00051F FC               [12] 2102 	mov	r4,a
      000520 08               [12] 2103 	inc	r0
      000521 86 05            [24] 2104 	mov	ar5,@r0
      000523 8B 82            [24] 2105 	mov	dpl,r3
      000525 8C 83            [24] 2106 	mov	dph,r4
      000527 8D F0            [24] 2107 	mov	b,r5
      000529 EE               [12] 2108 	mov	a,r6
      00052A 12r00r00         [24] 2109 	lcall	__gptrput
      00052D A3               [24] 2110 	inc	dptr
      00052E EF               [12] 2111 	mov	a,r7
      00052F 12r00r00         [24] 2112 	lcall	__gptrput
                                   2113 ;	../../../core/net/neighbor-attr.c:149: for(def = list_head(neighbor_attrs); def != NULL; def = def->next) {
      000532 90r00r15         [24] 2114 	mov	dptr,#_neighbor_attrs
      000535 E0               [24] 2115 	movx	a,@dptr
      000536 FB               [12] 2116 	mov	r3,a
      000537 A3               [24] 2117 	inc	dptr
      000538 E0               [24] 2118 	movx	a,@dptr
      000539 FC               [12] 2119 	mov	r4,a
      00053A A3               [24] 2120 	inc	dptr
      00053B E0               [24] 2121 	movx	a,@dptr
      00053C FD               [12] 2122 	mov	r5,a
      00053D 8B 82            [24] 2123 	mov	dpl,r3
      00053F 8C 83            [24] 2124 	mov	dph,r4
      000541 8D F0            [24] 2125 	mov	b,r5
      000543 C0 07            [24] 2126 	push	ar7
      000545 C0 06            [24] 2127 	push	ar6
      000547 78r00            [12] 2128 	mov	r0,#_list_head
      000549 79s00            [12] 2129 	mov	r1,#(_list_head >> 8)
      00054B 7As00            [12] 2130 	mov	r2,#(_list_head >> 16)
      00054D 12r00r00         [24] 2131 	lcall	__sdcc_banked_call
      000550 AB 82            [24] 2132 	mov	r3,dpl
      000552 AC 83            [24] 2133 	mov	r4,dph
      000554 AD F0            [24] 2134 	mov	r5,b
      000556 D0 06            [24] 2135 	pop	ar6
      000558 D0 07            [24] 2136 	pop	ar7
      00055A                       2137 00113$:
      00055A EB               [12] 2138 	mov	a,r3
      00055B 4C               [12] 2139 	orl	a,r4
      00055C 60 41            [24] 2140 	jz	00108$
                                   2141 ;	../../../core/net/neighbor-attr.c:150: set_attr(def, i);
      00055E C0 07            [24] 2142 	push	ar7
      000560 C0 06            [24] 2143 	push	ar6
      000562 C0 05            [24] 2144 	push	ar5
      000564 C0 04            [24] 2145 	push	ar4
      000566 C0 03            [24] 2146 	push	ar3
      000568 C0 06            [24] 2147 	push	ar6
      00056A C0 07            [24] 2148 	push	ar7
      00056C 8B 82            [24] 2149 	mov	dpl,r3
      00056E 8C 83            [24] 2150 	mov	dph,r4
      000570 8D F0            [24] 2151 	mov	b,r5
      000572 78r05            [12] 2152 	mov	r0,#_set_attr
      000574 79s01            [12] 2153 	mov	r1,#(_set_attr >> 8)
      000576 7As00            [12] 2154 	mov	r2,#(_set_attr >> 16)
      000578 12r00r00         [24] 2155 	lcall	__sdcc_banked_call
      00057B 15 81            [12] 2156 	dec	sp
      00057D 15 81            [12] 2157 	dec	sp
      00057F D0 03            [24] 2158 	pop	ar3
      000581 D0 04            [24] 2159 	pop	ar4
      000583 D0 05            [24] 2160 	pop	ar5
      000585 D0 06            [24] 2161 	pop	ar6
      000587 D0 07            [24] 2162 	pop	ar7
                                   2163 ;	../../../core/net/neighbor-attr.c:149: for(def = list_head(neighbor_attrs); def != NULL; def = def->next) {
      000589 8B 82            [24] 2164 	mov	dpl,r3
      00058B 8C 83            [24] 2165 	mov	dph,r4
      00058D 8D F0            [24] 2166 	mov	b,r5
      00058F 12r00r00         [24] 2167 	lcall	__gptrget
      000592 FB               [12] 2168 	mov	r3,a
      000593 A3               [24] 2169 	inc	dptr
      000594 12r00r00         [24] 2170 	lcall	__gptrget
      000597 FC               [12] 2171 	mov	r4,a
      000598 A3               [24] 2172 	inc	dptr
      000599 12r00r00         [24] 2173 	lcall	__gptrget
      00059C FD               [12] 2174 	mov	r5,a
      00059D 80 BB            [24] 2175 	sjmp	00113$
      00059F                       2176 00108$:
                                   2177 ;	../../../core/net/neighbor-attr.c:153: return 1;
      00059F 90 00 01         [24] 2178 	mov	dptr,#0x0001
      0005A2                       2179 00115$:
                                   2180 ;	../../../core/net/neighbor-attr.c:154: }
      0005A2 E5 81            [12] 2181 	mov	a,sp
      0005A4 24 F5            [12] 2182 	add	a,#0xf5
      0005A6 F5 81            [12] 2183 	mov	sp,a
      0005A8 02r00r00         [24] 2184 	ljmp	__sdcc_banked_ret
                                   2185 ;------------------------------------------------------------
                                   2186 ;Allocation info for local variables in function 'neighbor_attr_remove_neighbor'
                                   2187 ;------------------------------------------------------------
                                   2188 ;addr                      Allocated to registers r5 r6 r7 
                                   2189 ;item                      Allocated to stack - sp -2
                                   2190 ;------------------------------------------------------------
                                   2191 ;	../../../core/net/neighbor-attr.c:157: neighbor_attr_remove_neighbor(const rimeaddr_t *addr)
                                   2192 ;	-----------------------------------------
                                   2193 ;	 function neighbor_attr_remove_neighbor
                                   2194 ;	-----------------------------------------
      0005AB                       2195 _neighbor_attr_remove_neighbor:
      0005AB 05 81            [12] 2196 	inc	sp
      0005AD 05 81            [12] 2197 	inc	sp
      0005AF 05 81            [12] 2198 	inc	sp
                                   2199 ;	../../../core/net/neighbor-attr.c:159: struct neighbor_addr *item = neighbor_addr_get(addr);
      0005B1 78r00            [12] 2200 	mov	r0,#_neighbor_addr_get
      0005B3 79s00            [12] 2201 	mov	r1,#(_neighbor_addr_get >> 8)
      0005B5 7As00            [12] 2202 	mov	r2,#(_neighbor_addr_get >> 16)
      0005B7 12r00r00         [24] 2203 	lcall	__sdcc_banked_call
      0005BA AD 82            [24] 2204 	mov	r5,dpl
      0005BC AE 83            [24] 2205 	mov	r6,dph
      0005BE AF F0            [24] 2206 	mov	r7,b
      0005C0 A8 81            [24] 2207 	mov	r0,sp
      0005C2 18               [12] 2208 	dec	r0
      0005C3 18               [12] 2209 	dec	r0
      0005C4 A6 05            [24] 2210 	mov	@r0,ar5
      0005C6 08               [12] 2211 	inc	r0
      0005C7 A6 06            [24] 2212 	mov	@r0,ar6
      0005C9 08               [12] 2213 	inc	r0
      0005CA A6 07            [24] 2214 	mov	@r0,ar7
                                   2215 ;	../../../core/net/neighbor-attr.c:161: if(item != NULL) {
      0005CC A8 81            [24] 2216 	mov	r0,sp
      0005CE 18               [12] 2217 	dec	r0
      0005CF 18               [12] 2218 	dec	r0
      0005D0 E6               [12] 2219 	mov	a,@r0
      0005D1 08               [12] 2220 	inc	r0
      0005D2 46               [12] 2221 	orl	a,@r0
      0005D3 60 5E            [24] 2222 	jz	00102$
                                   2223 ;	../../../core/net/neighbor-attr.c:162: list_remove(neighbor_addrs, item);
      0005D5 A8 81            [24] 2224 	mov	r0,sp
      0005D7 18               [12] 2225 	dec	r0
      0005D8 18               [12] 2226 	dec	r0
      0005D9 86 02            [24] 2227 	mov	ar2,@r0
      0005DB 08               [12] 2228 	inc	r0
      0005DC 86 03            [24] 2229 	mov	ar3,@r0
      0005DE 08               [12] 2230 	inc	r0
      0005DF 86 04            [24] 2231 	mov	ar4,@r0
      0005E1 90r00r0F         [24] 2232 	mov	dptr,#_neighbor_addrs
      0005E4 E0               [24] 2233 	movx	a,@dptr
      0005E5 FD               [12] 2234 	mov	r5,a
      0005E6 A3               [24] 2235 	inc	dptr
      0005E7 E0               [24] 2236 	movx	a,@dptr
      0005E8 FE               [12] 2237 	mov	r6,a
      0005E9 A3               [24] 2238 	inc	dptr
      0005EA E0               [24] 2239 	movx	a,@dptr
      0005EB FF               [12] 2240 	mov	r7,a
      0005EC C0 02            [24] 2241 	push	ar2
      0005EE C0 03            [24] 2242 	push	ar3
      0005F0 C0 04            [24] 2243 	push	ar4
      0005F2 8D 82            [24] 2244 	mov	dpl,r5
      0005F4 8E 83            [24] 2245 	mov	dph,r6
      0005F6 8F F0            [24] 2246 	mov	b,r7
      0005F8 78r00            [12] 2247 	mov	r0,#_list_remove
      0005FA 79s00            [12] 2248 	mov	r1,#(_list_remove >> 8)
      0005FC 7As00            [12] 2249 	mov	r2,#(_list_remove >> 16)
      0005FE 12r00r00         [24] 2250 	lcall	__sdcc_banked_call
      000601 15 81            [12] 2251 	dec	sp
      000603 15 81            [12] 2252 	dec	sp
      000605 15 81            [12] 2253 	dec	sp
                                   2254 ;	../../../core/net/neighbor-attr.c:163: memb_free(&neighbor_addr_mem, item);
      000607 A8 81            [24] 2255 	mov	r0,sp
      000609 18               [12] 2256 	dec	r0
      00060A 18               [12] 2257 	dec	r0
      00060B 86 05            [24] 2258 	mov	ar5,@r0
      00060D 08               [12] 2259 	inc	r0
      00060E 86 06            [24] 2260 	mov	ar6,@r0
      000610 08               [12] 2261 	inc	r0
      000611 86 07            [24] 2262 	mov	ar7,@r0
      000613 C0 05            [24] 2263 	push	ar5
      000615 C0 06            [24] 2264 	push	ar6
      000617 C0 07            [24] 2265 	push	ar7
      000619 90r00r02         [24] 2266 	mov	dptr,#_neighbor_addr_mem
      00061C 75 F0 00         [24] 2267 	mov	b,#0x00
      00061F 78r00            [12] 2268 	mov	r0,#_memb_free
      000621 79s00            [12] 2269 	mov	r1,#(_memb_free >> 8)
      000623 7As00            [12] 2270 	mov	r2,#(_memb_free >> 16)
      000625 12r00r00         [24] 2271 	lcall	__sdcc_banked_call
      000628 15 81            [12] 2272 	dec	sp
      00062A 15 81            [12] 2273 	dec	sp
      00062C 15 81            [12] 2274 	dec	sp
                                   2275 ;	../../../core/net/neighbor-attr.c:164: return 0;
      00062E 90 00 00         [24] 2276 	mov	dptr,#0x0000
      000631 80 03            [24] 2277 	sjmp	00103$
      000633                       2278 00102$:
                                   2279 ;	../../../core/net/neighbor-attr.c:166: return -1;
      000633 90 FF FF         [24] 2280 	mov	dptr,#0xffff
      000636                       2281 00103$:
                                   2282 ;	../../../core/net/neighbor-attr.c:167: }
      000636 15 81            [12] 2283 	dec	sp
      000638 15 81            [12] 2284 	dec	sp
      00063A 15 81            [12] 2285 	dec	sp
      00063C 02r00r00         [24] 2286 	ljmp	__sdcc_banked_ret
                                   2287 ;------------------------------------------------------------
                                   2288 ;Allocation info for local variables in function 'neighbor_attr_get_data'
                                   2289 ;------------------------------------------------------------
                                   2290 ;addr                      Allocated to stack - sp -10
                                   2291 ;def                       Allocated to stack - sp -4
                                   2292 ;attr                      Allocated to registers r2 r3 r4 
                                   2293 ;sloc0                     Allocated to stack - sp -1
                                   2294 ;------------------------------------------------------------
                                   2295 ;	../../../core/net/neighbor-attr.c:170: neighbor_attr_get_data(struct neighbor_attr *def, const rimeaddr_t *addr)
                                   2296 ;	-----------------------------------------
                                   2297 ;	 function neighbor_attr_get_data
                                   2298 ;	-----------------------------------------
      00063F                       2299 _neighbor_attr_get_data:
      00063F C0 82            [24] 2300 	push	dpl
      000641 C0 83            [24] 2301 	push	dph
      000643 C0 F0            [24] 2302 	push	b
      000645 05 81            [12] 2303 	inc	sp
      000647 05 81            [12] 2304 	inc	sp
                                   2305 ;	../../../core/net/neighbor-attr.c:172: struct neighbor_addr *attr = neighbor_addr_get(addr);
      000649 E5 81            [12] 2306 	mov	a,sp
      00064B 24 F6            [12] 2307 	add	a,#0xf6
      00064D F8               [12] 2308 	mov	r0,a
      00064E 86 82            [24] 2309 	mov	dpl,@r0
      000650 08               [12] 2310 	inc	r0
      000651 86 83            [24] 2311 	mov	dph,@r0
      000653 08               [12] 2312 	inc	r0
      000654 86 F0            [24] 2313 	mov	b,@r0
      000656 78r00            [12] 2314 	mov	r0,#_neighbor_addr_get
      000658 79s00            [12] 2315 	mov	r1,#(_neighbor_addr_get >> 8)
      00065A 7As00            [12] 2316 	mov	r2,#(_neighbor_addr_get >> 16)
      00065C 12r00r00         [24] 2317 	lcall	__sdcc_banked_call
      00065F AF 82            [24] 2318 	mov	r7,dpl
      000661 AE 83            [24] 2319 	mov	r6,dph
      000663 AD F0            [24] 2320 	mov	r5,b
      000665 8F 02            [24] 2321 	mov	ar2,r7
      000667 8E 03            [24] 2322 	mov	ar3,r6
      000669 8D 04            [24] 2323 	mov	ar4,r5
                                   2324 ;	../../../core/net/neighbor-attr.c:174: if(attr != NULL) {
      00066B EF               [12] 2325 	mov	a,r7
      00066C 4E               [12] 2326 	orl	a,r6
      00066D 70 03            [24] 2327 	jnz	00109$
      00066F 02r07r02         [24] 2328 	ljmp	00102$
      000672                       2329 00109$:
                                   2330 ;	../../../core/net/neighbor-attr.c:175: return (char *)def->data + attr->index * def->size;
      000672 E5 81            [12] 2331 	mov	a,sp
      000674 24 FC            [12] 2332 	add	a,#0xfc
      000676 F8               [12] 2333 	mov	r0,a
      000677 74 08            [12] 2334 	mov	a,#0x08
      000679 26               [12] 2335 	add	a,@r0
      00067A FD               [12] 2336 	mov	r5,a
      00067B E4               [12] 2337 	clr	a
      00067C 08               [12] 2338 	inc	r0
      00067D 36               [12] 2339 	addc	a,@r0
      00067E FE               [12] 2340 	mov	r6,a
      00067F 08               [12] 2341 	inc	r0
      000680 86 07            [24] 2342 	mov	ar7,@r0
      000682 8D 82            [24] 2343 	mov	dpl,r5
      000684 8E 83            [24] 2344 	mov	dph,r6
      000686 8F F0            [24] 2345 	mov	b,r7
      000688 12r00r00         [24] 2346 	lcall	__gptrget
      00068B FD               [12] 2347 	mov	r5,a
      00068C A3               [24] 2348 	inc	dptr
      00068D 12r00r00         [24] 2349 	lcall	__gptrget
      000690 FE               [12] 2350 	mov	r6,a
      000691 A3               [24] 2351 	inc	dptr
      000692 12r00r00         [24] 2352 	lcall	__gptrget
      000695 FF               [12] 2353 	mov	r7,a
      000696 74 0D            [12] 2354 	mov	a,#0x0d
      000698 2A               [12] 2355 	add	a,r2
      000699 FA               [12] 2356 	mov	r2,a
      00069A E4               [12] 2357 	clr	a
      00069B 3B               [12] 2358 	addc	a,r3
      00069C FB               [12] 2359 	mov	r3,a
      00069D 8A 82            [24] 2360 	mov	dpl,r2
      00069F 8B 83            [24] 2361 	mov	dph,r3
      0006A1 8C F0            [24] 2362 	mov	b,r4
      0006A3 A8 81            [24] 2363 	mov	r0,sp
      0006A5 18               [12] 2364 	dec	r0
      0006A6 12r00r00         [24] 2365 	lcall	__gptrget
      0006A9 F6               [12] 2366 	mov	@r0,a
      0006AA A3               [24] 2367 	inc	dptr
      0006AB 12r00r00         [24] 2368 	lcall	__gptrget
      0006AE 08               [12] 2369 	inc	r0
      0006AF F6               [12] 2370 	mov	@r0,a
      0006B0 E5 81            [12] 2371 	mov	a,sp
      0006B2 24 FC            [12] 2372 	add	a,#0xfc
      0006B4 F8               [12] 2373 	mov	r0,a
      0006B5 74 03            [12] 2374 	mov	a,#0x03
      0006B7 26               [12] 2375 	add	a,@r0
      0006B8 FA               [12] 2376 	mov	r2,a
      0006B9 E4               [12] 2377 	clr	a
      0006BA 08               [12] 2378 	inc	r0
      0006BB 36               [12] 2379 	addc	a,@r0
      0006BC FB               [12] 2380 	mov	r3,a
      0006BD 08               [12] 2381 	inc	r0
      0006BE 86 04            [24] 2382 	mov	ar4,@r0
      0006C0 8A 82            [24] 2383 	mov	dpl,r2
      0006C2 8B 83            [24] 2384 	mov	dph,r3
      0006C4 8C F0            [24] 2385 	mov	b,r4
      0006C6 12r00r00         [24] 2386 	lcall	__gptrget
      0006C9 FA               [12] 2387 	mov	r2,a
      0006CA A3               [24] 2388 	inc	dptr
      0006CB 12r00r00         [24] 2389 	lcall	__gptrget
      0006CE FB               [12] 2390 	mov	r3,a
      0006CF C0 07            [24] 2391 	push	ar7
      0006D1 C0 06            [24] 2392 	push	ar6
      0006D3 C0 05            [24] 2393 	push	ar5
      0006D5 C0 02            [24] 2394 	push	ar2
      0006D7 C0 03            [24] 2395 	push	ar3
      0006D9 E5 81            [12] 2396 	mov	a,sp
      0006DB 24 FA            [12] 2397 	add	a,#0xfa
      0006DD F8               [12] 2398 	mov	r0,a
      0006DE 86 82            [24] 2399 	mov	dpl,@r0
      0006E0 08               [12] 2400 	inc	r0
      0006E1 86 83            [24] 2401 	mov	dph,@r0
      0006E3 12r00r00         [24] 2402 	lcall	__mulint
      0006E6 AB 82            [24] 2403 	mov	r3,dpl
      0006E8 AC 83            [24] 2404 	mov	r4,dph
      0006EA 15 81            [12] 2405 	dec	sp
      0006EC 15 81            [12] 2406 	dec	sp
      0006EE D0 05            [24] 2407 	pop	ar5
      0006F0 D0 06            [24] 2408 	pop	ar6
      0006F2 D0 07            [24] 2409 	pop	ar7
      0006F4 EB               [12] 2410 	mov	a,r3
      0006F5 2D               [12] 2411 	add	a,r5
      0006F6 FD               [12] 2412 	mov	r5,a
      0006F7 EC               [12] 2413 	mov	a,r4
      0006F8 3E               [12] 2414 	addc	a,r6
      0006F9 FE               [12] 2415 	mov	r6,a
      0006FA 8D 82            [24] 2416 	mov	dpl,r5
      0006FC 8E 83            [24] 2417 	mov	dph,r6
      0006FE 8F F0            [24] 2418 	mov	b,r7
      000700 80 06            [24] 2419 	sjmp	00103$
      000702                       2420 00102$:
                                   2421 ;	../../../core/net/neighbor-attr.c:177: return NULL;
      000702 90 00 00         [24] 2422 	mov	dptr,#0x0000
      000705 75 F0 00         [24] 2423 	mov	b,#0x00
      000708                       2424 00103$:
                                   2425 ;	../../../core/net/neighbor-attr.c:178: }
      000708 E5 81            [12] 2426 	mov	a,sp
      00070A 24 FB            [12] 2427 	add	a,#0xfb
      00070C F5 81            [12] 2428 	mov	sp,a
      00070E 02r00r00         [24] 2429 	ljmp	__sdcc_banked_ret
                                   2430 ;------------------------------------------------------------
                                   2431 ;Allocation info for local variables in function 'neighbor_attr_set_data'
                                   2432 ;------------------------------------------------------------
                                   2433 ;addr                      Allocated to stack - sp -14
                                   2434 ;data                      Allocated to stack - sp -17
                                   2435 ;def                       Allocated to stack - sp -8
                                   2436 ;attr                      Allocated to stack - sp -2
                                   2437 ;sloc0                     Allocated to stack - sp -5
                                   2438 ;------------------------------------------------------------
                                   2439 ;	../../../core/net/neighbor-attr.c:181: neighbor_attr_set_data(struct neighbor_attr *def, const rimeaddr_t *addr,
                                   2440 ;	-----------------------------------------
                                   2441 ;	 function neighbor_attr_set_data
                                   2442 ;	-----------------------------------------
      000711                       2443 _neighbor_attr_set_data:
      000711 C0 82            [24] 2444 	push	dpl
      000713 C0 83            [24] 2445 	push	dph
      000715 C0 F0            [24] 2446 	push	b
      000717 E5 81            [12] 2447 	mov	a,sp
      000719 24 06            [12] 2448 	add	a,#0x06
                                   2449 ;	../../../core/net/neighbor-attr.c:184: struct neighbor_addr *attr = neighbor_addr_get(addr);
      00071B F5 81            [12] 2450 	mov	sp,a
      00071D 24 F2            [12] 2451 	add	a,#0xf2
      00071F F8               [12] 2452 	mov	r0,a
      000720 86 82            [24] 2453 	mov	dpl,@r0
      000722 08               [12] 2454 	inc	r0
      000723 86 83            [24] 2455 	mov	dph,@r0
      000725 08               [12] 2456 	inc	r0
      000726 86 F0            [24] 2457 	mov	b,@r0
      000728 78r00            [12] 2458 	mov	r0,#_neighbor_addr_get
      00072A 79s00            [12] 2459 	mov	r1,#(_neighbor_addr_get >> 8)
      00072C 7As00            [12] 2460 	mov	r2,#(_neighbor_addr_get >> 16)
      00072E 12r00r00         [24] 2461 	lcall	__sdcc_banked_call
      000731 AA 82            [24] 2462 	mov	r2,dpl
      000733 AB 83            [24] 2463 	mov	r3,dph
      000735 AC F0            [24] 2464 	mov	r4,b
      000737 A8 81            [24] 2465 	mov	r0,sp
      000739 18               [12] 2466 	dec	r0
      00073A 18               [12] 2467 	dec	r0
      00073B A6 02            [24] 2468 	mov	@r0,ar2
      00073D 08               [12] 2469 	inc	r0
      00073E A6 03            [24] 2470 	mov	@r0,ar3
      000740 08               [12] 2471 	inc	r0
      000741 A6 04            [24] 2472 	mov	@r0,ar4
                                   2473 ;	../../../core/net/neighbor-attr.c:186: if(attr == NULL) {
      000743 A8 81            [24] 2474 	mov	r0,sp
      000745 18               [12] 2475 	dec	r0
      000746 18               [12] 2476 	dec	r0
      000747 E6               [12] 2477 	mov	a,@r0
      000748 08               [12] 2478 	inc	r0
      000749 46               [12] 2479 	orl	a,@r0
      00074A 70 47            [24] 2480 	jnz	00104$
                                   2481 ;	../../../core/net/neighbor-attr.c:187: if(neighbor_attr_add_neighbor(addr)) {
      00074C E5 81            [12] 2482 	mov	a,sp
      00074E 24 F2            [12] 2483 	add	a,#0xf2
      000750 F8               [12] 2484 	mov	r0,a
      000751 86 82            [24] 2485 	mov	dpl,@r0
      000753 08               [12] 2486 	inc	r0
      000754 86 83            [24] 2487 	mov	dph,@r0
      000756 08               [12] 2488 	inc	r0
      000757 86 F0            [24] 2489 	mov	b,@r0
      000759 78r93            [12] 2490 	mov	r0,#_neighbor_attr_add_neighbor
      00075B 79s03            [12] 2491 	mov	r1,#(_neighbor_attr_add_neighbor >> 8)
      00075D 7As00            [12] 2492 	mov	r2,#(_neighbor_attr_add_neighbor >> 16)
      00075F 12r00r00         [24] 2493 	lcall	__sdcc_banked_call
      000762 E5 82            [12] 2494 	mov	a,dpl
      000764 85 83 F0         [24] 2495 	mov	b,dph
      000767 45 F0            [12] 2496 	orl	a,b
      000769 60 28            [24] 2497 	jz	00104$
                                   2498 ;	../../../core/net/neighbor-attr.c:188: attr = neighbor_addr_get(addr);
      00076B E5 81            [12] 2499 	mov	a,sp
      00076D 24 F2            [12] 2500 	add	a,#0xf2
      00076F F8               [12] 2501 	mov	r0,a
      000770 86 82            [24] 2502 	mov	dpl,@r0
      000772 08               [12] 2503 	inc	r0
      000773 86 83            [24] 2504 	mov	dph,@r0
      000775 08               [12] 2505 	inc	r0
      000776 86 F0            [24] 2506 	mov	b,@r0
      000778 78r00            [12] 2507 	mov	r0,#_neighbor_addr_get
      00077A 79s00            [12] 2508 	mov	r1,#(_neighbor_addr_get >> 8)
      00077C 7As00            [12] 2509 	mov	r2,#(_neighbor_addr_get >> 16)
      00077E 12r00r00         [24] 2510 	lcall	__sdcc_banked_call
      000781 AD 82            [24] 2511 	mov	r5,dpl
      000783 AE 83            [24] 2512 	mov	r6,dph
      000785 AF F0            [24] 2513 	mov	r7,b
      000787 A8 81            [24] 2514 	mov	r0,sp
      000789 18               [12] 2515 	dec	r0
      00078A 18               [12] 2516 	dec	r0
      00078B A6 05            [24] 2517 	mov	@r0,ar5
      00078D 08               [12] 2518 	inc	r0
      00078E A6 06            [24] 2519 	mov	@r0,ar6
      000790 08               [12] 2520 	inc	r0
      000791 A6 07            [24] 2521 	mov	@r0,ar7
      000793                       2522 00104$:
                                   2523 ;	../../../core/net/neighbor-attr.c:191: if(attr != NULL) {
      000793 A8 81            [24] 2524 	mov	r0,sp
      000795 18               [12] 2525 	dec	r0
      000796 18               [12] 2526 	dec	r0
      000797 E6               [12] 2527 	mov	a,@r0
      000798 08               [12] 2528 	inc	r0
      000799 46               [12] 2529 	orl	a,@r0
      00079A 70 03            [24] 2530 	jnz	00123$
      00079C 02r08r82         [24] 2531 	ljmp	00106$
      00079F                       2532 00123$:
                                   2533 ;	../../../core/net/neighbor-attr.c:192: attr->time = 0;
      00079F A8 81            [24] 2534 	mov	r0,sp
      0007A1 18               [12] 2535 	dec	r0
      0007A2 18               [12] 2536 	dec	r0
      0007A3 74 0B            [12] 2537 	mov	a,#0x0b
      0007A5 26               [12] 2538 	add	a,@r0
      0007A6 FD               [12] 2539 	mov	r5,a
      0007A7 E4               [12] 2540 	clr	a
      0007A8 08               [12] 2541 	inc	r0
      0007A9 36               [12] 2542 	addc	a,@r0
      0007AA FE               [12] 2543 	mov	r6,a
      0007AB 08               [12] 2544 	inc	r0
      0007AC 86 07            [24] 2545 	mov	ar7,@r0
      0007AE 8D 82            [24] 2546 	mov	dpl,r5
      0007B0 8E 83            [24] 2547 	mov	dph,r6
      0007B2 8F F0            [24] 2548 	mov	b,r7
      0007B4 E4               [12] 2549 	clr	a
      0007B5 12r00r00         [24] 2550 	lcall	__gptrput
      0007B8 A3               [24] 2551 	inc	dptr
      0007B9 12r00r00         [24] 2552 	lcall	__gptrput
                                   2553 ;	../../../core/net/neighbor-attr.c:193: memcpy((char *)def->data + attr->index * def->size, data, def->size);
      0007BC E5 81            [12] 2554 	mov	a,sp
      0007BE 24 F8            [12] 2555 	add	a,#0xf8
      0007C0 F8               [12] 2556 	mov	r0,a
      0007C1 74 03            [12] 2557 	mov	a,#0x03
      0007C3 26               [12] 2558 	add	a,@r0
      0007C4 FD               [12] 2559 	mov	r5,a
      0007C5 E4               [12] 2560 	clr	a
      0007C6 08               [12] 2561 	inc	r0
      0007C7 36               [12] 2562 	addc	a,@r0
      0007C8 FE               [12] 2563 	mov	r6,a
      0007C9 08               [12] 2564 	inc	r0
      0007CA 86 07            [24] 2565 	mov	ar7,@r0
      0007CC 8D 82            [24] 2566 	mov	dpl,r5
      0007CE 8E 83            [24] 2567 	mov	dph,r6
      0007D0 8F F0            [24] 2568 	mov	b,r7
      0007D2 12r00r00         [24] 2569 	lcall	__gptrget
      0007D5 FD               [12] 2570 	mov	r5,a
      0007D6 A3               [24] 2571 	inc	dptr
      0007D7 12r00r00         [24] 2572 	lcall	__gptrget
      0007DA FE               [12] 2573 	mov	r6,a
      0007DB E5 81            [12] 2574 	mov	a,sp
      0007DD 24 F8            [12] 2575 	add	a,#0xf8
      0007DF F8               [12] 2576 	mov	r0,a
      0007E0 74 08            [12] 2577 	mov	a,#0x08
      0007E2 26               [12] 2578 	add	a,@r0
      0007E3 FB               [12] 2579 	mov	r3,a
      0007E4 E4               [12] 2580 	clr	a
      0007E5 08               [12] 2581 	inc	r0
      0007E6 36               [12] 2582 	addc	a,@r0
      0007E7 FC               [12] 2583 	mov	r4,a
      0007E8 08               [12] 2584 	inc	r0
      0007E9 86 07            [24] 2585 	mov	ar7,@r0
      0007EB 8B 82            [24] 2586 	mov	dpl,r3
      0007ED 8C 83            [24] 2587 	mov	dph,r4
      0007EF 8F F0            [24] 2588 	mov	b,r7
      0007F1 12r00r00         [24] 2589 	lcall	__gptrget
      0007F4 FB               [12] 2590 	mov	r3,a
      0007F5 A3               [24] 2591 	inc	dptr
      0007F6 12r00r00         [24] 2592 	lcall	__gptrget
      0007F9 FC               [12] 2593 	mov	r4,a
      0007FA A3               [24] 2594 	inc	dptr
      0007FB 12r00r00         [24] 2595 	lcall	__gptrget
      0007FE FF               [12] 2596 	mov	r7,a
      0007FF E5 81            [12] 2597 	mov	a,sp
      000801 24 FB            [12] 2598 	add	a,#0xfb
      000803 F8               [12] 2599 	mov	r0,a
      000804 A6 03            [24] 2600 	mov	@r0,ar3
      000806 08               [12] 2601 	inc	r0
      000807 A6 04            [24] 2602 	mov	@r0,ar4
      000809 08               [12] 2603 	inc	r0
      00080A A6 07            [24] 2604 	mov	@r0,ar7
      00080C A8 81            [24] 2605 	mov	r0,sp
      00080E 18               [12] 2606 	dec	r0
      00080F 18               [12] 2607 	dec	r0
      000810 74 0D            [12] 2608 	mov	a,#0x0d
      000812 26               [12] 2609 	add	a,@r0
      000813 FA               [12] 2610 	mov	r2,a
      000814 E4               [12] 2611 	clr	a
      000815 08               [12] 2612 	inc	r0
      000816 36               [12] 2613 	addc	a,@r0
      000817 FC               [12] 2614 	mov	r4,a
      000818 08               [12] 2615 	inc	r0
      000819 86 07            [24] 2616 	mov	ar7,@r0
      00081B 8A 82            [24] 2617 	mov	dpl,r2
      00081D 8C 83            [24] 2618 	mov	dph,r4
      00081F 8F F0            [24] 2619 	mov	b,r7
      000821 12r00r00         [24] 2620 	lcall	__gptrget
      000824 FA               [12] 2621 	mov	r2,a
      000825 A3               [24] 2622 	inc	dptr
      000826 12r00r00         [24] 2623 	lcall	__gptrget
      000829 FC               [12] 2624 	mov	r4,a
      00082A C0 06            [24] 2625 	push	ar6
      00082C C0 05            [24] 2626 	push	ar5
      00082E C0 05            [24] 2627 	push	ar5
      000830 C0 06            [24] 2628 	push	ar6
      000832 8A 82            [24] 2629 	mov	dpl,r2
      000834 8C 83            [24] 2630 	mov	dph,r4
      000836 12r00r00         [24] 2631 	lcall	__mulint
      000839 AC 82            [24] 2632 	mov	r4,dpl
      00083B AF 83            [24] 2633 	mov	r7,dph
      00083D 15 81            [12] 2634 	dec	sp
      00083F 15 81            [12] 2635 	dec	sp
      000841 D0 05            [24] 2636 	pop	ar5
      000843 D0 06            [24] 2637 	pop	ar6
      000845 E5 81            [12] 2638 	mov	a,sp
      000847 24 FB            [12] 2639 	add	a,#0xfb
      000849 F8               [12] 2640 	mov	r0,a
      00084A EC               [12] 2641 	mov	a,r4
      00084B 26               [12] 2642 	add	a,@r0
      00084C FC               [12] 2643 	mov	r4,a
      00084D EF               [12] 2644 	mov	a,r7
      00084E 08               [12] 2645 	inc	r0
      00084F 36               [12] 2646 	addc	a,@r0
      000850 FF               [12] 2647 	mov	r7,a
      000851 08               [12] 2648 	inc	r0
      000852 86 03            [24] 2649 	mov	ar3,@r0
      000854 C0 05            [24] 2650 	push	ar5
      000856 C0 06            [24] 2651 	push	ar6
      000858 E5 81            [12] 2652 	mov	a,sp
      00085A 24 ED            [12] 2653 	add	a,#0xed
      00085C F8               [12] 2654 	mov	r0,a
      00085D E6               [12] 2655 	mov	a,@r0
      00085E C0 E0            [24] 2656 	push	acc
      000860 08               [12] 2657 	inc	r0
      000861 E6               [12] 2658 	mov	a,@r0
      000862 C0 E0            [24] 2659 	push	acc
      000864 08               [12] 2660 	inc	r0
      000865 E6               [12] 2661 	mov	a,@r0
      000866 C0 E0            [24] 2662 	push	acc
      000868 8C 82            [24] 2663 	mov	dpl,r4
      00086A 8F 83            [24] 2664 	mov	dph,r7
      00086C 8B F0            [24] 2665 	mov	b,r3
      00086E 78r00            [12] 2666 	mov	r0,#___memcpy
      000870 79s00            [12] 2667 	mov	r1,#(___memcpy >> 8)
      000872 7As00            [12] 2668 	mov	r2,#(___memcpy >> 16)
      000874 12r00r00         [24] 2669 	lcall	__sdcc_banked_call
      000877 E5 81            [12] 2670 	mov	a,sp
      000879 24 FB            [12] 2671 	add	a,#0xfb
      00087B F5 81            [12] 2672 	mov	sp,a
                                   2673 ;	../../../core/net/neighbor-attr.c:194: return 1;
      00087D 90 00 01         [24] 2674 	mov	dptr,#0x0001
      000880 80 03            [24] 2675 	sjmp	00107$
      000882                       2676 00106$:
                                   2677 ;	../../../core/net/neighbor-attr.c:196: return 0;
      000882 90 00 00         [24] 2678 	mov	dptr,#0x0000
      000885                       2679 00107$:
                                   2680 ;	../../../core/net/neighbor-attr.c:197: }
      000885 E5 81            [12] 2681 	mov	a,sp
      000887 24 F7            [12] 2682 	add	a,#0xf7
      000889 F5 81            [12] 2683 	mov	sp,a
      00088B 02r00r00         [24] 2684 	ljmp	__sdcc_banked_ret
                                   2685 ;------------------------------------------------------------
                                   2686 ;Allocation info for local variables in function 'neighbor_attr_tick'
                                   2687 ;------------------------------------------------------------
                                   2688 ;addr                      Allocated to registers r5 r6 r7 
                                   2689 ;attr                      Allocated to registers r2 r3 r4 
                                   2690 ;------------------------------------------------------------
                                   2691 ;	../../../core/net/neighbor-attr.c:200: neighbor_attr_tick(const rimeaddr_t * addr)
                                   2692 ;	-----------------------------------------
                                   2693 ;	 function neighbor_attr_tick
                                   2694 ;	-----------------------------------------
      00088E                       2695 _neighbor_attr_tick:
                                   2696 ;	../../../core/net/neighbor-attr.c:202: struct neighbor_addr *attr = neighbor_addr_get(addr);
      00088E 78r00            [12] 2697 	mov	r0,#_neighbor_addr_get
      000890 79s00            [12] 2698 	mov	r1,#(_neighbor_addr_get >> 8)
      000892 7As00            [12] 2699 	mov	r2,#(_neighbor_addr_get >> 16)
      000894 12r00r00         [24] 2700 	lcall	__sdcc_banked_call
      000897 AD 82            [24] 2701 	mov	r5,dpl
      000899 AE 83            [24] 2702 	mov	r6,dph
      00089B AF F0            [24] 2703 	mov	r7,b
      00089D 8D 02            [24] 2704 	mov	ar2,r5
      00089F 8E 03            [24] 2705 	mov	ar3,r6
      0008A1 8F 04            [24] 2706 	mov	ar4,r7
                                   2707 ;	../../../core/net/neighbor-attr.c:204: if(attr != NULL) {
      0008A3 ED               [12] 2708 	mov	a,r5
      0008A4 4E               [12] 2709 	orl	a,r6
      0008A5 60 15            [24] 2710 	jz	00103$
                                   2711 ;	../../../core/net/neighbor-attr.c:205: attr->time = 0;
      0008A7 74 0B            [12] 2712 	mov	a,#0x0b
      0008A9 2A               [12] 2713 	add	a,r2
      0008AA FA               [12] 2714 	mov	r2,a
      0008AB E4               [12] 2715 	clr	a
      0008AC 3B               [12] 2716 	addc	a,r3
      0008AD FB               [12] 2717 	mov	r3,a
      0008AE 8A 82            [24] 2718 	mov	dpl,r2
      0008B0 8B 83            [24] 2719 	mov	dph,r3
      0008B2 8C F0            [24] 2720 	mov	b,r4
      0008B4 E4               [12] 2721 	clr	a
      0008B5 12r00r00         [24] 2722 	lcall	__gptrput
      0008B8 A3               [24] 2723 	inc	dptr
      0008B9 12r00r00         [24] 2724 	lcall	__gptrput
      0008BC                       2725 00103$:
                                   2726 ;	../../../core/net/neighbor-attr.c:207: }
      0008BC 02r00r00         [24] 2727 	ljmp	__sdcc_banked_ret
                                   2728 ;------------------------------------------------------------
                                   2729 ;Allocation info for local variables in function 'neighbor_attr_get_timeout'
                                   2730 ;------------------------------------------------------------
                                   2731 ;	../../../core/net/neighbor-attr.c:210: neighbor_attr_get_timeout(void)
                                   2732 ;	-----------------------------------------
                                   2733 ;	 function neighbor_attr_get_timeout
                                   2734 ;	-----------------------------------------
      0008BF                       2735 _neighbor_attr_get_timeout:
                                   2736 ;	../../../core/net/neighbor-attr.c:212: return timeout;
      0008BF 90r00r00         [24] 2737 	mov	dptr,#_timeout
      0008C2 E0               [24] 2738 	movx	a,@dptr
      0008C3 FE               [12] 2739 	mov	r6,a
      0008C4 A3               [24] 2740 	inc	dptr
      0008C5 E0               [24] 2741 	movx	a,@dptr
      0008C6 FF               [12] 2742 	mov	r7,a
      0008C7 8E 82            [24] 2743 	mov	dpl,r6
      0008C9 8F 83            [24] 2744 	mov	dph,r7
                                   2745 ;	../../../core/net/neighbor-attr.c:213: }
      0008CB 02r00r00         [24] 2746 	ljmp	__sdcc_banked_ret
                                   2747 ;------------------------------------------------------------
                                   2748 ;Allocation info for local variables in function 'timeout_check'
                                   2749 ;------------------------------------------------------------
                                   2750 ;ptr                       Allocated to registers r5 r6 r7 
                                   2751 ;item                      Allocated to stack - sp -5
                                   2752 ;next_item                 Allocated to stack - sp -2
                                   2753 ;------------------------------------------------------------
                                   2754 ;	../../../core/net/neighbor-attr.c:219: timeout_check(void *ptr)
                                   2755 ;	-----------------------------------------
                                   2756 ;	 function timeout_check
                                   2757 ;	-----------------------------------------
      0008CE                       2758 _timeout_check:
      0008CE E5 81            [12] 2759 	mov	a,sp
      0008D0 24 06            [12] 2760 	add	a,#0x06
      0008D2 F5 81            [12] 2761 	mov	sp,a
      0008D4 AD 82            [24] 2762 	mov	r5,dpl
      0008D6 AE 83            [24] 2763 	mov	r6,dph
      0008D8 AF F0            [24] 2764 	mov	r7,b
                                   2765 ;	../../../core/net/neighbor-attr.c:221: if(timeout > 0) {
      0008DA 90r00r00         [24] 2766 	mov	dptr,#_timeout
      0008DD E0               [24] 2767 	movx	a,@dptr
      0008DE F5 F0            [12] 2768 	mov	b,a
      0008E0 A3               [24] 2769 	inc	dptr
      0008E1 E0               [24] 2770 	movx	a,@dptr
      0008E2 45 F0            [12] 2771 	orl	a,b
      0008E4 70 03            [24] 2772 	jnz	00127$
      0008E6 02r0Ar7A         [24] 2773 	ljmp	00109$
      0008E9                       2774 00127$:
                                   2775 ;	../../../core/net/neighbor-attr.c:222: struct neighbor_addr *item = neighbor_attr_list_neighbors();
      0008E9 C0 07            [24] 2776 	push	ar7
      0008EB C0 06            [24] 2777 	push	ar6
      0008ED C0 05            [24] 2778 	push	ar5
      0008EF 78rE2            [12] 2779 	mov	r0,#_neighbor_attr_list_neighbors
      0008F1 79s00            [12] 2780 	mov	r1,#(_neighbor_attr_list_neighbors >> 8)
      0008F3 7As00            [12] 2781 	mov	r2,#(_neighbor_attr_list_neighbors >> 16)
      0008F5 12r00r00         [24] 2782 	lcall	__sdcc_banked_call
      0008F8 AA 82            [24] 2783 	mov	r2,dpl
      0008FA AB 83            [24] 2784 	mov	r3,dph
      0008FC AC F0            [24] 2785 	mov	r4,b
      0008FE D0 05            [24] 2786 	pop	ar5
      000900 D0 06            [24] 2787 	pop	ar6
      000902 D0 07            [24] 2788 	pop	ar7
      000904 E5 81            [12] 2789 	mov	a,sp
      000906 24 FB            [12] 2790 	add	a,#0xfb
      000908 F8               [12] 2791 	mov	r0,a
      000909 A6 02            [24] 2792 	mov	@r0,ar2
      00090B 08               [12] 2793 	inc	r0
      00090C A6 03            [24] 2794 	mov	@r0,ar3
      00090E 08               [12] 2795 	inc	r0
      00090F A6 04            [24] 2796 	mov	@r0,ar4
                                   2797 ;	../../../core/net/neighbor-attr.c:224: while(item != NULL) {
      000911                       2798 00104$:
      000911 E5 81            [12] 2799 	mov	a,sp
      000913 24 FB            [12] 2800 	add	a,#0xfb
      000915 F8               [12] 2801 	mov	r0,a
      000916 E6               [12] 2802 	mov	a,@r0
      000917 08               [12] 2803 	inc	r0
      000918 46               [12] 2804 	orl	a,@r0
      000919 70 03            [24] 2805 	jnz	00128$
      00091B 02r0Ar4B         [24] 2806 	ljmp	00106$
      00091E                       2807 00128$:
                                   2808 ;	../../../core/net/neighbor-attr.c:225: item->time += TIMEOUT_SECONDS;
      00091E C0 05            [24] 2809 	push	ar5
      000920 C0 06            [24] 2810 	push	ar6
      000922 C0 07            [24] 2811 	push	ar7
      000924 E5 81            [12] 2812 	mov	a,sp
      000926 24 F8            [12] 2813 	add	a,#0xf8
      000928 F8               [12] 2814 	mov	r0,a
      000929 74 0B            [12] 2815 	mov	a,#0x0b
      00092B 26               [12] 2816 	add	a,@r0
      00092C FD               [12] 2817 	mov	r5,a
      00092D E4               [12] 2818 	clr	a
      00092E 08               [12] 2819 	inc	r0
      00092F 36               [12] 2820 	addc	a,@r0
      000930 FE               [12] 2821 	mov	r6,a
      000931 08               [12] 2822 	inc	r0
      000932 86 07            [24] 2823 	mov	ar7,@r0
      000934 8D 82            [24] 2824 	mov	dpl,r5
      000936 8E 83            [24] 2825 	mov	dph,r6
      000938 8F F0            [24] 2826 	mov	b,r7
      00093A 12r00r00         [24] 2827 	lcall	__gptrget
      00093D FB               [12] 2828 	mov	r3,a
      00093E A3               [24] 2829 	inc	dptr
      00093F 12r00r00         [24] 2830 	lcall	__gptrget
      000942 FC               [12] 2831 	mov	r4,a
      000943 74 05            [12] 2832 	mov	a,#0x05
      000945 2B               [12] 2833 	add	a,r3
      000946 FB               [12] 2834 	mov	r3,a
      000947 E4               [12] 2835 	clr	a
      000948 3C               [12] 2836 	addc	a,r4
      000949 FC               [12] 2837 	mov	r4,a
      00094A 8D 82            [24] 2838 	mov	dpl,r5
      00094C 8E 83            [24] 2839 	mov	dph,r6
      00094E 8F F0            [24] 2840 	mov	b,r7
      000950 EB               [12] 2841 	mov	a,r3
      000951 12r00r00         [24] 2842 	lcall	__gptrput
      000954 A3               [24] 2843 	inc	dptr
      000955 EC               [12] 2844 	mov	a,r4
      000956 12r00r00         [24] 2845 	lcall	__gptrput
                                   2846 ;	../../../core/net/neighbor-attr.c:226: if(item->time >= timeout) {
      000959 90r00r00         [24] 2847 	mov	dptr,#_timeout
      00095C E0               [24] 2848 	movx	a,@dptr
      00095D FE               [12] 2849 	mov	r6,a
      00095E A3               [24] 2850 	inc	dptr
      00095F E0               [24] 2851 	movx	a,@dptr
      000960 FF               [12] 2852 	mov	r7,a
      000961 C3               [12] 2853 	clr	c
      000962 EB               [12] 2854 	mov	a,r3
      000963 9E               [12] 2855 	subb	a,r6
      000964 EC               [12] 2856 	mov	a,r4
      000965 9F               [12] 2857 	subb	a,r7
      000966 D0 07            [24] 2858 	pop	ar7
      000968 D0 06            [24] 2859 	pop	ar6
      00096A D0 05            [24] 2860 	pop	ar5
      00096C 50 03            [24] 2861 	jnc	00129$
      00096E 02r0Ar29         [24] 2862 	ljmp	00102$
      000971                       2863 00129$:
                                   2864 ;	../../../core/net/neighbor-attr.c:227: struct neighbor_addr *next_item = item->next;
      000971 C0 05            [24] 2865 	push	ar5
      000973 C0 06            [24] 2866 	push	ar6
      000975 C0 07            [24] 2867 	push	ar7
      000977 E5 81            [12] 2868 	mov	a,sp
      000979 24 F8            [12] 2869 	add	a,#0xf8
      00097B F8               [12] 2870 	mov	r0,a
      00097C 86 82            [24] 2871 	mov	dpl,@r0
      00097E 08               [12] 2872 	inc	r0
      00097F 86 83            [24] 2873 	mov	dph,@r0
      000981 08               [12] 2874 	inc	r0
      000982 86 F0            [24] 2875 	mov	b,@r0
      000984 E5 81            [12] 2876 	mov	a,sp
      000986 24 FB            [12] 2877 	add	a,#0xfb
      000988 F9               [12] 2878 	mov	r1,a
      000989 12r00r00         [24] 2879 	lcall	__gptrget
      00098C F7               [12] 2880 	mov	@r1,a
      00098D A3               [24] 2881 	inc	dptr
      00098E 12r00r00         [24] 2882 	lcall	__gptrget
      000991 09               [12] 2883 	inc	r1
      000992 F7               [12] 2884 	mov	@r1,a
      000993 A3               [24] 2885 	inc	dptr
      000994 12r00r00         [24] 2886 	lcall	__gptrget
      000997 09               [12] 2887 	inc	r1
      000998 F7               [12] 2888 	mov	@r1,a
                                   2889 ;	../../../core/net/neighbor-attr.c:229: list_remove(neighbor_addrs, item);
      000999 E5 81            [12] 2890 	mov	a,sp
      00099B 24 F8            [12] 2891 	add	a,#0xf8
      00099D F8               [12] 2892 	mov	r0,a
      00099E 86 05            [24] 2893 	mov	ar5,@r0
      0009A0 08               [12] 2894 	inc	r0
      0009A1 86 06            [24] 2895 	mov	ar6,@r0
      0009A3 08               [12] 2896 	inc	r0
      0009A4 86 07            [24] 2897 	mov	ar7,@r0
      0009A6 90r00r0F         [24] 2898 	mov	dptr,#_neighbor_addrs
      0009A9 E0               [24] 2899 	movx	a,@dptr
      0009AA FA               [12] 2900 	mov	r2,a
      0009AB A3               [24] 2901 	inc	dptr
      0009AC E0               [24] 2902 	movx	a,@dptr
      0009AD FB               [12] 2903 	mov	r3,a
      0009AE A3               [24] 2904 	inc	dptr
      0009AF E0               [24] 2905 	movx	a,@dptr
      0009B0 FC               [12] 2906 	mov	r4,a
      0009B1 C0 07            [24] 2907 	push	ar7
      0009B3 C0 06            [24] 2908 	push	ar6
      0009B5 C0 05            [24] 2909 	push	ar5
      0009B7 C0 05            [24] 2910 	push	ar5
      0009B9 C0 06            [24] 2911 	push	ar6
      0009BB C0 07            [24] 2912 	push	ar7
      0009BD 8A 82            [24] 2913 	mov	dpl,r2
      0009BF 8B 83            [24] 2914 	mov	dph,r3
      0009C1 8C F0            [24] 2915 	mov	b,r4
      0009C3 78r00            [12] 2916 	mov	r0,#_list_remove
      0009C5 79s00            [12] 2917 	mov	r1,#(_list_remove >> 8)
      0009C7 7As00            [12] 2918 	mov	r2,#(_list_remove >> 16)
      0009C9 12r00r00         [24] 2919 	lcall	__sdcc_banked_call
      0009CC 15 81            [12] 2920 	dec	sp
      0009CE 15 81            [12] 2921 	dec	sp
      0009D0 15 81            [12] 2922 	dec	sp
      0009D2 D0 05            [24] 2923 	pop	ar5
      0009D4 D0 06            [24] 2924 	pop	ar6
      0009D6 D0 07            [24] 2925 	pop	ar7
                                   2926 ;	../../../core/net/neighbor-attr.c:230: memb_free(&neighbor_addr_mem, item);
      0009D8 E5 81            [12] 2927 	mov	a,sp
      0009DA 24 F8            [12] 2928 	add	a,#0xf8
      0009DC F8               [12] 2929 	mov	r0,a
      0009DD 86 02            [24] 2930 	mov	ar2,@r0
      0009DF 08               [12] 2931 	inc	r0
      0009E0 86 03            [24] 2932 	mov	ar3,@r0
      0009E2 08               [12] 2933 	inc	r0
      0009E3 86 04            [24] 2934 	mov	ar4,@r0
      0009E5 C0 07            [24] 2935 	push	ar7
      0009E7 C0 06            [24] 2936 	push	ar6
      0009E9 C0 05            [24] 2937 	push	ar5
      0009EB C0 02            [24] 2938 	push	ar2
      0009ED C0 03            [24] 2939 	push	ar3
      0009EF C0 04            [24] 2940 	push	ar4
      0009F1 90r00r02         [24] 2941 	mov	dptr,#_neighbor_addr_mem
      0009F4 75 F0 00         [24] 2942 	mov	b,#0x00
      0009F7 78r00            [12] 2943 	mov	r0,#_memb_free
      0009F9 79s00            [12] 2944 	mov	r1,#(_memb_free >> 8)
      0009FB 7As00            [12] 2945 	mov	r2,#(_memb_free >> 16)
      0009FD 12r00r00         [24] 2946 	lcall	__sdcc_banked_call
      000A00 15 81            [12] 2947 	dec	sp
      000A02 15 81            [12] 2948 	dec	sp
      000A04 15 81            [12] 2949 	dec	sp
      000A06 D0 05            [24] 2950 	pop	ar5
      000A08 D0 06            [24] 2951 	pop	ar6
      000A0A D0 07            [24] 2952 	pop	ar7
                                   2953 ;	../../../core/net/neighbor-attr.c:231: item = next_item;
      000A0C E5 81            [12] 2954 	mov	a,sp
      000A0E 24 FB            [12] 2955 	add	a,#0xfb
      000A10 F8               [12] 2956 	mov	r0,a
      000A11 E5 81            [12] 2957 	mov	a,sp
      000A13 24 F8            [12] 2958 	add	a,#0xf8
      000A15 F9               [12] 2959 	mov	r1,a
      000A16 E6               [12] 2960 	mov	a,@r0
      000A17 F7               [12] 2961 	mov	@r1,a
      000A18 08               [12] 2962 	inc	r0
      000A19 09               [12] 2963 	inc	r1
      000A1A E6               [12] 2964 	mov	a,@r0
      000A1B F7               [12] 2965 	mov	@r1,a
      000A1C 08               [12] 2966 	inc	r0
      000A1D 09               [12] 2967 	inc	r1
      000A1E E6               [12] 2968 	mov	a,@r0
      000A1F F7               [12] 2969 	mov	@r1,a
      000A20 D0 07            [24] 2970 	pop	ar7
      000A22 D0 06            [24] 2971 	pop	ar6
      000A24 D0 05            [24] 2972 	pop	ar5
      000A26 02r09r11         [24] 2973 	ljmp	00104$
      000A29                       2974 00102$:
                                   2975 ;	../../../core/net/neighbor-attr.c:233: item = item->next;
      000A29 E5 81            [12] 2976 	mov	a,sp
      000A2B 24 FB            [12] 2977 	add	a,#0xfb
      000A2D F8               [12] 2978 	mov	r0,a
      000A2E 86 82            [24] 2979 	mov	dpl,@r0
      000A30 08               [12] 2980 	inc	r0
      000A31 86 83            [24] 2981 	mov	dph,@r0
      000A33 08               [12] 2982 	inc	r0
      000A34 86 F0            [24] 2983 	mov	b,@r0
      000A36 12r00r00         [24] 2984 	lcall	__gptrget
      000A39 18               [12] 2985 	dec	r0
      000A3A 18               [12] 2986 	dec	r0
      000A3B F6               [12] 2987 	mov	@r0,a
      000A3C A3               [24] 2988 	inc	dptr
      000A3D 12r00r00         [24] 2989 	lcall	__gptrget
      000A40 08               [12] 2990 	inc	r0
      000A41 F6               [12] 2991 	mov	@r0,a
      000A42 A3               [24] 2992 	inc	dptr
      000A43 12r00r00         [24] 2993 	lcall	__gptrget
      000A46 08               [12] 2994 	inc	r0
      000A47 F6               [12] 2995 	mov	@r0,a
      000A48 02r09r11         [24] 2996 	ljmp	00104$
      000A4B                       2997 00106$:
                                   2998 ;	../../../core/net/neighbor-attr.c:236: ctimer_set(&ct, TIMEOUT_SECONDS * CLOCK_SECOND, timeout_check, ptr);
      000A4B C0 05            [24] 2999 	push	ar5
      000A4D C0 06            [24] 3000 	push	ar6
      000A4F C0 07            [24] 3001 	push	ar7
      000A51 74rCE            [12] 3002 	mov	a,#_timeout_check
      000A53 C0 E0            [24] 3003 	push	acc
      000A55 74s08            [12] 3004 	mov	a,#(_timeout_check >> 8)
      000A57 C0 E0            [24] 3005 	push	acc
      000A59 74s00            [12] 3006 	mov	a,#(_timeout_check >> 16)
      000A5B C0 E0            [24] 3007 	push	acc
      000A5D 74 80            [12] 3008 	mov	a,#0x80
      000A5F C0 E0            [24] 3009 	push	acc
      000A61 74 02            [12] 3010 	mov	a,#0x02
      000A63 C0 E0            [24] 3011 	push	acc
      000A65 90r00rC0         [24] 3012 	mov	dptr,#_ct
      000A68 75 F0 00         [24] 3013 	mov	b,#0x00
      000A6B 78r00            [12] 3014 	mov	r0,#_ctimer_set
      000A6D 79s00            [12] 3015 	mov	r1,#(_ctimer_set >> 8)
      000A6F 7As00            [12] 3016 	mov	r2,#(_ctimer_set >> 16)
      000A71 12r00r00         [24] 3017 	lcall	__sdcc_banked_call
      000A74 E5 81            [12] 3018 	mov	a,sp
      000A76 24 F8            [12] 3019 	add	a,#0xf8
      000A78 F5 81            [12] 3020 	mov	sp,a
      000A7A                       3021 00109$:
                                   3022 ;	../../../core/net/neighbor-attr.c:238: }
      000A7A E5 81            [12] 3023 	mov	a,sp
      000A7C 24 FA            [12] 3024 	add	a,#0xfa
      000A7E F5 81            [12] 3025 	mov	sp,a
      000A80 02r00r00         [24] 3026 	ljmp	__sdcc_banked_ret
                                   3027 ;------------------------------------------------------------
                                   3028 ;Allocation info for local variables in function 'neighbor_attr_set_timeout'
                                   3029 ;------------------------------------------------------------
                                   3030 ;time                      Allocated to registers r6 r7 
                                   3031 ;------------------------------------------------------------
                                   3032 ;	../../../core/net/neighbor-attr.c:241: neighbor_attr_set_timeout(uint16_t time)
                                   3033 ;	-----------------------------------------
                                   3034 ;	 function neighbor_attr_set_timeout
                                   3035 ;	-----------------------------------------
      000A83                       3036 _neighbor_attr_set_timeout:
      000A83 AE 82            [24] 3037 	mov	r6,dpl
      000A85 AF 83            [24] 3038 	mov	r7,dph
                                   3039 ;	../../../core/net/neighbor-attr.c:243: if(timeout == 0 && time > 0) {
      000A87 90r00r00         [24] 3040 	mov	dptr,#_timeout
      000A8A E0               [24] 3041 	movx	a,@dptr
      000A8B F5 F0            [12] 3042 	mov	b,a
      000A8D A3               [24] 3043 	inc	dptr
      000A8E E0               [24] 3044 	movx	a,@dptr
      000A8F 45 F0            [12] 3045 	orl	a,b
      000A91 70 3E            [24] 3046 	jnz	00105$
      000A93 EE               [12] 3047 	mov	a,r6
      000A94 4F               [12] 3048 	orl	a,r7
      000A95 60 3A            [24] 3049 	jz	00105$
                                   3050 ;	../../../core/net/neighbor-attr.c:244: ctimer_set(&ct, TIMEOUT_SECONDS * CLOCK_SECOND, timeout_check, NULL);
      000A97 C0 07            [24] 3051 	push	ar7
      000A99 C0 06            [24] 3052 	push	ar6
      000A9B E4               [12] 3053 	clr	a
      000A9C C0 E0            [24] 3054 	push	acc
      000A9E C0 E0            [24] 3055 	push	acc
      000AA0 C0 E0            [24] 3056 	push	acc
      000AA2 74rCE            [12] 3057 	mov	a,#_timeout_check
      000AA4 C0 E0            [24] 3058 	push	acc
      000AA6 74s08            [12] 3059 	mov	a,#(_timeout_check >> 8)
      000AA8 C0 E0            [24] 3060 	push	acc
      000AAA 74s00            [12] 3061 	mov	a,#(_timeout_check >> 16)
      000AAC C0 E0            [24] 3062 	push	acc
      000AAE 74 80            [12] 3063 	mov	a,#0x80
      000AB0 C0 E0            [24] 3064 	push	acc
      000AB2 74 02            [12] 3065 	mov	a,#0x02
      000AB4 C0 E0            [24] 3066 	push	acc
      000AB6 90r00rC0         [24] 3067 	mov	dptr,#_ct
      000AB9 75 F0 00         [24] 3068 	mov	b,#0x00
      000ABC 78r00            [12] 3069 	mov	r0,#_ctimer_set
      000ABE 79s00            [12] 3070 	mov	r1,#(_ctimer_set >> 8)
      000AC0 7As00            [12] 3071 	mov	r2,#(_ctimer_set >> 16)
      000AC2 12r00r00         [24] 3072 	lcall	__sdcc_banked_call
      000AC5 E5 81            [12] 3073 	mov	a,sp
      000AC7 24 F8            [12] 3074 	add	a,#0xf8
      000AC9 F5 81            [12] 3075 	mov	sp,a
      000ACB D0 06            [24] 3076 	pop	ar6
      000ACD D0 07            [24] 3077 	pop	ar7
      000ACF 80 26            [24] 3078 	sjmp	00106$
      000AD1                       3079 00105$:
                                   3080 ;	../../../core/net/neighbor-attr.c:245: } else if(timeout > 0 && time == 0) {
      000AD1 90r00r00         [24] 3081 	mov	dptr,#_timeout
      000AD4 E0               [24] 3082 	movx	a,@dptr
      000AD5 F5 F0            [12] 3083 	mov	b,a
      000AD7 A3               [24] 3084 	inc	dptr
      000AD8 E0               [24] 3085 	movx	a,@dptr
      000AD9 45 F0            [12] 3086 	orl	a,b
      000ADB 60 1A            [24] 3087 	jz	00106$
      000ADD EE               [12] 3088 	mov	a,r6
      000ADE 4F               [12] 3089 	orl	a,r7
                                   3090 ;	../../../core/net/neighbor-attr.c:246: ctimer_stop(&ct);
      000ADF 70 16            [24] 3091 	jnz	00106$
      000AE1 90r00rC0         [24] 3092 	mov	dptr,#_ct
      000AE4 F5 F0            [12] 3093 	mov	b,a
      000AE6 C0 07            [24] 3094 	push	ar7
      000AE8 C0 06            [24] 3095 	push	ar6
      000AEA 78r00            [12] 3096 	mov	r0,#_ctimer_stop
      000AEC 79s00            [12] 3097 	mov	r1,#(_ctimer_stop >> 8)
      000AEE 7As00            [12] 3098 	mov	r2,#(_ctimer_stop >> 16)
      000AF0 12r00r00         [24] 3099 	lcall	__sdcc_banked_call
      000AF3 D0 06            [24] 3100 	pop	ar6
      000AF5 D0 07            [24] 3101 	pop	ar7
      000AF7                       3102 00106$:
                                   3103 ;	../../../core/net/neighbor-attr.c:248: timeout = time;
      000AF7 90r00r00         [24] 3104 	mov	dptr,#_timeout
      000AFA EE               [12] 3105 	mov	a,r6
      000AFB F0               [24] 3106 	movx	@dptr,a
      000AFC EF               [12] 3107 	mov	a,r7
      000AFD A3               [24] 3108 	inc	dptr
      000AFE F0               [24] 3109 	movx	@dptr,a
                                   3110 ;	../../../core/net/neighbor-attr.c:249: }
      000AFF 02r00r00         [24] 3111 	ljmp	__sdcc_banked_ret
                                   3112 	.area CSEG    (CODE)
                                   3113 	.area CONST   (CODE)
                                   3114 	.area XINIT   (CODE)
      000000                       3115 __xinit__timeout:
      000000 00 00                 3116 	.byte #0x00,#0x00	; 0
      000002                       3117 __xinit__neighbor_addr_mem:
      000002 0F 00                 3118 	.byte #0x0f,#0x00	; 15
      000004 0C 00                 3119 	.byte #0x0c,#0x00	; 12
      000006r00s00 00              3120 	.byte _neighbor_addr_mem_memb_count, (_neighbor_addr_mem_memb_count >> 8),#0x00
      000009r0Cs00 00              3121 	.byte _neighbor_addr_mem_memb_mem, (_neighbor_addr_mem_memb_mem >> 8),#0x00
      00000C                       3122 __xinit__neighbor_addrs_list:
                                   3123 ; generic printIvalPtr
      00000C 00 00 00              3124 	.byte #0x00,#0x00,#0x00
      00000F                       3125 __xinit__neighbor_addrs:
      00000Fr0Cs00 00              3126 	.byte _neighbor_addrs_list, (_neighbor_addrs_list >> 8),#0x00
      000012                       3127 __xinit__neighbor_attrs_list:
                                   3128 ; generic printIvalPtr
      000012 00 00 00              3129 	.byte #0x00,#0x00,#0x00
      000015                       3130 __xinit__neighbor_attrs:
      000015r12s00 00              3131 	.byte _neighbor_attrs_list, (_neighbor_attrs_list >> 8),#0x00
                                   3132 	.area CABS    (ABS,CODE)
