                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.4 #10774 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module cxmac
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _cxmac_driver
                                     12 	.globl _cxmac_init
                                     13 	.globl _cxmac_set_announcement_radio_txpower
                                     14 	.globl _memb_alloc
                                     15 	.globl _memb_init
                                     16 	.globl _list_item_next
                                     17 	.globl _list_add
                                     18 	.globl _list_head
                                     19 	.globl _list_init
                                     20 	.globl _queuebuf_free
                                     21 	.globl _queuebuf_to_packetbuf
                                     22 	.globl _queuebuf_new_from_packetbuf
                                     23 	.globl _packetbuf_addr
                                     24 	.globl _packetbuf_set_addr
                                     25 	.globl _packetbuf_attr
                                     26 	.globl _packetbuf_compact
                                     27 	.globl _packetbuf_set_datalen
                                     28 	.globl _packetbuf_totlen
                                     29 	.globl _packetbuf_hdrptr
                                     30 	.globl _packetbuf_dataptr
                                     31 	.globl _packetbuf_clear
                                     32 	.globl _ctimer_set
                                     33 	.globl _rimeaddr_cmp
                                     34 	.globl _rimeaddr_copy
                                     35 	.globl ___memcpy
                                     36 	.globl _watchdog_periodic
                                     37 	.globl _watchdog_start
                                     38 	.globl _ACTIVE
                                     39 	.globl _TX_BYTE
                                     40 	.globl _RX_BYTE
                                     41 	.globl _ERR
                                     42 	.globl _FE
                                     43 	.globl _SLAVE
                                     44 	.globl _RE
                                     45 	.globl _MODE
                                     46 	.globl _T3OVFIF
                                     47 	.globl _T3CH0IF
                                     48 	.globl _T3CH1IF
                                     49 	.globl _T4OVFIF
                                     50 	.globl _T4CH0IF
                                     51 	.globl _T4CH1IF
                                     52 	.globl _OVFIM
                                     53 	.globl _B_0
                                     54 	.globl _B_1
                                     55 	.globl _B_2
                                     56 	.globl _B_3
                                     57 	.globl _B_4
                                     58 	.globl _B_5
                                     59 	.globl _B_6
                                     60 	.globl _B_7
                                     61 	.globl _P2IF
                                     62 	.globl _UTX0IF
                                     63 	.globl _UTX1IF
                                     64 	.globl _P1IF
                                     65 	.globl _WDTIF
                                     66 	.globl _ACC_0
                                     67 	.globl _ACC_1
                                     68 	.globl _ACC_2
                                     69 	.globl _ACC_3
                                     70 	.globl _ACC_4
                                     71 	.globl _ACC_5
                                     72 	.globl _ACC_6
                                     73 	.globl _ACC_7
                                     74 	.globl _P
                                     75 	.globl _F1
                                     76 	.globl _OV
                                     77 	.globl _RS0
                                     78 	.globl _RS1
                                     79 	.globl _F0
                                     80 	.globl _AC
                                     81 	.globl _CY
                                     82 	.globl _DMAIF
                                     83 	.globl _T1IF
                                     84 	.globl _T2IF
                                     85 	.globl _T3IF
                                     86 	.globl _T4IF
                                     87 	.globl _P0IF
                                     88 	.globl _STIF
                                     89 	.globl _DMAIE
                                     90 	.globl _T1IE
                                     91 	.globl _T2IE
                                     92 	.globl _T3IE
                                     93 	.globl _T4IE
                                     94 	.globl _P0IE
                                     95 	.globl _RFERRIE
                                     96 	.globl _ADCIE
                                     97 	.globl _URX0IE
                                     98 	.globl _URX1IE
                                     99 	.globl _ENCIE
                                    100 	.globl _STIE
                                    101 	.globl _EA
                                    102 	.globl _P2_0
                                    103 	.globl _P2_1
                                    104 	.globl _P2_2
                                    105 	.globl _P2_3
                                    106 	.globl _P2_4
                                    107 	.globl _P2_5
                                    108 	.globl _P2_6
                                    109 	.globl _P2_7
                                    110 	.globl _ENCIF_0
                                    111 	.globl _ENCIF_1
                                    112 	.globl _P1_0
                                    113 	.globl _P1_1
                                    114 	.globl _P1_2
                                    115 	.globl _P1_3
                                    116 	.globl _P1_4
                                    117 	.globl _P1_5
                                    118 	.globl _P1_6
                                    119 	.globl _P1_7
                                    120 	.globl _IT0
                                    121 	.globl _RFERRIF
                                    122 	.globl _IT1
                                    123 	.globl _URX0IF
                                    124 	.globl _ADCIF
                                    125 	.globl _URX1IF
                                    126 	.globl _P0_0
                                    127 	.globl _P0_1
                                    128 	.globl _P0_2
                                    129 	.globl _P0_3
                                    130 	.globl _P0_4
                                    131 	.globl _P0_5
                                    132 	.globl _P0_6
                                    133 	.globl _P0_7
                                    134 	.globl _WDCTL
                                    135 	.globl _U1GCR
                                    136 	.globl _U1UCR
                                    137 	.globl _U1BAUD
                                    138 	.globl _U1DBUF
                                    139 	.globl _U1CSR
                                    140 	.globl _U0GCR
                                    141 	.globl _U0UCR
                                    142 	.globl _U0BAUD
                                    143 	.globl _U0DBUF
                                    144 	.globl _U0CSR
                                    145 	.globl _TIMIF
                                    146 	.globl _T4CC1
                                    147 	.globl _T4CCTL1
                                    148 	.globl _T4CC0
                                    149 	.globl _T4CCTL0
                                    150 	.globl _T4CTL
                                    151 	.globl _T4CNT
                                    152 	.globl _T3CC1
                                    153 	.globl _T3CCTL1
                                    154 	.globl _T3CC0
                                    155 	.globl _T3CCTL0
                                    156 	.globl _T3CTL
                                    157 	.globl _T3CNT
                                    158 	.globl _T2MSEL
                                    159 	.globl _T2IRQM
                                    160 	.globl _T2MOVF2
                                    161 	.globl _T2MOVF1
                                    162 	.globl _T2MOVF0
                                    163 	.globl _T2M1
                                    164 	.globl _T2M0
                                    165 	.globl _T2IRQF
                                    166 	.globl _T2EVTCFG
                                    167 	.globl _T2CTRL
                                    168 	.globl _T1STAT
                                    169 	.globl _T1CCTL2
                                    170 	.globl _T1CCTL1
                                    171 	.globl _T1CCTL0
                                    172 	.globl _T1CTL
                                    173 	.globl _T1CNTH
                                    174 	.globl _T1CNTL
                                    175 	.globl _T1CC2H
                                    176 	.globl _T1CC2L
                                    177 	.globl _T1CC1H
                                    178 	.globl _T1CC1L
                                    179 	.globl _T1CC0H
                                    180 	.globl _T1CC0L
                                    181 	.globl _CLKCONSTA
                                    182 	.globl _CLKCONCMD
                                    183 	.globl _SLEEPSTA
                                    184 	.globl _SLEEPCMD
                                    185 	.globl _STLOAD
                                    186 	.globl _ST2
                                    187 	.globl _ST1
                                    188 	.globl _ST0
                                    189 	.globl _RFERRF
                                    190 	.globl _RFIRQF0
                                    191 	.globl _RFST
                                    192 	.globl _RFD
                                    193 	.globl _RFIRQF1
                                    194 	.globl _PSBANK
                                    195 	.globl _FMAP
                                    196 	.globl _MEMCTR
                                    197 	.globl __XPAGE
                                    198 	.globl _MPAGE
                                    199 	.globl _PMUX
                                    200 	.globl _P2DIR
                                    201 	.globl _P1DIR
                                    202 	.globl _P0DIR
                                    203 	.globl _P2INP
                                    204 	.globl _P1INP
                                    205 	.globl _P2SEL
                                    206 	.globl _P1SEL
                                    207 	.globl _P0SEL
                                    208 	.globl _APCFG
                                    209 	.globl _PERCFG
                                    210 	.globl _P0INP
                                    211 	.globl _P2IEN
                                    212 	.globl _P1IEN
                                    213 	.globl _P0IEN
                                    214 	.globl _PICTL
                                    215 	.globl _P2IFG
                                    216 	.globl _P1IFG
                                    217 	.globl _P0IFG
                                    218 	.globl _DMAREQ
                                    219 	.globl _DMAARM
                                    220 	.globl _DMA0CFGH
                                    221 	.globl _DMA0CFGL
                                    222 	.globl _DMA1CFGH
                                    223 	.globl _DMA1CFGL
                                    224 	.globl _DMAIRQ
                                    225 	.globl _ENCCS
                                    226 	.globl _ENCDO
                                    227 	.globl _ENCDI
                                    228 	.globl _RNDH
                                    229 	.globl _RNDL
                                    230 	.globl _ADCH
                                    231 	.globl _ADCL
                                    232 	.globl _ADCCON3
                                    233 	.globl _ADCCON2
                                    234 	.globl _ADCCON1
                                    235 	.globl _B
                                    236 	.globl _IRCON2
                                    237 	.globl _ACC
                                    238 	.globl _PSW
                                    239 	.globl _IRCON
                                    240 	.globl _IP1
                                    241 	.globl _IEN1
                                    242 	.globl _IP0
                                    243 	.globl _IEN0
                                    244 	.globl _P2
                                    245 	.globl _S1CON
                                    246 	.globl _IEN2
                                    247 	.globl _S0CON
                                    248 	.globl _DPS
                                    249 	.globl _P1
                                    250 	.globl _TCON
                                    251 	.globl _PCON
                                    252 	.globl _DPH1
                                    253 	.globl _DPL1
                                    254 	.globl _DPH0
                                    255 	.globl _DPL0
                                    256 	.globl _SP
                                    257 	.globl _P0
                                    258 	.globl _cxmac_config
                                    259 	.globl _X_IEEE_ADDR
                                    260 	.globl _X_INFOPAGE
                                    261 	.globl _X_P2DIR
                                    262 	.globl _X_P1DIR
                                    263 	.globl _X_P0DIR
                                    264 	.globl _X_U1GCR
                                    265 	.globl _X_U1UCR
                                    266 	.globl _X_U1BAUD
                                    267 	.globl _X_U1DBUF
                                    268 	.globl _X_U1CSR
                                    269 	.globl _X_P2INP
                                    270 	.globl _X_P1INP
                                    271 	.globl _X_P2SEL
                                    272 	.globl _X_P1SEL
                                    273 	.globl _X_P0SEL
                                    274 	.globl _X_APCFG
                                    275 	.globl _X_PERCFG
                                    276 	.globl _X_T4CC1
                                    277 	.globl _X_T4CCTL1
                                    278 	.globl _X_T4CC0
                                    279 	.globl _X_T4CCTL0
                                    280 	.globl _X_T4CTL
                                    281 	.globl _X_T4CNT
                                    282 	.globl _X_RFIRQF0
                                    283 	.globl _X_T1CCTL2
                                    284 	.globl _X_T1CCTL1
                                    285 	.globl _X_T1CCTL0
                                    286 	.globl _X_T1CTL
                                    287 	.globl _X_T1CNTH
                                    288 	.globl _X_T1CNTL
                                    289 	.globl _X_RFST
                                    290 	.globl _X_T1CC2H
                                    291 	.globl _X_T1CC2L
                                    292 	.globl _X_T1CC1H
                                    293 	.globl _X_T1CC1L
                                    294 	.globl _X_T1CC0H
                                    295 	.globl _X_T1CC0L
                                    296 	.globl _X_RFD
                                    297 	.globl _X_TIMIF
                                    298 	.globl _X_DMAREQ
                                    299 	.globl _X_DMAARM
                                    300 	.globl _X_DMA0CFGH
                                    301 	.globl _X_DMA0CFGL
                                    302 	.globl _X_DMA1CFGH
                                    303 	.globl _X_DMA1CFGL
                                    304 	.globl _X_DMAIRQ
                                    305 	.globl _X_T3CC1
                                    306 	.globl _X_T3CCTL1
                                    307 	.globl _X_T3CC0
                                    308 	.globl _X_T3CCTL0
                                    309 	.globl _X_T3CTL
                                    310 	.globl _X_T3CNT
                                    311 	.globl _X_WDCTL
                                    312 	.globl _X_MEMCTR
                                    313 	.globl _X_CLKCONCMD
                                    314 	.globl _X_U0GCR
                                    315 	.globl _X_U0UCR
                                    316 	.globl _X_T2MSEL
                                    317 	.globl _X_U0BAUD
                                    318 	.globl _X_U0DBUF
                                    319 	.globl _X_RFERRF
                                    320 	.globl _X_SLEEPCMD
                                    321 	.globl _X_RNDH
                                    322 	.globl _X_RNDL
                                    323 	.globl _X_ADCH
                                    324 	.globl _X_ADCL
                                    325 	.globl _X_ADCCON3
                                    326 	.globl _X_ADCCON2
                                    327 	.globl _X_ADCCON1
                                    328 	.globl _X_ENCCS
                                    329 	.globl _X_ENCDO
                                    330 	.globl _X_ENCDI
                                    331 	.globl _X_T1STAT
                                    332 	.globl _X_PMUX
                                    333 	.globl _X_STLOAD
                                    334 	.globl _X_P2IEN
                                    335 	.globl _X_P0IEN
                                    336 	.globl _X_T2IRQM
                                    337 	.globl _X_T2MOVF2
                                    338 	.globl _X_T2MOVF1
                                    339 	.globl _X_T2MOVF0
                                    340 	.globl _X_T2M1
                                    341 	.globl _X_T2M0
                                    342 	.globl _X_T2IRQF
                                    343 	.globl _X_P2
                                    344 	.globl _X_PSBANK
                                    345 	.globl _X_FMAP
                                    346 	.globl _X_CLKCONSTA
                                    347 	.globl _X_SLEEPSTA
                                    348 	.globl _X_T2EVTCFG
                                    349 	.globl _X_ST2
                                    350 	.globl _X_ST1
                                    351 	.globl _X_ST0
                                    352 	.globl _X_T2CTRL
                                    353 	.globl _X__XPAGE
                                    354 	.globl _X_MPAGE
                                    355 	.globl _X_RFIRQF1
                                    356 	.globl _X_P1
                                    357 	.globl _X_P0INP
                                    358 	.globl _X_P1IEN
                                    359 	.globl _X_PICTL
                                    360 	.globl _X_P2IFG
                                    361 	.globl _X_P1IFG
                                    362 	.globl _X_P0IFG
                                    363 	.globl _X_U0CSR
                                    364 	.globl _X_P0
                                    365 	.globl _USBF5
                                    366 	.globl _USBF4
                                    367 	.globl _USBF3
                                    368 	.globl _USBF2
                                    369 	.globl _USBF1
                                    370 	.globl _USBF0
                                    371 	.globl _USBCNTH
                                    372 	.globl _USBCNTL
                                    373 	.globl _USBCNT0
                                    374 	.globl _USBCSOH
                                    375 	.globl _USBCSOL
                                    376 	.globl _USBMAXO
                                    377 	.globl _USBCSIH
                                    378 	.globl _USBCSIL
                                    379 	.globl _USBCS0
                                    380 	.globl _USBMAXI
                                    381 	.globl _USBCTRL
                                    382 	.globl _USBINDEX
                                    383 	.globl _USBFRMH
                                    384 	.globl _USBFRML
                                    385 	.globl _USBCIE
                                    386 	.globl _USBOIE
                                    387 	.globl _USBIIE
                                    388 	.globl _USBCIF
                                    389 	.globl _USBOIF
                                    390 	.globl _USBIIF
                                    391 	.globl _USBPOW
                                    392 	.globl _USBADDR
                                    393 	.globl _CSPT
                                    394 	.globl _CSPZ
                                    395 	.globl _CSPY
                                    396 	.globl _CSPX
                                    397 	.globl _CSPSTAT
                                    398 	.globl _CSPCTRL
                                    399 	.globl _CSPPROG23
                                    400 	.globl _CSPPROG22
                                    401 	.globl _CSPPROG21
                                    402 	.globl _CSPPROG20
                                    403 	.globl _CSPPROG19
                                    404 	.globl _CSPPROG18
                                    405 	.globl _CSPPROG17
                                    406 	.globl _CSPPROG16
                                    407 	.globl _CSPPROG15
                                    408 	.globl _CSPPROG14
                                    409 	.globl _CSPPROG13
                                    410 	.globl _CSPPROG12
                                    411 	.globl _CSPPROG11
                                    412 	.globl _CSPPROG10
                                    413 	.globl _CSPPROG9
                                    414 	.globl _CSPPROG8
                                    415 	.globl _CSPPROG7
                                    416 	.globl _CSPPROG6
                                    417 	.globl _CSPPROG5
                                    418 	.globl _CSPPROG4
                                    419 	.globl _CSPPROG3
                                    420 	.globl _CSPPROG2
                                    421 	.globl _CSPPROG1
                                    422 	.globl _CSPPROG0
                                    423 	.globl _RFC_OBS_CTRL2
                                    424 	.globl _RFC_OBS_CTRL1
                                    425 	.globl _RFC_OBS_CTRL0
                                    426 	.globl _TXFILTCFG
                                    427 	.globl _PTEST1
                                    428 	.globl _PTEST0
                                    429 	.globl _ATEST
                                    430 	.globl _DACTEST2
                                    431 	.globl _DACTEST1
                                    432 	.globl _DACTEST0
                                    433 	.globl _MDMTEST1
                                    434 	.globl _MDMTEST0
                                    435 	.globl _ADCTEST2
                                    436 	.globl _ADCTEST1
                                    437 	.globl _ADCTEST0
                                    438 	.globl _AGCCTRL3
                                    439 	.globl _AGCCTRL2
                                    440 	.globl _AGCCTRL1
                                    441 	.globl _AGCCTRL0
                                    442 	.globl _FSCAL3
                                    443 	.globl _FSCAL2
                                    444 	.globl _FSCAL1
                                    445 	.globl _FSCAL0
                                    446 	.globl _FSCTRL
                                    447 	.globl _RXCTRL
                                    448 	.globl _FREQEST
                                    449 	.globl _MDMCTRL1
                                    450 	.globl _MDMCTRL0
                                    451 	.globl _RFRND
                                    452 	.globl _RFERRM
                                    453 	.globl _RFIRQM1
                                    454 	.globl _RFIRQM0
                                    455 	.globl _TXLAST_PTR
                                    456 	.globl _TXFIRST_PTR
                                    457 	.globl _RXP1_PTR
                                    458 	.globl _RXLAST_PTR
                                    459 	.globl _RXFIRST_PTR
                                    460 	.globl _TXFIFOCNT
                                    461 	.globl _RXFIFOCNT
                                    462 	.globl _RXFIRST
                                    463 	.globl _RSSISTAT
                                    464 	.globl _RSSI
                                    465 	.globl _CCACTRL1
                                    466 	.globl _CCACTRL0
                                    467 	.globl _FSMCTRL
                                    468 	.globl _FIFOPCTRL
                                    469 	.globl _FSMSTAT1
                                    470 	.globl _FSMSTAT0
                                    471 	.globl _TXCTRL
                                    472 	.globl _TXPOWER
                                    473 	.globl _FREQCTRL
                                    474 	.globl _FREQTUNE
                                    475 	.globl _RXMASKCLR
                                    476 	.globl _RXMASKSET
                                    477 	.globl _RXENABLE
                                    478 	.globl _FRMCTRL1
                                    479 	.globl _FRMCTRL0
                                    480 	.globl _SRCEXTEN2
                                    481 	.globl _SRCEXTEN1
                                    482 	.globl _SRCEXTEN0
                                    483 	.globl _SRCSHORTEN2
                                    484 	.globl _SRCSHORTEN1
                                    485 	.globl _SRCSHORTEN0
                                    486 	.globl _SRCMATCH
                                    487 	.globl _FRMFILT1
                                    488 	.globl _FRMFILT0
                                    489 	.globl _SHORT_ADDR1
                                    490 	.globl _SHORT_ADDR0
                                    491 	.globl _PAN_ID1
                                    492 	.globl _PAN_ID0
                                    493 	.globl _EXT_ADDR7
                                    494 	.globl _EXT_ADDR6
                                    495 	.globl _EXT_ADDR5
                                    496 	.globl _EXT_ADDR4
                                    497 	.globl _EXT_ADDR3
                                    498 	.globl _EXT_ADDR2
                                    499 	.globl _EXT_ADDR1
                                    500 	.globl _EXT_ADDR0
                                    501 	.globl _SRCSHORTPENDEN2
                                    502 	.globl _SRCSHORTPENDEN1
                                    503 	.globl _SRCSHORTPENDEN0
                                    504 	.globl _SRCEXTPENDEN2
                                    505 	.globl _SRCEXTPENDEN1
                                    506 	.globl _SRCEXTPENDEN0
                                    507 	.globl _SRCRESINDEX
                                    508 	.globl _SRCRESMASK2
                                    509 	.globl _SRCRESMASK1
                                    510 	.globl _SRCRESMASK0
                                    511 	.globl _SRC_ADDR_TABLE
                                    512 	.globl _TXFIFO
                                    513 	.globl _RXFIFO
                                    514 	.globl _RFCORE_RAM
                                    515 	.globl _CMPCTL
                                    516 	.globl _OPAMPS
                                    517 	.globl _OPAMPC
                                    518 	.globl _STCV2
                                    519 	.globl _STCV1
                                    520 	.globl _STCV0
                                    521 	.globl _STCS
                                    522 	.globl _STCC
                                    523 	.globl _T1CC4H
                                    524 	.globl _T1CC4L
                                    525 	.globl _T1CC3H
                                    526 	.globl _T1CC3L
                                    527 	.globl _XX_T1CC2H
                                    528 	.globl _XX_T1CC2L
                                    529 	.globl _XX_T1CC1H
                                    530 	.globl _XX_T1CC1L
                                    531 	.globl _XX_T1CC0H
                                    532 	.globl _XX_T1CC0L
                                    533 	.globl _T1CCTL4
                                    534 	.globl _T1CCTL3
                                    535 	.globl _XX_T1CCTL2
                                    536 	.globl _XX_T1CCTL1
                                    537 	.globl _XX_T1CCTL0
                                    538 	.globl _CLD
                                    539 	.globl _IRCTL
                                    540 	.globl _CHIPINFO1
                                    541 	.globl _CHIPINFO0
                                    542 	.globl _FWDATA
                                    543 	.globl _FADDRH
                                    544 	.globl _FADDRL
                                    545 	.globl _FCTL
                                    546 	.globl _IVCTRL
                                    547 	.globl _BATTMON
                                    548 	.globl _SRCRC
                                    549 	.globl _DBGDATA
                                    550 	.globl _TESTREG0
                                    551 	.globl _CHIPID
                                    552 	.globl _CHVER
                                    553 	.globl _OBSSEL5
                                    554 	.globl _OBSSEL4
                                    555 	.globl _OBSSEL3
                                    556 	.globl _OBSSEL2
                                    557 	.globl _OBSSEL1
                                    558 	.globl _OBSSEL0
                                    559 	.globl _I2CIO
                                    560 	.globl _I2CWC
                                    561 	.globl _I2CADDR
                                    562 	.globl _I2CDATA
                                    563 	.globl _I2CSTAT
                                    564 	.globl _I2CCFG
                                    565 	.globl _OPAMPMC
                                    566 	.globl _MONMUX
                                    567 ;--------------------------------------------------------
                                    568 ; special function registers
                                    569 ;--------------------------------------------------------
                                    570 	.area RSEG    (ABS,DATA)
      000000                        571 	.org 0x0000
                           000080   572 _P0	=	0x0080
                           000081   573 _SP	=	0x0081
                           000082   574 _DPL0	=	0x0082
                           000083   575 _DPH0	=	0x0083
                           000084   576 _DPL1	=	0x0084
                           000085   577 _DPH1	=	0x0085
                           000087   578 _PCON	=	0x0087
                           000088   579 _TCON	=	0x0088
                           000090   580 _P1	=	0x0090
                           000092   581 _DPS	=	0x0092
                           000098   582 _S0CON	=	0x0098
                           00009A   583 _IEN2	=	0x009a
                           00009B   584 _S1CON	=	0x009b
                           0000A0   585 _P2	=	0x00a0
                           0000A8   586 _IEN0	=	0x00a8
                           0000A9   587 _IP0	=	0x00a9
                           0000B8   588 _IEN1	=	0x00b8
                           0000B9   589 _IP1	=	0x00b9
                           0000C0   590 _IRCON	=	0x00c0
                           0000D0   591 _PSW	=	0x00d0
                           0000E0   592 _ACC	=	0x00e0
                           0000E8   593 _IRCON2	=	0x00e8
                           0000F0   594 _B	=	0x00f0
                           0000B4   595 _ADCCON1	=	0x00b4
                           0000B5   596 _ADCCON2	=	0x00b5
                           0000B6   597 _ADCCON3	=	0x00b6
                           0000BA   598 _ADCL	=	0x00ba
                           0000BB   599 _ADCH	=	0x00bb
                           0000BC   600 _RNDL	=	0x00bc
                           0000BD   601 _RNDH	=	0x00bd
                           0000B1   602 _ENCDI	=	0x00b1
                           0000B2   603 _ENCDO	=	0x00b2
                           0000B3   604 _ENCCS	=	0x00b3
                           0000D1   605 _DMAIRQ	=	0x00d1
                           0000D2   606 _DMA1CFGL	=	0x00d2
                           0000D3   607 _DMA1CFGH	=	0x00d3
                           0000D4   608 _DMA0CFGL	=	0x00d4
                           0000D5   609 _DMA0CFGH	=	0x00d5
                           0000D6   610 _DMAARM	=	0x00d6
                           0000D7   611 _DMAREQ	=	0x00d7
                           000089   612 _P0IFG	=	0x0089
                           00008A   613 _P1IFG	=	0x008a
                           00008B   614 _P2IFG	=	0x008b
                           00008C   615 _PICTL	=	0x008c
                           0000AB   616 _P0IEN	=	0x00ab
                           00008D   617 _P1IEN	=	0x008d
                           0000AC   618 _P2IEN	=	0x00ac
                           00008F   619 _P0INP	=	0x008f
                           0000F1   620 _PERCFG	=	0x00f1
                           0000F2   621 _APCFG	=	0x00f2
                           0000F3   622 _P0SEL	=	0x00f3
                           0000F4   623 _P1SEL	=	0x00f4
                           0000F5   624 _P2SEL	=	0x00f5
                           0000F6   625 _P1INP	=	0x00f6
                           0000F7   626 _P2INP	=	0x00f7
                           0000FD   627 _P0DIR	=	0x00fd
                           0000FE   628 _P1DIR	=	0x00fe
                           0000FF   629 _P2DIR	=	0x00ff
                           0000AE   630 _PMUX	=	0x00ae
                           000093   631 _MPAGE	=	0x0093
                           000093   632 __XPAGE	=	0x0093
                           0000C7   633 _MEMCTR	=	0x00c7
                           00009F   634 _FMAP	=	0x009f
                           00009F   635 _PSBANK	=	0x009f
                           000091   636 _RFIRQF1	=	0x0091
                           0000D9   637 _RFD	=	0x00d9
                           0000E1   638 _RFST	=	0x00e1
                           0000E9   639 _RFIRQF0	=	0x00e9
                           0000BF   640 _RFERRF	=	0x00bf
                           000095   641 _ST0	=	0x0095
                           000096   642 _ST1	=	0x0096
                           000097   643 _ST2	=	0x0097
                           0000AD   644 _STLOAD	=	0x00ad
                           0000BE   645 _SLEEPCMD	=	0x00be
                           00009D   646 _SLEEPSTA	=	0x009d
                           0000C6   647 _CLKCONCMD	=	0x00c6
                           00009E   648 _CLKCONSTA	=	0x009e
                           0000DA   649 _T1CC0L	=	0x00da
                           0000DB   650 _T1CC0H	=	0x00db
                           0000DC   651 _T1CC1L	=	0x00dc
                           0000DD   652 _T1CC1H	=	0x00dd
                           0000DE   653 _T1CC2L	=	0x00de
                           0000DF   654 _T1CC2H	=	0x00df
                           0000E2   655 _T1CNTL	=	0x00e2
                           0000E3   656 _T1CNTH	=	0x00e3
                           0000E4   657 _T1CTL	=	0x00e4
                           0000E5   658 _T1CCTL0	=	0x00e5
                           0000E6   659 _T1CCTL1	=	0x00e6
                           0000E7   660 _T1CCTL2	=	0x00e7
                           0000AF   661 _T1STAT	=	0x00af
                           000094   662 _T2CTRL	=	0x0094
                           00009C   663 _T2EVTCFG	=	0x009c
                           0000A1   664 _T2IRQF	=	0x00a1
                           0000A2   665 _T2M0	=	0x00a2
                           0000A3   666 _T2M1	=	0x00a3
                           0000A4   667 _T2MOVF0	=	0x00a4
                           0000A5   668 _T2MOVF1	=	0x00a5
                           0000A6   669 _T2MOVF2	=	0x00a6
                           0000A7   670 _T2IRQM	=	0x00a7
                           0000C3   671 _T2MSEL	=	0x00c3
                           0000CA   672 _T3CNT	=	0x00ca
                           0000CB   673 _T3CTL	=	0x00cb
                           0000CC   674 _T3CCTL0	=	0x00cc
                           0000CD   675 _T3CC0	=	0x00cd
                           0000CE   676 _T3CCTL1	=	0x00ce
                           0000CF   677 _T3CC1	=	0x00cf
                           0000EA   678 _T4CNT	=	0x00ea
                           0000EB   679 _T4CTL	=	0x00eb
                           0000EC   680 _T4CCTL0	=	0x00ec
                           0000ED   681 _T4CC0	=	0x00ed
                           0000EE   682 _T4CCTL1	=	0x00ee
                           0000EF   683 _T4CC1	=	0x00ef
                           0000D8   684 _TIMIF	=	0x00d8
                           000086   685 _U0CSR	=	0x0086
                           0000C1   686 _U0DBUF	=	0x00c1
                           0000C2   687 _U0BAUD	=	0x00c2
                           0000C4   688 _U0UCR	=	0x00c4
                           0000C5   689 _U0GCR	=	0x00c5
                           0000F8   690 _U1CSR	=	0x00f8
                           0000F9   691 _U1DBUF	=	0x00f9
                           0000FA   692 _U1BAUD	=	0x00fa
                           0000FB   693 _U1UCR	=	0x00fb
                           0000FC   694 _U1GCR	=	0x00fc
                           0000C9   695 _WDCTL	=	0x00c9
                                    696 ;--------------------------------------------------------
                                    697 ; special function bits
                                    698 ;--------------------------------------------------------
                                    699 	.area RSEG    (ABS,DATA)
      000000                        700 	.org 0x0000
                           000087   701 _P0_7	=	0x0087
                           000086   702 _P0_6	=	0x0086
                           000085   703 _P0_5	=	0x0085
                           000084   704 _P0_4	=	0x0084
                           000083   705 _P0_3	=	0x0083
                           000082   706 _P0_2	=	0x0082
                           000081   707 _P0_1	=	0x0081
                           000080   708 _P0_0	=	0x0080
                           00008F   709 _URX1IF	=	0x008f
                           00008D   710 _ADCIF	=	0x008d
                           00008B   711 _URX0IF	=	0x008b
                           00008A   712 _IT1	=	0x008a
                           000089   713 _RFERRIF	=	0x0089
                           000088   714 _IT0	=	0x0088
                           000097   715 _P1_7	=	0x0097
                           000096   716 _P1_6	=	0x0096
                           000095   717 _P1_5	=	0x0095
                           000094   718 _P1_4	=	0x0094
                           000093   719 _P1_3	=	0x0093
                           000092   720 _P1_2	=	0x0092
                           000091   721 _P1_1	=	0x0091
                           000090   722 _P1_0	=	0x0090
                           000099   723 _ENCIF_1	=	0x0099
                           000098   724 _ENCIF_0	=	0x0098
                           0000A7   725 _P2_7	=	0x00a7
                           0000A6   726 _P2_6	=	0x00a6
                           0000A5   727 _P2_5	=	0x00a5
                           0000A4   728 _P2_4	=	0x00a4
                           0000A3   729 _P2_3	=	0x00a3
                           0000A2   730 _P2_2	=	0x00a2
                           0000A1   731 _P2_1	=	0x00a1
                           0000A0   732 _P2_0	=	0x00a0
                           0000AF   733 _EA	=	0x00af
                           0000AD   734 _STIE	=	0x00ad
                           0000AC   735 _ENCIE	=	0x00ac
                           0000AB   736 _URX1IE	=	0x00ab
                           0000AA   737 _URX0IE	=	0x00aa
                           0000A9   738 _ADCIE	=	0x00a9
                           0000A8   739 _RFERRIE	=	0x00a8
                           0000BD   740 _P0IE	=	0x00bd
                           0000BC   741 _T4IE	=	0x00bc
                           0000BB   742 _T3IE	=	0x00bb
                           0000BA   743 _T2IE	=	0x00ba
                           0000B9   744 _T1IE	=	0x00b9
                           0000B8   745 _DMAIE	=	0x00b8
                           0000C7   746 _STIF	=	0x00c7
                           0000C5   747 _P0IF	=	0x00c5
                           0000C4   748 _T4IF	=	0x00c4
                           0000C3   749 _T3IF	=	0x00c3
                           0000C2   750 _T2IF	=	0x00c2
                           0000C1   751 _T1IF	=	0x00c1
                           0000C0   752 _DMAIF	=	0x00c0
                           0000D7   753 _CY	=	0x00d7
                           0000D6   754 _AC	=	0x00d6
                           0000D5   755 _F0	=	0x00d5
                           0000D4   756 _RS1	=	0x00d4
                           0000D3   757 _RS0	=	0x00d3
                           0000D2   758 _OV	=	0x00d2
                           0000D1   759 _F1	=	0x00d1
                           0000D0   760 _P	=	0x00d0
                           0000E7   761 _ACC_7	=	0x00e7
                           0000E6   762 _ACC_6	=	0x00e6
                           0000E5   763 _ACC_5	=	0x00e5
                           0000E4   764 _ACC_4	=	0x00e4
                           0000E3   765 _ACC_3	=	0x00e3
                           0000E2   766 _ACC_2	=	0x00e2
                           0000E1   767 _ACC_1	=	0x00e1
                           0000E0   768 _ACC_0	=	0x00e0
                           0000EC   769 _WDTIF	=	0x00ec
                           0000EB   770 _P1IF	=	0x00eb
                           0000EA   771 _UTX1IF	=	0x00ea
                           0000E9   772 _UTX0IF	=	0x00e9
                           0000E8   773 _P2IF	=	0x00e8
                           0000F7   774 _B_7	=	0x00f7
                           0000F6   775 _B_6	=	0x00f6
                           0000F5   776 _B_5	=	0x00f5
                           0000F4   777 _B_4	=	0x00f4
                           0000F3   778 _B_3	=	0x00f3
                           0000F2   779 _B_2	=	0x00f2
                           0000F1   780 _B_1	=	0x00f1
                           0000F0   781 _B_0	=	0x00f0
                           0000DE   782 _OVFIM	=	0x00de
                           0000DD   783 _T4CH1IF	=	0x00dd
                           0000DC   784 _T4CH0IF	=	0x00dc
                           0000DB   785 _T4OVFIF	=	0x00db
                           0000DA   786 _T3CH1IF	=	0x00da
                           0000D9   787 _T3CH0IF	=	0x00d9
                           0000D8   788 _T3OVFIF	=	0x00d8
                           0000FF   789 _MODE	=	0x00ff
                           0000FE   790 _RE	=	0x00fe
                           0000FD   791 _SLAVE	=	0x00fd
                           0000FC   792 _FE	=	0x00fc
                           0000FB   793 _ERR	=	0x00fb
                           0000FA   794 _RX_BYTE	=	0x00fa
                           0000F9   795 _TX_BYTE	=	0x00f9
                           0000F8   796 _ACTIVE	=	0x00f8
                                    797 ;--------------------------------------------------------
                                    798 ; overlayable register banks
                                    799 ;--------------------------------------------------------
                                    800 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        801 	.ds 8
                                    802 ;--------------------------------------------------------
                                    803 ; internal ram data
                                    804 ;--------------------------------------------------------
                                    805 	.area DSEG    (DATA)
                                    806 ;--------------------------------------------------------
                                    807 ; overlayable items in internal ram 
                                    808 ;--------------------------------------------------------
                                    809 ;--------------------------------------------------------
                                    810 ; indirectly addressable internal ram data
                                    811 ;--------------------------------------------------------
                                    812 	.area ISEG    (DATA)
                                    813 ;--------------------------------------------------------
                                    814 ; absolute internal ram data
                                    815 ;--------------------------------------------------------
                                    816 	.area IABS    (ABS,DATA)
                                    817 	.area IABS    (ABS,DATA)
                                    818 ;--------------------------------------------------------
                                    819 ; bit data
                                    820 ;--------------------------------------------------------
                                    821 	.area BSEG    (BIT)
                                    822 ;--------------------------------------------------------
                                    823 ; paged external ram data
                                    824 ;--------------------------------------------------------
                                    825 	.area PSEG    (PAG,XDATA)
                                    826 ;--------------------------------------------------------
                                    827 ; external ram data
                                    828 ;--------------------------------------------------------
                                    829 	.area XSEG    (XDATA)
                           0061A6   830 _MONMUX	=	0x61a6
                           0061A6   831 _OPAMPMC	=	0x61a6
                           006230   832 _I2CCFG	=	0x6230
                           006231   833 _I2CSTAT	=	0x6231
                           006232   834 _I2CDATA	=	0x6232
                           006233   835 _I2CADDR	=	0x6233
                           006234   836 _I2CWC	=	0x6234
                           006235   837 _I2CIO	=	0x6235
                           006243   838 _OBSSEL0	=	0x6243
                           006244   839 _OBSSEL1	=	0x6244
                           006245   840 _OBSSEL2	=	0x6245
                           006246   841 _OBSSEL3	=	0x6246
                           006247   842 _OBSSEL4	=	0x6247
                           006248   843 _OBSSEL5	=	0x6248
                           006249   844 _CHVER	=	0x6249
                           00624A   845 _CHIPID	=	0x624a
                           00624B   846 _TESTREG0	=	0x624b
                           006260   847 _DBGDATA	=	0x6260
                           006262   848 _SRCRC	=	0x6262
                           006264   849 _BATTMON	=	0x6264
                           006265   850 _IVCTRL	=	0x6265
                           006270   851 _FCTL	=	0x6270
                           006271   852 _FADDRL	=	0x6271
                           006272   853 _FADDRH	=	0x6272
                           006273   854 _FWDATA	=	0x6273
                           006276   855 _CHIPINFO0	=	0x6276
                           006277   856 _CHIPINFO1	=	0x6277
                           006281   857 _IRCTL	=	0x6281
                           006290   858 _CLD	=	0x6290
                           0062A0   859 _XX_T1CCTL0	=	0x62a0
                           0062A1   860 _XX_T1CCTL1	=	0x62a1
                           0062A2   861 _XX_T1CCTL2	=	0x62a2
                           0062A3   862 _T1CCTL3	=	0x62a3
                           0062A4   863 _T1CCTL4	=	0x62a4
                           0062A6   864 _XX_T1CC0L	=	0x62a6
                           0062A7   865 _XX_T1CC0H	=	0x62a7
                           0062A8   866 _XX_T1CC1L	=	0x62a8
                           0062A9   867 _XX_T1CC1H	=	0x62a9
                           0062AA   868 _XX_T1CC2L	=	0x62aa
                           0062AB   869 _XX_T1CC2H	=	0x62ab
                           0062AC   870 _T1CC3L	=	0x62ac
                           0062AD   871 _T1CC3H	=	0x62ad
                           0062AE   872 _T1CC4L	=	0x62ae
                           0062AF   873 _T1CC4H	=	0x62af
                           0062B0   874 _STCC	=	0x62b0
                           0062B1   875 _STCS	=	0x62b1
                           0062B2   876 _STCV0	=	0x62b2
                           0062B3   877 _STCV1	=	0x62b3
                           0062B4   878 _STCV2	=	0x62b4
                           0062C0   879 _OPAMPC	=	0x62c0
                           0062C1   880 _OPAMPS	=	0x62c1
                           0062D0   881 _CMPCTL	=	0x62d0
                           006000   882 _RFCORE_RAM	=	0x6000
                           006000   883 _RXFIFO	=	0x6000
                           006080   884 _TXFIFO	=	0x6080
                           006100   885 _SRC_ADDR_TABLE	=	0x6100
                           006160   886 _SRCRESMASK0	=	0x6160
                           006161   887 _SRCRESMASK1	=	0x6161
                           006162   888 _SRCRESMASK2	=	0x6162
                           006163   889 _SRCRESINDEX	=	0x6163
                           006164   890 _SRCEXTPENDEN0	=	0x6164
                           006165   891 _SRCEXTPENDEN1	=	0x6165
                           006166   892 _SRCEXTPENDEN2	=	0x6166
                           006167   893 _SRCSHORTPENDEN0	=	0x6167
                           006168   894 _SRCSHORTPENDEN1	=	0x6168
                           006169   895 _SRCSHORTPENDEN2	=	0x6169
                           00616A   896 _EXT_ADDR0	=	0x616a
                           00616B   897 _EXT_ADDR1	=	0x616b
                           00616C   898 _EXT_ADDR2	=	0x616c
                           00616D   899 _EXT_ADDR3	=	0x616d
                           00616E   900 _EXT_ADDR4	=	0x616e
                           00616F   901 _EXT_ADDR5	=	0x616f
                           006170   902 _EXT_ADDR6	=	0x6170
                           006171   903 _EXT_ADDR7	=	0x6171
                           006172   904 _PAN_ID0	=	0x6172
                           006173   905 _PAN_ID1	=	0x6173
                           006174   906 _SHORT_ADDR0	=	0x6174
                           006175   907 _SHORT_ADDR1	=	0x6175
                           006180   908 _FRMFILT0	=	0x6180
                           006181   909 _FRMFILT1	=	0x6181
                           006182   910 _SRCMATCH	=	0x6182
                           006183   911 _SRCSHORTEN0	=	0x6183
                           006184   912 _SRCSHORTEN1	=	0x6184
                           006185   913 _SRCSHORTEN2	=	0x6185
                           006186   914 _SRCEXTEN0	=	0x6186
                           006187   915 _SRCEXTEN1	=	0x6187
                           006188   916 _SRCEXTEN2	=	0x6188
                           006189   917 _FRMCTRL0	=	0x6189
                           00618A   918 _FRMCTRL1	=	0x618a
                           00618B   919 _RXENABLE	=	0x618b
                           00618C   920 _RXMASKSET	=	0x618c
                           00618D   921 _RXMASKCLR	=	0x618d
                           00618E   922 _FREQTUNE	=	0x618e
                           00618F   923 _FREQCTRL	=	0x618f
                           006190   924 _TXPOWER	=	0x6190
                           006191   925 _TXCTRL	=	0x6191
                           006192   926 _FSMSTAT0	=	0x6192
                           006193   927 _FSMSTAT1	=	0x6193
                           006194   928 _FIFOPCTRL	=	0x6194
                           006195   929 _FSMCTRL	=	0x6195
                           006196   930 _CCACTRL0	=	0x6196
                           006197   931 _CCACTRL1	=	0x6197
                           006198   932 _RSSI	=	0x6198
                           006199   933 _RSSISTAT	=	0x6199
                           00619A   934 _RXFIRST	=	0x619a
                           00619B   935 _RXFIFOCNT	=	0x619b
                           00619C   936 _TXFIFOCNT	=	0x619c
                           00619D   937 _RXFIRST_PTR	=	0x619d
                           00619E   938 _RXLAST_PTR	=	0x619e
                           00619F   939 _RXP1_PTR	=	0x619f
                           0061A1   940 _TXFIRST_PTR	=	0x61a1
                           0061A2   941 _TXLAST_PTR	=	0x61a2
                           0061A3   942 _RFIRQM0	=	0x61a3
                           0061A4   943 _RFIRQM1	=	0x61a4
                           0061A5   944 _RFERRM	=	0x61a5
                           0061A7   945 _RFRND	=	0x61a7
                           0061A8   946 _MDMCTRL0	=	0x61a8
                           0061A9   947 _MDMCTRL1	=	0x61a9
                           0061AA   948 _FREQEST	=	0x61aa
                           0061AB   949 _RXCTRL	=	0x61ab
                           0061AC   950 _FSCTRL	=	0x61ac
                           0061AD   951 _FSCAL0	=	0x61ad
                           0061AE   952 _FSCAL1	=	0x61ae
                           0061AF   953 _FSCAL2	=	0x61af
                           0061B0   954 _FSCAL3	=	0x61b0
                           0061B1   955 _AGCCTRL0	=	0x61b1
                           0061B2   956 _AGCCTRL1	=	0x61b2
                           0061B3   957 _AGCCTRL2	=	0x61b3
                           0061B4   958 _AGCCTRL3	=	0x61b4
                           0061B5   959 _ADCTEST0	=	0x61b5
                           0061B6   960 _ADCTEST1	=	0x61b6
                           0061B7   961 _ADCTEST2	=	0x61b7
                           0061B8   962 _MDMTEST0	=	0x61b8
                           0061B9   963 _MDMTEST1	=	0x61b9
                           0061BA   964 _DACTEST0	=	0x61ba
                           0061BB   965 _DACTEST1	=	0x61bb
                           0061BC   966 _DACTEST2	=	0x61bc
                           0061BD   967 _ATEST	=	0x61bd
                           0061BE   968 _PTEST0	=	0x61be
                           0061BF   969 _PTEST1	=	0x61bf
                           0061FA   970 _TXFILTCFG	=	0x61fa
                           0061EB   971 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   972 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   973 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   974 _CSPPROG0	=	0x61c0
                           0061C1   975 _CSPPROG1	=	0x61c1
                           0061C2   976 _CSPPROG2	=	0x61c2
                           0061C3   977 _CSPPROG3	=	0x61c3
                           0061C4   978 _CSPPROG4	=	0x61c4
                           0061C5   979 _CSPPROG5	=	0x61c5
                           0061C6   980 _CSPPROG6	=	0x61c6
                           0061C7   981 _CSPPROG7	=	0x61c7
                           0061C8   982 _CSPPROG8	=	0x61c8
                           0061C9   983 _CSPPROG9	=	0x61c9
                           0061CA   984 _CSPPROG10	=	0x61ca
                           0061CB   985 _CSPPROG11	=	0x61cb
                           0061CC   986 _CSPPROG12	=	0x61cc
                           0061CD   987 _CSPPROG13	=	0x61cd
                           0061CE   988 _CSPPROG14	=	0x61ce
                           0061CF   989 _CSPPROG15	=	0x61cf
                           0061D0   990 _CSPPROG16	=	0x61d0
                           0061D1   991 _CSPPROG17	=	0x61d1
                           0061D2   992 _CSPPROG18	=	0x61d2
                           0061D3   993 _CSPPROG19	=	0x61d3
                           0061D4   994 _CSPPROG20	=	0x61d4
                           0061D5   995 _CSPPROG21	=	0x61d5
                           0061D6   996 _CSPPROG22	=	0x61d6
                           0061D7   997 _CSPPROG23	=	0x61d7
                           0061E0   998 _CSPCTRL	=	0x61e0
                           0061E1   999 _CSPSTAT	=	0x61e1
                           0061E2  1000 _CSPX	=	0x61e2
                           0061E3  1001 _CSPY	=	0x61e3
                           0061E4  1002 _CSPZ	=	0x61e4
                           0061E5  1003 _CSPT	=	0x61e5
                           006200  1004 _USBADDR	=	0x6200
                           006201  1005 _USBPOW	=	0x6201
                           006202  1006 _USBIIF	=	0x6202
                           006204  1007 _USBOIF	=	0x6204
                           006206  1008 _USBCIF	=	0x6206
                           006207  1009 _USBIIE	=	0x6207
                           006209  1010 _USBOIE	=	0x6209
                           00620B  1011 _USBCIE	=	0x620b
                           00620C  1012 _USBFRML	=	0x620c
                           00620D  1013 _USBFRMH	=	0x620d
                           00620E  1014 _USBINDEX	=	0x620e
                           00620F  1015 _USBCTRL	=	0x620f
                           006210  1016 _USBMAXI	=	0x6210
                           006211  1017 _USBCS0	=	0x6211
                           006211  1018 _USBCSIL	=	0x6211
                           006212  1019 _USBCSIH	=	0x6212
                           006213  1020 _USBMAXO	=	0x6213
                           006214  1021 _USBCSOL	=	0x6214
                           006215  1022 _USBCSOH	=	0x6215
                           006216  1023 _USBCNT0	=	0x6216
                           006216  1024 _USBCNTL	=	0x6216
                           006217  1025 _USBCNTH	=	0x6217
                           006220  1026 _USBF0	=	0x6220
                           006222  1027 _USBF1	=	0x6222
                           006224  1028 _USBF2	=	0x6224
                           006226  1029 _USBF3	=	0x6226
                           006228  1030 _USBF4	=	0x6228
                           00622A  1031 _USBF5	=	0x622a
                           007080  1032 _X_P0	=	0x7080
                           007086  1033 _X_U0CSR	=	0x7086
                           007089  1034 _X_P0IFG	=	0x7089
                           00708A  1035 _X_P1IFG	=	0x708a
                           00708B  1036 _X_P2IFG	=	0x708b
                           00708C  1037 _X_PICTL	=	0x708c
                           00708D  1038 _X_P1IEN	=	0x708d
                           00708F  1039 _X_P0INP	=	0x708f
                           007090  1040 _X_P1	=	0x7090
                           007091  1041 _X_RFIRQF1	=	0x7091
                           007093  1042 _X_MPAGE	=	0x7093
                           007093  1043 _X__XPAGE	=	0x7093
                           007094  1044 _X_T2CTRL	=	0x7094
                           007095  1045 _X_ST0	=	0x7095
                           007096  1046 _X_ST1	=	0x7096
                           007097  1047 _X_ST2	=	0x7097
                           00709C  1048 _X_T2EVTCFG	=	0x709c
                           00709D  1049 _X_SLEEPSTA	=	0x709d
                           00709E  1050 _X_CLKCONSTA	=	0x709e
                           00709F  1051 _X_FMAP	=	0x709f
                           00709F  1052 _X_PSBANK	=	0x709f
                           0070A0  1053 _X_P2	=	0x70a0
                           0070A1  1054 _X_T2IRQF	=	0x70a1
                           0070A2  1055 _X_T2M0	=	0x70a2
                           0070A3  1056 _X_T2M1	=	0x70a3
                           0070A4  1057 _X_T2MOVF0	=	0x70a4
                           0070A5  1058 _X_T2MOVF1	=	0x70a5
                           0070A6  1059 _X_T2MOVF2	=	0x70a6
                           0070A7  1060 _X_T2IRQM	=	0x70a7
                           0070AB  1061 _X_P0IEN	=	0x70ab
                           0070AC  1062 _X_P2IEN	=	0x70ac
                           0070AD  1063 _X_STLOAD	=	0x70ad
                           0070AE  1064 _X_PMUX	=	0x70ae
                           0070AF  1065 _X_T1STAT	=	0x70af
                           0070B1  1066 _X_ENCDI	=	0x70b1
                           0070B2  1067 _X_ENCDO	=	0x70b2
                           0070B3  1068 _X_ENCCS	=	0x70b3
                           0070B4  1069 _X_ADCCON1	=	0x70b4
                           0070B5  1070 _X_ADCCON2	=	0x70b5
                           0070B6  1071 _X_ADCCON3	=	0x70b6
                           0070BA  1072 _X_ADCL	=	0x70ba
                           0070BB  1073 _X_ADCH	=	0x70bb
                           0070BC  1074 _X_RNDL	=	0x70bc
                           0070BD  1075 _X_RNDH	=	0x70bd
                           0070BE  1076 _X_SLEEPCMD	=	0x70be
                           0070BF  1077 _X_RFERRF	=	0x70bf
                           0070C1  1078 _X_U0DBUF	=	0x70c1
                           0070C2  1079 _X_U0BAUD	=	0x70c2
                           0070C3  1080 _X_T2MSEL	=	0x70c3
                           0070C4  1081 _X_U0UCR	=	0x70c4
                           0070C5  1082 _X_U0GCR	=	0x70c5
                           0070C6  1083 _X_CLKCONCMD	=	0x70c6
                           0070C7  1084 _X_MEMCTR	=	0x70c7
                           0070C9  1085 _X_WDCTL	=	0x70c9
                           0070CA  1086 _X_T3CNT	=	0x70ca
                           0070CB  1087 _X_T3CTL	=	0x70cb
                           0070CC  1088 _X_T3CCTL0	=	0x70cc
                           0070CD  1089 _X_T3CC0	=	0x70cd
                           0070CE  1090 _X_T3CCTL1	=	0x70ce
                           0070CF  1091 _X_T3CC1	=	0x70cf
                           0070D1  1092 _X_DMAIRQ	=	0x70d1
                           0070D2  1093 _X_DMA1CFGL	=	0x70d2
                           0070D3  1094 _X_DMA1CFGH	=	0x70d3
                           0070D4  1095 _X_DMA0CFGL	=	0x70d4
                           0070D5  1096 _X_DMA0CFGH	=	0x70d5
                           0070D6  1097 _X_DMAARM	=	0x70d6
                           0070D7  1098 _X_DMAREQ	=	0x70d7
                           0070D8  1099 _X_TIMIF	=	0x70d8
                           0070D9  1100 _X_RFD	=	0x70d9
                           0070DA  1101 _X_T1CC0L	=	0x70da
                           0070DB  1102 _X_T1CC0H	=	0x70db
                           0070DC  1103 _X_T1CC1L	=	0x70dc
                           0070DD  1104 _X_T1CC1H	=	0x70dd
                           0070DE  1105 _X_T1CC2L	=	0x70de
                           0070DF  1106 _X_T1CC2H	=	0x70df
                           0070E1  1107 _X_RFST	=	0x70e1
                           0070E2  1108 _X_T1CNTL	=	0x70e2
                           0070E3  1109 _X_T1CNTH	=	0x70e3
                           0070E4  1110 _X_T1CTL	=	0x70e4
                           0070E5  1111 _X_T1CCTL0	=	0x70e5
                           0070E6  1112 _X_T1CCTL1	=	0x70e6
                           0070E7  1113 _X_T1CCTL2	=	0x70e7
                           0070E9  1114 _X_RFIRQF0	=	0x70e9
                           0070EA  1115 _X_T4CNT	=	0x70ea
                           0070EB  1116 _X_T4CTL	=	0x70eb
                           0070EC  1117 _X_T4CCTL0	=	0x70ec
                           0070ED  1118 _X_T4CC0	=	0x70ed
                           0070EE  1119 _X_T4CCTL1	=	0x70ee
                           0070EF  1120 _X_T4CC1	=	0x70ef
                           0070F1  1121 _X_PERCFG	=	0x70f1
                           0070F2  1122 _X_APCFG	=	0x70f2
                           0070F3  1123 _X_P0SEL	=	0x70f3
                           0070F4  1124 _X_P1SEL	=	0x70f4
                           0070F5  1125 _X_P2SEL	=	0x70f5
                           0070F6  1126 _X_P1INP	=	0x70f6
                           0070F7  1127 _X_P2INP	=	0x70f7
                           0070F8  1128 _X_U1CSR	=	0x70f8
                           0070F9  1129 _X_U1DBUF	=	0x70f9
                           0070FA  1130 _X_U1BAUD	=	0x70fa
                           0070FB  1131 _X_U1UCR	=	0x70fb
                           0070FC  1132 _X_U1GCR	=	0x70fc
                           0070FD  1133 _X_P0DIR	=	0x70fd
                           0070FE  1134 _X_P1DIR	=	0x70fe
                           0070FF  1135 _X_P2DIR	=	0x70ff
                           007800  1136 _X_INFOPAGE	=	0x7800
                           00780C  1137 _X_IEEE_ADDR	=	0x780c
      000000                       1138 _pt:
      000000                       1139 	.ds 2
      000002                       1140 _is_listening:
      000002                       1141 	.ds 1
      000003                       1142 _encounter_memb_memb_count:
      000003                       1143 	.ds 4
      000007                       1144 _encounter_memb_memb_mem:
      000007                       1145 	.ds 52
      00003B                       1146 _is_streaming:
      00003B                       1147 	.ds 1
      00003C                       1148 _is_streaming_to:
      00003C                       1149 	.ds 8
      000044                       1150 _is_streaming_to_too:
      000044                       1151 	.ds 8
      00004C                       1152 _stream_until:
      00004C                       1153 	.ds 2
      00004E                       1154 _cpowercycle_ctimer:
      00004E                       1155 	.ds 22
                                   1156 ;--------------------------------------------------------
                                   1157 ; absolute external ram data
                                   1158 ;--------------------------------------------------------
                                   1159 	.area XABS    (ABS,XDATA)
                                   1160 ;--------------------------------------------------------
                                   1161 ; external initialized ram data
                                   1162 ;--------------------------------------------------------
                                   1163 	.area XISEG   (XDATA)
      000000                       1164 _cxmac_config::
      000000                       1165 	.ds 8
      000008                       1166 _cxmac_is_on:
      000008                       1167 	.ds 1
      000009                       1168 _waiting_for_packet:
      000009                       1169 	.ds 1
      00000A                       1170 _someone_is_sending:
      00000A                       1171 	.ds 1
      00000B                       1172 _we_are_sending:
      00000B                       1173 	.ds 1
      00000C                       1174 _radio_is_on:
      00000C                       1175 	.ds 1
      00000D                       1176 _encounter_list_list:
      00000D                       1177 	.ds 3
      000010                       1178 _encounter_list:
      000010                       1179 	.ds 3
      000013                       1180 _encounter_memb:
      000013                       1181 	.ds 10
                                   1182 	.area HOME    (CODE)
                                   1183 	.area GSINIT0 (CODE)
                                   1184 	.area GSINIT1 (CODE)
                                   1185 	.area GSINIT2 (CODE)
                                   1186 	.area GSINIT3 (CODE)
                                   1187 	.area GSINIT4 (CODE)
                                   1188 	.area GSINIT5 (CODE)
                                   1189 	.area GSINIT  (CODE)
                                   1190 	.area GSFINAL (CODE)
                                   1191 	.area CSEG    (CODE)
                                   1192 ;--------------------------------------------------------
                                   1193 ; global & static initialisations
                                   1194 ;--------------------------------------------------------
                                   1195 	.area HOME    (CODE)
                                   1196 	.area GSINIT  (CODE)
                                   1197 	.area GSFINAL (CODE)
                                   1198 	.area GSINIT  (CODE)
                                   1199 ;--------------------------------------------------------
                                   1200 ; Home
                                   1201 ;--------------------------------------------------------
                                   1202 	.area HOME    (CODE)
                                   1203 	.area HOME    (CODE)
                                   1204 ;--------------------------------------------------------
                                   1205 ; code
                                   1206 ;--------------------------------------------------------
                                   1207 	.area BANK1   (CODE)
                                   1208 ;------------------------------------------------------------
                                   1209 ;Allocation info for local variables in function 'on'
                                   1210 ;------------------------------------------------------------
                                   1211 ;	../../../core/net/mac/cxmac.c:224: on(void)
                                   1212 ;	-----------------------------------------
                                   1213 ;	 function on
                                   1214 ;	-----------------------------------------
      000000                       1215 _on:
                           000007  1216 	ar7 = 0x07
                           000006  1217 	ar6 = 0x06
                           000005  1218 	ar5 = 0x05
                           000004  1219 	ar4 = 0x04
                           000003  1220 	ar3 = 0x03
                           000002  1221 	ar2 = 0x02
                           000001  1222 	ar1 = 0x01
                           000000  1223 	ar0 = 0x00
                                   1224 ;	../../../core/net/mac/cxmac.c:226: if(cxmac_is_on && radio_is_on == 0) {
      000000 90r00r08         [24] 1225 	mov	dptr,#_cxmac_is_on
      000003 E0               [24] 1226 	movx	a,@dptr
      000004 60 35            [24] 1227 	jz	00104$
      000006 90r00r0C         [24] 1228 	mov	dptr,#_radio_is_on
      000009 E0               [24] 1229 	movx	a,@dptr
      00000A 70 2F            [24] 1230 	jnz	00104$
                                   1231 ;	../../../core/net/mac/cxmac.c:227: radio_is_on = 1;
      00000C 90r00r0C         [24] 1232 	mov	dptr,#_radio_is_on
      00000F 74 01            [12] 1233 	mov	a,#0x01
      000011 F0               [24] 1234 	movx	@dptr,a
                                   1235 ;	../../../core/net/mac/cxmac.c:228: NETSTACK_RADIO.on();
      000012 90r00r18         [24] 1236 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      000015 E4               [12] 1237 	clr	a
      000016 93               [24] 1238 	movc	a,@a+dptr
      000017 FD               [12] 1239 	mov	r5,a
      000018 A3               [24] 1240 	inc	dptr
      000019 E4               [12] 1241 	clr	a
      00001A 93               [24] 1242 	movc	a,@a+dptr
      00001B FE               [12] 1243 	mov	r6,a
      00001C A3               [24] 1244 	inc	dptr
      00001D E4               [12] 1245 	clr	a
      00001E 93               [24] 1246 	movc	a,@a+dptr
      00001F FF               [12] 1247 	mov	r7,a
      000020 C0 07            [24] 1248 	push	ar7
      000022 C0 06            [24] 1249 	push	ar6
      000024 C0 05            [24] 1250 	push	ar5
      000026 C0 05            [24] 1251 	push	ar5
      000028 C0 06            [24] 1252 	push	ar6
      00002A C0 07            [24] 1253 	push	ar7
      00002C D0 02            [24] 1254 	pop	ar2
      00002E D0 01            [24] 1255 	pop	ar1
      000030 D0 00            [24] 1256 	pop	ar0
      000032 12r00r00         [24] 1257 	lcall	__sdcc_banked_call
      000035 D0 05            [24] 1258 	pop	ar5
      000037 D0 06            [24] 1259 	pop	ar6
      000039 D0 07            [24] 1260 	pop	ar7
      00003B                       1261 00104$:
                                   1262 ;	../../../core/net/mac/cxmac.c:231: }
      00003B 02r00r00         [24] 1263 	ljmp	__sdcc_banked_ret
                                   1264 ;------------------------------------------------------------
                                   1265 ;Allocation info for local variables in function 'off'
                                   1266 ;------------------------------------------------------------
                                   1267 ;	../../../core/net/mac/cxmac.c:234: off(void)
                                   1268 ;	-----------------------------------------
                                   1269 ;	 function off
                                   1270 ;	-----------------------------------------
      00003E                       1271 _off:
                                   1272 ;	../../../core/net/mac/cxmac.c:236: if(cxmac_is_on && radio_is_on != 0 && is_listening == 0 &&
      00003E 90r00r08         [24] 1273 	mov	dptr,#_cxmac_is_on
      000041 E0               [24] 1274 	movx	a,@dptr
      000042 60 3F            [24] 1275 	jz	00106$
      000044 90r00r0C         [24] 1276 	mov	dptr,#_radio_is_on
      000047 E0               [24] 1277 	movx	a,@dptr
      000048 60 39            [24] 1278 	jz	00106$
      00004A 90r00r02         [24] 1279 	mov	dptr,#_is_listening
      00004D E0               [24] 1280 	movx	a,@dptr
      00004E 70 33            [24] 1281 	jnz	00106$
                                   1282 ;	../../../core/net/mac/cxmac.c:237: is_streaming == 0) {
      000050 90r00r3B         [24] 1283 	mov	dptr,#_is_streaming
      000053 E0               [24] 1284 	movx	a,@dptr
      000054 70 2D            [24] 1285 	jnz	00106$
                                   1286 ;	../../../core/net/mac/cxmac.c:238: radio_is_on = 0;
      000056 90r00r0C         [24] 1287 	mov	dptr,#_radio_is_on
      000059 E4               [12] 1288 	clr	a
      00005A F0               [24] 1289 	movx	@dptr,a
                                   1290 ;	../../../core/net/mac/cxmac.c:239: NETSTACK_RADIO.off();
      00005B 90r00r1B         [24] 1291 	mov	dptr,#(_cc2530_rf_driver + 0x001b)
                                   1292 ;	genFromRTrack removed	clr	a
      00005E 93               [24] 1293 	movc	a,@a+dptr
      00005F FD               [12] 1294 	mov	r5,a
      000060 A3               [24] 1295 	inc	dptr
      000061 E4               [12] 1296 	clr	a
      000062 93               [24] 1297 	movc	a,@a+dptr
      000063 FE               [12] 1298 	mov	r6,a
      000064 A3               [24] 1299 	inc	dptr
      000065 E4               [12] 1300 	clr	a
      000066 93               [24] 1301 	movc	a,@a+dptr
      000067 FF               [12] 1302 	mov	r7,a
      000068 C0 07            [24] 1303 	push	ar7
      00006A C0 06            [24] 1304 	push	ar6
      00006C C0 05            [24] 1305 	push	ar5
      00006E C0 05            [24] 1306 	push	ar5
      000070 C0 06            [24] 1307 	push	ar6
      000072 C0 07            [24] 1308 	push	ar7
      000074 D0 02            [24] 1309 	pop	ar2
      000076 D0 01            [24] 1310 	pop	ar1
      000078 D0 00            [24] 1311 	pop	ar0
      00007A 12r00r00         [24] 1312 	lcall	__sdcc_banked_call
      00007D D0 05            [24] 1313 	pop	ar5
      00007F D0 06            [24] 1314 	pop	ar6
      000081 D0 07            [24] 1315 	pop	ar7
      000083                       1316 00106$:
                                   1317 ;	../../../core/net/mac/cxmac.c:242: }
      000083 02r00r00         [24] 1318 	ljmp	__sdcc_banked_ret
                                   1319 ;------------------------------------------------------------
                                   1320 ;Allocation info for local variables in function 'powercycle_turn_radio_off'
                                   1321 ;------------------------------------------------------------
                                   1322 ;	../../../core/net/mac/cxmac.c:245: powercycle_turn_radio_off(void)
                                   1323 ;	-----------------------------------------
                                   1324 ;	 function powercycle_turn_radio_off
                                   1325 ;	-----------------------------------------
      000086                       1326 _powercycle_turn_radio_off:
                                   1327 ;	../../../core/net/mac/cxmac.c:247: if(we_are_sending == 0 &&
      000086 90r00r0B         [24] 1328 	mov	dptr,#_we_are_sending
      000089 E0               [24] 1329 	movx	a,@dptr
      00008A 70 0F            [24] 1330 	jnz	00104$
                                   1331 ;	../../../core/net/mac/cxmac.c:248: waiting_for_packet == 0) {
      00008C 90r00r09         [24] 1332 	mov	dptr,#_waiting_for_packet
      00008F E0               [24] 1333 	movx	a,@dptr
      000090 70 09            [24] 1334 	jnz	00104$
                                   1335 ;	../../../core/net/mac/cxmac.c:249: off();
      000092 78r3E            [12] 1336 	mov	r0,#_off
      000094 79s00            [12] 1337 	mov	r1,#(_off >> 8)
      000096 7As00            [12] 1338 	mov	r2,#(_off >> 16)
      000098 12r00r00         [24] 1339 	lcall	__sdcc_banked_call
      00009B                       1340 00104$:
                                   1341 ;	../../../core/net/mac/cxmac.c:254: }
      00009B 02r00r00         [24] 1342 	ljmp	__sdcc_banked_ret
                                   1343 ;------------------------------------------------------------
                                   1344 ;Allocation info for local variables in function 'powercycle_turn_radio_on'
                                   1345 ;------------------------------------------------------------
                                   1346 ;	../../../core/net/mac/cxmac.c:256: powercycle_turn_radio_on(void)
                                   1347 ;	-----------------------------------------
                                   1348 ;	 function powercycle_turn_radio_on
                                   1349 ;	-----------------------------------------
      00009E                       1350 _powercycle_turn_radio_on:
                                   1351 ;	../../../core/net/mac/cxmac.c:258: if(we_are_sending == 0 &&
      00009E 90r00r0B         [24] 1352 	mov	dptr,#_we_are_sending
      0000A1 E0               [24] 1353 	movx	a,@dptr
      0000A2 70 0F            [24] 1354 	jnz	00104$
                                   1355 ;	../../../core/net/mac/cxmac.c:259: waiting_for_packet == 0) {
      0000A4 90r00r09         [24] 1356 	mov	dptr,#_waiting_for_packet
      0000A7 E0               [24] 1357 	movx	a,@dptr
      0000A8 70 09            [24] 1358 	jnz	00104$
                                   1359 ;	../../../core/net/mac/cxmac.c:260: on();
      0000AA 78r00            [12] 1360 	mov	r0,#_on
      0000AC 79s00            [12] 1361 	mov	r1,#(_on >> 8)
      0000AE 7As00            [12] 1362 	mov	r2,#(_on >> 16)
      0000B0 12r00r00         [24] 1363 	lcall	__sdcc_banked_call
      0000B3                       1364 00104$:
                                   1365 ;	../../../core/net/mac/cxmac.c:262: }
      0000B3 02r00r00         [24] 1366 	ljmp	__sdcc_banked_ret
                                   1367 ;------------------------------------------------------------
                                   1368 ;Allocation info for local variables in function 'cschedule_powercycle'
                                   1369 ;------------------------------------------------------------
                                   1370 ;time                      Allocated to registers r6 r7 
                                   1371 ;------------------------------------------------------------
                                   1372 ;	../../../core/net/mac/cxmac.c:268: cschedule_powercycle(clock_time_t time)
                                   1373 ;	-----------------------------------------
                                   1374 ;	 function cschedule_powercycle
                                   1375 ;	-----------------------------------------
      0000B6                       1376 _cschedule_powercycle:
      0000B6 AE 82            [24] 1377 	mov	r6,dpl
      0000B8 AF 83            [24] 1378 	mov	r7,dph
                                   1379 ;	../../../core/net/mac/cxmac.c:271: if(cxmac_is_on) {
      0000BA 90r00r08         [24] 1380 	mov	dptr,#_cxmac_is_on
      0000BD E0               [24] 1381 	movx	a,@dptr
      0000BE 60 33            [24] 1382 	jz	00105$
                                   1383 ;	../../../core/net/mac/cxmac.c:272: if(time == 0) {
      0000C0 EE               [12] 1384 	mov	a,r6
      0000C1 4F               [12] 1385 	orl	a,r7
                                   1386 ;	../../../core/net/mac/cxmac.c:273: time = 1;
      0000C2 70 03            [24] 1387 	jnz	00102$
      0000C4 7E 01            [12] 1388 	mov	r6,#0x01
      0000C6 FF               [12] 1389 	mov	r7,a
      0000C7                       1390 00102$:
                                   1391 ;	../../../core/net/mac/cxmac.c:276: (void (*)(void *))cpowercycle, NULL);
      0000C7 7BrF6            [12] 1392 	mov	r3,#_cpowercycle
      0000C9 7Cs00            [12] 1393 	mov	r4,#(_cpowercycle >> 8)
      0000CB 7Ds00            [12] 1394 	mov	r5,#(_cpowercycle >> 16)
                                   1395 ;	../../../core/net/mac/cxmac.c:275: ctimer_set(&cpowercycle_ctimer, time,
      0000CD E4               [12] 1396 	clr	a
      0000CE C0 E0            [24] 1397 	push	acc
      0000D0 C0 E0            [24] 1398 	push	acc
      0000D2 C0 E0            [24] 1399 	push	acc
      0000D4 C0 03            [24] 1400 	push	ar3
      0000D6 C0 04            [24] 1401 	push	ar4
      0000D8 C0 05            [24] 1402 	push	ar5
      0000DA C0 06            [24] 1403 	push	ar6
      0000DC C0 07            [24] 1404 	push	ar7
      0000DE 90r00r4E         [24] 1405 	mov	dptr,#_cpowercycle_ctimer
      0000E1 75 F0 00         [24] 1406 	mov	b,#0x00
      0000E4 78r00            [12] 1407 	mov	r0,#_ctimer_set
      0000E6 79s00            [12] 1408 	mov	r1,#(_ctimer_set >> 8)
      0000E8 7As00            [12] 1409 	mov	r2,#(_ctimer_set >> 16)
      0000EA 12r00r00         [24] 1410 	lcall	__sdcc_banked_call
      0000ED E5 81            [12] 1411 	mov	a,sp
      0000EF 24 F8            [12] 1412 	add	a,#0xf8
      0000F1 F5 81            [12] 1413 	mov	sp,a
      0000F3                       1414 00105$:
                                   1415 ;	../../../core/net/mac/cxmac.c:278: }
      0000F3 02r00r00         [24] 1416 	ljmp	__sdcc_banked_ret
                                   1417 ;------------------------------------------------------------
                                   1418 ;Allocation info for local variables in function 'cpowercycle'
                                   1419 ;------------------------------------------------------------
                                   1420 ;ptr                       Allocated to registers 
                                   1421 ;PT_YIELD_FLAG             Allocated to registers r7 
                                   1422 ;------------------------------------------------------------
                                   1423 ;	../../../core/net/mac/cxmac.c:281: cpowercycle(void *ptr)
                                   1424 ;	-----------------------------------------
                                   1425 ;	 function cpowercycle
                                   1426 ;	-----------------------------------------
      0000F6                       1427 _cpowercycle:
                                   1428 ;	../../../core/net/mac/cxmac.c:283: if(is_streaming) {
      0000F6 90r00r3B         [24] 1429 	mov	dptr,#_is_streaming
      0000F9 E0               [24] 1430 	movx	a,@dptr
      0000FA 60 67            [24] 1431 	jz	00104$
                                   1432 ;	../../../core/net/mac/cxmac.c:284: if(!RTIMER_CLOCK_LT(RTIMER_NOW(), stream_until)) {
      0000FC AE E2            [24] 1433 	mov	r6,_T1CNTL
      0000FE 7F 00            [12] 1434 	mov	r7,#0x00
      000100 AC E3            [24] 1435 	mov	r4,_T1CNTH
      000102 8C 05            [24] 1436 	mov	ar5,r4
      000104 E4               [12] 1437 	clr	a
      000105 2E               [12] 1438 	add	a,r6
      000106 FE               [12] 1439 	mov	r6,a
      000107 ED               [12] 1440 	mov	a,r5
      000108 3F               [12] 1441 	addc	a,r7
      000109 FF               [12] 1442 	mov	r7,a
      00010A 90r00r4C         [24] 1443 	mov	dptr,#_stream_until
      00010D E0               [24] 1444 	movx	a,@dptr
      00010E FC               [12] 1445 	mov	r4,a
      00010F A3               [24] 1446 	inc	dptr
      000110 E0               [24] 1447 	movx	a,@dptr
      000111 FD               [12] 1448 	mov	r5,a
      000112 EE               [12] 1449 	mov	a,r6
      000113 C3               [12] 1450 	clr	c
      000114 9C               [12] 1451 	subb	a,r4
      000115 FC               [12] 1452 	mov	r4,a
      000116 EF               [12] 1453 	mov	a,r7
      000117 9D               [12] 1454 	subb	a,r5
      000118 FD               [12] 1455 	mov	r5,a
      000119 20 E7 47         [24] 1456 	jb	acc.7,00104$
                                   1457 ;	../../../core/net/mac/cxmac.c:285: is_streaming = 0;
      00011C 90r00r3B         [24] 1458 	mov	dptr,#_is_streaming
      00011F E4               [12] 1459 	clr	a
      000120 F0               [24] 1460 	movx	@dptr,a
                                   1461 ;	../../../core/net/mac/cxmac.c:286: rimeaddr_copy(&is_streaming_to, &rimeaddr_null);
      000121 74r00            [12] 1462 	mov	a,#_rimeaddr_null
      000123 C0 E0            [24] 1463 	push	acc
      000125 74s00            [12] 1464 	mov	a,#(_rimeaddr_null >> 8)
      000127 C0 E0            [24] 1465 	push	acc
      000129 74 80            [12] 1466 	mov	a,#0x80
      00012B C0 E0            [24] 1467 	push	acc
      00012D 90r00r3C         [24] 1468 	mov	dptr,#_is_streaming_to
      000130 75 F0 00         [24] 1469 	mov	b,#0x00
      000133 78r00            [12] 1470 	mov	r0,#_rimeaddr_copy
      000135 79s00            [12] 1471 	mov	r1,#(_rimeaddr_copy >> 8)
      000137 7As00            [12] 1472 	mov	r2,#(_rimeaddr_copy >> 16)
      000139 12r00r00         [24] 1473 	lcall	__sdcc_banked_call
      00013C 15 81            [12] 1474 	dec	sp
      00013E 15 81            [12] 1475 	dec	sp
      000140 15 81            [12] 1476 	dec	sp
                                   1477 ;	../../../core/net/mac/cxmac.c:287: rimeaddr_copy(&is_streaming_to_too, &rimeaddr_null);
      000142 74r00            [12] 1478 	mov	a,#_rimeaddr_null
      000144 C0 E0            [24] 1479 	push	acc
      000146 74s00            [12] 1480 	mov	a,#(_rimeaddr_null >> 8)
      000148 C0 E0            [24] 1481 	push	acc
      00014A 74 80            [12] 1482 	mov	a,#0x80
      00014C C0 E0            [24] 1483 	push	acc
      00014E 90r00r44         [24] 1484 	mov	dptr,#_is_streaming_to_too
      000151 75 F0 00         [24] 1485 	mov	b,#0x00
      000154 78r00            [12] 1486 	mov	r0,#_rimeaddr_copy
      000156 79s00            [12] 1487 	mov	r1,#(_rimeaddr_copy >> 8)
      000158 7As00            [12] 1488 	mov	r2,#(_rimeaddr_copy >> 16)
      00015A 12r00r00         [24] 1489 	lcall	__sdcc_banked_call
      00015D 15 81            [12] 1490 	dec	sp
      00015F 15 81            [12] 1491 	dec	sp
      000161 15 81            [12] 1492 	dec	sp
      000163                       1493 00104$:
                                   1494 ;	../../../core/net/mac/cxmac.c:291: PT_BEGIN(&pt);
      000163 7F 01            [12] 1495 	mov	r7,#0x01
      000165 90r00r00         [24] 1496 	mov	dptr,#_pt
      000168 E0               [24] 1497 	movx	a,@dptr
      000169 FD               [12] 1498 	mov	r5,a
      00016A A3               [24] 1499 	inc	dptr
      00016B E0               [24] 1500 	movx	a,@dptr
      00016C FE               [12] 1501 	mov	r6,a
      00016D BD 00 05         [24] 1502 	cjne	r5,#0x00,00182$
      000170 BE 00 02         [24] 1503 	cjne	r6,#0x00,00182$
      000173 80 14            [24] 1504 	sjmp	00127$
      000175                       1505 00182$:
      000175 BD 2E 05         [24] 1506 	cjne	r5,#0x2e,00183$
      000178 BE 01 02         [24] 1507 	cjne	r6,#0x01,00183$
      00017B 80 39            [24] 1508 	sjmp	00108$
      00017D                       1509 00183$:
      00017D BD 3D 06         [24] 1510 	cjne	r5,#0x3d,00184$
      000180 BE 01 03         [24] 1511 	cjne	r6,#0x01,00184$
      000183 02r02r0B         [24] 1512 	ljmp	00118$
      000186                       1513 00184$:
      000186 02r02r16         [24] 1514 	ljmp	00129$
                                   1515 ;	../../../core/net/mac/cxmac.c:293: while(1) {
      000189                       1516 00127$:
                                   1517 ;	../../../core/net/mac/cxmac.c:295: if(someone_is_sending > 0) {
      000189 90r00r0A         [24] 1518 	mov	dptr,#_someone_is_sending
      00018C E0               [24] 1519 	movx	a,@dptr
      00018D 60 06            [24] 1520 	jz	00107$
                                   1521 ;	../../../core/net/mac/cxmac.c:296: someone_is_sending--;
      00018F 90r00r0A         [24] 1522 	mov	dptr,#_someone_is_sending
      000192 E0               [24] 1523 	movx	a,@dptr
      000193 14               [12] 1524 	dec	a
      000194 F0               [24] 1525 	movx	@dptr,a
      000195                       1526 00107$:
                                   1527 ;	../../../core/net/mac/cxmac.c:300: powercycle_turn_radio_on();
      000195 78r9E            [12] 1528 	mov	r0,#_powercycle_turn_radio_on
      000197 79s00            [12] 1529 	mov	r1,#(_powercycle_turn_radio_on >> 8)
      000199 7As00            [12] 1530 	mov	r2,#(_powercycle_turn_radio_on >> 16)
      00019B 12r00r00         [24] 1531 	lcall	__sdcc_banked_call
                                   1532 ;	../../../core/net/mac/cxmac.c:301: CSCHEDULE_POWERCYCLE(DEFAULT_ON_TIME);
      00019E 90 00 00         [24] 1533 	mov	dptr,#0x0000
      0001A1 78rB6            [12] 1534 	mov	r0,#_cschedule_powercycle
      0001A3 79s00            [12] 1535 	mov	r1,#(_cschedule_powercycle >> 8)
      0001A5 7As00            [12] 1536 	mov	r2,#(_cschedule_powercycle >> 16)
      0001A7 12r00r00         [24] 1537 	lcall	__sdcc_banked_call
                                   1538 ;	../../../core/net/mac/cxmac.c:302: PT_YIELD(&pt);
      0001AA 7F 00            [12] 1539 	mov	r7,#0x00
      0001AC 90r00r00         [24] 1540 	mov	dptr,#_pt
      0001AF 74 2E            [12] 1541 	mov	a,#0x2e
      0001B1 F0               [24] 1542 	movx	@dptr,a
      0001B2 74 01            [12] 1543 	mov	a,#0x01
      0001B4 A3               [24] 1544 	inc	dptr
      0001B5 F0               [24] 1545 	movx	@dptr,a
      0001B6                       1546 00108$:
      0001B6 EF               [12] 1547 	mov	a,r7
      0001B7 70 05            [24] 1548 	jnz	00112$
      0001B9 75 82 01         [24] 1549 	mov	dpl,#0x01
      0001BC 80 62            [24] 1550 	sjmp	00130$
      0001BE                       1551 00112$:
                                   1552 ;	../../../core/net/mac/cxmac.c:304: if(cxmac_config.off_time > 0) {
      0001BE 90r00r02         [24] 1553 	mov	dptr,#(_cxmac_config + 0x0002)
      0001C1 E0               [24] 1554 	movx	a,@dptr
      0001C2 FD               [12] 1555 	mov	r5,a
      0001C3 A3               [24] 1556 	inc	dptr
      0001C4 E0               [24] 1557 	movx	a,@dptr
      0001C5 FE               [12] 1558 	mov	r6,a
      0001C6 4D               [12] 1559 	orl	a,r5
      0001C7 60 C0            [24] 1560 	jz	00127$
                                   1561 ;	../../../core/net/mac/cxmac.c:305: powercycle_turn_radio_off();
      0001C9 78r86            [12] 1562 	mov	r0,#_powercycle_turn_radio_off
      0001CB 79s00            [12] 1563 	mov	r1,#(_powercycle_turn_radio_off >> 8)
      0001CD 7As00            [12] 1564 	mov	r2,#(_powercycle_turn_radio_off >> 16)
      0001CF 12r00r00         [24] 1565 	lcall	__sdcc_banked_call
                                   1566 ;	../../../core/net/mac/cxmac.c:306: if(waiting_for_packet != 0) {
      0001D2 90r00r09         [24] 1567 	mov	dptr,#_waiting_for_packet
      0001D5 E0               [24] 1568 	movx	a,@dptr
      0001D6 60 1B            [24] 1569 	jz	00117$
                                   1570 ;	../../../core/net/mac/cxmac.c:307: waiting_for_packet++;
      0001D8 90r00r09         [24] 1571 	mov	dptr,#_waiting_for_packet
      0001DB E0               [24] 1572 	movx	a,@dptr
      0001DC 24 01            [12] 1573 	add	a,#0x01
      0001DE F0               [24] 1574 	movx	@dptr,a
                                   1575 ;	../../../core/net/mac/cxmac.c:308: if(waiting_for_packet > 2) {
      0001DF E0               [24] 1576 	movx	a,@dptr
      0001E0 FE               [12] 1577 	mov  r6,a
      0001E1 24 FD            [12] 1578 	add	a,#0xff - 0x02
      0001E3 50 0E            [24] 1579 	jnc	00117$
                                   1580 ;	../../../core/net/mac/cxmac.c:312: waiting_for_packet = 0;
      0001E5 90r00r09         [24] 1581 	mov	dptr,#_waiting_for_packet
      0001E8 E4               [12] 1582 	clr	a
      0001E9 F0               [24] 1583 	movx	@dptr,a
                                   1584 ;	../../../core/net/mac/cxmac.c:313: powercycle_turn_radio_off();
      0001EA 78r86            [12] 1585 	mov	r0,#_powercycle_turn_radio_off
      0001EC 79s00            [12] 1586 	mov	r1,#(_powercycle_turn_radio_off >> 8)
      0001EE 7As00            [12] 1587 	mov	r2,#(_powercycle_turn_radio_off >> 16)
      0001F0 12r00r00         [24] 1588 	lcall	__sdcc_banked_call
      0001F3                       1589 00117$:
                                   1590 ;	../../../core/net/mac/cxmac.c:316: CSCHEDULE_POWERCYCLE(DEFAULT_OFF_TIME);
      0001F3 90 00 0F         [24] 1591 	mov	dptr,#0x000f
      0001F6 78rB6            [12] 1592 	mov	r0,#_cschedule_powercycle
      0001F8 79s00            [12] 1593 	mov	r1,#(_cschedule_powercycle >> 8)
      0001FA 7As00            [12] 1594 	mov	r2,#(_cschedule_powercycle >> 16)
      0001FC 12r00r00         [24] 1595 	lcall	__sdcc_banked_call
                                   1596 ;	../../../core/net/mac/cxmac.c:317: PT_YIELD(&pt);
      0001FF 7F 00            [12] 1597 	mov	r7,#0x00
      000201 90r00r00         [24] 1598 	mov	dptr,#_pt
      000204 74 3D            [12] 1599 	mov	a,#0x3d
      000206 F0               [24] 1600 	movx	@dptr,a
      000207 74 01            [12] 1601 	mov	a,#0x01
      000209 A3               [24] 1602 	inc	dptr
      00020A F0               [24] 1603 	movx	@dptr,a
      00020B                       1604 00118$:
      00020B EF               [12] 1605 	mov	a,r7
      00020C 60 03            [24] 1606 	jz	00190$
      00020E 02r01r89         [24] 1607 	ljmp	00127$
      000211                       1608 00190$:
      000211 75 82 01         [24] 1609 	mov	dpl,#0x01
                                   1610 ;	../../../core/net/mac/cxmac.c:321: PT_END(&pt);
      000214 80 0A            [24] 1611 	sjmp	00130$
      000216                       1612 00129$:
      000216 90r00r00         [24] 1613 	mov	dptr,#_pt
      000219 E4               [12] 1614 	clr	a
      00021A F0               [24] 1615 	movx	@dptr,a
      00021B A3               [24] 1616 	inc	dptr
      00021C F0               [24] 1617 	movx	@dptr,a
      00021D 75 82 03         [24] 1618 	mov	dpl,#0x03
      000220                       1619 00130$:
                                   1620 ;	../../../core/net/mac/cxmac.c:322: }
      000220 02r00r00         [24] 1621 	ljmp	__sdcc_banked_ret
                                   1622 ;------------------------------------------------------------
                                   1623 ;Allocation info for local variables in function 'register_encounter'
                                   1624 ;------------------------------------------------------------
                                   1625 ;time                      Allocated to stack - sp -7
                                   1626 ;neighbor                  Allocated to stack - sp -2
                                   1627 ;e                         Allocated to registers r5 r6 r7 
                                   1628 ;------------------------------------------------------------
                                   1629 ;	../../../core/net/mac/cxmac.c:386: register_encounter(const rimeaddr_t *neighbor, rtimer_clock_t time)
                                   1630 ;	-----------------------------------------
                                   1631 ;	 function register_encounter
                                   1632 ;	-----------------------------------------
      000223                       1633 _register_encounter:
      000223 C0 82            [24] 1634 	push	dpl
      000225 C0 83            [24] 1635 	push	dph
      000227 C0 F0            [24] 1636 	push	b
                                   1637 ;	../../../core/net/mac/cxmac.c:391: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000229 90r00r10         [24] 1638 	mov	dptr,#_encounter_list
      00022C E0               [24] 1639 	movx	a,@dptr
      00022D FA               [12] 1640 	mov	r2,a
      00022E A3               [24] 1641 	inc	dptr
      00022F E0               [24] 1642 	movx	a,@dptr
      000230 FB               [12] 1643 	mov	r3,a
      000231 A3               [24] 1644 	inc	dptr
      000232 E0               [24] 1645 	movx	a,@dptr
      000233 FC               [12] 1646 	mov	r4,a
      000234 8A 82            [24] 1647 	mov	dpl,r2
      000236 8B 83            [24] 1648 	mov	dph,r3
      000238 8C F0            [24] 1649 	mov	b,r4
      00023A 78r00            [12] 1650 	mov	r0,#_list_head
      00023C 79s00            [12] 1651 	mov	r1,#(_list_head >> 8)
      00023E 7As00            [12] 1652 	mov	r2,#(_list_head >> 16)
      000240 12r00r00         [24] 1653 	lcall	__sdcc_banked_call
      000243 AA 82            [24] 1654 	mov	r2,dpl
      000245 AB 83            [24] 1655 	mov	r3,dph
      000247 AC F0            [24] 1656 	mov	r4,b
      000249                       1657 00109$:
      000249 EA               [12] 1658 	mov	a,r2
      00024A 4B               [12] 1659 	orl	a,r3
      00024B 70 03            [24] 1660 	jnz	00138$
      00024D 02r02rD3         [24] 1661 	ljmp	00103$
      000250                       1662 00138$:
                                   1663 ;	../../../core/net/mac/cxmac.c:392: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      000250 74 03            [12] 1664 	mov	a,#0x03
      000252 2A               [12] 1665 	add	a,r2
      000253 FD               [12] 1666 	mov	r5,a
      000254 E4               [12] 1667 	clr	a
      000255 3B               [12] 1668 	addc	a,r3
      000256 FE               [12] 1669 	mov	r6,a
      000257 8C 07            [24] 1670 	mov	ar7,r4
      000259 C0 04            [24] 1671 	push	ar4
      00025B C0 03            [24] 1672 	push	ar3
      00025D C0 02            [24] 1673 	push	ar2
      00025F C0 05            [24] 1674 	push	ar5
      000261 C0 06            [24] 1675 	push	ar6
      000263 C0 07            [24] 1676 	push	ar7
      000265 E5 81            [12] 1677 	mov	a,sp
      000267 24 F8            [12] 1678 	add	a,#0xf8
      000269 F8               [12] 1679 	mov	r0,a
      00026A 86 82            [24] 1680 	mov	dpl,@r0
      00026C 08               [12] 1681 	inc	r0
      00026D 86 83            [24] 1682 	mov	dph,@r0
      00026F 08               [12] 1683 	inc	r0
      000270 86 F0            [24] 1684 	mov	b,@r0
      000272 78r00            [12] 1685 	mov	r0,#_rimeaddr_cmp
      000274 79s00            [12] 1686 	mov	r1,#(_rimeaddr_cmp >> 8)
      000276 7As00            [12] 1687 	mov	r2,#(_rimeaddr_cmp >> 16)
      000278 12r00r00         [24] 1688 	lcall	__sdcc_banked_call
      00027B AE 82            [24] 1689 	mov	r6,dpl
      00027D AF 83            [24] 1690 	mov	r7,dph
      00027F 15 81            [12] 1691 	dec	sp
      000281 15 81            [12] 1692 	dec	sp
      000283 15 81            [12] 1693 	dec	sp
      000285 D0 02            [24] 1694 	pop	ar2
      000287 D0 03            [24] 1695 	pop	ar3
      000289 D0 04            [24] 1696 	pop	ar4
      00028B EE               [12] 1697 	mov	a,r6
      00028C 4F               [12] 1698 	orl	a,r7
      00028D 60 20            [24] 1699 	jz	00110$
                                   1700 ;	../../../core/net/mac/cxmac.c:393: e->time = time;
      00028F 74 0B            [12] 1701 	mov	a,#0x0b
      000291 2A               [12] 1702 	add	a,r2
      000292 FD               [12] 1703 	mov	r5,a
      000293 E4               [12] 1704 	clr	a
      000294 3B               [12] 1705 	addc	a,r3
      000295 FE               [12] 1706 	mov	r6,a
      000296 8C 07            [24] 1707 	mov	ar7,r4
      000298 8D 82            [24] 1708 	mov	dpl,r5
      00029A 8E 83            [24] 1709 	mov	dph,r6
      00029C 8F F0            [24] 1710 	mov	b,r7
      00029E E5 81            [12] 1711 	mov	a,sp
      0002A0 24 F9            [12] 1712 	add	a,#0xf9
      0002A2 F8               [12] 1713 	mov	r0,a
      0002A3 E6               [12] 1714 	mov	a,@r0
      0002A4 12r00r00         [24] 1715 	lcall	__gptrput
      0002A7 A3               [24] 1716 	inc	dptr
      0002A8 08               [12] 1717 	inc	r0
      0002A9 E6               [12] 1718 	mov	a,@r0
      0002AA 12r00r00         [24] 1719 	lcall	__gptrput
                                   1720 ;	../../../core/net/mac/cxmac.c:394: break;
      0002AD 80 24            [24] 1721 	sjmp	00103$
      0002AF                       1722 00110$:
                                   1723 ;	../../../core/net/mac/cxmac.c:391: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      0002AF 8A 05            [24] 1724 	mov	ar5,r2
      0002B1 8B 06            [24] 1725 	mov	ar6,r3
      0002B3 8C 07            [24] 1726 	mov	ar7,r4
      0002B5 8D 82            [24] 1727 	mov	dpl,r5
      0002B7 8E 83            [24] 1728 	mov	dph,r6
      0002B9 8F F0            [24] 1729 	mov	b,r7
      0002BB 78r00            [12] 1730 	mov	r0,#_list_item_next
      0002BD 79s00            [12] 1731 	mov	r1,#(_list_item_next >> 8)
      0002BF 7As00            [12] 1732 	mov	r2,#(_list_item_next >> 16)
      0002C1 12r00r00         [24] 1733 	lcall	__sdcc_banked_call
      0002C4 AD 82            [24] 1734 	mov	r5,dpl
      0002C6 AE 83            [24] 1735 	mov	r6,dph
      0002C8 AF F0            [24] 1736 	mov	r7,b
      0002CA 8D 02            [24] 1737 	mov	ar2,r5
      0002CC 8E 03            [24] 1738 	mov	ar3,r6
      0002CE 8F 04            [24] 1739 	mov	ar4,r7
      0002D0 02r02r49         [24] 1740 	ljmp	00109$
      0002D3                       1741 00103$:
                                   1742 ;	../../../core/net/mac/cxmac.c:398: if(e == NULL) {
      0002D3 EA               [12] 1743 	mov	a,r2
      0002D4 4B               [12] 1744 	orl	a,r3
      0002D5 60 03            [24] 1745 	jz	00140$
      0002D7 02r03r74         [24] 1746 	ljmp	00111$
      0002DA                       1747 00140$:
                                   1748 ;	../../../core/net/mac/cxmac.c:399: e = memb_alloc(&encounter_memb);
      0002DA 90r00r13         [24] 1749 	mov	dptr,#_encounter_memb
      0002DD 75 F0 00         [24] 1750 	mov	b,#0x00
      0002E0 78r00            [12] 1751 	mov	r0,#_memb_alloc
      0002E2 79s00            [12] 1752 	mov	r1,#(_memb_alloc >> 8)
      0002E4 7As00            [12] 1753 	mov	r2,#(_memb_alloc >> 16)
      0002E6 12r00r00         [24] 1754 	lcall	__sdcc_banked_call
      0002E9 AD 82            [24] 1755 	mov	r5,dpl
      0002EB AE 83            [24] 1756 	mov	r6,dph
      0002ED AF F0            [24] 1757 	mov	r7,b
                                   1758 ;	../../../core/net/mac/cxmac.c:400: if(e == NULL) {
      0002EF ED               [12] 1759 	mov	a,r5
      0002F0 4E               [12] 1760 	orl	a,r6
      0002F1 70 03            [24] 1761 	jnz	00105$
                                   1762 ;	../../../core/net/mac/cxmac.c:402: return;
      0002F3 02r03r74         [24] 1763 	ljmp	00111$
      0002F6                       1764 00105$:
                                   1765 ;	../../../core/net/mac/cxmac.c:404: rimeaddr_copy(&e->neighbor, neighbor);
      0002F6 74 03            [12] 1766 	mov	a,#0x03
      0002F8 2D               [12] 1767 	add	a,r5
      0002F9 FA               [12] 1768 	mov	r2,a
      0002FA E4               [12] 1769 	clr	a
      0002FB 3E               [12] 1770 	addc	a,r6
      0002FC FB               [12] 1771 	mov	r3,a
      0002FD 8F 04            [24] 1772 	mov	ar4,r7
      0002FF C0 07            [24] 1773 	push	ar7
      000301 C0 06            [24] 1774 	push	ar6
      000303 C0 05            [24] 1775 	push	ar5
      000305 E5 81            [12] 1776 	mov	a,sp
      000307 24 FB            [12] 1777 	add	a,#0xfb
      000309 F8               [12] 1778 	mov	r0,a
      00030A E6               [12] 1779 	mov	a,@r0
      00030B C0 E0            [24] 1780 	push	acc
      00030D 08               [12] 1781 	inc	r0
      00030E E6               [12] 1782 	mov	a,@r0
      00030F C0 E0            [24] 1783 	push	acc
      000311 08               [12] 1784 	inc	r0
      000312 E6               [12] 1785 	mov	a,@r0
      000313 C0 E0            [24] 1786 	push	acc
      000315 8A 82            [24] 1787 	mov	dpl,r2
      000317 8B 83            [24] 1788 	mov	dph,r3
      000319 8C F0            [24] 1789 	mov	b,r4
      00031B 78r00            [12] 1790 	mov	r0,#_rimeaddr_copy
      00031D 79s00            [12] 1791 	mov	r1,#(_rimeaddr_copy >> 8)
      00031F 7As00            [12] 1792 	mov	r2,#(_rimeaddr_copy >> 16)
      000321 12r00r00         [24] 1793 	lcall	__sdcc_banked_call
      000324 15 81            [12] 1794 	dec	sp
      000326 15 81            [12] 1795 	dec	sp
      000328 15 81            [12] 1796 	dec	sp
      00032A D0 05            [24] 1797 	pop	ar5
      00032C D0 06            [24] 1798 	pop	ar6
      00032E D0 07            [24] 1799 	pop	ar7
                                   1800 ;	../../../core/net/mac/cxmac.c:405: e->time = time;
      000330 74 0B            [12] 1801 	mov	a,#0x0b
      000332 2D               [12] 1802 	add	a,r5
      000333 FA               [12] 1803 	mov	r2,a
      000334 E4               [12] 1804 	clr	a
      000335 3E               [12] 1805 	addc	a,r6
      000336 FB               [12] 1806 	mov	r3,a
      000337 8F 04            [24] 1807 	mov	ar4,r7
      000339 8A 82            [24] 1808 	mov	dpl,r2
      00033B 8B 83            [24] 1809 	mov	dph,r3
      00033D 8C F0            [24] 1810 	mov	b,r4
      00033F E5 81            [12] 1811 	mov	a,sp
      000341 24 F9            [12] 1812 	add	a,#0xf9
      000343 F8               [12] 1813 	mov	r0,a
      000344 E6               [12] 1814 	mov	a,@r0
      000345 12r00r00         [24] 1815 	lcall	__gptrput
      000348 A3               [24] 1816 	inc	dptr
      000349 08               [12] 1817 	inc	r0
      00034A E6               [12] 1818 	mov	a,@r0
      00034B 12r00r00         [24] 1819 	lcall	__gptrput
                                   1820 ;	../../../core/net/mac/cxmac.c:406: list_add(encounter_list, e);
      00034E 90r00r10         [24] 1821 	mov	dptr,#_encounter_list
      000351 E0               [24] 1822 	movx	a,@dptr
      000352 FA               [12] 1823 	mov	r2,a
      000353 A3               [24] 1824 	inc	dptr
      000354 E0               [24] 1825 	movx	a,@dptr
      000355 FB               [12] 1826 	mov	r3,a
      000356 A3               [24] 1827 	inc	dptr
      000357 E0               [24] 1828 	movx	a,@dptr
      000358 FC               [12] 1829 	mov	r4,a
      000359 C0 05            [24] 1830 	push	ar5
      00035B C0 06            [24] 1831 	push	ar6
      00035D C0 07            [24] 1832 	push	ar7
      00035F 8A 82            [24] 1833 	mov	dpl,r2
      000361 8B 83            [24] 1834 	mov	dph,r3
      000363 8C F0            [24] 1835 	mov	b,r4
      000365 78r00            [12] 1836 	mov	r0,#_list_add
      000367 79s00            [12] 1837 	mov	r1,#(_list_add >> 8)
      000369 7As00            [12] 1838 	mov	r2,#(_list_add >> 16)
      00036B 12r00r00         [24] 1839 	lcall	__sdcc_banked_call
      00036E 15 81            [12] 1840 	dec	sp
      000370 15 81            [12] 1841 	dec	sp
      000372 15 81            [12] 1842 	dec	sp
      000374                       1843 00111$:
                                   1844 ;	../../../core/net/mac/cxmac.c:408: }
      000374 15 81            [12] 1845 	dec	sp
      000376 15 81            [12] 1846 	dec	sp
      000378 15 81            [12] 1847 	dec	sp
      00037A 02r00r00         [24] 1848 	ljmp	__sdcc_banked_ret
                                   1849 ;------------------------------------------------------------
                                   1850 ;Allocation info for local variables in function 'send_packet'
                                   1851 ;------------------------------------------------------------
                                   1852 ;t0                        Allocated to registers r6 r7 
                                   1853 ;t                         Allocated to stack - sp -72
                                   1854 ;encounter_time            Allocated to stack - sp -70
                                   1855 ;strobes                   Allocated to registers 
                                   1856 ;hdr                       Allocated to registers r2 r3 r7 
                                   1857 ;got_strobe_ack            Allocated to stack - sp -68
                                   1858 ;strobe                    Allocated to stack - sp -66
                                   1859 ;strobe_len                Allocated to stack - sp -16
                                   1860 ;len                       Allocated to registers r5 r3 
                                   1861 ;is_broadcast              Allocated to stack - sp -14
                                   1862 ;is_dispatch               Allocated to stack - sp -12
                                   1863 ;is_strobe_ack             Allocated to registers r2 r5 
                                   1864 ;e                         Allocated to stack - sp -10
                                   1865 ;packet                    Allocated to stack - sp -7
                                   1866 ;is_already_streaming      Allocated to stack - sp -4
                                   1867 ;collisions                Allocated to stack - sp -2
                                   1868 ;neighbor                  Allocated to registers r7 r6 r5 
                                   1869 ;wait                      Allocated to registers 
                                   1870 ;now                       Allocated to registers r3 r4 
                                   1871 ;expected                  Allocated to registers r3 r2 
                                   1872 ;now                       Allocated to stack - sp -1
                                   1873 ;sloc0                     Allocated to stack - sp -78
                                   1874 ;sloc1                     Allocated to stack - sp -75
                                   1875 ;------------------------------------------------------------
                                   1876 ;	../../../core/net/mac/cxmac.c:412: send_packet(void)
                                   1877 ;	-----------------------------------------
                                   1878 ;	 function send_packet
                                   1879 ;	-----------------------------------------
      00037D                       1880 _send_packet:
      00037D E5 81            [12] 1881 	mov	a,sp
      00037F 24 4F            [12] 1882 	add	a,#0x4f
                                   1883 ;	../../../core/net/mac/cxmac.c:416: rtimer_clock_t encounter_time = 0;
      000381 F5 81            [12] 1884 	mov	sp,a
      000383 24 BA            [12] 1885 	add	a,#0xba
      000385 F8               [12] 1886 	mov	r0,a
      000386 E4               [12] 1887 	clr	a
      000387 F6               [12] 1888 	mov	@r0,a
      000388 08               [12] 1889 	inc	r0
      000389 F6               [12] 1890 	mov	@r0,a
                                   1891 ;	../../../core/net/mac/cxmac.c:419: int got_strobe_ack = 0;
      00038A E5 81            [12] 1892 	mov	a,sp
      00038C 24 BC            [12] 1893 	add	a,#0xbc
      00038E F8               [12] 1894 	mov	r0,a
      00038F E4               [12] 1895 	clr	a
      000390 F6               [12] 1896 	mov	@r0,a
      000391 08               [12] 1897 	inc	r0
      000392 F6               [12] 1898 	mov	@r0,a
                                   1899 ;	../../../core/net/mac/cxmac.c:422: int is_broadcast = 0;
      000393 E5 81            [12] 1900 	mov	a,sp
      000395 24 F2            [12] 1901 	add	a,#0xf2
      000397 F8               [12] 1902 	mov	r0,a
      000398 E4               [12] 1903 	clr	a
      000399 F6               [12] 1904 	mov	@r0,a
      00039A 08               [12] 1905 	inc	r0
      00039B F6               [12] 1906 	mov	@r0,a
                                   1907 ;	../../../core/net/mac/cxmac.c:427: int is_already_streaming = 0;
      00039C E5 81            [12] 1908 	mov	a,sp
      00039E 24 FC            [12] 1909 	add	a,#0xfc
      0003A0 F8               [12] 1910 	mov	r0,a
      0003A1 E4               [12] 1911 	clr	a
      0003A2 F6               [12] 1912 	mov	@r0,a
      0003A3 08               [12] 1913 	inc	r0
      0003A4 F6               [12] 1914 	mov	@r0,a
                                   1915 ;	../../../core/net/mac/cxmac.c:432: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &rimeaddr_node_addr);
      0003A5 74r00            [12] 1916 	mov	a,#_rimeaddr_node_addr
      0003A7 C0 E0            [24] 1917 	push	acc
      0003A9 74s00            [12] 1918 	mov	a,#(_rimeaddr_node_addr >> 8)
      0003AB C0 E0            [24] 1919 	push	acc
      0003AD E4               [12] 1920 	clr	a
      0003AE C0 E0            [24] 1921 	push	acc
      0003B0 75 82 18         [24] 1922 	mov	dpl,#0x18
      0003B3 78r00            [12] 1923 	mov	r0,#_packetbuf_set_addr
      0003B5 79s00            [12] 1924 	mov	r1,#(_packetbuf_set_addr >> 8)
      0003B7 7As00            [12] 1925 	mov	r2,#(_packetbuf_set_addr >> 16)
      0003B9 12r00r00         [24] 1926 	lcall	__sdcc_banked_call
      0003BC 15 81            [12] 1927 	dec	sp
      0003BE 15 81            [12] 1928 	dec	sp
      0003C0 15 81            [12] 1929 	dec	sp
                                   1930 ;	../../../core/net/mac/cxmac.c:433: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER), &rimeaddr_null)) {
      0003C2 75 82 19         [24] 1931 	mov	dpl,#0x19
      0003C5 78r00            [12] 1932 	mov	r0,#_packetbuf_addr
      0003C7 79s00            [12] 1933 	mov	r1,#(_packetbuf_addr >> 8)
      0003C9 7As00            [12] 1934 	mov	r2,#(_packetbuf_addr >> 16)
      0003CB 12r00r00         [24] 1935 	lcall	__sdcc_banked_call
      0003CE AB 82            [24] 1936 	mov	r3,dpl
      0003D0 AE 83            [24] 1937 	mov	r6,dph
      0003D2 AF F0            [24] 1938 	mov	r7,b
      0003D4 74r00            [12] 1939 	mov	a,#_rimeaddr_null
      0003D6 C0 E0            [24] 1940 	push	acc
      0003D8 74s00            [12] 1941 	mov	a,#(_rimeaddr_null >> 8)
      0003DA C0 E0            [24] 1942 	push	acc
      0003DC 74 80            [12] 1943 	mov	a,#0x80
      0003DE C0 E0            [24] 1944 	push	acc
      0003E0 8B 82            [24] 1945 	mov	dpl,r3
      0003E2 8E 83            [24] 1946 	mov	dph,r6
      0003E4 8F F0            [24] 1947 	mov	b,r7
      0003E6 78r00            [12] 1948 	mov	r0,#_rimeaddr_cmp
      0003E8 79s00            [12] 1949 	mov	r1,#(_rimeaddr_cmp >> 8)
      0003EA 7As00            [12] 1950 	mov	r2,#(_rimeaddr_cmp >> 16)
      0003EC 12r00r00         [24] 1951 	lcall	__sdcc_banked_call
      0003EF AE 82            [24] 1952 	mov	r6,dpl
      0003F1 AF 83            [24] 1953 	mov	r7,dph
      0003F3 15 81            [12] 1954 	dec	sp
      0003F5 15 81            [12] 1955 	dec	sp
      0003F7 15 81            [12] 1956 	dec	sp
      0003F9 EE               [12] 1957 	mov	a,r6
      0003FA 4F               [12] 1958 	orl	a,r7
      0003FB 60 0A            [24] 1959 	jz	00102$
                                   1960 ;	../../../core/net/mac/cxmac.c:434: is_broadcast = 1;
      0003FD E5 81            [12] 1961 	mov	a,sp
      0003FF 24 F2            [12] 1962 	add	a,#0xf2
      000401 F8               [12] 1963 	mov	r0,a
      000402 76 01            [12] 1964 	mov	@r0,#0x01
      000404 08               [12] 1965 	inc	r0
      000405 76 00            [12] 1966 	mov	@r0,#0x00
      000407                       1967 00102$:
                                   1968 ;	../../../core/net/mac/cxmac.c:455: len = NETSTACK_FRAMER.create();
      000407 90r00r00         [24] 1969 	mov	dptr,#_framer_802154
      00040A E4               [12] 1970 	clr	a
      00040B 93               [24] 1971 	movc	a,@a+dptr
      00040C FB               [12] 1972 	mov	r3,a
      00040D A3               [24] 1973 	inc	dptr
      00040E E4               [12] 1974 	clr	a
      00040F 93               [24] 1975 	movc	a,@a+dptr
      000410 FE               [12] 1976 	mov	r6,a
      000411 A3               [24] 1977 	inc	dptr
      000412 E4               [12] 1978 	clr	a
      000413 93               [24] 1979 	movc	a,@a+dptr
      000414 FF               [12] 1980 	mov	r7,a
      000415 C0 03            [24] 1981 	push	ar3
      000417 C0 03            [24] 1982 	push	ar3
      000419 C0 06            [24] 1983 	push	ar6
      00041B C0 07            [24] 1984 	push	ar7
      00041D D0 02            [24] 1985 	pop	ar2
      00041F D0 01            [24] 1986 	pop	ar1
      000421 D0 00            [24] 1987 	pop	ar0
      000423 12r00r00         [24] 1988 	lcall	__sdcc_banked_call
      000426 AF 82            [24] 1989 	mov	r7,dpl
      000428 AE 83            [24] 1990 	mov	r6,dph
      00042A D0 03            [24] 1991 	pop	ar3
                                   1992 ;	../../../core/net/mac/cxmac.c:456: strobe_len = len + sizeof(struct cxmac_hdr);
      00042C E5 81            [12] 1993 	mov	a,sp
      00042E 24 F0            [12] 1994 	add	a,#0xf0
      000430 F8               [12] 1995 	mov	r0,a
      000431 74 02            [12] 1996 	mov	a,#0x02
      000433 2F               [12] 1997 	add	a,r7
      000434 F6               [12] 1998 	mov	@r0,a
      000435 E4               [12] 1999 	clr	a
      000436 3E               [12] 2000 	addc	a,r6
      000437 08               [12] 2001 	inc	r0
      000438 F6               [12] 2002 	mov	@r0,a
                                   2003 ;	../../../core/net/mac/cxmac.c:457: if(len < 0 || strobe_len > (int)sizeof(strobe)) {
      000439 EE               [12] 2004 	mov	a,r6
      00043A 20 E7 15         [24] 2005 	jb	acc.7,00103$
      00043D E5 81            [12] 2006 	mov	a,sp
      00043F 24 F0            [12] 2007 	add	a,#0xf0
      000441 F8               [12] 2008 	mov	r0,a
      000442 C3               [12] 2009 	clr	c
      000443 74 32            [12] 2010 	mov	a,#0x32
      000445 96               [12] 2011 	subb	a,@r0
      000446 74 80            [12] 2012 	mov	a,#(0x00 ^ 0x80)
      000448 08               [12] 2013 	inc	r0
      000449 86 F0            [24] 2014 	mov	b,@r0
      00044B 63 F0 80         [24] 2015 	xrl	b,#0x80
      00044E 95 F0            [12] 2016 	subb	a,b
      000450 50 06            [24] 2017 	jnc	00104$
      000452                       2018 00103$:
                                   2019 ;	../../../core/net/mac/cxmac.c:460: return MAC_TX_ERR_FATAL;
      000452 90 00 05         [24] 2020 	mov	dptr,#0x0005
      000455 02r0DrA7         [24] 2021 	ljmp	00180$
      000458                       2022 00104$:
                                   2023 ;	../../../core/net/mac/cxmac.c:462: memcpy(strobe, packetbuf_hdrptr(), len);
      000458 C0 07            [24] 2024 	push	ar7
      00045A C0 06            [24] 2025 	push	ar6
      00045C 78r00            [12] 2026 	mov	r0,#_packetbuf_hdrptr
      00045E 79s00            [12] 2027 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000460 7As00            [12] 2028 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000462 12r00r00         [24] 2029 	lcall	__sdcc_banked_call
      000465 C8               [12] 2030 	xch	a,r0
      000466 E5 81            [12] 2031 	mov	a,sp
      000468 24 B0            [12] 2032 	add	a,#0xb0
      00046A C8               [12] 2033 	xch	a,r0
      00046B A6 82            [24] 2034 	mov	@r0,dpl
      00046D 08               [12] 2035 	inc	r0
      00046E A6 83            [24] 2036 	mov	@r0,dph
      000470 08               [12] 2037 	inc	r0
      000471 A6 F0            [24] 2038 	mov	@r0,b
      000473 D0 06            [24] 2039 	pop	ar6
      000475 D0 07            [24] 2040 	pop	ar7
      000477 E5 81            [12] 2041 	mov	a,sp
      000479 24 BE            [12] 2042 	add	a,#0xbe
      00047B FC               [12] 2043 	mov	r4,a
      00047C FA               [12] 2044 	mov	r2,a
      00047D 7B 00            [12] 2045 	mov	r3,#0x00
      00047F 7D 40            [12] 2046 	mov	r5,#0x40
      000481 C0 07            [24] 2047 	push	ar7
      000483 C0 06            [24] 2048 	push	ar6
      000485 C0 04            [24] 2049 	push	ar4
      000487 C0 07            [24] 2050 	push	ar7
      000489 C0 06            [24] 2051 	push	ar6
      00048B E5 81            [12] 2052 	mov	a,sp
      00048D 24 AD            [12] 2053 	add	a,#0xad
      00048F F8               [12] 2054 	mov	r0,a
      000490 E6               [12] 2055 	mov	a,@r0
      000491 C0 E0            [24] 2056 	push	acc
      000493 08               [12] 2057 	inc	r0
      000494 E6               [12] 2058 	mov	a,@r0
      000495 C0 E0            [24] 2059 	push	acc
      000497 08               [12] 2060 	inc	r0
      000498 E6               [12] 2061 	mov	a,@r0
      000499 C0 E0            [24] 2062 	push	acc
      00049B 8A 82            [24] 2063 	mov	dpl,r2
      00049D 8B 83            [24] 2064 	mov	dph,r3
      00049F 8D F0            [24] 2065 	mov	b,r5
      0004A1 78r00            [12] 2066 	mov	r0,#___memcpy
      0004A3 79s00            [12] 2067 	mov	r1,#(___memcpy >> 8)
      0004A5 7As00            [12] 2068 	mov	r2,#(___memcpy >> 16)
      0004A7 12r00r00         [24] 2069 	lcall	__sdcc_banked_call
      0004AA E5 81            [12] 2070 	mov	a,sp
      0004AC 24 FB            [12] 2071 	add	a,#0xfb
      0004AE F5 81            [12] 2072 	mov	sp,a
      0004B0 D0 04            [24] 2073 	pop	ar4
      0004B2 D0 06            [24] 2074 	pop	ar6
      0004B4 D0 07            [24] 2075 	pop	ar7
                                   2076 ;	../../../core/net/mac/cxmac.c:463: strobe[len] = DISPATCH; /* dispatch */
      0004B6 EF               [12] 2077 	mov	a,r7
      0004B7 2C               [12] 2078 	add	a,r4
      0004B8 F8               [12] 2079 	mov	r0,a
      0004B9 76 00            [12] 2080 	mov	@r0,#0x00
                                   2081 ;	../../../core/net/mac/cxmac.c:464: strobe[len + 1] = TYPE_STROBE; /* type */
      0004BB EF               [12] 2082 	mov	a,r7
      0004BC 04               [12] 2083 	inc	a
      0004BD 2C               [12] 2084 	add	a,r4
      0004BE F8               [12] 2085 	mov	r0,a
      0004BF 76 10            [12] 2086 	mov	@r0,#0x10
                                   2087 ;	../../../core/net/mac/cxmac.c:466: packetbuf_compact();
      0004C1 78r00            [12] 2088 	mov	r0,#_packetbuf_compact
      0004C3 79s00            [12] 2089 	mov	r1,#(_packetbuf_compact >> 8)
      0004C5 7As00            [12] 2090 	mov	r2,#(_packetbuf_compact >> 16)
      0004C7 12r00r00         [24] 2091 	lcall	__sdcc_banked_call
                                   2092 ;	../../../core/net/mac/cxmac.c:467: packet = queuebuf_new_from_packetbuf();
      0004CA 78r00            [12] 2093 	mov	r0,#_queuebuf_new_from_packetbuf
      0004CC 79s00            [12] 2094 	mov	r1,#(_queuebuf_new_from_packetbuf >> 8)
      0004CE 7As00            [12] 2095 	mov	r2,#(_queuebuf_new_from_packetbuf >> 16)
      0004D0 12r00r00         [24] 2096 	lcall	__sdcc_banked_call
      0004D3 AD 82            [24] 2097 	mov	r5,dpl
      0004D5 AE 83            [24] 2098 	mov	r6,dph
      0004D7 AF F0            [24] 2099 	mov	r7,b
      0004D9 E5 81            [12] 2100 	mov	a,sp
      0004DB 24 F9            [12] 2101 	add	a,#0xf9
      0004DD F8               [12] 2102 	mov	r0,a
      0004DE A6 05            [24] 2103 	mov	@r0,ar5
      0004E0 08               [12] 2104 	inc	r0
      0004E1 A6 06            [24] 2105 	mov	@r0,ar6
      0004E3 08               [12] 2106 	inc	r0
      0004E4 A6 07            [24] 2107 	mov	@r0,ar7
                                   2108 ;	../../../core/net/mac/cxmac.c:468: if(packet == NULL) {
      0004E6 E5 81            [12] 2109 	mov	a,sp
      0004E8 24 F9            [12] 2110 	add	a,#0xf9
      0004EA F8               [12] 2111 	mov	r0,a
      0004EB E6               [12] 2112 	mov	a,@r0
      0004EC 08               [12] 2113 	inc	r0
      0004ED 46               [12] 2114 	orl	a,@r0
      0004EE 70 06            [24] 2115 	jnz	00107$
                                   2116 ;	../../../core/net/mac/cxmac.c:472: return MAC_TX_ERR;
      0004F0 90 00 04         [24] 2117 	mov	dptr,#0x0004
      0004F3 02r0DrA7         [24] 2118 	ljmp	00180$
      0004F6                       2119 00107$:
                                   2120 ;	../../../core/net/mac/cxmac.c:476: if(is_streaming == 1 &&
      0004F6 90r00r3B         [24] 2121 	mov	dptr,#_is_streaming
      0004F9 E0               [24] 2122 	movx	a,@dptr
      0004FA FF               [12] 2123 	mov	r7,a
      0004FB BF 01 02         [24] 2124 	cjne	r7,#0x01,00387$
      0004FE 80 03            [24] 2125 	sjmp	00388$
      000500                       2126 00387$:
      000500 02r05r81         [24] 2127 	ljmp	00109$
      000503                       2128 00388$:
                                   2129 ;	../../../core/net/mac/cxmac.c:478: &is_streaming_to) ||
                                   2130 ;	../../../core/net/mac/cxmac.c:477: (rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000503 75 82 19         [24] 2131 	mov	dpl,#0x19
      000506 78r00            [12] 2132 	mov	r0,#_packetbuf_addr
      000508 79s00            [12] 2133 	mov	r1,#(_packetbuf_addr >> 8)
      00050A 7As00            [12] 2134 	mov	r2,#(_packetbuf_addr >> 16)
      00050C 12r00r00         [24] 2135 	lcall	__sdcc_banked_call
      00050F AD 82            [24] 2136 	mov	r5,dpl
      000511 AE 83            [24] 2137 	mov	r6,dph
      000513 AF F0            [24] 2138 	mov	r7,b
      000515 74r3C            [12] 2139 	mov	a,#_is_streaming_to
      000517 C0 E0            [24] 2140 	push	acc
      000519 74s00            [12] 2141 	mov	a,#(_is_streaming_to >> 8)
      00051B C0 E0            [24] 2142 	push	acc
      00051D E4               [12] 2143 	clr	a
      00051E C0 E0            [24] 2144 	push	acc
      000520 8D 82            [24] 2145 	mov	dpl,r5
      000522 8E 83            [24] 2146 	mov	dph,r6
      000524 8F F0            [24] 2147 	mov	b,r7
      000526 78r00            [12] 2148 	mov	r0,#_rimeaddr_cmp
      000528 79s00            [12] 2149 	mov	r1,#(_rimeaddr_cmp >> 8)
      00052A 7As00            [12] 2150 	mov	r2,#(_rimeaddr_cmp >> 16)
      00052C 12r00r00         [24] 2151 	lcall	__sdcc_banked_call
      00052F AE 82            [24] 2152 	mov	r6,dpl
      000531 AF 83            [24] 2153 	mov	r7,dph
      000533 15 81            [12] 2154 	dec	sp
      000535 15 81            [12] 2155 	dec	sp
      000537 15 81            [12] 2156 	dec	sp
      000539 EE               [12] 2157 	mov	a,r6
      00053A 4F               [12] 2158 	orl	a,r7
      00053B 70 3A            [24] 2159 	jnz	00108$
                                   2160 ;	../../../core/net/mac/cxmac.c:480: &is_streaming_to_too))) {
                                   2161 ;	../../../core/net/mac/cxmac.c:479: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      00053D 75 82 19         [24] 2162 	mov	dpl,#0x19
      000540 78r00            [12] 2163 	mov	r0,#_packetbuf_addr
      000542 79s00            [12] 2164 	mov	r1,#(_packetbuf_addr >> 8)
      000544 7As00            [12] 2165 	mov	r2,#(_packetbuf_addr >> 16)
      000546 12r00r00         [24] 2166 	lcall	__sdcc_banked_call
      000549 AD 82            [24] 2167 	mov	r5,dpl
      00054B AE 83            [24] 2168 	mov	r6,dph
      00054D AF F0            [24] 2169 	mov	r7,b
      00054F 74r44            [12] 2170 	mov	a,#_is_streaming_to_too
      000551 C0 E0            [24] 2171 	push	acc
      000553 74s00            [12] 2172 	mov	a,#(_is_streaming_to_too >> 8)
      000555 C0 E0            [24] 2173 	push	acc
      000557 E4               [12] 2174 	clr	a
      000558 C0 E0            [24] 2175 	push	acc
      00055A 8D 82            [24] 2176 	mov	dpl,r5
      00055C 8E 83            [24] 2177 	mov	dph,r6
      00055E 8F F0            [24] 2178 	mov	b,r7
      000560 78r00            [12] 2179 	mov	r0,#_rimeaddr_cmp
      000562 79s00            [12] 2180 	mov	r1,#(_rimeaddr_cmp >> 8)
      000564 7As00            [12] 2181 	mov	r2,#(_rimeaddr_cmp >> 16)
      000566 12r00r00         [24] 2182 	lcall	__sdcc_banked_call
      000569 AE 82            [24] 2183 	mov	r6,dpl
      00056B AF 83            [24] 2184 	mov	r7,dph
      00056D 15 81            [12] 2185 	dec	sp
      00056F 15 81            [12] 2186 	dec	sp
      000571 15 81            [12] 2187 	dec	sp
      000573 EE               [12] 2188 	mov	a,r6
      000574 4F               [12] 2189 	orl	a,r7
      000575 60 0A            [24] 2190 	jz	00109$
      000577                       2191 00108$:
                                   2192 ;	../../../core/net/mac/cxmac.c:481: is_already_streaming = 1;
      000577 E5 81            [12] 2193 	mov	a,sp
      000579 24 FC            [12] 2194 	add	a,#0xfc
      00057B F8               [12] 2195 	mov	r0,a
      00057C 76 01            [12] 2196 	mov	@r0,#0x01
      00057E 08               [12] 2197 	inc	r0
      00057F 76 00            [12] 2198 	mov	@r0,#0x00
      000581                       2199 00109$:
                                   2200 ;	../../../core/net/mac/cxmac.c:483: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
      000581 75 82 0E         [24] 2201 	mov	dpl,#0x0e
      000584 78r00            [12] 2202 	mov	r0,#_packetbuf_attr
      000586 79s00            [12] 2203 	mov	r1,#(_packetbuf_attr >> 8)
      000588 7As00            [12] 2204 	mov	r2,#(_packetbuf_attr >> 16)
      00058A 12r00r00         [24] 2205 	lcall	__sdcc_banked_call
      00058D AE 82            [24] 2206 	mov	r6,dpl
      00058F AF 83            [24] 2207 	mov	r7,dph
      000591 BE 02 05         [24] 2208 	cjne	r6,#0x02,00391$
      000594 BF 00 02         [24] 2209 	cjne	r7,#0x00,00391$
      000597 80 03            [24] 2210 	sjmp	00392$
      000599                       2211 00391$:
      000599 02r06r77         [24] 2212 	ljmp	00118$
      00059C                       2213 00392$:
                                   2214 ;	../../../core/net/mac/cxmac.c:485: is_streaming = 1;
      00059C 90r00r3B         [24] 2215 	mov	dptr,#_is_streaming
      00059F 74 01            [12] 2216 	mov	a,#0x01
      0005A1 F0               [24] 2217 	movx	@dptr,a
                                   2218 ;	../../../core/net/mac/cxmac.c:486: if(rimeaddr_cmp(&is_streaming_to, &rimeaddr_null)) {
      0005A2 74r00            [12] 2219 	mov	a,#_rimeaddr_null
      0005A4 C0 E0            [24] 2220 	push	acc
      0005A6 74s00            [12] 2221 	mov	a,#(_rimeaddr_null >> 8)
      0005A8 C0 E0            [24] 2222 	push	acc
      0005AA 74 80            [12] 2223 	mov	a,#0x80
      0005AC C0 E0            [24] 2224 	push	acc
      0005AE 90r00r3C         [24] 2225 	mov	dptr,#_is_streaming_to
      0005B1 75 F0 00         [24] 2226 	mov	b,#0x00
      0005B4 78r00            [12] 2227 	mov	r0,#_rimeaddr_cmp
      0005B6 79s00            [12] 2228 	mov	r1,#(_rimeaddr_cmp >> 8)
      0005B8 7As00            [12] 2229 	mov	r2,#(_rimeaddr_cmp >> 16)
      0005BA 12r00r00         [24] 2230 	lcall	__sdcc_banked_call
      0005BD AE 82            [24] 2231 	mov	r6,dpl
      0005BF AF 83            [24] 2232 	mov	r7,dph
      0005C1 15 81            [12] 2233 	dec	sp
      0005C3 15 81            [12] 2234 	dec	sp
      0005C5 15 81            [12] 2235 	dec	sp
      0005C7 EE               [12] 2236 	mov	a,r6
      0005C8 4F               [12] 2237 	orl	a,r7
      0005C9 60 2F            [24] 2238 	jz	00115$
                                   2239 ;	../../../core/net/mac/cxmac.c:487: rimeaddr_copy(&is_streaming_to, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      0005CB 75 82 19         [24] 2240 	mov	dpl,#0x19
      0005CE 78r00            [12] 2241 	mov	r0,#_packetbuf_addr
      0005D0 79s00            [12] 2242 	mov	r1,#(_packetbuf_addr >> 8)
      0005D2 7As00            [12] 2243 	mov	r2,#(_packetbuf_addr >> 16)
      0005D4 12r00r00         [24] 2244 	lcall	__sdcc_banked_call
      0005D7 AD 82            [24] 2245 	mov	r5,dpl
      0005D9 AE 83            [24] 2246 	mov	r6,dph
      0005DB AF F0            [24] 2247 	mov	r7,b
      0005DD C0 05            [24] 2248 	push	ar5
      0005DF C0 06            [24] 2249 	push	ar6
      0005E1 C0 07            [24] 2250 	push	ar7
      0005E3 90r00r3C         [24] 2251 	mov	dptr,#_is_streaming_to
      0005E6 75 F0 00         [24] 2252 	mov	b,#0x00
      0005E9 78r00            [12] 2253 	mov	r0,#_rimeaddr_copy
      0005EB 79s00            [12] 2254 	mov	r1,#(_rimeaddr_copy >> 8)
      0005ED 7As00            [12] 2255 	mov	r2,#(_rimeaddr_copy >> 16)
      0005EF 12r00r00         [24] 2256 	lcall	__sdcc_banked_call
      0005F2 15 81            [12] 2257 	dec	sp
      0005F4 15 81            [12] 2258 	dec	sp
      0005F6 15 81            [12] 2259 	dec	sp
      0005F8 80 62            [24] 2260 	sjmp	00116$
      0005FA                       2261 00115$:
                                   2262 ;	../../../core/net/mac/cxmac.c:488: } else if(!rimeaddr_cmp(&is_streaming_to, packetbuf_addr(PACKETBUF_ADDR_RECEIVER))) {
      0005FA 75 82 19         [24] 2263 	mov	dpl,#0x19
      0005FD 78r00            [12] 2264 	mov	r0,#_packetbuf_addr
      0005FF 79s00            [12] 2265 	mov	r1,#(_packetbuf_addr >> 8)
      000601 7As00            [12] 2266 	mov	r2,#(_packetbuf_addr >> 16)
      000603 12r00r00         [24] 2267 	lcall	__sdcc_banked_call
      000606 AD 82            [24] 2268 	mov	r5,dpl
      000608 AE 83            [24] 2269 	mov	r6,dph
      00060A AF F0            [24] 2270 	mov	r7,b
      00060C C0 05            [24] 2271 	push	ar5
      00060E C0 06            [24] 2272 	push	ar6
      000610 C0 07            [24] 2273 	push	ar7
      000612 90r00r3C         [24] 2274 	mov	dptr,#_is_streaming_to
      000615 75 F0 00         [24] 2275 	mov	b,#0x00
      000618 78r00            [12] 2276 	mov	r0,#_rimeaddr_cmp
      00061A 79s00            [12] 2277 	mov	r1,#(_rimeaddr_cmp >> 8)
      00061C 7As00            [12] 2278 	mov	r2,#(_rimeaddr_cmp >> 16)
      00061E 12r00r00         [24] 2279 	lcall	__sdcc_banked_call
      000621 AE 82            [24] 2280 	mov	r6,dpl
      000623 AF 83            [24] 2281 	mov	r7,dph
      000625 15 81            [12] 2282 	dec	sp
      000627 15 81            [12] 2283 	dec	sp
      000629 15 81            [12] 2284 	dec	sp
      00062B EE               [12] 2285 	mov	a,r6
      00062C 4F               [12] 2286 	orl	a,r7
      00062D 70 2D            [24] 2287 	jnz	00116$
                                   2288 ;	../../../core/net/mac/cxmac.c:489: rimeaddr_copy(&is_streaming_to_too, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      00062F 75 82 19         [24] 2289 	mov	dpl,#0x19
      000632 78r00            [12] 2290 	mov	r0,#_packetbuf_addr
      000634 79s00            [12] 2291 	mov	r1,#(_packetbuf_addr >> 8)
      000636 7As00            [12] 2292 	mov	r2,#(_packetbuf_addr >> 16)
      000638 12r00r00         [24] 2293 	lcall	__sdcc_banked_call
      00063B AD 82            [24] 2294 	mov	r5,dpl
      00063D AE 83            [24] 2295 	mov	r6,dph
      00063F AF F0            [24] 2296 	mov	r7,b
      000641 C0 05            [24] 2297 	push	ar5
      000643 C0 06            [24] 2298 	push	ar6
      000645 C0 07            [24] 2299 	push	ar7
      000647 90r00r44         [24] 2300 	mov	dptr,#_is_streaming_to_too
      00064A 75 F0 00         [24] 2301 	mov	b,#0x00
      00064D 78r00            [12] 2302 	mov	r0,#_rimeaddr_copy
      00064F 79s00            [12] 2303 	mov	r1,#(_rimeaddr_copy >> 8)
      000651 7As00            [12] 2304 	mov	r2,#(_rimeaddr_copy >> 16)
      000653 12r00r00         [24] 2305 	lcall	__sdcc_banked_call
      000656 15 81            [12] 2306 	dec	sp
      000658 15 81            [12] 2307 	dec	sp
      00065A 15 81            [12] 2308 	dec	sp
      00065C                       2309 00116$:
                                   2310 ;	../../../core/net/mac/cxmac.c:491: stream_until = RTIMER_NOW() + DEFAULT_STREAM_TIME;
      00065C AE E2            [24] 2311 	mov	r6,_T1CNTL
      00065E 7F 00            [12] 2312 	mov	r7,#0x00
      000660 AC E3            [24] 2313 	mov	r4,_T1CNTH
      000662 8C 05            [24] 2314 	mov	ar5,r4
      000664 E4               [12] 2315 	clr	a
      000665 FC               [12] 2316 	mov	r4,a
      000666 2E               [12] 2317 	add	a,r6
      000667 FE               [12] 2318 	mov	r6,a
      000668 ED               [12] 2319 	mov	a,r5
      000669 3F               [12] 2320 	addc	a,r7
      00066A FF               [12] 2321 	mov	r7,a
      00066B 90r00r4C         [24] 2322 	mov	dptr,#_stream_until
      00066E 74 09            [12] 2323 	mov	a,#0x09
      000670 2E               [12] 2324 	add	a,r6
      000671 F0               [24] 2325 	movx	@dptr,a
      000672 74 3D            [12] 2326 	mov	a,#0x3d
      000674 3F               [12] 2327 	addc	a,r7
      000675 A3               [24] 2328 	inc	dptr
      000676 F0               [24] 2329 	movx	@dptr,a
      000677                       2330 00118$:
                                   2331 ;	../../../core/net/mac/cxmac.c:495: off();
      000677 78r3E            [12] 2332 	mov	r0,#_off
      000679 79s00            [12] 2333 	mov	r1,#(_off >> 8)
      00067B 7As00            [12] 2334 	mov	r2,#(_off >> 16)
      00067D 12r00r00         [24] 2335 	lcall	__sdcc_banked_call
                                   2336 ;	../../../core/net/mac/cxmac.c:502: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000680 90r00r10         [24] 2337 	mov	dptr,#_encounter_list
      000683 E0               [24] 2338 	movx	a,@dptr
      000684 FD               [12] 2339 	mov	r5,a
      000685 A3               [24] 2340 	inc	dptr
      000686 E0               [24] 2341 	movx	a,@dptr
      000687 FE               [12] 2342 	mov	r6,a
      000688 A3               [24] 2343 	inc	dptr
      000689 E0               [24] 2344 	movx	a,@dptr
      00068A FF               [12] 2345 	mov	r7,a
      00068B 8D 82            [24] 2346 	mov	dpl,r5
      00068D 8E 83            [24] 2347 	mov	dph,r6
      00068F 8F F0            [24] 2348 	mov	b,r7
      000691 78r00            [12] 2349 	mov	r0,#_list_head
      000693 79s00            [12] 2350 	mov	r1,#(_list_head >> 8)
      000695 7As00            [12] 2351 	mov	r2,#(_list_head >> 16)
      000697 12r00r00         [24] 2352 	lcall	__sdcc_banked_call
      00069A AD 82            [24] 2353 	mov	r5,dpl
      00069C AE 83            [24] 2354 	mov	r6,dph
      00069E AF F0            [24] 2355 	mov	r7,b
      0006A0 E5 81            [12] 2356 	mov	a,sp
      0006A2 24 F6            [12] 2357 	add	a,#0xf6
      0006A4 F8               [12] 2358 	mov	r0,a
      0006A5 A6 05            [24] 2359 	mov	@r0,ar5
      0006A7 08               [12] 2360 	inc	r0
      0006A8 A6 06            [24] 2361 	mov	@r0,ar6
      0006AA 08               [12] 2362 	inc	r0
      0006AB A6 07            [24] 2363 	mov	@r0,ar7
      0006AD                       2364 00173$:
      0006AD E5 81            [12] 2365 	mov	a,sp
      0006AF 24 F6            [12] 2366 	add	a,#0xf6
      0006B1 F8               [12] 2367 	mov	r0,a
      0006B2 E6               [12] 2368 	mov	a,@r0
      0006B3 08               [12] 2369 	inc	r0
      0006B4 46               [12] 2370 	orl	a,@r0
      0006B5 70 03            [24] 2371 	jnz	00395$
      0006B7 02r07rD4         [24] 2372 	ljmp	00127$
      0006BA                       2373 00395$:
                                   2374 ;	../../../core/net/mac/cxmac.c:503: const rimeaddr_t *neighbor = packetbuf_addr(PACKETBUF_ADDR_RECEIVER);
      0006BA 75 82 19         [24] 2375 	mov	dpl,#0x19
      0006BD 78r00            [12] 2376 	mov	r0,#_packetbuf_addr
      0006BF 79s00            [12] 2377 	mov	r1,#(_packetbuf_addr >> 8)
      0006C1 7As00            [12] 2378 	mov	r2,#(_packetbuf_addr >> 16)
      0006C3 12r00r00         [24] 2379 	lcall	__sdcc_banked_call
      0006C6 AF 82            [24] 2380 	mov	r7,dpl
      0006C8 AE 83            [24] 2381 	mov	r6,dph
      0006CA AD F0            [24] 2382 	mov	r5,b
                                   2383 ;	../../../core/net/mac/cxmac.c:505: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      0006CC E5 81            [12] 2384 	mov	a,sp
      0006CE 24 F6            [12] 2385 	add	a,#0xf6
      0006D0 F8               [12] 2386 	mov	r0,a
      0006D1 74 03            [12] 2387 	mov	a,#0x03
      0006D3 26               [12] 2388 	add	a,@r0
      0006D4 FA               [12] 2389 	mov	r2,a
      0006D5 E4               [12] 2390 	clr	a
      0006D6 08               [12] 2391 	inc	r0
      0006D7 36               [12] 2392 	addc	a,@r0
      0006D8 FB               [12] 2393 	mov	r3,a
      0006D9 08               [12] 2394 	inc	r0
      0006DA 86 04            [24] 2395 	mov	ar4,@r0
      0006DC C0 02            [24] 2396 	push	ar2
      0006DE C0 03            [24] 2397 	push	ar3
      0006E0 C0 04            [24] 2398 	push	ar4
      0006E2 8F 82            [24] 2399 	mov	dpl,r7
      0006E4 8E 83            [24] 2400 	mov	dph,r6
      0006E6 8D F0            [24] 2401 	mov	b,r5
      0006E8 78r00            [12] 2402 	mov	r0,#_rimeaddr_cmp
      0006EA 79s00            [12] 2403 	mov	r1,#(_rimeaddr_cmp >> 8)
      0006EC 7As00            [12] 2404 	mov	r2,#(_rimeaddr_cmp >> 16)
      0006EE 12r00r00         [24] 2405 	lcall	__sdcc_banked_call
      0006F1 AB 82            [24] 2406 	mov	r3,dpl
      0006F3 AC 83            [24] 2407 	mov	r4,dph
      0006F5 15 81            [12] 2408 	dec	sp
      0006F7 15 81            [12] 2409 	dec	sp
      0006F9 15 81            [12] 2410 	dec	sp
      0006FB EB               [12] 2411 	mov	a,r3
      0006FC 4C               [12] 2412 	orl	a,r4
      0006FD 70 03            [24] 2413 	jnz	00396$
      0006FF 02r07rA2         [24] 2414 	ljmp	00174$
      000702                       2415 00396$:
                                   2416 ;	../../../core/net/mac/cxmac.c:515: now = RTIMER_NOW();
      000702 AB E2            [24] 2417 	mov	r3,_T1CNTL
      000704 7C 00            [12] 2418 	mov	r4,#0x00
      000706 AA E3            [24] 2419 	mov	r2,_T1CNTH
      000708 8A 07            [24] 2420 	mov	ar7,r2
      00070A E4               [12] 2421 	clr	a
      00070B 2B               [12] 2422 	add	a,r3
      00070C FB               [12] 2423 	mov	r3,a
      00070D EF               [12] 2424 	mov	a,r7
      00070E 3C               [12] 2425 	addc	a,r4
      00070F FC               [12] 2426 	mov	r4,a
                                   2427 ;	../../../core/net/mac/cxmac.c:516: wait = ((rtimer_clock_t)(e->time - now)) % (DEFAULT_PERIOD);
      000710 E5 81            [12] 2428 	mov	a,sp
      000712 24 F6            [12] 2429 	add	a,#0xf6
      000714 F8               [12] 2430 	mov	r0,a
      000715 74 0B            [12] 2431 	mov	a,#0x0b
      000717 26               [12] 2432 	add	a,@r0
      000718 FD               [12] 2433 	mov	r5,a
      000719 E4               [12] 2434 	clr	a
      00071A 08               [12] 2435 	inc	r0
      00071B 36               [12] 2436 	addc	a,@r0
      00071C FE               [12] 2437 	mov	r6,a
      00071D 08               [12] 2438 	inc	r0
      00071E 86 07            [24] 2439 	mov	ar7,@r0
      000720 8D 82            [24] 2440 	mov	dpl,r5
      000722 8E 83            [24] 2441 	mov	dph,r6
      000724 8F F0            [24] 2442 	mov	b,r7
      000726 12r00r00         [24] 2443 	lcall	__gptrget
      000729 FD               [12] 2444 	mov	r5,a
      00072A A3               [24] 2445 	inc	dptr
      00072B 12r00r00         [24] 2446 	lcall	__gptrget
      00072E FE               [12] 2447 	mov	r6,a
      00072F ED               [12] 2448 	mov	a,r5
      000730 C3               [12] 2449 	clr	c
      000731 9B               [12] 2450 	subb	a,r3
      000732 FD               [12] 2451 	mov	r5,a
      000733 EE               [12] 2452 	mov	a,r6
      000734 9C               [12] 2453 	subb	a,r4
      000735 FE               [12] 2454 	mov	r6,a
      000736 C0 04            [24] 2455 	push	ar4
      000738 C0 03            [24] 2456 	push	ar3
      00073A 74 A1            [12] 2457 	mov	a,#0xa1
      00073C C0 E0            [24] 2458 	push	acc
      00073E 74 07            [12] 2459 	mov	a,#0x07
      000740 C0 E0            [24] 2460 	push	acc
      000742 8D 82            [24] 2461 	mov	dpl,r5
      000744 8E 83            [24] 2462 	mov	dph,r6
      000746 12r00r00         [24] 2463 	lcall	__moduint
      000749 AE 82            [24] 2464 	mov	r6,dpl
      00074B AF 83            [24] 2465 	mov	r7,dph
      00074D 15 81            [12] 2466 	dec	sp
      00074F 15 81            [12] 2467 	dec	sp
      000751 D0 03            [24] 2468 	pop	ar3
      000753 D0 04            [24] 2469 	pop	ar4
                                   2470 ;	../../../core/net/mac/cxmac.c:517: expected = now + wait - 2 * DEFAULT_ON_TIME;
      000755 EE               [12] 2471 	mov	a,r6
      000756 2B               [12] 2472 	add	a,r3
      000757 FB               [12] 2473 	mov	r3,a
      000758 EF               [12] 2474 	mov	a,r7
      000759 3C               [12] 2475 	addc	a,r4
      00075A FC               [12] 2476 	mov	r4,a
      00075B EB               [12] 2477 	mov	a,r3
      00075C 24 3E            [12] 2478 	add	a,#0x3e
      00075E FB               [12] 2479 	mov	r3,a
      00075F EC               [12] 2480 	mov	a,r4
      000760 34 FF            [12] 2481 	addc	a,#0xff
      000762 FA               [12] 2482 	mov	r2,a
                                   2483 ;	../../../core/net/mac/cxmac.c:521: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) !=
      000763 75 82 0E         [24] 2484 	mov	dpl,#0x0e
      000766 C0 03            [24] 2485 	push	ar3
      000768 C0 02            [24] 2486 	push	ar2
      00076A 78r00            [12] 2487 	mov	r0,#_packetbuf_attr
      00076C 79s00            [12] 2488 	mov	r1,#(_packetbuf_attr >> 8)
      00076E 7As00            [12] 2489 	mov	r2,#(_packetbuf_attr >> 16)
      000770 12r00r00         [24] 2490 	lcall	__sdcc_banked_call
      000773 AE 82            [24] 2491 	mov	r6,dpl
      000775 AF 83            [24] 2492 	mov	r7,dph
      000777 D0 02            [24] 2493 	pop	ar2
      000779 D0 03            [24] 2494 	pop	ar3
      00077B BE 01 05         [24] 2495 	cjne	r6,#0x01,00397$
      00077E BF 00 02         [24] 2496 	cjne	r7,#0x00,00397$
      000781 80 1F            [24] 2497 	sjmp	00174$
      000783                       2498 00397$:
                                   2499 ;	../../../core/net/mac/cxmac.c:523: is_streaming == 0) {
      000783 90r00r3B         [24] 2500 	mov	dptr,#_is_streaming
      000786 E0               [24] 2501 	movx	a,@dptr
      000787 70 19            [24] 2502 	jnz	00174$
                                   2503 ;	../../../core/net/mac/cxmac.c:526: while(RTIMER_CLOCK_LT(RTIMER_NOW(), expected));
      000789                       2504 00119$:
      000789 AE E2            [24] 2505 	mov	r6,_T1CNTL
      00078B 7F 00            [12] 2506 	mov	r7,#0x00
      00078D AC E3            [24] 2507 	mov	r4,_T1CNTH
      00078F 8C 05            [24] 2508 	mov	ar5,r4
      000791 E4               [12] 2509 	clr	a
      000792 FC               [12] 2510 	mov	r4,a
      000793 2E               [12] 2511 	add	a,r6
      000794 FE               [12] 2512 	mov	r6,a
      000795 ED               [12] 2513 	mov	a,r5
      000796 3F               [12] 2514 	addc	a,r7
      000797 FF               [12] 2515 	mov	r7,a
      000798 EE               [12] 2516 	mov	a,r6
      000799 C3               [12] 2517 	clr	c
      00079A 9B               [12] 2518 	subb	a,r3
      00079B FE               [12] 2519 	mov	r6,a
      00079C EF               [12] 2520 	mov	a,r7
      00079D 9A               [12] 2521 	subb	a,r2
      00079E FF               [12] 2522 	mov	r7,a
      00079F 20 E7 E7         [24] 2523 	jb	acc.7,00119$
      0007A2                       2524 00174$:
                                   2525 ;	../../../core/net/mac/cxmac.c:502: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      0007A2 E5 81            [12] 2526 	mov	a,sp
      0007A4 24 F6            [12] 2527 	add	a,#0xf6
      0007A6 F8               [12] 2528 	mov	r0,a
      0007A7 86 05            [24] 2529 	mov	ar5,@r0
      0007A9 08               [12] 2530 	inc	r0
      0007AA 86 06            [24] 2531 	mov	ar6,@r0
      0007AC 08               [12] 2532 	inc	r0
      0007AD 86 07            [24] 2533 	mov	ar7,@r0
      0007AF 8D 82            [24] 2534 	mov	dpl,r5
      0007B1 8E 83            [24] 2535 	mov	dph,r6
      0007B3 8F F0            [24] 2536 	mov	b,r7
      0007B5 78r00            [12] 2537 	mov	r0,#_list_item_next
      0007B7 79s00            [12] 2538 	mov	r1,#(_list_item_next >> 8)
      0007B9 7As00            [12] 2539 	mov	r2,#(_list_item_next >> 16)
      0007BB 12r00r00         [24] 2540 	lcall	__sdcc_banked_call
      0007BE AD 82            [24] 2541 	mov	r5,dpl
      0007C0 AE 83            [24] 2542 	mov	r6,dph
      0007C2 AF F0            [24] 2543 	mov	r7,b
      0007C4 E5 81            [12] 2544 	mov	a,sp
      0007C6 24 F6            [12] 2545 	add	a,#0xf6
      0007C8 F8               [12] 2546 	mov	r0,a
      0007C9 A6 05            [24] 2547 	mov	@r0,ar5
      0007CB 08               [12] 2548 	inc	r0
      0007CC A6 06            [24] 2549 	mov	@r0,ar6
      0007CE 08               [12] 2550 	inc	r0
      0007CF A6 07            [24] 2551 	mov	@r0,ar7
      0007D1 02r06rAD         [24] 2552 	ljmp	00173$
      0007D4                       2553 00127$:
                                   2554 ;	../../../core/net/mac/cxmac.c:538: we_are_sending = 1;
      0007D4 90r00r0B         [24] 2555 	mov	dptr,#_we_are_sending
      0007D7 74 01            [12] 2556 	mov	a,#0x01
      0007D9 F0               [24] 2557 	movx	@dptr,a
                                   2558 ;	../../../core/net/mac/cxmac.c:540: t0 = RTIMER_NOW();
      0007DA AE E2            [24] 2559 	mov	r6,_T1CNTL
      0007DC 7F 00            [12] 2560 	mov	r7,#0x00
      0007DE AC E3            [24] 2561 	mov	r4,_T1CNTH
      0007E0 8C 05            [24] 2562 	mov	ar5,r4
      0007E2 E4               [12] 2563 	clr	a
      0007E3 2E               [12] 2564 	add	a,r6
      0007E4 FE               [12] 2565 	mov	r6,a
      0007E5 ED               [12] 2566 	mov	a,r5
      0007E6 3F               [12] 2567 	addc	a,r7
      0007E7 FF               [12] 2568 	mov	r7,a
                                   2569 ;	../../../core/net/mac/cxmac.c:548: on();
      0007E8 C0 07            [24] 2570 	push	ar7
      0007EA C0 06            [24] 2571 	push	ar6
      0007EC 78r00            [12] 2572 	mov	r0,#_on
      0007EE 79s00            [12] 2573 	mov	r1,#(_on >> 8)
      0007F0 7As00            [12] 2574 	mov	r2,#(_on >> 16)
      0007F2 12r00r00         [24] 2575 	lcall	__sdcc_banked_call
      0007F5 D0 06            [24] 2576 	pop	ar6
      0007F7 D0 07            [24] 2577 	pop	ar7
                                   2578 ;	../../../core/net/mac/cxmac.c:549: collisions = 0;
      0007F9 A8 81            [24] 2579 	mov	r0,sp
      0007FB 18               [12] 2580 	dec	r0
      0007FC 18               [12] 2581 	dec	r0
      0007FD 76 00            [12] 2582 	mov	@r0,#0x00
                                   2583 ;	../../../core/net/mac/cxmac.c:550: if(!is_already_streaming) {
      0007FF E5 81            [12] 2584 	mov	a,sp
      000801 24 FC            [12] 2585 	add	a,#0xfc
      000803 F8               [12] 2586 	mov	r0,a
      000804 E6               [12] 2587 	mov	a,@r0
      000805 08               [12] 2588 	inc	r0
      000806 46               [12] 2589 	orl	a,@r0
      000807 60 03            [24] 2590 	jz	00400$
      000809 02r0Cr0A         [24] 2591 	ljmp	00150$
      00080C                       2592 00400$:
                                   2593 ;	../../../core/net/mac/cxmac.c:551: watchdog_stop();
      00080C C0 06            [24] 2594 	push	ar6
      00080E C0 07            [24] 2595 	push	ar7
      000810 C0 07            [24] 2596 	push	ar7
      000812 C0 06            [24] 2597 	push	ar6
      000814 78r00            [12] 2598 	mov	r0,#_watchdog_periodic
      000816 79s00            [12] 2599 	mov	r1,#(_watchdog_periodic >> 8)
      000818 7As00            [12] 2600 	mov	r2,#(_watchdog_periodic >> 16)
      00081A 12r00r00         [24] 2601 	lcall	__sdcc_banked_call
      00081D D0 06            [24] 2602 	pop	ar6
      00081F D0 07            [24] 2603 	pop	ar7
                                   2604 ;	../../../core/net/mac/cxmac.c:552: got_strobe_ack = 0;
      000821 E5 81            [12] 2605 	mov	a,sp
      000823 24 BA            [12] 2606 	add	a,#0xba
      000825 F8               [12] 2607 	mov	r0,a
      000826 E4               [12] 2608 	clr	a
      000827 F6               [12] 2609 	mov	@r0,a
      000828 08               [12] 2610 	inc	r0
      000829 F6               [12] 2611 	mov	@r0,a
                                   2612 ;	../../../core/net/mac/cxmac.c:553: t = RTIMER_NOW();
      00082A AC E2            [24] 2613 	mov	r4,_T1CNTL
      00082C 7F 00            [12] 2614 	mov	r7,#0x00
      00082E AB E3            [24] 2615 	mov	r3,_T1CNTH
      000830 8B 06            [24] 2616 	mov	ar6,r3
      000832 E4               [12] 2617 	clr	a
      000833 FB               [12] 2618 	mov	r3,a
      000834 2C               [12] 2619 	add	a,r4
      000835 FC               [12] 2620 	mov	r4,a
      000836 EE               [12] 2621 	mov	a,r6
      000837 3F               [12] 2622 	addc	a,r7
      000838 FF               [12] 2623 	mov	r7,a
      000839 E5 81            [12] 2624 	mov	a,sp
      00083B 24 B6            [12] 2625 	add	a,#0xb6
      00083D F8               [12] 2626 	mov	r0,a
      00083E A6 04            [24] 2627 	mov	@r0,ar4
      000840 08               [12] 2628 	inc	r0
      000841 A6 07            [24] 2629 	mov	@r0,ar7
                                   2630 ;	../../../core/net/mac/cxmac.c:554: for(strobes = 0, collisions = 0;
      000843 E5 81            [12] 2631 	mov	a,sp
      000845 24 FC            [12] 2632 	add	a,#0xfc
      000847 F8               [12] 2633 	mov	r0,a
      000848 76 00            [12] 2634 	mov	@r0,#0x00
      00084A E5 81            [12] 2635 	mov	a,sp
      00084C 24 B0            [12] 2636 	add	a,#0xb0
      00084E F8               [12] 2637 	mov	r0,a
      00084F E5 81            [12] 2638 	mov	a,sp
      000851 24 BC            [12] 2639 	add	a,#0xbc
      000853 F6               [12] 2640 	mov	@r0,a
                                   2641 ;	../../../core/net/mac/cxmac.c:682: return MAC_TX_COLLISION;
      000854 D0 07            [24] 2642 	pop	ar7
      000856 D0 06            [24] 2643 	pop	ar6
                                   2644 ;	../../../core/net/mac/cxmac.c:554: for(strobes = 0, collisions = 0;
      000858                       2645 00178$:
                                   2646 ;	../../../core/net/mac/cxmac.c:555: got_strobe_ack == 0 && collisions == 0 &&
      000858 E5 81            [12] 2647 	mov	a,sp
      00085A 24 BC            [12] 2648 	add	a,#0xbc
      00085C F8               [12] 2649 	mov	r0,a
      00085D E6               [12] 2650 	mov	a,@r0
      00085E 08               [12] 2651 	inc	r0
      00085F 46               [12] 2652 	orl	a,@r0
      000860 60 03            [24] 2653 	jz	00401$
      000862 02r0Cr0A         [24] 2654 	ljmp	00150$
      000865                       2655 00401$:
      000865 A8 81            [24] 2656 	mov	r0,sp
      000867 18               [12] 2657 	dec	r0
      000868 18               [12] 2658 	dec	r0
      000869 E6               [12] 2659 	mov	a,@r0
      00086A 60 03            [24] 2660 	jz	00402$
      00086C 02r0Cr0A         [24] 2661 	ljmp	00150$
      00086F                       2662 00402$:
                                   2663 ;	../../../core/net/mac/cxmac.c:556: RTIMER_CLOCK_LT(RTIMER_NOW(), t0 + cxmac_config.strobe_time);
      00086F AB E2            [24] 2664 	mov	r3,_T1CNTL
      000871 7C 00            [12] 2665 	mov	r4,#0x00
      000873 AA E3            [24] 2666 	mov	r2,_T1CNTH
      000875 8A 05            [24] 2667 	mov	ar5,r2
      000877 E4               [12] 2668 	clr	a
      000878 2B               [12] 2669 	add	a,r3
      000879 FB               [12] 2670 	mov	r3,a
      00087A ED               [12] 2671 	mov	a,r5
      00087B 3C               [12] 2672 	addc	a,r4
      00087C FC               [12] 2673 	mov	r4,a
      00087D 90r00r04         [24] 2674 	mov	dptr,#(_cxmac_config + 0x0004)
      000880 E0               [24] 2675 	movx	a,@dptr
      000881 FA               [12] 2676 	mov	r2,a
      000882 A3               [24] 2677 	inc	dptr
      000883 E0               [24] 2678 	movx	a,@dptr
      000884 FD               [12] 2679 	mov	r5,a
      000885 EA               [12] 2680 	mov	a,r2
      000886 2E               [12] 2681 	add	a,r6
      000887 FA               [12] 2682 	mov	r2,a
      000888 ED               [12] 2683 	mov	a,r5
      000889 3F               [12] 2684 	addc	a,r7
      00088A FD               [12] 2685 	mov	r5,a
      00088B EB               [12] 2686 	mov	a,r3
      00088C C3               [12] 2687 	clr	c
      00088D 9A               [12] 2688 	subb	a,r2
      00088E FA               [12] 2689 	mov	r2,a
      00088F EC               [12] 2690 	mov	a,r4
      000890 9D               [12] 2691 	subb	a,r5
      000891 FD               [12] 2692 	mov	r5,a
      000892 20 E7 03         [24] 2693 	jb	acc.7,00403$
      000895 02r0Cr0A         [24] 2694 	ljmp	00150$
      000898                       2695 00403$:
                                   2696 ;	../../../core/net/mac/cxmac.c:559: while(got_strobe_ack == 0 &&
      000898 A8 81            [24] 2697 	mov	r0,sp
      00089A 18               [12] 2698 	dec	r0
      00089B 18               [12] 2699 	dec	r0
      00089C 86 04            [24] 2700 	mov	ar4,@r0
      00089E                       2701 00139$:
      00089E E5 81            [12] 2702 	mov	a,sp
      0008A0 24 BC            [12] 2703 	add	a,#0xbc
      0008A2 F8               [12] 2704 	mov	r0,a
      0008A3 E6               [12] 2705 	mov	a,@r0
      0008A4 08               [12] 2706 	inc	r0
      0008A5 46               [12] 2707 	orl	a,@r0
      0008A6 60 03            [24] 2708 	jz	00404$
      0008A8 02r0ArA4         [24] 2709 	ljmp	00221$
      0008AB                       2710 00404$:
                                   2711 ;	../../../core/net/mac/cxmac.c:560: RTIMER_CLOCK_LT(RTIMER_NOW(), t + cxmac_config.strobe_wait_time)) {
      0008AB C0 06            [24] 2712 	push	ar6
      0008AD C0 07            [24] 2713 	push	ar7
      0008AF AA E2            [24] 2714 	mov	r2,_T1CNTL
      0008B1 7B 00            [12] 2715 	mov	r3,#0x00
      0008B3 AE E3            [24] 2716 	mov	r6,_T1CNTH
      0008B5 8E 07            [24] 2717 	mov	ar7,r6
      0008B7 E4               [12] 2718 	clr	a
      0008B8 2A               [12] 2719 	add	a,r2
      0008B9 FA               [12] 2720 	mov	r2,a
      0008BA EF               [12] 2721 	mov	a,r7
      0008BB 3B               [12] 2722 	addc	a,r3
      0008BC FB               [12] 2723 	mov	r3,a
      0008BD 90r00r06         [24] 2724 	mov	dptr,#(_cxmac_config + 0x0006)
      0008C0 E0               [24] 2725 	movx	a,@dptr
      0008C1 FE               [12] 2726 	mov	r6,a
      0008C2 A3               [24] 2727 	inc	dptr
      0008C3 E0               [24] 2728 	movx	a,@dptr
      0008C4 FF               [12] 2729 	mov	r7,a
      0008C5 E5 81            [12] 2730 	mov	a,sp
      0008C7 24 B6            [12] 2731 	add	a,#0xb6
      0008C9 F8               [12] 2732 	mov	r0,a
      0008CA EE               [12] 2733 	mov	a,r6
      0008CB 26               [12] 2734 	add	a,@r0
      0008CC FE               [12] 2735 	mov	r6,a
      0008CD EF               [12] 2736 	mov	a,r7
      0008CE 08               [12] 2737 	inc	r0
      0008CF 36               [12] 2738 	addc	a,@r0
      0008D0 FF               [12] 2739 	mov	r7,a
      0008D1 EA               [12] 2740 	mov	a,r2
      0008D2 C3               [12] 2741 	clr	c
      0008D3 9E               [12] 2742 	subb	a,r6
      0008D4 EB               [12] 2743 	mov	a,r3
      0008D5 9F               [12] 2744 	subb	a,r7
      0008D6 D0 07            [24] 2745 	pop	ar7
      0008D8 D0 06            [24] 2746 	pop	ar6
      0008DA 20 E7 03         [24] 2747 	jb	acc.7,00405$
      0008DD 02r0ArA4         [24] 2748 	ljmp	00221$
      0008E0                       2749 00405$:
                                   2750 ;	../../../core/net/mac/cxmac.c:561: rtimer_clock_t now = RTIMER_NOW();
      0008E0 C0 06            [24] 2751 	push	ar6
      0008E2 C0 07            [24] 2752 	push	ar7
      0008E4 AA E2            [24] 2753 	mov	r2,_T1CNTL
      0008E6 7B 00            [12] 2754 	mov	r3,#0x00
      0008E8 AE E3            [24] 2755 	mov	r6,_T1CNTH
      0008EA 8E 07            [24] 2756 	mov	ar7,r6
      0008EC E4               [12] 2757 	clr	a
      0008ED FE               [12] 2758 	mov	r6,a
      0008EE 2A               [12] 2759 	add	a,r2
      0008EF FA               [12] 2760 	mov	r2,a
      0008F0 EF               [12] 2761 	mov	a,r7
      0008F1 3B               [12] 2762 	addc	a,r3
      0008F2 FB               [12] 2763 	mov	r3,a
      0008F3 E5 81            [12] 2764 	mov	a,sp
      0008F5 24 FD            [12] 2765 	add	a,#0xfd
      0008F7 F8               [12] 2766 	mov	r0,a
      0008F8 A6 02            [24] 2767 	mov	@r0,ar2
      0008FA 08               [12] 2768 	inc	r0
      0008FB A6 03            [24] 2769 	mov	@r0,ar3
                                   2770 ;	../../../core/net/mac/cxmac.c:564: packetbuf_clear();
      0008FD C0 07            [24] 2771 	push	ar7
      0008FF C0 06            [24] 2772 	push	ar6
      000901 C0 04            [24] 2773 	push	ar4
      000903 78r00            [12] 2774 	mov	r0,#_packetbuf_clear
      000905 79s00            [12] 2775 	mov	r1,#(_packetbuf_clear >> 8)
      000907 7As00            [12] 2776 	mov	r2,#(_packetbuf_clear >> 16)
      000909 12r00r00         [24] 2777 	lcall	__sdcc_banked_call
      00090C D0 04            [24] 2778 	pop	ar4
      00090E D0 06            [24] 2779 	pop	ar6
      000910 D0 07            [24] 2780 	pop	ar7
                                   2781 ;	../../../core/net/mac/cxmac.c:565: len = NETSTACK_RADIO.read(packetbuf_dataptr(), PACKETBUF_SIZE);
      000912 90r00r0C         [24] 2782 	mov	dptr,#(_cc2530_rf_driver + 0x000c)
      000915 E5 81            [12] 2783 	mov	a,sp
      000917 24 B3            [12] 2784 	add	a,#0xb3
      000919 F8               [12] 2785 	mov	r0,a
      00091A E4               [12] 2786 	clr	a
      00091B 93               [24] 2787 	movc	a,@a+dptr
      00091C F6               [12] 2788 	mov	@r0,a
      00091D A3               [24] 2789 	inc	dptr
      00091E E4               [12] 2790 	clr	a
      00091F 93               [24] 2791 	movc	a,@a+dptr
      000920 08               [12] 2792 	inc	r0
      000921 F6               [12] 2793 	mov	@r0,a
      000922 A3               [24] 2794 	inc	dptr
      000923 E4               [12] 2795 	clr	a
      000924 93               [24] 2796 	movc	a,@a+dptr
      000925 08               [12] 2797 	inc	r0
      000926 F6               [12] 2798 	mov	@r0,a
      000927 C0 04            [24] 2799 	push	ar4
      000929 78r00            [12] 2800 	mov	r0,#_packetbuf_dataptr
      00092B 79s00            [12] 2801 	mov	r1,#(_packetbuf_dataptr >> 8)
      00092D 7As00            [12] 2802 	mov	r2,#(_packetbuf_dataptr >> 16)
      00092F 12r00r00         [24] 2803 	lcall	__sdcc_banked_call
      000932 AA 82            [24] 2804 	mov	r2,dpl
      000934 AE 83            [24] 2805 	mov	r6,dph
      000936 AF F0            [24] 2806 	mov	r7,b
      000938 74 80            [12] 2807 	mov	a,#0x80
      00093A C0 E0            [24] 2808 	push	acc
      00093C E4               [12] 2809 	clr	a
      00093D C0 E0            [24] 2810 	push	acc
      00093F E5 81            [12] 2811 	mov	a,sp
      000941 24 B0            [12] 2812 	add	a,#0xb0
      000943 F8               [12] 2813 	mov	r0,a
      000944 E6               [12] 2814 	mov	a,@r0
      000945 C0 E0            [24] 2815 	push	acc
      000947 08               [12] 2816 	inc	r0
      000948 E6               [12] 2817 	mov	a,@r0
      000949 C0 E0            [24] 2818 	push	acc
      00094B 08               [12] 2819 	inc	r0
      00094C E6               [12] 2820 	mov	a,@r0
      00094D C0 E0            [24] 2821 	push	acc
      00094F 8A 82            [24] 2822 	mov	dpl,r2
      000951 8E 83            [24] 2823 	mov	dph,r6
      000953 8F F0            [24] 2824 	mov	b,r7
      000955 D0 02            [24] 2825 	pop	ar2
      000957 D0 01            [24] 2826 	pop	ar1
      000959 D0 00            [24] 2827 	pop	ar0
      00095B 12r00r00         [24] 2828 	lcall	__sdcc_banked_call
      00095E AE 82            [24] 2829 	mov	r6,dpl
      000960 AF 83            [24] 2830 	mov	r7,dph
      000962 15 81            [12] 2831 	dec	sp
      000964 15 81            [12] 2832 	dec	sp
      000966 D0 04            [24] 2833 	pop	ar4
      000968 8E 05            [24] 2834 	mov	ar5,r6
      00096A 8F 03            [24] 2835 	mov	ar3,r7
                                   2836 ;	../../../core/net/mac/cxmac.c:566: if(len > 0) {
      00096C C3               [12] 2837 	clr	c
      00096D E4               [12] 2838 	clr	a
      00096E 9D               [12] 2839 	subb	a,r5
      00096F 74 80            [12] 2840 	mov	a,#(0x00 ^ 0x80)
      000971 8B F0            [24] 2841 	mov	b,r3
      000973 63 F0 80         [24] 2842 	xrl	b,#0x80
      000976 95 F0            [12] 2843 	subb	a,b
      000978 D0 07            [24] 2844 	pop	ar7
      00097A D0 06            [24] 2845 	pop	ar6
      00097C 40 03            [24] 2846 	jc	00406$
      00097E 02r08r9E         [24] 2847 	ljmp	00139$
      000981                       2848 00406$:
                                   2849 ;	../../../core/net/mac/cxmac.c:567: packetbuf_set_datalen(len);
      000981 C0 06            [24] 2850 	push	ar6
      000983 C0 07            [24] 2851 	push	ar7
      000985 8D 82            [24] 2852 	mov	dpl,r5
      000987 8B 83            [24] 2853 	mov	dph,r3
      000989 C0 07            [24] 2854 	push	ar7
      00098B C0 06            [24] 2855 	push	ar6
      00098D C0 04            [24] 2856 	push	ar4
      00098F 78r00            [12] 2857 	mov	r0,#_packetbuf_set_datalen
      000991 79s00            [12] 2858 	mov	r1,#(_packetbuf_set_datalen >> 8)
      000993 7As00            [12] 2859 	mov	r2,#(_packetbuf_set_datalen >> 16)
      000995 12r00r00         [24] 2860 	lcall	__sdcc_banked_call
      000998 D0 04            [24] 2861 	pop	ar4
      00099A D0 06            [24] 2862 	pop	ar6
      00099C D0 07            [24] 2863 	pop	ar7
                                   2864 ;	../../../core/net/mac/cxmac.c:568: if(NETSTACK_FRAMER.parse() >= 0) {
      00099E 90r00r03         [24] 2865 	mov	dptr,#(_framer_802154 + 0x0003)
      0009A1 E4               [12] 2866 	clr	a
      0009A2 93               [24] 2867 	movc	a,@a+dptr
      0009A3 FA               [12] 2868 	mov	r2,a
      0009A4 A3               [24] 2869 	inc	dptr
      0009A5 E4               [12] 2870 	clr	a
      0009A6 93               [24] 2871 	movc	a,@a+dptr
      0009A7 FB               [12] 2872 	mov	r3,a
      0009A8 A3               [24] 2873 	inc	dptr
      0009A9 E4               [12] 2874 	clr	a
      0009AA 93               [24] 2875 	movc	a,@a+dptr
      0009AB FF               [12] 2876 	mov	r7,a
      0009AC C0 07            [24] 2877 	push	ar7
      0009AE C0 06            [24] 2878 	push	ar6
      0009B0 C0 04            [24] 2879 	push	ar4
      0009B2 C0 02            [24] 2880 	push	ar2
      0009B4 C0 03            [24] 2881 	push	ar3
      0009B6 C0 07            [24] 2882 	push	ar7
      0009B8 D0 02            [24] 2883 	pop	ar2
      0009BA D0 01            [24] 2884 	pop	ar1
      0009BC D0 00            [24] 2885 	pop	ar0
      0009BE 12r00r00         [24] 2886 	lcall	__sdcc_banked_call
      0009C1 AA 82            [24] 2887 	mov	r2,dpl
      0009C3 AB 83            [24] 2888 	mov	r3,dph
      0009C5 D0 04            [24] 2889 	pop	ar4
      0009C7 D0 06            [24] 2890 	pop	ar6
      0009C9 D0 07            [24] 2891 	pop	ar7
      0009CB EB               [12] 2892 	mov	a,r3
      0009CC D0 07            [24] 2893 	pop	ar7
      0009CE D0 06            [24] 2894 	pop	ar6
      0009D0 30 E7 03         [24] 2895 	jnb	acc.7,00407$
      0009D3 02r08r9E         [24] 2896 	ljmp	00139$
      0009D6                       2897 00407$:
                                   2898 ;	../../../core/net/mac/cxmac.c:569: hdr = packetbuf_dataptr();
      0009D6 C0 06            [24] 2899 	push	ar6
      0009D8 C0 07            [24] 2900 	push	ar7
      0009DA C0 06            [24] 2901 	push	ar6
      0009DC C0 04            [24] 2902 	push	ar4
      0009DE 78r00            [12] 2903 	mov	r0,#_packetbuf_dataptr
      0009E0 79s00            [12] 2904 	mov	r1,#(_packetbuf_dataptr >> 8)
      0009E2 7As00            [12] 2905 	mov	r2,#(_packetbuf_dataptr >> 16)
      0009E4 12r00r00         [24] 2906 	lcall	__sdcc_banked_call
      0009E7 AA 82            [24] 2907 	mov	r2,dpl
      0009E9 AB 83            [24] 2908 	mov	r3,dph
      0009EB AF F0            [24] 2909 	mov	r7,b
      0009ED D0 04            [24] 2910 	pop	ar4
      0009EF D0 06            [24] 2911 	pop	ar6
                                   2912 ;	../../../core/net/mac/cxmac.c:570: is_dispatch = hdr->dispatch == DISPATCH;
      0009F1 8A 82            [24] 2913 	mov	dpl,r2
      0009F3 8B 83            [24] 2914 	mov	dph,r3
      0009F5 8F F0            [24] 2915 	mov	b,r7
      0009F7 12r00r00         [24] 2916 	lcall	__gptrget
      0009FA FE               [12] 2917 	mov	r6,a
      0009FB E4               [12] 2918 	clr	a
      0009FC BE 00 01         [24] 2919 	cjne	r6,#0x00,00408$
      0009FF 04               [12] 2920 	inc	a
      000A00                       2921 00408$:
      000A00 FE               [12] 2922 	mov	r6,a
      000A01 E5 81            [12] 2923 	mov	a,sp
      000A03 24 F2            [12] 2924 	add	a,#0xf2
      000A05 F8               [12] 2925 	mov	r0,a
      000A06 A6 06            [24] 2926 	mov	@r0,ar6
      000A08 08               [12] 2927 	inc	r0
      000A09 76 00            [12] 2928 	mov	@r0,#0x00
                                   2929 ;	../../../core/net/mac/cxmac.c:571: is_strobe_ack = hdr->type == TYPE_STROBE_ACK;
      000A0B 0A               [12] 2930 	inc	r2
      000A0C BA 00 01         [24] 2931 	cjne	r2,#0x00,00410$
      000A0F 0B               [12] 2932 	inc	r3
      000A10                       2933 00410$:
      000A10 8A 82            [24] 2934 	mov	dpl,r2
      000A12 8B 83            [24] 2935 	mov	dph,r3
      000A14 8F F0            [24] 2936 	mov	b,r7
      000A16 12r00r00         [24] 2937 	lcall	__gptrget
      000A19 FA               [12] 2938 	mov	r2,a
      000A1A E4               [12] 2939 	clr	a
      000A1B BA 13 01         [24] 2940 	cjne	r2,#0x13,00411$
      000A1E 04               [12] 2941 	inc	a
      000A1F                       2942 00411$:
      000A1F FA               [12] 2943 	mov	r2,a
      000A20 7D 00            [12] 2944 	mov	r5,#0x00
                                   2945 ;	../../../core/net/mac/cxmac.c:572: if(is_dispatch && is_strobe_ack) {
      000A22 D0 07            [24] 2946 	pop	ar7
      000A24 D0 06            [24] 2947 	pop	ar6
      000A26 E5 81            [12] 2948 	mov	a,sp
      000A28 24 F4            [12] 2949 	add	a,#0xf4
      000A2A F8               [12] 2950 	mov	r0,a
      000A2B E6               [12] 2951 	mov	a,@r0
      000A2C 08               [12] 2952 	inc	r0
      000A2D 46               [12] 2953 	orl	a,@r0
      000A2E 60 70            [24] 2954 	jz	00131$
      000A30 EA               [12] 2955 	mov	a,r2
      000A31 4D               [12] 2956 	orl	a,r5
      000A32 60 6C            [24] 2957 	jz	00131$
                                   2958 ;	../../../core/net/mac/cxmac.c:574: &rimeaddr_node_addr)) {
      000A34 C0 06            [24] 2959 	push	ar6
      000A36 C0 07            [24] 2960 	push	ar7
                                   2961 ;	../../../core/net/mac/cxmac.c:573: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000A38 75 82 19         [24] 2962 	mov	dpl,#0x19
      000A3B C0 06            [24] 2963 	push	ar6
      000A3D C0 04            [24] 2964 	push	ar4
      000A3F 78r00            [12] 2965 	mov	r0,#_packetbuf_addr
      000A41 79s00            [12] 2966 	mov	r1,#(_packetbuf_addr >> 8)
      000A43 7As00            [12] 2967 	mov	r2,#(_packetbuf_addr >> 16)
      000A45 12r00r00         [24] 2968 	lcall	__sdcc_banked_call
      000A48 AA 82            [24] 2969 	mov	r2,dpl
      000A4A AB 83            [24] 2970 	mov	r3,dph
      000A4C AF F0            [24] 2971 	mov	r7,b
      000A4E D0 04            [24] 2972 	pop	ar4
      000A50 D0 06            [24] 2973 	pop	ar6
      000A52 C0 04            [24] 2974 	push	ar4
      000A54 74r00            [12] 2975 	mov	a,#_rimeaddr_node_addr
      000A56 C0 E0            [24] 2976 	push	acc
      000A58 74s00            [12] 2977 	mov	a,#(_rimeaddr_node_addr >> 8)
      000A5A C0 E0            [24] 2978 	push	acc
      000A5C E4               [12] 2979 	clr	a
      000A5D C0 E0            [24] 2980 	push	acc
      000A5F 8A 82            [24] 2981 	mov	dpl,r2
      000A61 8B 83            [24] 2982 	mov	dph,r3
      000A63 8F F0            [24] 2983 	mov	b,r7
      000A65 78r00            [12] 2984 	mov	r0,#_rimeaddr_cmp
      000A67 79s00            [12] 2985 	mov	r1,#(_rimeaddr_cmp >> 8)
      000A69 7As00            [12] 2986 	mov	r2,#(_rimeaddr_cmp >> 16)
      000A6B 12r00r00         [24] 2987 	lcall	__sdcc_banked_call
      000A6E AE 82            [24] 2988 	mov	r6,dpl
      000A70 AF 83            [24] 2989 	mov	r7,dph
      000A72 15 81            [12] 2990 	dec	sp
      000A74 15 81            [12] 2991 	dec	sp
      000A76 15 81            [12] 2992 	dec	sp
      000A78 D0 04            [24] 2993 	pop	ar4
      000A7A EE               [12] 2994 	mov	a,r6
      000A7B 4F               [12] 2995 	orl	a,r7
      000A7C D0 07            [24] 2996 	pop	ar7
      000A7E D0 06            [24] 2997 	pop	ar6
      000A80 70 03            [24] 2998 	jnz	00415$
      000A82 02r08r9E         [24] 2999 	ljmp	00139$
      000A85                       3000 00415$:
                                   3001 ;	../../../core/net/mac/cxmac.c:577: got_strobe_ack = 1;
      000A85 E5 81            [12] 3002 	mov	a,sp
      000A87 24 BC            [12] 3003 	add	a,#0xbc
      000A89 F8               [12] 3004 	mov	r0,a
      000A8A 76 01            [12] 3005 	mov	@r0,#0x01
      000A8C 08               [12] 3006 	inc	r0
      000A8D 76 00            [12] 3007 	mov	@r0,#0x00
                                   3008 ;	../../../core/net/mac/cxmac.c:578: encounter_time = now;
      000A8F A8 81            [24] 3009 	mov	r0,sp
      000A91 18               [12] 3010 	dec	r0
      000A92 E5 81            [12] 3011 	mov	a,sp
      000A94 24 BA            [12] 3012 	add	a,#0xba
      000A96 F9               [12] 3013 	mov	r1,a
      000A97 E6               [12] 3014 	mov	a,@r0
      000A98 F7               [12] 3015 	mov	@r1,a
      000A99 08               [12] 3016 	inc	r0
      000A9A 09               [12] 3017 	inc	r1
      000A9B E6               [12] 3018 	mov	a,@r0
      000A9C F7               [12] 3019 	mov	@r1,a
      000A9D 02r08r9E         [24] 3020 	ljmp	00139$
      000AA0                       3021 00131$:
                                   3022 ;	../../../core/net/mac/cxmac.c:584: collisions++;
      000AA0 0C               [12] 3023 	inc	r4
      000AA1 02r08r9E         [24] 3024 	ljmp	00139$
      000AA4                       3025 00221$:
      000AA4 C0 06            [24] 3026 	push	ar6
      000AA6 C0 07            [24] 3027 	push	ar7
      000AA8 E5 81            [12] 3028 	mov	a,sp
      000AAA 24 FC            [12] 3029 	add	a,#0xfc
      000AAC F8               [12] 3030 	mov	r0,a
      000AAD A6 04            [24] 3031 	mov	@r0,ar4
                                   3032 ;	../../../core/net/mac/cxmac.c:592: t = RTIMER_NOW();
      000AAF AB E2            [24] 3033 	mov	r3,_T1CNTL
      000AB1 7C 00            [12] 3034 	mov	r4,#0x00
      000AB3 AA E3            [24] 3035 	mov	r2,_T1CNTH
      000AB5 8A 07            [24] 3036 	mov	ar7,r2
      000AB7 E4               [12] 3037 	clr	a
      000AB8 FA               [12] 3038 	mov	r2,a
      000AB9 2B               [12] 3039 	add	a,r3
      000ABA FB               [12] 3040 	mov	r3,a
      000ABB EF               [12] 3041 	mov	a,r7
      000ABC 3C               [12] 3042 	addc	a,r4
      000ABD FC               [12] 3043 	mov	r4,a
      000ABE E5 81            [12] 3044 	mov	a,sp
      000AC0 24 B6            [12] 3045 	add	a,#0xb6
      000AC2 F8               [12] 3046 	mov	r0,a
      000AC3 A6 03            [24] 3047 	mov	@r0,ar3
      000AC5 08               [12] 3048 	inc	r0
      000AC6 A6 04            [24] 3049 	mov	@r0,ar4
                                   3050 ;	../../../core/net/mac/cxmac.c:594: if(got_strobe_ack == 0 && collisions == 0) {
      000AC8 D0 07            [24] 3051 	pop	ar7
      000ACA D0 06            [24] 3052 	pop	ar6
      000ACC E5 81            [12] 3053 	mov	a,sp
      000ACE 24 BC            [12] 3054 	add	a,#0xbc
      000AD0 F8               [12] 3055 	mov	r0,a
      000AD1 E6               [12] 3056 	mov	a,@r0
      000AD2 08               [12] 3057 	inc	r0
      000AD3 46               [12] 3058 	orl	a,@r0
      000AD4 60 03            [24] 3059 	jz	00416$
      000AD6 02r08r58         [24] 3060 	ljmp	00178$
      000AD9                       3061 00416$:
      000AD9 A8 81            [24] 3062 	mov	r0,sp
      000ADB 18               [12] 3063 	dec	r0
      000ADC 18               [12] 3064 	dec	r0
      000ADD E6               [12] 3065 	mov	a,@r0
      000ADE 60 03            [24] 3066 	jz	00417$
      000AE0 02r08r58         [24] 3067 	ljmp	00178$
      000AE3                       3068 00417$:
                                   3069 ;	../../../core/net/mac/cxmac.c:595: if(is_broadcast) {
      000AE3 E5 81            [12] 3070 	mov	a,sp
      000AE5 24 F2            [12] 3071 	add	a,#0xf2
      000AE7 F8               [12] 3072 	mov	r0,a
      000AE8 E6               [12] 3073 	mov	a,@r0
      000AE9 08               [12] 3074 	inc	r0
      000AEA 46               [12] 3075 	orl	a,@r0
      000AEB 70 03            [24] 3076 	jnz	00418$
      000AED 02r0BrA4         [24] 3077 	ljmp	00143$
      000AF0                       3078 00418$:
                                   3079 ;	../../../core/net/mac/cxmac.c:600: queuebuf_to_packetbuf(packet);
      000AF0 C0 06            [24] 3080 	push	ar6
      000AF2 C0 07            [24] 3081 	push	ar7
      000AF4 E5 81            [12] 3082 	mov	a,sp
      000AF6 24 F7            [12] 3083 	add	a,#0xf7
      000AF8 F8               [12] 3084 	mov	r0,a
      000AF9 86 82            [24] 3085 	mov	dpl,@r0
      000AFB 08               [12] 3086 	inc	r0
      000AFC 86 83            [24] 3087 	mov	dph,@r0
      000AFE 08               [12] 3088 	inc	r0
      000AFF 86 F0            [24] 3089 	mov	b,@r0
      000B01 C0 07            [24] 3090 	push	ar7
      000B03 C0 06            [24] 3091 	push	ar6
      000B05 78r00            [12] 3092 	mov	r0,#_queuebuf_to_packetbuf
      000B07 79s00            [12] 3093 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000B09 7As00            [12] 3094 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000B0B 12r00r00         [24] 3095 	lcall	__sdcc_banked_call
                                   3096 ;	../../../core/net/mac/cxmac.c:601: NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      000B0E 90r00r09         [24] 3097 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000B11 E4               [12] 3098 	clr	a
      000B12 93               [24] 3099 	movc	a,@a+dptr
      000B13 FA               [12] 3100 	mov	r2,a
      000B14 A3               [24] 3101 	inc	dptr
      000B15 E4               [12] 3102 	clr	a
      000B16 93               [24] 3103 	movc	a,@a+dptr
      000B17 FB               [12] 3104 	mov	r3,a
      000B18 A3               [24] 3105 	inc	dptr
      000B19 E4               [12] 3106 	clr	a
      000B1A 93               [24] 3107 	movc	a,@a+dptr
      000B1B FC               [12] 3108 	mov	r4,a
      000B1C C0 04            [24] 3109 	push	ar4
      000B1E C0 03            [24] 3110 	push	ar3
      000B20 C0 02            [24] 3111 	push	ar2
      000B22 78r00            [12] 3112 	mov	r0,#_packetbuf_totlen
      000B24 79s00            [12] 3113 	mov	r1,#(_packetbuf_totlen >> 8)
      000B26 7As00            [12] 3114 	mov	r2,#(_packetbuf_totlen >> 16)
      000B28 12r00r00         [24] 3115 	lcall	__sdcc_banked_call
      000B2B C8               [12] 3116 	xch	a,r0
      000B2C E5 81            [12] 3117 	mov	a,sp
      000B2E 24 AE            [12] 3118 	add	a,#0xae
      000B30 C8               [12] 3119 	xch	a,r0
      000B31 A6 82            [24] 3120 	mov	@r0,dpl
      000B33 08               [12] 3121 	inc	r0
      000B34 A6 83            [24] 3122 	mov	@r0,dph
      000B36 D0 02            [24] 3123 	pop	ar2
      000B38 D0 03            [24] 3124 	pop	ar3
      000B3A D0 04            [24] 3125 	pop	ar4
      000B3C D0 06            [24] 3126 	pop	ar6
      000B3E D0 07            [24] 3127 	pop	ar7
      000B40 C0 04            [24] 3128 	push	ar4
      000B42 C0 03            [24] 3129 	push	ar3
      000B44 C0 02            [24] 3130 	push	ar2
      000B46 78r00            [12] 3131 	mov	r0,#_packetbuf_hdrptr
      000B48 79s00            [12] 3132 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000B4A 7As00            [12] 3133 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000B4C 12r00r00         [24] 3134 	lcall	__sdcc_banked_call
      000B4F AD 82            [24] 3135 	mov	r5,dpl
      000B51 AE 83            [24] 3136 	mov	r6,dph
      000B53 AF F0            [24] 3137 	mov	r7,b
      000B55 D0 02            [24] 3138 	pop	ar2
      000B57 D0 03            [24] 3139 	pop	ar3
      000B59 D0 04            [24] 3140 	pop	ar4
      000B5B C0 07            [24] 3141 	push	ar7
      000B5D C0 06            [24] 3142 	push	ar6
      000B5F C0 04            [24] 3143 	push	ar4
      000B61 C0 03            [24] 3144 	push	ar3
      000B63 C0 02            [24] 3145 	push	ar2
      000B65 E5 81            [12] 3146 	mov	a,sp
      000B67 24 AE            [12] 3147 	add	a,#0xae
      000B69 F8               [12] 3148 	mov	r0,a
      000B6A E6               [12] 3149 	mov	a,@r0
      000B6B C0 E0            [24] 3150 	push	acc
      000B6D 08               [12] 3151 	inc	r0
      000B6E E6               [12] 3152 	mov	a,@r0
      000B6F C0 E0            [24] 3153 	push	acc
      000B71 C0 02            [24] 3154 	push	ar2
      000B73 C0 03            [24] 3155 	push	ar3
      000B75 C0 04            [24] 3156 	push	ar4
      000B77 8D 82            [24] 3157 	mov	dpl,r5
      000B79 8E 83            [24] 3158 	mov	dph,r6
      000B7B 8F F0            [24] 3159 	mov	b,r7
      000B7D D0 02            [24] 3160 	pop	ar2
      000B7F D0 01            [24] 3161 	pop	ar1
      000B81 D0 00            [24] 3162 	pop	ar0
      000B83 12r00r00         [24] 3163 	lcall	__sdcc_banked_call
      000B86 15 81            [12] 3164 	dec	sp
      000B88 15 81            [12] 3165 	dec	sp
      000B8A D0 02            [24] 3166 	pop	ar2
      000B8C D0 03            [24] 3167 	pop	ar3
      000B8E D0 04            [24] 3168 	pop	ar4
                                   3169 ;	../../../core/net/mac/cxmac.c:603: off();
      000B90 78r3E            [12] 3170 	mov	r0,#_off
      000B92 79s00            [12] 3171 	mov	r1,#(_off >> 8)
      000B94 7As00            [12] 3172 	mov	r2,#(_off >> 16)
      000B96 12r00r00         [24] 3173 	lcall	__sdcc_banked_call
      000B99 D0 06            [24] 3174 	pop	ar6
      000B9B D0 07            [24] 3175 	pop	ar7
      000B9D D0 07            [24] 3176 	pop	ar7
      000B9F D0 06            [24] 3177 	pop	ar6
      000BA1 02r08r58         [24] 3178 	ljmp	00178$
      000BA4                       3179 00143$:
                                   3180 ;	../../../core/net/mac/cxmac.c:605: NETSTACK_RADIO.send(strobe, strobe_len);
      000BA4 C0 06            [24] 3181 	push	ar6
      000BA6 C0 07            [24] 3182 	push	ar7
      000BA8 90r00r09         [24] 3183 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000BAB E4               [12] 3184 	clr	a
      000BAC 93               [24] 3185 	movc	a,@a+dptr
      000BAD FB               [12] 3186 	mov	r3,a
      000BAE A3               [24] 3187 	inc	dptr
      000BAF E4               [12] 3188 	clr	a
      000BB0 93               [24] 3189 	movc	a,@a+dptr
      000BB1 FC               [12] 3190 	mov	r4,a
      000BB2 A3               [24] 3191 	inc	dptr
      000BB3 E4               [12] 3192 	clr	a
      000BB4 93               [24] 3193 	movc	a,@a+dptr
      000BB5 FD               [12] 3194 	mov	r5,a
      000BB6 E5 81            [12] 3195 	mov	a,sp
      000BB8 24 B0            [12] 3196 	add	a,#0xb0
      000BBA F8               [12] 3197 	mov	r0,a
      000BBB 86 02            [24] 3198 	mov	ar2,@r0
      000BBD 7E 00            [12] 3199 	mov	r6,#0x00
      000BBF 7F 40            [12] 3200 	mov	r7,#0x40
      000BC1 C0 07            [24] 3201 	push	ar7
      000BC3 C0 06            [24] 3202 	push	ar6
      000BC5 C0 05            [24] 3203 	push	ar5
      000BC7 C0 04            [24] 3204 	push	ar4
      000BC9 C0 03            [24] 3205 	push	ar3
      000BCB E5 81            [12] 3206 	mov	a,sp
      000BCD 24 E9            [12] 3207 	add	a,#0xe9
      000BCF F8               [12] 3208 	mov	r0,a
      000BD0 E6               [12] 3209 	mov	a,@r0
      000BD1 C0 E0            [24] 3210 	push	acc
      000BD3 08               [12] 3211 	inc	r0
      000BD4 E6               [12] 3212 	mov	a,@r0
      000BD5 C0 E0            [24] 3213 	push	acc
      000BD7 C0 03            [24] 3214 	push	ar3
      000BD9 C0 04            [24] 3215 	push	ar4
      000BDB C0 05            [24] 3216 	push	ar5
      000BDD 8A 82            [24] 3217 	mov	dpl,r2
      000BDF 8E 83            [24] 3218 	mov	dph,r6
      000BE1 8F F0            [24] 3219 	mov	b,r7
      000BE3 D0 02            [24] 3220 	pop	ar2
      000BE5 D0 01            [24] 3221 	pop	ar1
      000BE7 D0 00            [24] 3222 	pop	ar0
      000BE9 12r00r00         [24] 3223 	lcall	__sdcc_banked_call
      000BEC 15 81            [12] 3224 	dec	sp
      000BEE 15 81            [12] 3225 	dec	sp
      000BF0 D0 03            [24] 3226 	pop	ar3
      000BF2 D0 04            [24] 3227 	pop	ar4
      000BF4 D0 05            [24] 3228 	pop	ar5
                                   3229 ;	../../../core/net/mac/cxmac.c:614: on();
      000BF6 78r00            [12] 3230 	mov	r0,#_on
      000BF8 79s00            [12] 3231 	mov	r1,#(_on >> 8)
      000BFA 7As00            [12] 3232 	mov	r2,#(_on >> 16)
      000BFC 12r00r00         [24] 3233 	lcall	__sdcc_banked_call
      000BFF D0 06            [24] 3234 	pop	ar6
      000C01 D0 07            [24] 3235 	pop	ar7
                                   3236 ;	../../../core/net/mac/cxmac.c:557: strobes++) {
      000C03 D0 07            [24] 3237 	pop	ar7
      000C05 D0 06            [24] 3238 	pop	ar6
      000C07 02r08r58         [24] 3239 	ljmp	00178$
      000C0A                       3240 00150$:
                                   3241 ;	../../../core/net/mac/cxmac.c:624: if(got_strobe_ack && (packetbuf_attr(PACKETBUF_ATTR_RELIABLE) ||
      000C0A E5 81            [12] 3242 	mov	a,sp
      000C0C 24 BC            [12] 3243 	add	a,#0xbc
      000C0E F8               [12] 3244 	mov	r0,a
      000C0F E6               [12] 3245 	mov	a,@r0
      000C10 08               [12] 3246 	inc	r0
      000C11 46               [12] 3247 	orl	a,@r0
      000C12 60 51            [24] 3248 	jz	00152$
      000C14 75 82 0C         [24] 3249 	mov	dpl,#0x0c
      000C17 78r00            [12] 3250 	mov	r0,#_packetbuf_attr
      000C19 79s00            [12] 3251 	mov	r1,#(_packetbuf_attr >> 8)
      000C1B 7As00            [12] 3252 	mov	r2,#(_packetbuf_attr >> 16)
      000C1D 12r00r00         [24] 3253 	lcall	__sdcc_banked_call
      000C20 E5 82            [12] 3254 	mov	a,dpl
      000C22 85 83 F0         [24] 3255 	mov	b,dph
      000C25 45 F0            [12] 3256 	orl	a,b
      000C27 70 2B            [24] 3257 	jnz	00151$
                                   3258 ;	../../../core/net/mac/cxmac.c:625: packetbuf_attr(PACKETBUF_ATTR_ERELIABLE) ||
      000C29 75 82 17         [24] 3259 	mov	dpl,#0x17
      000C2C 78r00            [12] 3260 	mov	r0,#_packetbuf_attr
      000C2E 79s00            [12] 3261 	mov	r1,#(_packetbuf_attr >> 8)
      000C30 7As00            [12] 3262 	mov	r2,#(_packetbuf_attr >> 16)
      000C32 12r00r00         [24] 3263 	lcall	__sdcc_banked_call
      000C35 E5 82            [12] 3264 	mov	a,dpl
      000C37 85 83 F0         [24] 3265 	mov	b,dph
      000C3A 45 F0            [12] 3266 	orl	a,b
      000C3C 70 16            [24] 3267 	jnz	00151$
                                   3268 ;	../../../core/net/mac/cxmac.c:626: packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
      000C3E 75 82 0E         [24] 3269 	mov	dpl,#0x0e
      000C41 78r00            [12] 3270 	mov	r0,#_packetbuf_attr
      000C43 79s00            [12] 3271 	mov	r1,#(_packetbuf_attr >> 8)
      000C45 7As00            [12] 3272 	mov	r2,#(_packetbuf_attr >> 16)
      000C47 12r00r00         [24] 3273 	lcall	__sdcc_banked_call
      000C4A AE 82            [24] 3274 	mov	r6,dpl
      000C4C AF 83            [24] 3275 	mov	r7,dph
      000C4E BE 02 14         [24] 3276 	cjne	r6,#0x02,00152$
      000C51 BF 00 11         [24] 3277 	cjne	r7,#0x00,00152$
      000C54                       3278 00151$:
                                   3279 ;	../../../core/net/mac/cxmac.c:628: on(); /* Wait for ACK packet */
      000C54 78r00            [12] 3280 	mov	r0,#_on
      000C56 79s00            [12] 3281 	mov	r1,#(_on >> 8)
      000C58 7As00            [12] 3282 	mov	r2,#(_on >> 16)
      000C5A 12r00r00         [24] 3283 	lcall	__sdcc_banked_call
                                   3284 ;	../../../core/net/mac/cxmac.c:629: waiting_for_packet = 1;
      000C5D 90r00r09         [24] 3285 	mov	dptr,#_waiting_for_packet
      000C60 74 01            [12] 3286 	mov	a,#0x01
      000C62 F0               [24] 3287 	movx	@dptr,a
      000C63 80 09            [24] 3288 	sjmp	00153$
      000C65                       3289 00152$:
                                   3290 ;	../../../core/net/mac/cxmac.c:631: off();
      000C65 78r3E            [12] 3291 	mov	r0,#_off
      000C67 79s00            [12] 3292 	mov	r1,#(_off >> 8)
      000C69 7As00            [12] 3293 	mov	r2,#(_off >> 16)
      000C6B 12r00r00         [24] 3294 	lcall	__sdcc_banked_call
      000C6E                       3295 00153$:
                                   3296 ;	../../../core/net/mac/cxmac.c:638: queuebuf_to_packetbuf(packet);
      000C6E E5 81            [12] 3297 	mov	a,sp
      000C70 24 F9            [12] 3298 	add	a,#0xf9
      000C72 F8               [12] 3299 	mov	r0,a
      000C73 86 82            [24] 3300 	mov	dpl,@r0
      000C75 08               [12] 3301 	inc	r0
      000C76 86 83            [24] 3302 	mov	dph,@r0
      000C78 08               [12] 3303 	inc	r0
      000C79 86 F0            [24] 3304 	mov	b,@r0
      000C7B 78r00            [12] 3305 	mov	r0,#_queuebuf_to_packetbuf
      000C7D 79s00            [12] 3306 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000C7F 7As00            [12] 3307 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000C81 12r00r00         [24] 3308 	lcall	__sdcc_banked_call
                                   3309 ;	../../../core/net/mac/cxmac.c:639: queuebuf_free(packet);
      000C84 E5 81            [12] 3310 	mov	a,sp
      000C86 24 F9            [12] 3311 	add	a,#0xf9
      000C88 F8               [12] 3312 	mov	r0,a
      000C89 86 82            [24] 3313 	mov	dpl,@r0
      000C8B 08               [12] 3314 	inc	r0
      000C8C 86 83            [24] 3315 	mov	dph,@r0
      000C8E 08               [12] 3316 	inc	r0
      000C8F 86 F0            [24] 3317 	mov	b,@r0
      000C91 78r00            [12] 3318 	mov	r0,#_queuebuf_free
      000C93 79s00            [12] 3319 	mov	r1,#(_queuebuf_free >> 8)
      000C95 7As00            [12] 3320 	mov	r2,#(_queuebuf_free >> 16)
      000C97 12r00r00         [24] 3321 	lcall	__sdcc_banked_call
                                   3322 ;	../../../core/net/mac/cxmac.c:642: if((is_broadcast || got_strobe_ack || is_streaming) && collisions == 0) {
      000C9A E5 81            [12] 3323 	mov	a,sp
      000C9C 24 F2            [12] 3324 	add	a,#0xf2
      000C9E F8               [12] 3325 	mov	r0,a
      000C9F E6               [12] 3326 	mov	a,@r0
      000CA0 08               [12] 3327 	inc	r0
      000CA1 46               [12] 3328 	orl	a,@r0
      000CA2 70 10            [24] 3329 	jnz	00161$
      000CA4 E5 81            [12] 3330 	mov	a,sp
      000CA6 24 BC            [12] 3331 	add	a,#0xbc
      000CA8 F8               [12] 3332 	mov	r0,a
      000CA9 E6               [12] 3333 	mov	a,@r0
      000CAA 08               [12] 3334 	inc	r0
      000CAB 46               [12] 3335 	orl	a,@r0
      000CAC 70 06            [24] 3336 	jnz	00161$
      000CAE 90r00r3B         [24] 3337 	mov	dptr,#_is_streaming
      000CB1 E0               [24] 3338 	movx	a,@dptr
      000CB2 60 75            [24] 3339 	jz	00158$
      000CB4                       3340 00161$:
      000CB4 A8 81            [24] 3341 	mov	r0,sp
      000CB6 18               [12] 3342 	dec	r0
      000CB7 18               [12] 3343 	dec	r0
      000CB8 E6               [12] 3344 	mov	a,@r0
      000CB9 70 6E            [24] 3345 	jnz	00158$
                                   3346 ;	../../../core/net/mac/cxmac.c:643: NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      000CBB 90r00r09         [24] 3347 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      000CBE E4               [12] 3348 	clr	a
      000CBF 93               [24] 3349 	movc	a,@a+dptr
      000CC0 FD               [12] 3350 	mov	r5,a
      000CC1 A3               [24] 3351 	inc	dptr
      000CC2 E4               [12] 3352 	clr	a
      000CC3 93               [24] 3353 	movc	a,@a+dptr
      000CC4 FE               [12] 3354 	mov	r6,a
      000CC5 A3               [24] 3355 	inc	dptr
      000CC6 E4               [12] 3356 	clr	a
      000CC7 93               [24] 3357 	movc	a,@a+dptr
      000CC8 FF               [12] 3358 	mov	r7,a
      000CC9 C0 07            [24] 3359 	push	ar7
      000CCB C0 06            [24] 3360 	push	ar6
      000CCD C0 05            [24] 3361 	push	ar5
      000CCF 78r00            [12] 3362 	mov	r0,#_packetbuf_totlen
      000CD1 79s00            [12] 3363 	mov	r1,#(_packetbuf_totlen >> 8)
      000CD3 7As00            [12] 3364 	mov	r2,#(_packetbuf_totlen >> 16)
      000CD5 12r00r00         [24] 3365 	lcall	__sdcc_banked_call
      000CD8 C8               [12] 3366 	xch	a,r0
      000CD9 E5 81            [12] 3367 	mov	a,sp
      000CDB 24 B2            [12] 3368 	add	a,#0xb2
      000CDD C8               [12] 3369 	xch	a,r0
      000CDE A6 82            [24] 3370 	mov	@r0,dpl
      000CE0 08               [12] 3371 	inc	r0
      000CE1 A6 83            [24] 3372 	mov	@r0,dph
      000CE3 78r00            [12] 3373 	mov	r0,#_packetbuf_hdrptr
      000CE5 79s00            [12] 3374 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000CE7 7As00            [12] 3375 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000CE9 12r00r00         [24] 3376 	lcall	__sdcc_banked_call
      000CEC AA 82            [24] 3377 	mov	r2,dpl
      000CEE AB 83            [24] 3378 	mov	r3,dph
      000CF0 AC F0            [24] 3379 	mov	r4,b
      000CF2 D0 05            [24] 3380 	pop	ar5
      000CF4 D0 06            [24] 3381 	pop	ar6
      000CF6 D0 07            [24] 3382 	pop	ar7
      000CF8 C0 07            [24] 3383 	push	ar7
      000CFA C0 06            [24] 3384 	push	ar6
      000CFC C0 05            [24] 3385 	push	ar5
      000CFE E5 81            [12] 3386 	mov	a,sp
      000D00 24 B2            [12] 3387 	add	a,#0xb2
      000D02 F8               [12] 3388 	mov	r0,a
      000D03 E6               [12] 3389 	mov	a,@r0
      000D04 C0 E0            [24] 3390 	push	acc
      000D06 08               [12] 3391 	inc	r0
      000D07 E6               [12] 3392 	mov	a,@r0
      000D08 C0 E0            [24] 3393 	push	acc
      000D0A C0 05            [24] 3394 	push	ar5
      000D0C C0 06            [24] 3395 	push	ar6
      000D0E C0 07            [24] 3396 	push	ar7
      000D10 8A 82            [24] 3397 	mov	dpl,r2
      000D12 8B 83            [24] 3398 	mov	dph,r3
      000D14 8C F0            [24] 3399 	mov	b,r4
      000D16 D0 02            [24] 3400 	pop	ar2
      000D18 D0 01            [24] 3401 	pop	ar1
      000D1A D0 00            [24] 3402 	pop	ar0
      000D1C 12r00r00         [24] 3403 	lcall	__sdcc_banked_call
      000D1F 15 81            [12] 3404 	dec	sp
      000D21 15 81            [12] 3405 	dec	sp
      000D23 D0 05            [24] 3406 	pop	ar5
      000D25 D0 06            [24] 3407 	pop	ar6
      000D27 D0 07            [24] 3408 	pop	ar7
      000D29                       3409 00158$:
                                   3410 ;	../../../core/net/mac/cxmac.c:647: if(got_strobe_ack && !is_streaming) {
      000D29 E5 81            [12] 3411 	mov	a,sp
      000D2B 24 BC            [12] 3412 	add	a,#0xbc
      000D2D F8               [12] 3413 	mov	r0,a
      000D2E E6               [12] 3414 	mov	a,@r0
      000D2F 08               [12] 3415 	inc	r0
      000D30 46               [12] 3416 	orl	a,@r0
      000D31 60 37            [24] 3417 	jz	00163$
      000D33 90r00r3B         [24] 3418 	mov	dptr,#_is_streaming
      000D36 E0               [24] 3419 	movx	a,@dptr
      000D37 70 31            [24] 3420 	jnz	00163$
                                   3421 ;	../../../core/net/mac/cxmac.c:648: register_encounter(packetbuf_addr(PACKETBUF_ADDR_RECEIVER), encounter_time);
      000D39 75 82 19         [24] 3422 	mov	dpl,#0x19
      000D3C 78r00            [12] 3423 	mov	r0,#_packetbuf_addr
      000D3E 79s00            [12] 3424 	mov	r1,#(_packetbuf_addr >> 8)
      000D40 7As00            [12] 3425 	mov	r2,#(_packetbuf_addr >> 16)
      000D42 12r00r00         [24] 3426 	lcall	__sdcc_banked_call
      000D45 AD 82            [24] 3427 	mov	r5,dpl
      000D47 AE 83            [24] 3428 	mov	r6,dph
      000D49 AF F0            [24] 3429 	mov	r7,b
      000D4B E5 81            [12] 3430 	mov	a,sp
      000D4D 24 BA            [12] 3431 	add	a,#0xba
      000D4F F8               [12] 3432 	mov	r0,a
      000D50 E6               [12] 3433 	mov	a,@r0
      000D51 C0 E0            [24] 3434 	push	acc
      000D53 08               [12] 3435 	inc	r0
      000D54 E6               [12] 3436 	mov	a,@r0
      000D55 C0 E0            [24] 3437 	push	acc
      000D57 8D 82            [24] 3438 	mov	dpl,r5
      000D59 8E 83            [24] 3439 	mov	dph,r6
      000D5B 8F F0            [24] 3440 	mov	b,r7
      000D5D 78r23            [12] 3441 	mov	r0,#_register_encounter
      000D5F 79s02            [12] 3442 	mov	r1,#(_register_encounter >> 8)
      000D61 7As00            [12] 3443 	mov	r2,#(_register_encounter >> 16)
      000D63 12r00r00         [24] 3444 	lcall	__sdcc_banked_call
      000D66 15 81            [12] 3445 	dec	sp
      000D68 15 81            [12] 3446 	dec	sp
      000D6A                       3447 00163$:
                                   3448 ;	../../../core/net/mac/cxmac.c:651: watchdog_start();
      000D6A 78r00            [12] 3449 	mov	r0,#_watchdog_start
      000D6C 79s00            [12] 3450 	mov	r1,#(_watchdog_start >> 8)
      000D6E 7As00            [12] 3451 	mov	r2,#(_watchdog_start >> 16)
      000D70 12r00r00         [24] 3452 	lcall	__sdcc_banked_call
                                   3453 ;	../../../core/net/mac/cxmac.c:671: we_are_sending = 0;
      000D73 90r00r0B         [24] 3454 	mov	dptr,#_we_are_sending
      000D76 E4               [12] 3455 	clr	a
      000D77 F0               [24] 3456 	movx	@dptr,a
                                   3457 ;	../../../core/net/mac/cxmac.c:674: if(collisions == 0) {
      000D78 A8 81            [24] 3458 	mov	r0,sp
      000D7A 18               [12] 3459 	dec	r0
      000D7B 18               [12] 3460 	dec	r0
      000D7C E6               [12] 3461 	mov	a,@r0
      000D7D 70 1E            [24] 3462 	jnz	00170$
                                   3463 ;	../../../core/net/mac/cxmac.c:675: if(!is_broadcast && !got_strobe_ack) {
      000D7F E5 81            [12] 3464 	mov	a,sp
      000D81 24 F2            [12] 3465 	add	a,#0xf2
      000D83 F8               [12] 3466 	mov	r0,a
      000D84 E6               [12] 3467 	mov	a,@r0
      000D85 08               [12] 3468 	inc	r0
      000D86 46               [12] 3469 	orl	a,@r0
      000D87 70 0F            [24] 3470 	jnz	00166$
      000D89 E5 81            [12] 3471 	mov	a,sp
      000D8B 24 BC            [12] 3472 	add	a,#0xbc
      000D8D F8               [12] 3473 	mov	r0,a
      000D8E E6               [12] 3474 	mov	a,@r0
      000D8F 08               [12] 3475 	inc	r0
      000D90 46               [12] 3476 	orl	a,@r0
      000D91 70 05            [24] 3477 	jnz	00166$
                                   3478 ;	../../../core/net/mac/cxmac.c:676: return MAC_TX_NOACK;
      000D93 90 00 02         [24] 3479 	mov	dptr,#0x0002
      000D96 80 0F            [24] 3480 	sjmp	00180$
      000D98                       3481 00166$:
                                   3482 ;	../../../core/net/mac/cxmac.c:678: return MAC_TX_OK;
      000D98 90 00 00         [24] 3483 	mov	dptr,#0x0000
      000D9B 80 0A            [24] 3484 	sjmp	00180$
      000D9D                       3485 00170$:
                                   3486 ;	../../../core/net/mac/cxmac.c:681: someone_is_sending++;
      000D9D 90r00r0A         [24] 3487 	mov	dptr,#_someone_is_sending
      000DA0 E0               [24] 3488 	movx	a,@dptr
      000DA1 24 01            [12] 3489 	add	a,#0x01
      000DA3 F0               [24] 3490 	movx	@dptr,a
                                   3491 ;	../../../core/net/mac/cxmac.c:682: return MAC_TX_COLLISION;
      000DA4 90 00 01         [24] 3492 	mov	dptr,#0x0001
      000DA7                       3493 00180$:
                                   3494 ;	../../../core/net/mac/cxmac.c:685: }
      000DA7 E5 81            [12] 3495 	mov	a,sp
      000DA9 24 B1            [12] 3496 	add	a,#0xb1
      000DAB F5 81            [12] 3497 	mov	sp,a
      000DAD 02r00r00         [24] 3498 	ljmp	__sdcc_banked_ret
                                   3499 ;------------------------------------------------------------
                                   3500 ;Allocation info for local variables in function 'qsend_packet'
                                   3501 ;------------------------------------------------------------
                                   3502 ;ptr                       Allocated to stack - sp -7
                                   3503 ;sent                      Allocated to registers r5 r6 r7 
                                   3504 ;ret                       Allocated to stack - sp -1
                                   3505 ;sloc0                     Allocated to stack - sp -1
                                   3506 ;------------------------------------------------------------
                                   3507 ;	../../../core/net/mac/cxmac.c:688: qsend_packet(mac_callback_t sent, void *ptr)
                                   3508 ;	-----------------------------------------
                                   3509 ;	 function qsend_packet
                                   3510 ;	-----------------------------------------
      000DB0                       3511 _qsend_packet:
      000DB0 05 81            [12] 3512 	inc	sp
      000DB2 05 81            [12] 3513 	inc	sp
      000DB4 AD 82            [24] 3514 	mov	r5,dpl
      000DB6 AE 83            [24] 3515 	mov	r6,dph
      000DB8 AF F0            [24] 3516 	mov	r7,b
                                   3517 ;	../../../core/net/mac/cxmac.c:691: if(someone_is_sending) {
      000DBA 90r00r0A         [24] 3518 	mov	dptr,#_someone_is_sending
      000DBD E0               [24] 3519 	movx	a,@dptr
      000DBE 60 41            [24] 3520 	jz	00102$
                                   3521 ;	../../../core/net/mac/cxmac.c:694: RIMESTATS_ADD(sendingdrop);
      000DC0 C0 05            [24] 3522 	push	ar5
      000DC2 C0 06            [24] 3523 	push	ar6
      000DC4 C0 07            [24] 3524 	push	ar7
      000DC6 90r00r3C         [24] 3525 	mov	dptr,#(_rimestats + 0x003c)
      000DC9 E0               [24] 3526 	movx	a,@dptr
      000DCA FA               [12] 3527 	mov	r2,a
      000DCB A3               [24] 3528 	inc	dptr
      000DCC E0               [24] 3529 	movx	a,@dptr
      000DCD FB               [12] 3530 	mov	r3,a
      000DCE A3               [24] 3531 	inc	dptr
      000DCF E0               [24] 3532 	movx	a,@dptr
      000DD0 FC               [12] 3533 	mov	r4,a
      000DD1 A3               [24] 3534 	inc	dptr
      000DD2 E0               [24] 3535 	movx	a,@dptr
      000DD3 FF               [12] 3536 	mov	r7,a
      000DD4 0A               [12] 3537 	inc	r2
      000DD5 BA 00 09         [24] 3538 	cjne	r2,#0x00,00120$
      000DD8 0B               [12] 3539 	inc	r3
      000DD9 BB 00 05         [24] 3540 	cjne	r3,#0x00,00120$
      000DDC 0C               [12] 3541 	inc	r4
      000DDD BC 00 01         [24] 3542 	cjne	r4,#0x00,00120$
      000DE0 0F               [12] 3543 	inc	r7
      000DE1                       3544 00120$:
      000DE1 90r00r3C         [24] 3545 	mov	dptr,#(_rimestats + 0x003c)
      000DE4 EA               [12] 3546 	mov	a,r2
      000DE5 F0               [24] 3547 	movx	@dptr,a
      000DE6 EB               [12] 3548 	mov	a,r3
      000DE7 A3               [24] 3549 	inc	dptr
      000DE8 F0               [24] 3550 	movx	@dptr,a
      000DE9 EC               [12] 3551 	mov	a,r4
      000DEA A3               [24] 3552 	inc	dptr
      000DEB F0               [24] 3553 	movx	@dptr,a
      000DEC EF               [12] 3554 	mov	a,r7
      000DED A3               [24] 3555 	inc	dptr
      000DEE F0               [24] 3556 	movx	@dptr,a
                                   3557 ;	../../../core/net/mac/cxmac.c:695: ret = MAC_TX_COLLISION;
      000DEF E5 81            [12] 3558 	mov	a,sp
      000DF1 24 FC            [12] 3559 	add	a,#0xfc
      000DF3 F8               [12] 3560 	mov	r0,a
      000DF4 76 01            [12] 3561 	mov	@r0,#0x01
      000DF6 08               [12] 3562 	inc	r0
      000DF7 76 00            [12] 3563 	mov	@r0,#0x00
      000DF9 D0 07            [24] 3564 	pop	ar7
      000DFB D0 06            [24] 3565 	pop	ar6
      000DFD D0 05            [24] 3566 	pop	ar5
      000DFF 80 21            [24] 3567 	sjmp	00106$
      000E01                       3568 00102$:
                                   3569 ;	../../../core/net/mac/cxmac.c:698: ret = send_packet();
      000E01 C0 07            [24] 3570 	push	ar7
      000E03 C0 06            [24] 3571 	push	ar6
      000E05 C0 05            [24] 3572 	push	ar5
      000E07 78r7D            [12] 3573 	mov	r0,#_send_packet
      000E09 79s03            [12] 3574 	mov	r1,#(_send_packet >> 8)
      000E0B 7As00            [12] 3575 	mov	r2,#(_send_packet >> 16)
      000E0D 12r00r00         [24] 3576 	lcall	__sdcc_banked_call
      000E10 AB 82            [24] 3577 	mov	r3,dpl
      000E12 AC 83            [24] 3578 	mov	r4,dph
      000E14 D0 05            [24] 3579 	pop	ar5
      000E16 D0 06            [24] 3580 	pop	ar6
      000E18 D0 07            [24] 3581 	pop	ar7
      000E1A A8 81            [24] 3582 	mov	r0,sp
      000E1C 18               [12] 3583 	dec	r0
      000E1D A6 03            [24] 3584 	mov	@r0,ar3
      000E1F 08               [12] 3585 	inc	r0
      000E20 A6 04            [24] 3586 	mov	@r0,ar4
                                   3587 ;	../../../core/net/mac/cxmac.c:701: mac_call_sent_callback(sent, ptr, ret, 1);
      000E22                       3588 00106$:
      000E22 ED               [12] 3589 	mov	a,r5
      000E23 4E               [12] 3590 	orl	a,r6
      000E24 60 41            [24] 3591 	jz	00109$
      000E26 C0 07            [24] 3592 	push	ar7
      000E28 C0 06            [24] 3593 	push	ar6
      000E2A C0 05            [24] 3594 	push	ar5
      000E2C 74 01            [12] 3595 	mov	a,#0x01
      000E2E C0 E0            [24] 3596 	push	acc
      000E30 E4               [12] 3597 	clr	a
      000E31 C0 E0            [24] 3598 	push	acc
      000E33 E5 81            [12] 3599 	mov	a,sp
      000E35 24 FA            [12] 3600 	add	a,#0xfa
      000E37 F8               [12] 3601 	mov	r0,a
      000E38 E6               [12] 3602 	mov	a,@r0
      000E39 C0 E0            [24] 3603 	push	acc
      000E3B 08               [12] 3604 	inc	r0
      000E3C E6               [12] 3605 	mov	a,@r0
      000E3D C0 E0            [24] 3606 	push	acc
      000E3F C0 05            [24] 3607 	push	ar5
      000E41 C0 06            [24] 3608 	push	ar6
      000E43 C0 07            [24] 3609 	push	ar7
      000E45 E5 81            [12] 3610 	mov	a,sp
      000E47 24 EF            [12] 3611 	add	a,#0xef
      000E49 F8               [12] 3612 	mov	r0,a
      000E4A 86 82            [24] 3613 	mov	dpl,@r0
      000E4C 08               [12] 3614 	inc	r0
      000E4D 86 83            [24] 3615 	mov	dph,@r0
      000E4F 08               [12] 3616 	inc	r0
      000E50 86 F0            [24] 3617 	mov	b,@r0
      000E52 D0 02            [24] 3618 	pop	ar2
      000E54 D0 01            [24] 3619 	pop	ar1
      000E56 D0 00            [24] 3620 	pop	ar0
      000E58 12r00r00         [24] 3621 	lcall	__sdcc_banked_call
      000E5B E5 81            [12] 3622 	mov	a,sp
      000E5D 24 FC            [12] 3623 	add	a,#0xfc
      000E5F F5 81            [12] 3624 	mov	sp,a
      000E61 D0 05            [24] 3625 	pop	ar5
      000E63 D0 06            [24] 3626 	pop	ar6
      000E65 D0 07            [24] 3627 	pop	ar7
      000E67                       3628 00109$:
                                   3629 ;	../../../core/net/mac/cxmac.c:702: }
      000E67 15 81            [12] 3630 	dec	sp
      000E69 15 81            [12] 3631 	dec	sp
      000E6B 02r00r00         [24] 3632 	ljmp	__sdcc_banked_ret
                                   3633 ;------------------------------------------------------------
                                   3634 ;Allocation info for local variables in function 'qsend_list'
                                   3635 ;------------------------------------------------------------
                                   3636 ;ptr                       Allocated to stack - sp -5
                                   3637 ;buf_list                  Allocated to stack - sp -8
                                   3638 ;sent                      Allocated to registers r5 r6 r7 
                                   3639 ;------------------------------------------------------------
                                   3640 ;	../../../core/net/mac/cxmac.c:705: qsend_list(mac_callback_t sent, void *ptr, struct rdc_buf_list *buf_list)
                                   3641 ;	-----------------------------------------
                                   3642 ;	 function qsend_list
                                   3643 ;	-----------------------------------------
      000E6E                       3644 _qsend_list:
      000E6E AD 82            [24] 3645 	mov	r5,dpl
      000E70 AE 83            [24] 3646 	mov	r6,dph
      000E72 AF F0            [24] 3647 	mov	r7,b
                                   3648 ;	../../../core/net/mac/cxmac.c:707: if(buf_list != NULL) {
      000E74 E5 81            [12] 3649 	mov	a,sp
      000E76 24 F8            [12] 3650 	add	a,#0xf8
      000E78 F8               [12] 3651 	mov	r0,a
      000E79 E6               [12] 3652 	mov	a,@r0
      000E7A 08               [12] 3653 	inc	r0
      000E7B 46               [12] 3654 	orl	a,@r0
      000E7C 60 68            [24] 3655 	jz	00103$
                                   3656 ;	../../../core/net/mac/cxmac.c:708: queuebuf_to_packetbuf(buf_list->buf);
      000E7E E5 81            [12] 3657 	mov	a,sp
      000E80 24 F8            [12] 3658 	add	a,#0xf8
      000E82 F8               [12] 3659 	mov	r0,a
      000E83 86 02            [24] 3660 	mov	ar2,@r0
      000E85 08               [12] 3661 	inc	r0
      000E86 86 03            [24] 3662 	mov	ar3,@r0
      000E88 08               [12] 3663 	inc	r0
      000E89 86 04            [24] 3664 	mov	ar4,@r0
      000E8B 74 03            [12] 3665 	mov	a,#0x03
      000E8D 2A               [12] 3666 	add	a,r2
      000E8E FA               [12] 3667 	mov	r2,a
      000E8F E4               [12] 3668 	clr	a
      000E90 3B               [12] 3669 	addc	a,r3
      000E91 FB               [12] 3670 	mov	r3,a
      000E92 8A 82            [24] 3671 	mov	dpl,r2
      000E94 8B 83            [24] 3672 	mov	dph,r3
      000E96 8C F0            [24] 3673 	mov	b,r4
      000E98 12r00r00         [24] 3674 	lcall	__gptrget
      000E9B FA               [12] 3675 	mov	r2,a
      000E9C A3               [24] 3676 	inc	dptr
      000E9D 12r00r00         [24] 3677 	lcall	__gptrget
      000EA0 FB               [12] 3678 	mov	r3,a
      000EA1 A3               [24] 3679 	inc	dptr
      000EA2 12r00r00         [24] 3680 	lcall	__gptrget
      000EA5 FC               [12] 3681 	mov	r4,a
      000EA6 8A 82            [24] 3682 	mov	dpl,r2
      000EA8 8B 83            [24] 3683 	mov	dph,r3
      000EAA 8C F0            [24] 3684 	mov	b,r4
      000EAC C0 07            [24] 3685 	push	ar7
      000EAE C0 06            [24] 3686 	push	ar6
      000EB0 C0 05            [24] 3687 	push	ar5
      000EB2 78r00            [12] 3688 	mov	r0,#_queuebuf_to_packetbuf
      000EB4 79s00            [12] 3689 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      000EB6 7As00            [12] 3690 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      000EB8 12r00r00         [24] 3691 	lcall	__sdcc_banked_call
      000EBB D0 05            [24] 3692 	pop	ar5
      000EBD D0 06            [24] 3693 	pop	ar6
      000EBF D0 07            [24] 3694 	pop	ar7
                                   3695 ;	../../../core/net/mac/cxmac.c:709: qsend_packet(sent, ptr);
      000EC1 E5 81            [12] 3696 	mov	a,sp
      000EC3 24 FB            [12] 3697 	add	a,#0xfb
      000EC5 F8               [12] 3698 	mov	r0,a
      000EC6 E6               [12] 3699 	mov	a,@r0
      000EC7 C0 E0            [24] 3700 	push	acc
      000EC9 08               [12] 3701 	inc	r0
      000ECA E6               [12] 3702 	mov	a,@r0
      000ECB C0 E0            [24] 3703 	push	acc
      000ECD 08               [12] 3704 	inc	r0
      000ECE E6               [12] 3705 	mov	a,@r0
      000ECF C0 E0            [24] 3706 	push	acc
      000ED1 8D 82            [24] 3707 	mov	dpl,r5
      000ED3 8E 83            [24] 3708 	mov	dph,r6
      000ED5 8F F0            [24] 3709 	mov	b,r7
      000ED7 78rB0            [12] 3710 	mov	r0,#_qsend_packet
      000ED9 79s0D            [12] 3711 	mov	r1,#(_qsend_packet >> 8)
      000EDB 7As00            [12] 3712 	mov	r2,#(_qsend_packet >> 16)
      000EDD 12r00r00         [24] 3713 	lcall	__sdcc_banked_call
      000EE0 15 81            [12] 3714 	dec	sp
      000EE2 15 81            [12] 3715 	dec	sp
      000EE4 15 81            [12] 3716 	dec	sp
      000EE6                       3717 00103$:
                                   3718 ;	../../../core/net/mac/cxmac.c:711: }
      000EE6 02r00r00         [24] 3719 	ljmp	__sdcc_banked_ret
                                   3720 ;------------------------------------------------------------
                                   3721 ;Allocation info for local variables in function 'input_packet'
                                   3722 ;------------------------------------------------------------
                                   3723 ;hdr                       Allocated to registers r5 r6 r7 
                                   3724 ;sloc0                     Allocated to stack - sp -1
                                   3725 ;------------------------------------------------------------
                                   3726 ;	../../../core/net/mac/cxmac.c:714: input_packet(void)
                                   3727 ;	-----------------------------------------
                                   3728 ;	 function input_packet
                                   3729 ;	-----------------------------------------
      000EE9                       3730 _input_packet:
      000EE9 05 81            [12] 3731 	inc	sp
      000EEB 05 81            [12] 3732 	inc	sp
                                   3733 ;	../../../core/net/mac/cxmac.c:718: if(NETSTACK_FRAMER.parse() >= 0) {
      000EED 90r00r03         [24] 3734 	mov	dptr,#(_framer_802154 + 0x0003)
      000EF0 E4               [12] 3735 	clr	a
      000EF1 93               [24] 3736 	movc	a,@a+dptr
      000EF2 FD               [12] 3737 	mov	r5,a
      000EF3 A3               [24] 3738 	inc	dptr
      000EF4 E4               [12] 3739 	clr	a
      000EF5 93               [24] 3740 	movc	a,@a+dptr
      000EF6 FE               [12] 3741 	mov	r6,a
      000EF7 A3               [24] 3742 	inc	dptr
      000EF8 E4               [12] 3743 	clr	a
      000EF9 93               [24] 3744 	movc	a,@a+dptr
      000EFA FF               [12] 3745 	mov	r7,a
      000EFB C0 07            [24] 3746 	push	ar7
      000EFD C0 05            [24] 3747 	push	ar5
      000EFF C0 06            [24] 3748 	push	ar6
      000F01 C0 07            [24] 3749 	push	ar7
      000F03 D0 02            [24] 3750 	pop	ar2
      000F05 D0 01            [24] 3751 	pop	ar1
      000F07 D0 00            [24] 3752 	pop	ar0
      000F09 12r00r00         [24] 3753 	lcall	__sdcc_banked_call
      000F0C AD 82            [24] 3754 	mov	r5,dpl
      000F0E AE 83            [24] 3755 	mov	r6,dph
      000F10 D0 07            [24] 3756 	pop	ar7
      000F12 EE               [12] 3757 	mov	a,r6
      000F13 30 E7 03         [24] 3758 	jnb	acc.7,00149$
      000F16 02r11rA9         [24] 3759 	ljmp	00119$
      000F19                       3760 00149$:
                                   3761 ;	../../../core/net/mac/cxmac.c:719: hdr = packetbuf_dataptr();
      000F19 78r00            [12] 3762 	mov	r0,#_packetbuf_dataptr
      000F1B 79s00            [12] 3763 	mov	r1,#(_packetbuf_dataptr >> 8)
      000F1D 7As00            [12] 3764 	mov	r2,#(_packetbuf_dataptr >> 16)
      000F1F 12r00r00         [24] 3765 	lcall	__sdcc_banked_call
                                   3766 ;	../../../core/net/mac/cxmac.c:721: if(hdr->dispatch != DISPATCH) {
      000F22 AD 82            [24] 3767 	mov	r5,dpl
      000F24 AE 83            [24] 3768 	mov	r6,dph
      000F26 AF F0            [24] 3769 	mov	r7,b
      000F28 12r00r00         [24] 3770 	lcall	__gptrget
      000F2B 70 03            [24] 3771 	jnz	00150$
      000F2D 02r0FrE6         [24] 3772 	ljmp	00115$
      000F30                       3773 00150$:
                                   3774 ;	../../../core/net/mac/cxmac.c:722: someone_is_sending = 0;
      000F30 90r00r0A         [24] 3775 	mov	dptr,#_someone_is_sending
      000F33 E4               [12] 3776 	clr	a
      000F34 F0               [24] 3777 	movx	@dptr,a
                                   3778 ;	../../../core/net/mac/cxmac.c:724: &rimeaddr_node_addr) ||
                                   3779 ;	../../../core/net/mac/cxmac.c:723: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000F35 75 82 19         [24] 3780 	mov	dpl,#0x19
      000F38 78r00            [12] 3781 	mov	r0,#_packetbuf_addr
      000F3A 79s00            [12] 3782 	mov	r1,#(_packetbuf_addr >> 8)
      000F3C 7As00            [12] 3783 	mov	r2,#(_packetbuf_addr >> 16)
      000F3E 12r00r00         [24] 3784 	lcall	__sdcc_banked_call
      000F41 AA 82            [24] 3785 	mov	r2,dpl
      000F43 AB 83            [24] 3786 	mov	r3,dph
      000F45 AC F0            [24] 3787 	mov	r4,b
      000F47 74r00            [12] 3788 	mov	a,#_rimeaddr_node_addr
      000F49 C0 E0            [24] 3789 	push	acc
      000F4B 74s00            [12] 3790 	mov	a,#(_rimeaddr_node_addr >> 8)
      000F4D C0 E0            [24] 3791 	push	acc
      000F4F E4               [12] 3792 	clr	a
      000F50 C0 E0            [24] 3793 	push	acc
      000F52 8A 82            [24] 3794 	mov	dpl,r2
      000F54 8B 83            [24] 3795 	mov	dph,r3
      000F56 8C F0            [24] 3796 	mov	b,r4
      000F58 78r00            [12] 3797 	mov	r0,#_rimeaddr_cmp
      000F5A 79s00            [12] 3798 	mov	r1,#(_rimeaddr_cmp >> 8)
      000F5C 7As00            [12] 3799 	mov	r2,#(_rimeaddr_cmp >> 16)
      000F5E 12r00r00         [24] 3800 	lcall	__sdcc_banked_call
      000F61 AB 82            [24] 3801 	mov	r3,dpl
      000F63 AC 83            [24] 3802 	mov	r4,dph
      000F65 15 81            [12] 3803 	dec	sp
      000F67 15 81            [12] 3804 	dec	sp
      000F69 15 81            [12] 3805 	dec	sp
      000F6B EB               [12] 3806 	mov	a,r3
      000F6C 4C               [12] 3807 	orl	a,r4
      000F6D 70 3E            [24] 3808 	jnz	00101$
                                   3809 ;	../../../core/net/mac/cxmac.c:726: &rimeaddr_null)) {
                                   3810 ;	../../../core/net/mac/cxmac.c:725: rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      000F6F 75 82 19         [24] 3811 	mov	dpl,#0x19
      000F72 78r00            [12] 3812 	mov	r0,#_packetbuf_addr
      000F74 79s00            [12] 3813 	mov	r1,#(_packetbuf_addr >> 8)
      000F76 7As00            [12] 3814 	mov	r2,#(_packetbuf_addr >> 16)
      000F78 12r00r00         [24] 3815 	lcall	__sdcc_banked_call
      000F7B AA 82            [24] 3816 	mov	r2,dpl
      000F7D AB 83            [24] 3817 	mov	r3,dph
      000F7F AC F0            [24] 3818 	mov	r4,b
      000F81 74r00            [12] 3819 	mov	a,#_rimeaddr_null
      000F83 C0 E0            [24] 3820 	push	acc
      000F85 74s00            [12] 3821 	mov	a,#(_rimeaddr_null >> 8)
      000F87 C0 E0            [24] 3822 	push	acc
      000F89 74 80            [12] 3823 	mov	a,#0x80
      000F8B C0 E0            [24] 3824 	push	acc
      000F8D 8A 82            [24] 3825 	mov	dpl,r2
      000F8F 8B 83            [24] 3826 	mov	dph,r3
      000F91 8C F0            [24] 3827 	mov	b,r4
      000F93 78r00            [12] 3828 	mov	r0,#_rimeaddr_cmp
      000F95 79s00            [12] 3829 	mov	r1,#(_rimeaddr_cmp >> 8)
      000F97 7As00            [12] 3830 	mov	r2,#(_rimeaddr_cmp >> 16)
      000F99 12r00r00         [24] 3831 	lcall	__sdcc_banked_call
      000F9C AB 82            [24] 3832 	mov	r3,dpl
      000F9E AC 83            [24] 3833 	mov	r4,dph
      000FA0 15 81            [12] 3834 	dec	sp
      000FA2 15 81            [12] 3835 	dec	sp
      000FA4 15 81            [12] 3836 	dec	sp
      000FA6 EB               [12] 3837 	mov	a,r3
      000FA7 4C               [12] 3838 	orl	a,r4
      000FA8 70 03            [24] 3839 	jnz	00152$
      000FAA 02r11rA9         [24] 3840 	ljmp	00119$
      000FAD                       3841 00152$:
      000FAD                       3842 00101$:
                                   3843 ;	../../../core/net/mac/cxmac.c:732: off();
      000FAD 78r3E            [12] 3844 	mov	r0,#_off
      000FAF 79s00            [12] 3845 	mov	r1,#(_off >> 8)
      000FB1 7As00            [12] 3846 	mov	r2,#(_off >> 16)
      000FB3 12r00r00         [24] 3847 	lcall	__sdcc_banked_call
                                   3848 ;	../../../core/net/mac/cxmac.c:748: waiting_for_packet = 0;
      000FB6 90r00r09         [24] 3849 	mov	dptr,#_waiting_for_packet
      000FB9 E4               [12] 3850 	clr	a
      000FBA F0               [24] 3851 	movx	@dptr,a
                                   3852 ;	../../../core/net/mac/cxmac.c:751: NETSTACK_MAC.input();
      000FBB 90r00r09         [24] 3853 	mov	dptr,#(_csma_driver + 0x0009)
                                   3854 ;	genFromRTrack removed	clr	a
      000FBE 93               [24] 3855 	movc	a,@a+dptr
      000FBF FA               [12] 3856 	mov	r2,a
      000FC0 A3               [24] 3857 	inc	dptr
      000FC1 E4               [12] 3858 	clr	a
      000FC2 93               [24] 3859 	movc	a,@a+dptr
      000FC3 FB               [12] 3860 	mov	r3,a
      000FC4 A3               [24] 3861 	inc	dptr
      000FC5 E4               [12] 3862 	clr	a
      000FC6 93               [24] 3863 	movc	a,@a+dptr
      000FC7 FC               [12] 3864 	mov	r4,a
      000FC8 C0 04            [24] 3865 	push	ar4
      000FCA C0 03            [24] 3866 	push	ar3
      000FCC C0 02            [24] 3867 	push	ar2
      000FCE C0 02            [24] 3868 	push	ar2
      000FD0 C0 03            [24] 3869 	push	ar3
      000FD2 C0 04            [24] 3870 	push	ar4
      000FD4 D0 02            [24] 3871 	pop	ar2
      000FD6 D0 01            [24] 3872 	pop	ar1
      000FD8 D0 00            [24] 3873 	pop	ar0
      000FDA 12r00r00         [24] 3874 	lcall	__sdcc_banked_call
      000FDD D0 02            [24] 3875 	pop	ar2
      000FDF D0 03            [24] 3876 	pop	ar3
      000FE1 D0 04            [24] 3877 	pop	ar4
                                   3878 ;	../../../core/net/mac/cxmac.c:752: return;
      000FE3 02r11rA9         [24] 3879 	ljmp	00119$
      000FE6                       3880 00115$:
                                   3881 ;	../../../core/net/mac/cxmac.c:757: } else if(hdr->type == TYPE_STROBE) {
      000FE6 74 01            [12] 3882 	mov	a,#0x01
      000FE8 2D               [12] 3883 	add	a,r5
      000FE9 FA               [12] 3884 	mov	r2,a
      000FEA E4               [12] 3885 	clr	a
      000FEB 3E               [12] 3886 	addc	a,r6
      000FEC FB               [12] 3887 	mov	r3,a
      000FED 8F 04            [24] 3888 	mov	ar4,r7
      000FEF 8A 82            [24] 3889 	mov	dpl,r2
      000FF1 8B 83            [24] 3890 	mov	dph,r3
      000FF3 8C F0            [24] 3891 	mov	b,r4
      000FF5 12r00r00         [24] 3892 	lcall	__gptrget
      000FF8 FA               [12] 3893 	mov	r2,a
      000FF9 BA 10 02         [24] 3894 	cjne	r2,#0x10,00153$
      000FFC 80 03            [24] 3895 	sjmp	00154$
      000FFE                       3896 00153$:
      000FFE 02r11rA9         [24] 3897 	ljmp	00119$
      001001                       3898 00154$:
                                   3899 ;	../../../core/net/mac/cxmac.c:758: someone_is_sending = 2;
      001001 90r00r0A         [24] 3900 	mov	dptr,#_someone_is_sending
      001004 74 02            [12] 3901 	mov	a,#0x02
      001006 F0               [24] 3902 	movx	@dptr,a
                                   3903 ;	../../../core/net/mac/cxmac.c:761: &rimeaddr_node_addr)) {
                                   3904 ;	../../../core/net/mac/cxmac.c:760: if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      001007 75 82 19         [24] 3905 	mov	dpl,#0x19
      00100A C0 07            [24] 3906 	push	ar7
      00100C C0 06            [24] 3907 	push	ar6
      00100E C0 05            [24] 3908 	push	ar5
      001010 78r00            [12] 3909 	mov	r0,#_packetbuf_addr
      001012 79s00            [12] 3910 	mov	r1,#(_packetbuf_addr >> 8)
      001014 7As00            [12] 3911 	mov	r2,#(_packetbuf_addr >> 16)
      001016 12r00r00         [24] 3912 	lcall	__sdcc_banked_call
      001019 AA 82            [24] 3913 	mov	r2,dpl
      00101B AB 83            [24] 3914 	mov	r3,dph
      00101D AC F0            [24] 3915 	mov	r4,b
      00101F 74r00            [12] 3916 	mov	a,#_rimeaddr_node_addr
      001021 C0 E0            [24] 3917 	push	acc
      001023 74s00            [12] 3918 	mov	a,#(_rimeaddr_node_addr >> 8)
      001025 C0 E0            [24] 3919 	push	acc
      001027 E4               [12] 3920 	clr	a
      001028 C0 E0            [24] 3921 	push	acc
      00102A 8A 82            [24] 3922 	mov	dpl,r2
      00102C 8B 83            [24] 3923 	mov	dph,r3
      00102E 8C F0            [24] 3924 	mov	b,r4
      001030 78r00            [12] 3925 	mov	r0,#_rimeaddr_cmp
      001032 79s00            [12] 3926 	mov	r1,#(_rimeaddr_cmp >> 8)
      001034 7As00            [12] 3927 	mov	r2,#(_rimeaddr_cmp >> 16)
      001036 12r00r00         [24] 3928 	lcall	__sdcc_banked_call
      001039 AB 82            [24] 3929 	mov	r3,dpl
      00103B AC 83            [24] 3930 	mov	r4,dph
      00103D 15 81            [12] 3931 	dec	sp
      00103F 15 81            [12] 3932 	dec	sp
      001041 15 81            [12] 3933 	dec	sp
      001043 D0 05            [24] 3934 	pop	ar5
      001045 D0 06            [24] 3935 	pop	ar6
      001047 D0 07            [24] 3936 	pop	ar7
      001049 EB               [12] 3937 	mov	a,r3
      00104A 4C               [12] 3938 	orl	a,r4
      00104B 70 03            [24] 3939 	jnz	00155$
      00104D 02r11r5F         [24] 3940 	ljmp	00109$
      001050                       3941 00155$:
                                   3942 ;	../../../core/net/mac/cxmac.c:768: hdr->type = TYPE_STROBE_ACK;
      001050 0D               [12] 3943 	inc	r5
      001051 BD 00 01         [24] 3944 	cjne	r5,#0x00,00156$
      001054 0E               [12] 3945 	inc	r6
      001055                       3946 00156$:
      001055 8D 82            [24] 3947 	mov	dpl,r5
      001057 8E 83            [24] 3948 	mov	dph,r6
      001059 8F F0            [24] 3949 	mov	b,r7
      00105B 74 13            [12] 3950 	mov	a,#0x13
      00105D 12r00r00         [24] 3951 	lcall	__gptrput
                                   3952 ;	../../../core/net/mac/cxmac.c:770: packetbuf_addr(PACKETBUF_ADDR_SENDER));
      001060 75 82 18         [24] 3953 	mov	dpl,#0x18
      001063 78r00            [12] 3954 	mov	r0,#_packetbuf_addr
      001065 79s00            [12] 3955 	mov	r1,#(_packetbuf_addr >> 8)
      001067 7As00            [12] 3956 	mov	r2,#(_packetbuf_addr >> 16)
      001069 12r00r00         [24] 3957 	lcall	__sdcc_banked_call
      00106C AD 82            [24] 3958 	mov	r5,dpl
      00106E AE 83            [24] 3959 	mov	r6,dph
      001070 AF F0            [24] 3960 	mov	r7,b
                                   3961 ;	../../../core/net/mac/cxmac.c:769: packetbuf_set_addr(PACKETBUF_ADDR_RECEIVER,
      001072 C0 05            [24] 3962 	push	ar5
      001074 C0 06            [24] 3963 	push	ar6
      001076 C0 07            [24] 3964 	push	ar7
      001078 75 82 19         [24] 3965 	mov	dpl,#0x19
      00107B 78r00            [12] 3966 	mov	r0,#_packetbuf_set_addr
      00107D 79s00            [12] 3967 	mov	r1,#(_packetbuf_set_addr >> 8)
      00107F 7As00            [12] 3968 	mov	r2,#(_packetbuf_set_addr >> 16)
      001081 12r00r00         [24] 3969 	lcall	__sdcc_banked_call
      001084 15 81            [12] 3970 	dec	sp
      001086 15 81            [12] 3971 	dec	sp
      001088 15 81            [12] 3972 	dec	sp
                                   3973 ;	../../../core/net/mac/cxmac.c:771: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &rimeaddr_node_addr);
      00108A 74r00            [12] 3974 	mov	a,#_rimeaddr_node_addr
      00108C C0 E0            [24] 3975 	push	acc
      00108E 74s00            [12] 3976 	mov	a,#(_rimeaddr_node_addr >> 8)
      001090 C0 E0            [24] 3977 	push	acc
      001092 E4               [12] 3978 	clr	a
      001093 C0 E0            [24] 3979 	push	acc
      001095 75 82 18         [24] 3980 	mov	dpl,#0x18
      001098 78r00            [12] 3981 	mov	r0,#_packetbuf_set_addr
      00109A 79s00            [12] 3982 	mov	r1,#(_packetbuf_set_addr >> 8)
      00109C 7As00            [12] 3983 	mov	r2,#(_packetbuf_set_addr >> 16)
      00109E 12r00r00         [24] 3984 	lcall	__sdcc_banked_call
      0010A1 15 81            [12] 3985 	dec	sp
      0010A3 15 81            [12] 3986 	dec	sp
      0010A5 15 81            [12] 3987 	dec	sp
                                   3988 ;	../../../core/net/mac/cxmac.c:772: packetbuf_compact();
      0010A7 78r00            [12] 3989 	mov	r0,#_packetbuf_compact
      0010A9 79s00            [12] 3990 	mov	r1,#(_packetbuf_compact >> 8)
      0010AB 7As00            [12] 3991 	mov	r2,#(_packetbuf_compact >> 16)
      0010AD 12r00r00         [24] 3992 	lcall	__sdcc_banked_call
                                   3993 ;	../../../core/net/mac/cxmac.c:773: if(NETSTACK_FRAMER.create() >= 0) {
      0010B0 90r00r00         [24] 3994 	mov	dptr,#_framer_802154
      0010B3 E4               [12] 3995 	clr	a
      0010B4 93               [24] 3996 	movc	a,@a+dptr
      0010B5 FD               [12] 3997 	mov	r5,a
      0010B6 A3               [24] 3998 	inc	dptr
      0010B7 E4               [12] 3999 	clr	a
      0010B8 93               [24] 4000 	movc	a,@a+dptr
      0010B9 FE               [12] 4001 	mov	r6,a
      0010BA A3               [24] 4002 	inc	dptr
      0010BB E4               [12] 4003 	clr	a
      0010BC 93               [24] 4004 	movc	a,@a+dptr
      0010BD FF               [12] 4005 	mov	r7,a
      0010BE C0 07            [24] 4006 	push	ar7
      0010C0 C0 05            [24] 4007 	push	ar5
      0010C2 C0 06            [24] 4008 	push	ar6
      0010C4 C0 07            [24] 4009 	push	ar7
      0010C6 D0 02            [24] 4010 	pop	ar2
      0010C8 D0 01            [24] 4011 	pop	ar1
      0010CA D0 00            [24] 4012 	pop	ar0
      0010CC 12r00r00         [24] 4013 	lcall	__sdcc_banked_call
      0010CF AD 82            [24] 4014 	mov	r5,dpl
      0010D1 AE 83            [24] 4015 	mov	r6,dph
      0010D3 D0 07            [24] 4016 	pop	ar7
      0010D5 EE               [12] 4017 	mov	a,r6
      0010D6 30 E7 03         [24] 4018 	jnb	acc.7,00157$
      0010D9 02r11rA9         [24] 4019 	ljmp	00110$
      0010DC                       4020 00157$:
                                   4021 ;	../../../core/net/mac/cxmac.c:776: someone_is_sending = 1;
      0010DC 90r00r0A         [24] 4022 	mov	dptr,#_someone_is_sending
      0010DF 74 01            [12] 4023 	mov	a,#0x01
      0010E1 F0               [24] 4024 	movx	@dptr,a
                                   4025 ;	../../../core/net/mac/cxmac.c:777: waiting_for_packet = 1;
      0010E2 90r00r09         [24] 4026 	mov	dptr,#_waiting_for_packet
      0010E5 F0               [24] 4027 	movx	@dptr,a
                                   4028 ;	../../../core/net/mac/cxmac.c:778: on();
      0010E6 78r00            [12] 4029 	mov	r0,#_on
      0010E8 79s00            [12] 4030 	mov	r1,#(_on >> 8)
      0010EA 7As00            [12] 4031 	mov	r2,#(_on >> 16)
      0010EC 12r00r00         [24] 4032 	lcall	__sdcc_banked_call
                                   4033 ;	../../../core/net/mac/cxmac.c:779: NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      0010EF 90r00r09         [24] 4034 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      0010F2 E4               [12] 4035 	clr	a
      0010F3 93               [24] 4036 	movc	a,@a+dptr
      0010F4 FD               [12] 4037 	mov	r5,a
      0010F5 A3               [24] 4038 	inc	dptr
      0010F6 E4               [12] 4039 	clr	a
      0010F7 93               [24] 4040 	movc	a,@a+dptr
      0010F8 FE               [12] 4041 	mov	r6,a
      0010F9 A3               [24] 4042 	inc	dptr
      0010FA E4               [12] 4043 	clr	a
      0010FB 93               [24] 4044 	movc	a,@a+dptr
      0010FC FF               [12] 4045 	mov	r7,a
      0010FD C0 07            [24] 4046 	push	ar7
      0010FF C0 06            [24] 4047 	push	ar6
      001101 C0 05            [24] 4048 	push	ar5
      001103 78r00            [12] 4049 	mov	r0,#_packetbuf_totlen
      001105 79s00            [12] 4050 	mov	r1,#(_packetbuf_totlen >> 8)
      001107 7As00            [12] 4051 	mov	r2,#(_packetbuf_totlen >> 16)
      001109 12r00r00         [24] 4052 	lcall	__sdcc_banked_call
      00110C C8               [12] 4053 	xch	a,r0
      00110D E5 81            [12] 4054 	mov	a,sp
      00110F 24 FC            [12] 4055 	add	a,#0xfc
      001111 C8               [12] 4056 	xch	a,r0
      001112 A6 82            [24] 4057 	mov	@r0,dpl
      001114 08               [12] 4058 	inc	r0
      001115 A6 83            [24] 4059 	mov	@r0,dph
      001117 78r00            [12] 4060 	mov	r0,#_packetbuf_hdrptr
      001119 79s00            [12] 4061 	mov	r1,#(_packetbuf_hdrptr >> 8)
      00111B 7As00            [12] 4062 	mov	r2,#(_packetbuf_hdrptr >> 16)
      00111D 12r00r00         [24] 4063 	lcall	__sdcc_banked_call
      001120 AA 82            [24] 4064 	mov	r2,dpl
      001122 AB 83            [24] 4065 	mov	r3,dph
      001124 AC F0            [24] 4066 	mov	r4,b
      001126 D0 05            [24] 4067 	pop	ar5
      001128 D0 06            [24] 4068 	pop	ar6
      00112A D0 07            [24] 4069 	pop	ar7
      00112C C0 07            [24] 4070 	push	ar7
      00112E C0 06            [24] 4071 	push	ar6
      001130 C0 05            [24] 4072 	push	ar5
      001132 E5 81            [12] 4073 	mov	a,sp
      001134 24 FC            [12] 4074 	add	a,#0xfc
      001136 F8               [12] 4075 	mov	r0,a
      001137 E6               [12] 4076 	mov	a,@r0
      001138 C0 E0            [24] 4077 	push	acc
      00113A 08               [12] 4078 	inc	r0
      00113B E6               [12] 4079 	mov	a,@r0
      00113C C0 E0            [24] 4080 	push	acc
      00113E C0 05            [24] 4081 	push	ar5
      001140 C0 06            [24] 4082 	push	ar6
      001142 C0 07            [24] 4083 	push	ar7
      001144 8A 82            [24] 4084 	mov	dpl,r2
      001146 8B 83            [24] 4085 	mov	dph,r3
      001148 8C F0            [24] 4086 	mov	b,r4
      00114A D0 02            [24] 4087 	pop	ar2
      00114C D0 01            [24] 4088 	pop	ar1
      00114E D0 00            [24] 4089 	pop	ar0
      001150 12r00r00         [24] 4090 	lcall	__sdcc_banked_call
      001153 15 81            [12] 4091 	dec	sp
      001155 15 81            [12] 4092 	dec	sp
      001157 D0 05            [24] 4093 	pop	ar5
      001159 D0 06            [24] 4094 	pop	ar6
      00115B D0 07            [24] 4095 	pop	ar7
      00115D 80 4A            [24] 4096 	sjmp	00110$
      00115F                       4097 00109$:
                                   4098 ;	../../../core/net/mac/cxmac.c:785: &rimeaddr_null)) {
                                   4099 ;	../../../core/net/mac/cxmac.c:784: } else if(rimeaddr_cmp(packetbuf_addr(PACKETBUF_ADDR_RECEIVER),
      00115F 75 82 19         [24] 4100 	mov	dpl,#0x19
      001162 78r00            [12] 4101 	mov	r0,#_packetbuf_addr
      001164 79s00            [12] 4102 	mov	r1,#(_packetbuf_addr >> 8)
      001166 7As00            [12] 4103 	mov	r2,#(_packetbuf_addr >> 16)
      001168 12r00r00         [24] 4104 	lcall	__sdcc_banked_call
      00116B AD 82            [24] 4105 	mov	r5,dpl
      00116D AE 83            [24] 4106 	mov	r6,dph
      00116F AF F0            [24] 4107 	mov	r7,b
      001171 74r00            [12] 4108 	mov	a,#_rimeaddr_null
      001173 C0 E0            [24] 4109 	push	acc
      001175 74s00            [12] 4110 	mov	a,#(_rimeaddr_null >> 8)
      001177 C0 E0            [24] 4111 	push	acc
      001179 74 80            [12] 4112 	mov	a,#0x80
      00117B C0 E0            [24] 4113 	push	acc
      00117D 8D 82            [24] 4114 	mov	dpl,r5
      00117F 8E 83            [24] 4115 	mov	dph,r6
      001181 8F F0            [24] 4116 	mov	b,r7
      001183 78r00            [12] 4117 	mov	r0,#_rimeaddr_cmp
      001185 79s00            [12] 4118 	mov	r1,#(_rimeaddr_cmp >> 8)
      001187 7As00            [12] 4119 	mov	r2,#(_rimeaddr_cmp >> 16)
      001189 12r00r00         [24] 4120 	lcall	__sdcc_banked_call
      00118C AE 82            [24] 4121 	mov	r6,dpl
      00118E AF 83            [24] 4122 	mov	r7,dph
      001190 15 81            [12] 4123 	dec	sp
      001192 15 81            [12] 4124 	dec	sp
      001194 15 81            [12] 4125 	dec	sp
      001196 EE               [12] 4126 	mov	a,r6
      001197 4F               [12] 4127 	orl	a,r7
      001198 60 0F            [24] 4128 	jz	00110$
                                   4129 ;	../../../core/net/mac/cxmac.c:790: waiting_for_packet = 1;
      00119A 90r00r09         [24] 4130 	mov	dptr,#_waiting_for_packet
      00119D 74 01            [12] 4131 	mov	a,#0x01
      00119F F0               [24] 4132 	movx	@dptr,a
                                   4133 ;	../../../core/net/mac/cxmac.c:791: on();
      0011A0 78r00            [12] 4134 	mov	r0,#_on
      0011A2 79s00            [12] 4135 	mov	r1,#(_on >> 8)
      0011A4 7As00            [12] 4136 	mov	r2,#(_on >> 16)
      0011A6 12r00r00         [24] 4137 	lcall	__sdcc_banked_call
      0011A9                       4138 00110$:
                                   4139 ;	../../../core/net/mac/cxmac.c:798: return;
                                   4140 ;	../../../core/net/mac/cxmac.c:804: } else if(hdr->type == TYPE_STROBE_ACK) {
      0011A9                       4141 00119$:
                                   4142 ;	../../../core/net/mac/cxmac.c:813: }
      0011A9 15 81            [12] 4143 	dec	sp
      0011AB 15 81            [12] 4144 	dec	sp
      0011AD 02r00r00         [24] 4145 	ljmp	__sdcc_banked_ret
                                   4146 ;------------------------------------------------------------
                                   4147 ;Allocation info for local variables in function 'cxmac_set_announcement_radio_txpower'
                                   4148 ;------------------------------------------------------------
                                   4149 ;txpower                   Allocated to registers 
                                   4150 ;------------------------------------------------------------
                                   4151 ;	../../../core/net/mac/cxmac.c:864: cxmac_set_announcement_radio_txpower(int txpower)
                                   4152 ;	-----------------------------------------
                                   4153 ;	 function cxmac_set_announcement_radio_txpower
                                   4154 ;	-----------------------------------------
      0011B0                       4155 _cxmac_set_announcement_radio_txpower:
                                   4156 ;	../../../core/net/mac/cxmac.c:869: }
      0011B0 02r00r00         [24] 4157 	ljmp	__sdcc_banked_ret
                                   4158 ;------------------------------------------------------------
                                   4159 ;Allocation info for local variables in function 'cxmac_init'
                                   4160 ;------------------------------------------------------------
                                   4161 ;	../../../core/net/mac/cxmac.c:872: cxmac_init(void)
                                   4162 ;	-----------------------------------------
                                   4163 ;	 function cxmac_init
                                   4164 ;	-----------------------------------------
      0011B3                       4165 _cxmac_init:
                                   4166 ;	../../../core/net/mac/cxmac.c:874: radio_is_on = 0;
      0011B3 90r00r0C         [24] 4167 	mov	dptr,#_radio_is_on
      0011B6 E4               [12] 4168 	clr	a
      0011B7 F0               [24] 4169 	movx	@dptr,a
                                   4170 ;	../../../core/net/mac/cxmac.c:875: waiting_for_packet = 0;
      0011B8 90r00r09         [24] 4171 	mov	dptr,#_waiting_for_packet
      0011BB F0               [24] 4172 	movx	@dptr,a
                                   4173 ;	../../../core/net/mac/cxmac.c:876: PT_INIT(&pt);
      0011BC 90r00r00         [24] 4174 	mov	dptr,#_pt
      0011BF F0               [24] 4175 	movx	@dptr,a
      0011C0 A3               [24] 4176 	inc	dptr
      0011C1 F0               [24] 4177 	movx	@dptr,a
                                   4178 ;	../../../core/net/mac/cxmac.c:880: cxmac_is_on = 1;
      0011C2 90r00r08         [24] 4179 	mov	dptr,#_cxmac_is_on
      0011C5 04               [12] 4180 	inc	a
      0011C6 F0               [24] 4181 	movx	@dptr,a
                                   4182 ;	../../../core/net/mac/cxmac.c:883: list_init(encounter_list);
      0011C7 90r00r10         [24] 4183 	mov	dptr,#_encounter_list
      0011CA E0               [24] 4184 	movx	a,@dptr
      0011CB FD               [12] 4185 	mov	r5,a
      0011CC A3               [24] 4186 	inc	dptr
      0011CD E0               [24] 4187 	movx	a,@dptr
      0011CE FE               [12] 4188 	mov	r6,a
      0011CF A3               [24] 4189 	inc	dptr
      0011D0 E0               [24] 4190 	movx	a,@dptr
      0011D1 FF               [12] 4191 	mov	r7,a
      0011D2 8D 82            [24] 4192 	mov	dpl,r5
      0011D4 8E 83            [24] 4193 	mov	dph,r6
      0011D6 8F F0            [24] 4194 	mov	b,r7
      0011D8 78r00            [12] 4195 	mov	r0,#_list_init
      0011DA 79s00            [12] 4196 	mov	r1,#(_list_init >> 8)
      0011DC 7As00            [12] 4197 	mov	r2,#(_list_init >> 16)
      0011DE 12r00r00         [24] 4198 	lcall	__sdcc_banked_call
                                   4199 ;	../../../core/net/mac/cxmac.c:884: memb_init(&encounter_memb);
      0011E1 90r00r13         [24] 4200 	mov	dptr,#_encounter_memb
      0011E4 75 F0 00         [24] 4201 	mov	b,#0x00
      0011E7 78r00            [12] 4202 	mov	r0,#_memb_init
      0011E9 79s00            [12] 4203 	mov	r1,#(_memb_init >> 8)
      0011EB 7As00            [12] 4204 	mov	r2,#(_memb_init >> 16)
      0011ED 12r00r00         [24] 4205 	lcall	__sdcc_banked_call
                                   4206 ;	../../../core/net/mac/cxmac.c:893: CSCHEDULE_POWERCYCLE(DEFAULT_OFF_TIME);
      0011F0 90 00 0F         [24] 4207 	mov	dptr,#0x000f
      0011F3 78rB6            [12] 4208 	mov	r0,#_cschedule_powercycle
      0011F5 79s00            [12] 4209 	mov	r1,#(_cschedule_powercycle >> 8)
      0011F7 7As00            [12] 4210 	mov	r2,#(_cschedule_powercycle >> 16)
      0011F9 12r00r00         [24] 4211 	lcall	__sdcc_banked_call
                                   4212 ;	../../../core/net/mac/cxmac.c:894: }
      0011FC 02r00r00         [24] 4213 	ljmp	__sdcc_banked_ret
                                   4214 ;------------------------------------------------------------
                                   4215 ;Allocation info for local variables in function 'turn_on'
                                   4216 ;------------------------------------------------------------
                                   4217 ;	../../../core/net/mac/cxmac.c:897: turn_on(void)
                                   4218 ;	-----------------------------------------
                                   4219 ;	 function turn_on
                                   4220 ;	-----------------------------------------
      0011FF                       4221 _turn_on:
                                   4222 ;	../../../core/net/mac/cxmac.c:899: cxmac_is_on = 1;
      0011FF 90r00r08         [24] 4223 	mov	dptr,#_cxmac_is_on
      001202 74 01            [12] 4224 	mov	a,#0x01
      001204 F0               [24] 4225 	movx	@dptr,a
                                   4226 ;	../../../core/net/mac/cxmac.c:902: CSCHEDULE_POWERCYCLE(DEFAULT_OFF_TIME);
      001205 90 00 0F         [24] 4227 	mov	dptr,#0x000f
      001208 78rB6            [12] 4228 	mov	r0,#_cschedule_powercycle
      00120A 79s00            [12] 4229 	mov	r1,#(_cschedule_powercycle >> 8)
      00120C 7As00            [12] 4230 	mov	r2,#(_cschedule_powercycle >> 16)
      00120E 12r00r00         [24] 4231 	lcall	__sdcc_banked_call
                                   4232 ;	../../../core/net/mac/cxmac.c:903: return 1;
      001211 90 00 01         [24] 4233 	mov	dptr,#0x0001
                                   4234 ;	../../../core/net/mac/cxmac.c:904: }
      001214 02r00r00         [24] 4235 	ljmp	__sdcc_banked_ret
                                   4236 ;------------------------------------------------------------
                                   4237 ;Allocation info for local variables in function 'turn_off'
                                   4238 ;------------------------------------------------------------
                                   4239 ;keep_radio_on             Allocated to registers r6 r7 
                                   4240 ;------------------------------------------------------------
                                   4241 ;	../../../core/net/mac/cxmac.c:907: turn_off(int keep_radio_on)
                                   4242 ;	-----------------------------------------
                                   4243 ;	 function turn_off
                                   4244 ;	-----------------------------------------
      001217                       4245 _turn_off:
      001217 AE 82            [24] 4246 	mov	r6,dpl
      001219 AF 83            [24] 4247 	mov	r7,dph
                                   4248 ;	../../../core/net/mac/cxmac.c:909: cxmac_is_on = 0;
      00121B 90r00r08         [24] 4249 	mov	dptr,#_cxmac_is_on
      00121E E4               [12] 4250 	clr	a
      00121F F0               [24] 4251 	movx	@dptr,a
                                   4252 ;	../../../core/net/mac/cxmac.c:910: if(keep_radio_on) {
      001220 EE               [12] 4253 	mov	a,r6
      001221 4F               [12] 4254 	orl	a,r7
      001222 60 2B            [24] 4255 	jz	00102$
                                   4256 ;	../../../core/net/mac/cxmac.c:911: return NETSTACK_RADIO.on();
      001224 90r00r18         [24] 4257 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      001227 E4               [12] 4258 	clr	a
      001228 93               [24] 4259 	movc	a,@a+dptr
      001229 FD               [12] 4260 	mov	r5,a
      00122A A3               [24] 4261 	inc	dptr
      00122B E4               [12] 4262 	clr	a
      00122C 93               [24] 4263 	movc	a,@a+dptr
      00122D FE               [12] 4264 	mov	r6,a
      00122E A3               [24] 4265 	inc	dptr
      00122F E4               [12] 4266 	clr	a
      001230 93               [24] 4267 	movc	a,@a+dptr
      001231 FF               [12] 4268 	mov	r7,a
      001232 C0 07            [24] 4269 	push	ar7
      001234 C0 05            [24] 4270 	push	ar5
      001236 C0 06            [24] 4271 	push	ar6
      001238 C0 07            [24] 4272 	push	ar7
      00123A D0 02            [24] 4273 	pop	ar2
      00123C D0 01            [24] 4274 	pop	ar1
      00123E D0 00            [24] 4275 	pop	ar0
      001240 12r00r00         [24] 4276 	lcall	__sdcc_banked_call
      001243 AD 82            [24] 4277 	mov	r5,dpl
      001245 AE 83            [24] 4278 	mov	r6,dph
      001247 D0 07            [24] 4279 	pop	ar7
      001249 8D 82            [24] 4280 	mov	dpl,r5
      00124B 8E 83            [24] 4281 	mov	dph,r6
      00124D 80 29            [24] 4282 	sjmp	00104$
      00124F                       4283 00102$:
                                   4284 ;	../../../core/net/mac/cxmac.c:913: return NETSTACK_RADIO.off();
      00124F 90r00r1B         [24] 4285 	mov	dptr,#(_cc2530_rf_driver + 0x001b)
      001252 E4               [12] 4286 	clr	a
      001253 93               [24] 4287 	movc	a,@a+dptr
      001254 FD               [12] 4288 	mov	r5,a
      001255 A3               [24] 4289 	inc	dptr
      001256 E4               [12] 4290 	clr	a
      001257 93               [24] 4291 	movc	a,@a+dptr
      001258 FE               [12] 4292 	mov	r6,a
      001259 A3               [24] 4293 	inc	dptr
      00125A E4               [12] 4294 	clr	a
      00125B 93               [24] 4295 	movc	a,@a+dptr
      00125C FF               [12] 4296 	mov	r7,a
      00125D C0 07            [24] 4297 	push	ar7
      00125F C0 05            [24] 4298 	push	ar5
      001261 C0 06            [24] 4299 	push	ar6
      001263 C0 07            [24] 4300 	push	ar7
      001265 D0 02            [24] 4301 	pop	ar2
      001267 D0 01            [24] 4302 	pop	ar1
      001269 D0 00            [24] 4303 	pop	ar0
      00126B 12r00r00         [24] 4304 	lcall	__sdcc_banked_call
      00126E AD 82            [24] 4305 	mov	r5,dpl
      001270 AE 83            [24] 4306 	mov	r6,dph
      001272 D0 07            [24] 4307 	pop	ar7
      001274 8D 82            [24] 4308 	mov	dpl,r5
      001276 8E 83            [24] 4309 	mov	dph,r6
      001278                       4310 00104$:
                                   4311 ;	../../../core/net/mac/cxmac.c:915: }
      001278 02r00r00         [24] 4312 	ljmp	__sdcc_banked_ret
                                   4313 ;------------------------------------------------------------
                                   4314 ;Allocation info for local variables in function 'channel_check_interval'
                                   4315 ;------------------------------------------------------------
                                   4316 ;	../../../core/net/mac/cxmac.c:918: channel_check_interval(void)
                                   4317 ;	-----------------------------------------
                                   4318 ;	 function channel_check_interval
                                   4319 ;	-----------------------------------------
      00127B                       4320 _channel_check_interval:
                                   4321 ;	../../../core/net/mac/cxmac.c:920: return (1ul * CLOCK_SECOND * DEFAULT_PERIOD) / RTIMER_ARCH_SECOND;
      00127B 90 00 0F         [24] 4322 	mov	dptr,#0x000f
                                   4323 ;	../../../core/net/mac/cxmac.c:921: }
      00127E 02r00r00         [24] 4324 	ljmp	__sdcc_banked_ret
                                   4325 	.area CSEG    (CODE)
                                   4326 	.area CONST   (CODE)
      000000                       4327 _cxmac_driver:
      000000r18s00 80              4328 	.byte __str_0, (__str_0 >> 8),#0x80
      000003rB3s11s00              4329 	.byte _cxmac_init, (_cxmac_init >> 8), (_cxmac_init >> 16)
      000006rB0s0Ds00              4330 	.byte _qsend_packet, (_qsend_packet >> 8), (_qsend_packet >> 16)
      000009r6Es0Es00              4331 	.byte _qsend_list, (_qsend_list >> 8), (_qsend_list >> 16)
      00000CrE9s0Es00              4332 	.byte _input_packet, (_input_packet >> 8), (_input_packet >> 16)
      00000FrFFs11s00              4333 	.byte _turn_on, (_turn_on >> 8), (_turn_on >> 16)
      000012r17s12s00              4334 	.byte _turn_off, (_turn_off >> 8), (_turn_off >> 16)
      000015r7Bs12s00              4335 	.byte _channel_check_interval, (_channel_check_interval >> 8), (_channel_check_interval >> 16)
      000018                       4336 __str_0:
      000018 43 58 2D 4D 41 43     4337 	.ascii "CX-MAC"
      00001E 00                    4338 	.db 0x00
                                   4339 	.area XINIT   (CODE)
      000000                       4340 __xinit__cxmac_config:
      000000 61 00                 4341 	.byte #0x61,#0x00	; 97
      000002 40 07                 4342 	.byte #0x40,#0x07	; 1856
      000004 C4 08                 4343 	.byte #0xc4,#0x08	; 2244
      000006 54 00                 4344 	.byte #0x54,#0x00	; 84
      000008                       4345 __xinit__cxmac_is_on:
      000008 00                    4346 	.db #0x00	; 0
      000009                       4347 __xinit__waiting_for_packet:
      000009 00                    4348 	.db #0x00	; 0
      00000A                       4349 __xinit__someone_is_sending:
      00000A 00                    4350 	.db #0x00	; 0
      00000B                       4351 __xinit__we_are_sending:
      00000B 00                    4352 	.db #0x00	; 0
      00000C                       4353 __xinit__radio_is_on:
      00000C 00                    4354 	.db #0x00	; 0
      00000D                       4355 __xinit__encounter_list_list:
                                   4356 ; generic printIvalPtr
      00000D 00 00 00              4357 	.byte #0x00,#0x00,#0x00
      000010                       4358 __xinit__encounter_list:
      000010r0Ds00 00              4359 	.byte _encounter_list_list, (_encounter_list_list >> 8),#0x00
      000013                       4360 __xinit__encounter_memb:
      000013 0D 00                 4361 	.byte #0x0d,#0x00	; 13
      000015 04 00                 4362 	.byte #0x04,#0x00	; 4
      000017r03s00 00              4363 	.byte _encounter_memb_memb_count, (_encounter_memb_memb_count >> 8),#0x00
      00001Ar07s00 00              4364 	.byte _encounter_memb_memb_mem, (_encounter_memb_memb_mem >> 8),#0x00
                                   4365 	.area CABS    (ABS,CODE)
