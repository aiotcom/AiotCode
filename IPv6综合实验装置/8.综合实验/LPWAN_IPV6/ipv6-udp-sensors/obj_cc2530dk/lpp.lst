                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.4 #10774 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module lpp
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _lpp_driver
                                     12 	.globl _printf
                                     13 	.globl _compower_attrconv
                                     14 	.globl _compower_clear
                                     15 	.globl _compower_accumulate
                                     16 	.globl _queuebuf_addr
                                     17 	.globl _queuebuf_datalen
                                     18 	.globl _queuebuf_dataptr
                                     19 	.globl _queuebuf_free
                                     20 	.globl _queuebuf_to_packetbuf
                                     21 	.globl _queuebuf_new_from_packetbuf
                                     22 	.globl _packetbuf_addr
                                     23 	.globl _packetbuf_set_addr
                                     24 	.globl _packetbuf_attr
                                     25 	.globl _packetbuf_set_attr
                                     26 	.globl _packetbuf_hdrreduce
                                     27 	.globl _packetbuf_hdralloc
                                     28 	.globl _packetbuf_compact
                                     29 	.globl _packetbuf_set_datalen
                                     30 	.globl _packetbuf_totlen
                                     31 	.globl _packetbuf_datalen
                                     32 	.globl _packetbuf_hdrptr
                                     33 	.globl _packetbuf_dataptr
                                     34 	.globl _packetbuf_clear
                                     35 	.globl _ctimer_stop
                                     36 	.globl _ctimer_set
                                     37 	.globl _clock_time
                                     38 	.globl _announcement_register_listen_callback
                                     39 	.globl _announcement_list
                                     40 	.globl _rimeaddr_cmp
                                     41 	.globl _rimeaddr_copy
                                     42 	.globl _random_rand
                                     43 	.globl _memb_free
                                     44 	.globl _memb_alloc
                                     45 	.globl _memb_init
                                     46 	.globl ___memcpy
                                     47 	.globl _list_item_next
                                     48 	.globl _list_length
                                     49 	.globl _list_remove
                                     50 	.globl _list_add
                                     51 	.globl _list_head
                                     52 	.globl _list_init
                                     53 	.globl _leds_toggle
                                     54 	.globl _leds_off
                                     55 	.globl _leds_on
                                     56 	.globl _ACTIVE
                                     57 	.globl _TX_BYTE
                                     58 	.globl _RX_BYTE
                                     59 	.globl _ERR
                                     60 	.globl _FE
                                     61 	.globl _SLAVE
                                     62 	.globl _RE
                                     63 	.globl _MODE
                                     64 	.globl _T3OVFIF
                                     65 	.globl _T3CH0IF
                                     66 	.globl _T3CH1IF
                                     67 	.globl _T4OVFIF
                                     68 	.globl _T4CH0IF
                                     69 	.globl _T4CH1IF
                                     70 	.globl _OVFIM
                                     71 	.globl _B_0
                                     72 	.globl _B_1
                                     73 	.globl _B_2
                                     74 	.globl _B_3
                                     75 	.globl _B_4
                                     76 	.globl _B_5
                                     77 	.globl _B_6
                                     78 	.globl _B_7
                                     79 	.globl _P2IF
                                     80 	.globl _UTX0IF
                                     81 	.globl _UTX1IF
                                     82 	.globl _P1IF
                                     83 	.globl _WDTIF
                                     84 	.globl _ACC_0
                                     85 	.globl _ACC_1
                                     86 	.globl _ACC_2
                                     87 	.globl _ACC_3
                                     88 	.globl _ACC_4
                                     89 	.globl _ACC_5
                                     90 	.globl _ACC_6
                                     91 	.globl _ACC_7
                                     92 	.globl _P
                                     93 	.globl _F1
                                     94 	.globl _OV
                                     95 	.globl _RS0
                                     96 	.globl _RS1
                                     97 	.globl _F0
                                     98 	.globl _AC
                                     99 	.globl _CY
                                    100 	.globl _DMAIF
                                    101 	.globl _T1IF
                                    102 	.globl _T2IF
                                    103 	.globl _T3IF
                                    104 	.globl _T4IF
                                    105 	.globl _P0IF
                                    106 	.globl _STIF
                                    107 	.globl _DMAIE
                                    108 	.globl _T1IE
                                    109 	.globl _T2IE
                                    110 	.globl _T3IE
                                    111 	.globl _T4IE
                                    112 	.globl _P0IE
                                    113 	.globl _RFERRIE
                                    114 	.globl _ADCIE
                                    115 	.globl _URX0IE
                                    116 	.globl _URX1IE
                                    117 	.globl _ENCIE
                                    118 	.globl _STIE
                                    119 	.globl _EA
                                    120 	.globl _P2_0
                                    121 	.globl _P2_1
                                    122 	.globl _P2_2
                                    123 	.globl _P2_3
                                    124 	.globl _P2_4
                                    125 	.globl _P2_5
                                    126 	.globl _P2_6
                                    127 	.globl _P2_7
                                    128 	.globl _ENCIF_0
                                    129 	.globl _ENCIF_1
                                    130 	.globl _P1_0
                                    131 	.globl _P1_1
                                    132 	.globl _P1_2
                                    133 	.globl _P1_3
                                    134 	.globl _P1_4
                                    135 	.globl _P1_5
                                    136 	.globl _P1_6
                                    137 	.globl _P1_7
                                    138 	.globl _IT0
                                    139 	.globl _RFERRIF
                                    140 	.globl _IT1
                                    141 	.globl _URX0IF
                                    142 	.globl _ADCIF
                                    143 	.globl _URX1IF
                                    144 	.globl _P0_0
                                    145 	.globl _P0_1
                                    146 	.globl _P0_2
                                    147 	.globl _P0_3
                                    148 	.globl _P0_4
                                    149 	.globl _P0_5
                                    150 	.globl _P0_6
                                    151 	.globl _P0_7
                                    152 	.globl _WDCTL
                                    153 	.globl _U1GCR
                                    154 	.globl _U1UCR
                                    155 	.globl _U1BAUD
                                    156 	.globl _U1DBUF
                                    157 	.globl _U1CSR
                                    158 	.globl _U0GCR
                                    159 	.globl _U0UCR
                                    160 	.globl _U0BAUD
                                    161 	.globl _U0DBUF
                                    162 	.globl _U0CSR
                                    163 	.globl _TIMIF
                                    164 	.globl _T4CC1
                                    165 	.globl _T4CCTL1
                                    166 	.globl _T4CC0
                                    167 	.globl _T4CCTL0
                                    168 	.globl _T4CTL
                                    169 	.globl _T4CNT
                                    170 	.globl _T3CC1
                                    171 	.globl _T3CCTL1
                                    172 	.globl _T3CC0
                                    173 	.globl _T3CCTL0
                                    174 	.globl _T3CTL
                                    175 	.globl _T3CNT
                                    176 	.globl _T2MSEL
                                    177 	.globl _T2IRQM
                                    178 	.globl _T2MOVF2
                                    179 	.globl _T2MOVF1
                                    180 	.globl _T2MOVF0
                                    181 	.globl _T2M1
                                    182 	.globl _T2M0
                                    183 	.globl _T2IRQF
                                    184 	.globl _T2EVTCFG
                                    185 	.globl _T2CTRL
                                    186 	.globl _T1STAT
                                    187 	.globl _T1CCTL2
                                    188 	.globl _T1CCTL1
                                    189 	.globl _T1CCTL0
                                    190 	.globl _T1CTL
                                    191 	.globl _T1CNTH
                                    192 	.globl _T1CNTL
                                    193 	.globl _T1CC2H
                                    194 	.globl _T1CC2L
                                    195 	.globl _T1CC1H
                                    196 	.globl _T1CC1L
                                    197 	.globl _T1CC0H
                                    198 	.globl _T1CC0L
                                    199 	.globl _CLKCONSTA
                                    200 	.globl _CLKCONCMD
                                    201 	.globl _SLEEPSTA
                                    202 	.globl _SLEEPCMD
                                    203 	.globl _STLOAD
                                    204 	.globl _ST2
                                    205 	.globl _ST1
                                    206 	.globl _ST0
                                    207 	.globl _RFERRF
                                    208 	.globl _RFIRQF0
                                    209 	.globl _RFST
                                    210 	.globl _RFD
                                    211 	.globl _RFIRQF1
                                    212 	.globl _PSBANK
                                    213 	.globl _FMAP
                                    214 	.globl _MEMCTR
                                    215 	.globl __XPAGE
                                    216 	.globl _MPAGE
                                    217 	.globl _PMUX
                                    218 	.globl _P2DIR
                                    219 	.globl _P1DIR
                                    220 	.globl _P0DIR
                                    221 	.globl _P2INP
                                    222 	.globl _P1INP
                                    223 	.globl _P2SEL
                                    224 	.globl _P1SEL
                                    225 	.globl _P0SEL
                                    226 	.globl _APCFG
                                    227 	.globl _PERCFG
                                    228 	.globl _P0INP
                                    229 	.globl _P2IEN
                                    230 	.globl _P1IEN
                                    231 	.globl _P0IEN
                                    232 	.globl _PICTL
                                    233 	.globl _P2IFG
                                    234 	.globl _P1IFG
                                    235 	.globl _P0IFG
                                    236 	.globl _DMAREQ
                                    237 	.globl _DMAARM
                                    238 	.globl _DMA0CFGH
                                    239 	.globl _DMA0CFGL
                                    240 	.globl _DMA1CFGH
                                    241 	.globl _DMA1CFGL
                                    242 	.globl _DMAIRQ
                                    243 	.globl _ENCCS
                                    244 	.globl _ENCDO
                                    245 	.globl _ENCDI
                                    246 	.globl _RNDH
                                    247 	.globl _RNDL
                                    248 	.globl _ADCH
                                    249 	.globl _ADCL
                                    250 	.globl _ADCCON3
                                    251 	.globl _ADCCON2
                                    252 	.globl _ADCCON1
                                    253 	.globl _B
                                    254 	.globl _IRCON2
                                    255 	.globl _ACC
                                    256 	.globl _PSW
                                    257 	.globl _IRCON
                                    258 	.globl _IP1
                                    259 	.globl _IEN1
                                    260 	.globl _IP0
                                    261 	.globl _IEN0
                                    262 	.globl _P2
                                    263 	.globl _S1CON
                                    264 	.globl _IEN2
                                    265 	.globl _S0CON
                                    266 	.globl _DPS
                                    267 	.globl _P1
                                    268 	.globl _TCON
                                    269 	.globl _PCON
                                    270 	.globl _DPH1
                                    271 	.globl _DPL1
                                    272 	.globl _DPH0
                                    273 	.globl _DPL0
                                    274 	.globl _SP
                                    275 	.globl _P0
                                    276 	.globl _X_IEEE_ADDR
                                    277 	.globl _X_INFOPAGE
                                    278 	.globl _X_P2DIR
                                    279 	.globl _X_P1DIR
                                    280 	.globl _X_P0DIR
                                    281 	.globl _X_U1GCR
                                    282 	.globl _X_U1UCR
                                    283 	.globl _X_U1BAUD
                                    284 	.globl _X_U1DBUF
                                    285 	.globl _X_U1CSR
                                    286 	.globl _X_P2INP
                                    287 	.globl _X_P1INP
                                    288 	.globl _X_P2SEL
                                    289 	.globl _X_P1SEL
                                    290 	.globl _X_P0SEL
                                    291 	.globl _X_APCFG
                                    292 	.globl _X_PERCFG
                                    293 	.globl _X_T4CC1
                                    294 	.globl _X_T4CCTL1
                                    295 	.globl _X_T4CC0
                                    296 	.globl _X_T4CCTL0
                                    297 	.globl _X_T4CTL
                                    298 	.globl _X_T4CNT
                                    299 	.globl _X_RFIRQF0
                                    300 	.globl _X_T1CCTL2
                                    301 	.globl _X_T1CCTL1
                                    302 	.globl _X_T1CCTL0
                                    303 	.globl _X_T1CTL
                                    304 	.globl _X_T1CNTH
                                    305 	.globl _X_T1CNTL
                                    306 	.globl _X_RFST
                                    307 	.globl _X_T1CC2H
                                    308 	.globl _X_T1CC2L
                                    309 	.globl _X_T1CC1H
                                    310 	.globl _X_T1CC1L
                                    311 	.globl _X_T1CC0H
                                    312 	.globl _X_T1CC0L
                                    313 	.globl _X_RFD
                                    314 	.globl _X_TIMIF
                                    315 	.globl _X_DMAREQ
                                    316 	.globl _X_DMAARM
                                    317 	.globl _X_DMA0CFGH
                                    318 	.globl _X_DMA0CFGL
                                    319 	.globl _X_DMA1CFGH
                                    320 	.globl _X_DMA1CFGL
                                    321 	.globl _X_DMAIRQ
                                    322 	.globl _X_T3CC1
                                    323 	.globl _X_T3CCTL1
                                    324 	.globl _X_T3CC0
                                    325 	.globl _X_T3CCTL0
                                    326 	.globl _X_T3CTL
                                    327 	.globl _X_T3CNT
                                    328 	.globl _X_WDCTL
                                    329 	.globl _X_MEMCTR
                                    330 	.globl _X_CLKCONCMD
                                    331 	.globl _X_U0GCR
                                    332 	.globl _X_U0UCR
                                    333 	.globl _X_T2MSEL
                                    334 	.globl _X_U0BAUD
                                    335 	.globl _X_U0DBUF
                                    336 	.globl _X_RFERRF
                                    337 	.globl _X_SLEEPCMD
                                    338 	.globl _X_RNDH
                                    339 	.globl _X_RNDL
                                    340 	.globl _X_ADCH
                                    341 	.globl _X_ADCL
                                    342 	.globl _X_ADCCON3
                                    343 	.globl _X_ADCCON2
                                    344 	.globl _X_ADCCON1
                                    345 	.globl _X_ENCCS
                                    346 	.globl _X_ENCDO
                                    347 	.globl _X_ENCDI
                                    348 	.globl _X_T1STAT
                                    349 	.globl _X_PMUX
                                    350 	.globl _X_STLOAD
                                    351 	.globl _X_P2IEN
                                    352 	.globl _X_P0IEN
                                    353 	.globl _X_T2IRQM
                                    354 	.globl _X_T2MOVF2
                                    355 	.globl _X_T2MOVF1
                                    356 	.globl _X_T2MOVF0
                                    357 	.globl _X_T2M1
                                    358 	.globl _X_T2M0
                                    359 	.globl _X_T2IRQF
                                    360 	.globl _X_P2
                                    361 	.globl _X_PSBANK
                                    362 	.globl _X_FMAP
                                    363 	.globl _X_CLKCONSTA
                                    364 	.globl _X_SLEEPSTA
                                    365 	.globl _X_T2EVTCFG
                                    366 	.globl _X_ST2
                                    367 	.globl _X_ST1
                                    368 	.globl _X_ST0
                                    369 	.globl _X_T2CTRL
                                    370 	.globl _X__XPAGE
                                    371 	.globl _X_MPAGE
                                    372 	.globl _X_RFIRQF1
                                    373 	.globl _X_P1
                                    374 	.globl _X_P0INP
                                    375 	.globl _X_P1IEN
                                    376 	.globl _X_PICTL
                                    377 	.globl _X_P2IFG
                                    378 	.globl _X_P1IFG
                                    379 	.globl _X_P0IFG
                                    380 	.globl _X_U0CSR
                                    381 	.globl _X_P0
                                    382 	.globl _USBF5
                                    383 	.globl _USBF4
                                    384 	.globl _USBF3
                                    385 	.globl _USBF2
                                    386 	.globl _USBF1
                                    387 	.globl _USBF0
                                    388 	.globl _USBCNTH
                                    389 	.globl _USBCNTL
                                    390 	.globl _USBCNT0
                                    391 	.globl _USBCSOH
                                    392 	.globl _USBCSOL
                                    393 	.globl _USBMAXO
                                    394 	.globl _USBCSIH
                                    395 	.globl _USBCSIL
                                    396 	.globl _USBCS0
                                    397 	.globl _USBMAXI
                                    398 	.globl _USBCTRL
                                    399 	.globl _USBINDEX
                                    400 	.globl _USBFRMH
                                    401 	.globl _USBFRML
                                    402 	.globl _USBCIE
                                    403 	.globl _USBOIE
                                    404 	.globl _USBIIE
                                    405 	.globl _USBCIF
                                    406 	.globl _USBOIF
                                    407 	.globl _USBIIF
                                    408 	.globl _USBPOW
                                    409 	.globl _USBADDR
                                    410 	.globl _CSPT
                                    411 	.globl _CSPZ
                                    412 	.globl _CSPY
                                    413 	.globl _CSPX
                                    414 	.globl _CSPSTAT
                                    415 	.globl _CSPCTRL
                                    416 	.globl _CSPPROG23
                                    417 	.globl _CSPPROG22
                                    418 	.globl _CSPPROG21
                                    419 	.globl _CSPPROG20
                                    420 	.globl _CSPPROG19
                                    421 	.globl _CSPPROG18
                                    422 	.globl _CSPPROG17
                                    423 	.globl _CSPPROG16
                                    424 	.globl _CSPPROG15
                                    425 	.globl _CSPPROG14
                                    426 	.globl _CSPPROG13
                                    427 	.globl _CSPPROG12
                                    428 	.globl _CSPPROG11
                                    429 	.globl _CSPPROG10
                                    430 	.globl _CSPPROG9
                                    431 	.globl _CSPPROG8
                                    432 	.globl _CSPPROG7
                                    433 	.globl _CSPPROG6
                                    434 	.globl _CSPPROG5
                                    435 	.globl _CSPPROG4
                                    436 	.globl _CSPPROG3
                                    437 	.globl _CSPPROG2
                                    438 	.globl _CSPPROG1
                                    439 	.globl _CSPPROG0
                                    440 	.globl _RFC_OBS_CTRL2
                                    441 	.globl _RFC_OBS_CTRL1
                                    442 	.globl _RFC_OBS_CTRL0
                                    443 	.globl _TXFILTCFG
                                    444 	.globl _PTEST1
                                    445 	.globl _PTEST0
                                    446 	.globl _ATEST
                                    447 	.globl _DACTEST2
                                    448 	.globl _DACTEST1
                                    449 	.globl _DACTEST0
                                    450 	.globl _MDMTEST1
                                    451 	.globl _MDMTEST0
                                    452 	.globl _ADCTEST2
                                    453 	.globl _ADCTEST1
                                    454 	.globl _ADCTEST0
                                    455 	.globl _AGCCTRL3
                                    456 	.globl _AGCCTRL2
                                    457 	.globl _AGCCTRL1
                                    458 	.globl _AGCCTRL0
                                    459 	.globl _FSCAL3
                                    460 	.globl _FSCAL2
                                    461 	.globl _FSCAL1
                                    462 	.globl _FSCAL0
                                    463 	.globl _FSCTRL
                                    464 	.globl _RXCTRL
                                    465 	.globl _FREQEST
                                    466 	.globl _MDMCTRL1
                                    467 	.globl _MDMCTRL0
                                    468 	.globl _RFRND
                                    469 	.globl _RFERRM
                                    470 	.globl _RFIRQM1
                                    471 	.globl _RFIRQM0
                                    472 	.globl _TXLAST_PTR
                                    473 	.globl _TXFIRST_PTR
                                    474 	.globl _RXP1_PTR
                                    475 	.globl _RXLAST_PTR
                                    476 	.globl _RXFIRST_PTR
                                    477 	.globl _TXFIFOCNT
                                    478 	.globl _RXFIFOCNT
                                    479 	.globl _RXFIRST
                                    480 	.globl _RSSISTAT
                                    481 	.globl _RSSI
                                    482 	.globl _CCACTRL1
                                    483 	.globl _CCACTRL0
                                    484 	.globl _FSMCTRL
                                    485 	.globl _FIFOPCTRL
                                    486 	.globl _FSMSTAT1
                                    487 	.globl _FSMSTAT0
                                    488 	.globl _TXCTRL
                                    489 	.globl _TXPOWER
                                    490 	.globl _FREQCTRL
                                    491 	.globl _FREQTUNE
                                    492 	.globl _RXMASKCLR
                                    493 	.globl _RXMASKSET
                                    494 	.globl _RXENABLE
                                    495 	.globl _FRMCTRL1
                                    496 	.globl _FRMCTRL0
                                    497 	.globl _SRCEXTEN2
                                    498 	.globl _SRCEXTEN1
                                    499 	.globl _SRCEXTEN0
                                    500 	.globl _SRCSHORTEN2
                                    501 	.globl _SRCSHORTEN1
                                    502 	.globl _SRCSHORTEN0
                                    503 	.globl _SRCMATCH
                                    504 	.globl _FRMFILT1
                                    505 	.globl _FRMFILT0
                                    506 	.globl _SHORT_ADDR1
                                    507 	.globl _SHORT_ADDR0
                                    508 	.globl _PAN_ID1
                                    509 	.globl _PAN_ID0
                                    510 	.globl _EXT_ADDR7
                                    511 	.globl _EXT_ADDR6
                                    512 	.globl _EXT_ADDR5
                                    513 	.globl _EXT_ADDR4
                                    514 	.globl _EXT_ADDR3
                                    515 	.globl _EXT_ADDR2
                                    516 	.globl _EXT_ADDR1
                                    517 	.globl _EXT_ADDR0
                                    518 	.globl _SRCSHORTPENDEN2
                                    519 	.globl _SRCSHORTPENDEN1
                                    520 	.globl _SRCSHORTPENDEN0
                                    521 	.globl _SRCEXTPENDEN2
                                    522 	.globl _SRCEXTPENDEN1
                                    523 	.globl _SRCEXTPENDEN0
                                    524 	.globl _SRCRESINDEX
                                    525 	.globl _SRCRESMASK2
                                    526 	.globl _SRCRESMASK1
                                    527 	.globl _SRCRESMASK0
                                    528 	.globl _SRC_ADDR_TABLE
                                    529 	.globl _TXFIFO
                                    530 	.globl _RXFIFO
                                    531 	.globl _RFCORE_RAM
                                    532 	.globl _CMPCTL
                                    533 	.globl _OPAMPS
                                    534 	.globl _OPAMPC
                                    535 	.globl _STCV2
                                    536 	.globl _STCV1
                                    537 	.globl _STCV0
                                    538 	.globl _STCS
                                    539 	.globl _STCC
                                    540 	.globl _T1CC4H
                                    541 	.globl _T1CC4L
                                    542 	.globl _T1CC3H
                                    543 	.globl _T1CC3L
                                    544 	.globl _XX_T1CC2H
                                    545 	.globl _XX_T1CC2L
                                    546 	.globl _XX_T1CC1H
                                    547 	.globl _XX_T1CC1L
                                    548 	.globl _XX_T1CC0H
                                    549 	.globl _XX_T1CC0L
                                    550 	.globl _T1CCTL4
                                    551 	.globl _T1CCTL3
                                    552 	.globl _XX_T1CCTL2
                                    553 	.globl _XX_T1CCTL1
                                    554 	.globl _XX_T1CCTL0
                                    555 	.globl _CLD
                                    556 	.globl _IRCTL
                                    557 	.globl _CHIPINFO1
                                    558 	.globl _CHIPINFO0
                                    559 	.globl _FWDATA
                                    560 	.globl _FADDRH
                                    561 	.globl _FADDRL
                                    562 	.globl _FCTL
                                    563 	.globl _IVCTRL
                                    564 	.globl _BATTMON
                                    565 	.globl _SRCRC
                                    566 	.globl _DBGDATA
                                    567 	.globl _TESTREG0
                                    568 	.globl _CHIPID
                                    569 	.globl _CHVER
                                    570 	.globl _OBSSEL5
                                    571 	.globl _OBSSEL4
                                    572 	.globl _OBSSEL3
                                    573 	.globl _OBSSEL2
                                    574 	.globl _OBSSEL1
                                    575 	.globl _OBSSEL0
                                    576 	.globl _I2CIO
                                    577 	.globl _I2CWC
                                    578 	.globl _I2CADDR
                                    579 	.globl _I2CDATA
                                    580 	.globl _I2CSTAT
                                    581 	.globl _I2CCFG
                                    582 	.globl _OPAMPMC
                                    583 	.globl _MONMUX
                                    584 ;--------------------------------------------------------
                                    585 ; special function registers
                                    586 ;--------------------------------------------------------
                                    587 	.area RSEG    (ABS,DATA)
      000000                        588 	.org 0x0000
                           000080   589 _P0	=	0x0080
                           000081   590 _SP	=	0x0081
                           000082   591 _DPL0	=	0x0082
                           000083   592 _DPH0	=	0x0083
                           000084   593 _DPL1	=	0x0084
                           000085   594 _DPH1	=	0x0085
                           000087   595 _PCON	=	0x0087
                           000088   596 _TCON	=	0x0088
                           000090   597 _P1	=	0x0090
                           000092   598 _DPS	=	0x0092
                           000098   599 _S0CON	=	0x0098
                           00009A   600 _IEN2	=	0x009a
                           00009B   601 _S1CON	=	0x009b
                           0000A0   602 _P2	=	0x00a0
                           0000A8   603 _IEN0	=	0x00a8
                           0000A9   604 _IP0	=	0x00a9
                           0000B8   605 _IEN1	=	0x00b8
                           0000B9   606 _IP1	=	0x00b9
                           0000C0   607 _IRCON	=	0x00c0
                           0000D0   608 _PSW	=	0x00d0
                           0000E0   609 _ACC	=	0x00e0
                           0000E8   610 _IRCON2	=	0x00e8
                           0000F0   611 _B	=	0x00f0
                           0000B4   612 _ADCCON1	=	0x00b4
                           0000B5   613 _ADCCON2	=	0x00b5
                           0000B6   614 _ADCCON3	=	0x00b6
                           0000BA   615 _ADCL	=	0x00ba
                           0000BB   616 _ADCH	=	0x00bb
                           0000BC   617 _RNDL	=	0x00bc
                           0000BD   618 _RNDH	=	0x00bd
                           0000B1   619 _ENCDI	=	0x00b1
                           0000B2   620 _ENCDO	=	0x00b2
                           0000B3   621 _ENCCS	=	0x00b3
                           0000D1   622 _DMAIRQ	=	0x00d1
                           0000D2   623 _DMA1CFGL	=	0x00d2
                           0000D3   624 _DMA1CFGH	=	0x00d3
                           0000D4   625 _DMA0CFGL	=	0x00d4
                           0000D5   626 _DMA0CFGH	=	0x00d5
                           0000D6   627 _DMAARM	=	0x00d6
                           0000D7   628 _DMAREQ	=	0x00d7
                           000089   629 _P0IFG	=	0x0089
                           00008A   630 _P1IFG	=	0x008a
                           00008B   631 _P2IFG	=	0x008b
                           00008C   632 _PICTL	=	0x008c
                           0000AB   633 _P0IEN	=	0x00ab
                           00008D   634 _P1IEN	=	0x008d
                           0000AC   635 _P2IEN	=	0x00ac
                           00008F   636 _P0INP	=	0x008f
                           0000F1   637 _PERCFG	=	0x00f1
                           0000F2   638 _APCFG	=	0x00f2
                           0000F3   639 _P0SEL	=	0x00f3
                           0000F4   640 _P1SEL	=	0x00f4
                           0000F5   641 _P2SEL	=	0x00f5
                           0000F6   642 _P1INP	=	0x00f6
                           0000F7   643 _P2INP	=	0x00f7
                           0000FD   644 _P0DIR	=	0x00fd
                           0000FE   645 _P1DIR	=	0x00fe
                           0000FF   646 _P2DIR	=	0x00ff
                           0000AE   647 _PMUX	=	0x00ae
                           000093   648 _MPAGE	=	0x0093
                           000093   649 __XPAGE	=	0x0093
                           0000C7   650 _MEMCTR	=	0x00c7
                           00009F   651 _FMAP	=	0x009f
                           00009F   652 _PSBANK	=	0x009f
                           000091   653 _RFIRQF1	=	0x0091
                           0000D9   654 _RFD	=	0x00d9
                           0000E1   655 _RFST	=	0x00e1
                           0000E9   656 _RFIRQF0	=	0x00e9
                           0000BF   657 _RFERRF	=	0x00bf
                           000095   658 _ST0	=	0x0095
                           000096   659 _ST1	=	0x0096
                           000097   660 _ST2	=	0x0097
                           0000AD   661 _STLOAD	=	0x00ad
                           0000BE   662 _SLEEPCMD	=	0x00be
                           00009D   663 _SLEEPSTA	=	0x009d
                           0000C6   664 _CLKCONCMD	=	0x00c6
                           00009E   665 _CLKCONSTA	=	0x009e
                           0000DA   666 _T1CC0L	=	0x00da
                           0000DB   667 _T1CC0H	=	0x00db
                           0000DC   668 _T1CC1L	=	0x00dc
                           0000DD   669 _T1CC1H	=	0x00dd
                           0000DE   670 _T1CC2L	=	0x00de
                           0000DF   671 _T1CC2H	=	0x00df
                           0000E2   672 _T1CNTL	=	0x00e2
                           0000E3   673 _T1CNTH	=	0x00e3
                           0000E4   674 _T1CTL	=	0x00e4
                           0000E5   675 _T1CCTL0	=	0x00e5
                           0000E6   676 _T1CCTL1	=	0x00e6
                           0000E7   677 _T1CCTL2	=	0x00e7
                           0000AF   678 _T1STAT	=	0x00af
                           000094   679 _T2CTRL	=	0x0094
                           00009C   680 _T2EVTCFG	=	0x009c
                           0000A1   681 _T2IRQF	=	0x00a1
                           0000A2   682 _T2M0	=	0x00a2
                           0000A3   683 _T2M1	=	0x00a3
                           0000A4   684 _T2MOVF0	=	0x00a4
                           0000A5   685 _T2MOVF1	=	0x00a5
                           0000A6   686 _T2MOVF2	=	0x00a6
                           0000A7   687 _T2IRQM	=	0x00a7
                           0000C3   688 _T2MSEL	=	0x00c3
                           0000CA   689 _T3CNT	=	0x00ca
                           0000CB   690 _T3CTL	=	0x00cb
                           0000CC   691 _T3CCTL0	=	0x00cc
                           0000CD   692 _T3CC0	=	0x00cd
                           0000CE   693 _T3CCTL1	=	0x00ce
                           0000CF   694 _T3CC1	=	0x00cf
                           0000EA   695 _T4CNT	=	0x00ea
                           0000EB   696 _T4CTL	=	0x00eb
                           0000EC   697 _T4CCTL0	=	0x00ec
                           0000ED   698 _T4CC0	=	0x00ed
                           0000EE   699 _T4CCTL1	=	0x00ee
                           0000EF   700 _T4CC1	=	0x00ef
                           0000D8   701 _TIMIF	=	0x00d8
                           000086   702 _U0CSR	=	0x0086
                           0000C1   703 _U0DBUF	=	0x00c1
                           0000C2   704 _U0BAUD	=	0x00c2
                           0000C4   705 _U0UCR	=	0x00c4
                           0000C5   706 _U0GCR	=	0x00c5
                           0000F8   707 _U1CSR	=	0x00f8
                           0000F9   708 _U1DBUF	=	0x00f9
                           0000FA   709 _U1BAUD	=	0x00fa
                           0000FB   710 _U1UCR	=	0x00fb
                           0000FC   711 _U1GCR	=	0x00fc
                           0000C9   712 _WDCTL	=	0x00c9
                                    713 ;--------------------------------------------------------
                                    714 ; special function bits
                                    715 ;--------------------------------------------------------
                                    716 	.area RSEG    (ABS,DATA)
      000000                        717 	.org 0x0000
                           000087   718 _P0_7	=	0x0087
                           000086   719 _P0_6	=	0x0086
                           000085   720 _P0_5	=	0x0085
                           000084   721 _P0_4	=	0x0084
                           000083   722 _P0_3	=	0x0083
                           000082   723 _P0_2	=	0x0082
                           000081   724 _P0_1	=	0x0081
                           000080   725 _P0_0	=	0x0080
                           00008F   726 _URX1IF	=	0x008f
                           00008D   727 _ADCIF	=	0x008d
                           00008B   728 _URX0IF	=	0x008b
                           00008A   729 _IT1	=	0x008a
                           000089   730 _RFERRIF	=	0x0089
                           000088   731 _IT0	=	0x0088
                           000097   732 _P1_7	=	0x0097
                           000096   733 _P1_6	=	0x0096
                           000095   734 _P1_5	=	0x0095
                           000094   735 _P1_4	=	0x0094
                           000093   736 _P1_3	=	0x0093
                           000092   737 _P1_2	=	0x0092
                           000091   738 _P1_1	=	0x0091
                           000090   739 _P1_0	=	0x0090
                           000099   740 _ENCIF_1	=	0x0099
                           000098   741 _ENCIF_0	=	0x0098
                           0000A7   742 _P2_7	=	0x00a7
                           0000A6   743 _P2_6	=	0x00a6
                           0000A5   744 _P2_5	=	0x00a5
                           0000A4   745 _P2_4	=	0x00a4
                           0000A3   746 _P2_3	=	0x00a3
                           0000A2   747 _P2_2	=	0x00a2
                           0000A1   748 _P2_1	=	0x00a1
                           0000A0   749 _P2_0	=	0x00a0
                           0000AF   750 _EA	=	0x00af
                           0000AD   751 _STIE	=	0x00ad
                           0000AC   752 _ENCIE	=	0x00ac
                           0000AB   753 _URX1IE	=	0x00ab
                           0000AA   754 _URX0IE	=	0x00aa
                           0000A9   755 _ADCIE	=	0x00a9
                           0000A8   756 _RFERRIE	=	0x00a8
                           0000BD   757 _P0IE	=	0x00bd
                           0000BC   758 _T4IE	=	0x00bc
                           0000BB   759 _T3IE	=	0x00bb
                           0000BA   760 _T2IE	=	0x00ba
                           0000B9   761 _T1IE	=	0x00b9
                           0000B8   762 _DMAIE	=	0x00b8
                           0000C7   763 _STIF	=	0x00c7
                           0000C5   764 _P0IF	=	0x00c5
                           0000C4   765 _T4IF	=	0x00c4
                           0000C3   766 _T3IF	=	0x00c3
                           0000C2   767 _T2IF	=	0x00c2
                           0000C1   768 _T1IF	=	0x00c1
                           0000C0   769 _DMAIF	=	0x00c0
                           0000D7   770 _CY	=	0x00d7
                           0000D6   771 _AC	=	0x00d6
                           0000D5   772 _F0	=	0x00d5
                           0000D4   773 _RS1	=	0x00d4
                           0000D3   774 _RS0	=	0x00d3
                           0000D2   775 _OV	=	0x00d2
                           0000D1   776 _F1	=	0x00d1
                           0000D0   777 _P	=	0x00d0
                           0000E7   778 _ACC_7	=	0x00e7
                           0000E6   779 _ACC_6	=	0x00e6
                           0000E5   780 _ACC_5	=	0x00e5
                           0000E4   781 _ACC_4	=	0x00e4
                           0000E3   782 _ACC_3	=	0x00e3
                           0000E2   783 _ACC_2	=	0x00e2
                           0000E1   784 _ACC_1	=	0x00e1
                           0000E0   785 _ACC_0	=	0x00e0
                           0000EC   786 _WDTIF	=	0x00ec
                           0000EB   787 _P1IF	=	0x00eb
                           0000EA   788 _UTX1IF	=	0x00ea
                           0000E9   789 _UTX0IF	=	0x00e9
                           0000E8   790 _P2IF	=	0x00e8
                           0000F7   791 _B_7	=	0x00f7
                           0000F6   792 _B_6	=	0x00f6
                           0000F5   793 _B_5	=	0x00f5
                           0000F4   794 _B_4	=	0x00f4
                           0000F3   795 _B_3	=	0x00f3
                           0000F2   796 _B_2	=	0x00f2
                           0000F1   797 _B_1	=	0x00f1
                           0000F0   798 _B_0	=	0x00f0
                           0000DE   799 _OVFIM	=	0x00de
                           0000DD   800 _T4CH1IF	=	0x00dd
                           0000DC   801 _T4CH0IF	=	0x00dc
                           0000DB   802 _T4OVFIF	=	0x00db
                           0000DA   803 _T3CH1IF	=	0x00da
                           0000D9   804 _T3CH0IF	=	0x00d9
                           0000D8   805 _T3OVFIF	=	0x00d8
                           0000FF   806 _MODE	=	0x00ff
                           0000FE   807 _RE	=	0x00fe
                           0000FD   808 _SLAVE	=	0x00fd
                           0000FC   809 _FE	=	0x00fc
                           0000FB   810 _ERR	=	0x00fb
                           0000FA   811 _RX_BYTE	=	0x00fa
                           0000F9   812 _TX_BYTE	=	0x00f9
                           0000F8   813 _ACTIVE	=	0x00f8
                                    814 ;--------------------------------------------------------
                                    815 ; overlayable register banks
                                    816 ;--------------------------------------------------------
                                    817 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        818 	.ds 8
                                    819 ;--------------------------------------------------------
                                    820 ; internal ram data
                                    821 ;--------------------------------------------------------
                                    822 	.area DSEG    (DATA)
                                    823 ;--------------------------------------------------------
                                    824 ; overlayable items in internal ram 
                                    825 ;--------------------------------------------------------
                                    826 ;--------------------------------------------------------
                                    827 ; indirectly addressable internal ram data
                                    828 ;--------------------------------------------------------
                                    829 	.area ISEG    (DATA)
                                    830 ;--------------------------------------------------------
                                    831 ; absolute internal ram data
                                    832 ;--------------------------------------------------------
                                    833 	.area IABS    (ABS,DATA)
                                    834 	.area IABS    (ABS,DATA)
                                    835 ;--------------------------------------------------------
                                    836 ; bit data
                                    837 ;--------------------------------------------------------
                                    838 	.area BSEG    (BIT)
                                    839 ;--------------------------------------------------------
                                    840 ; paged external ram data
                                    841 ;--------------------------------------------------------
                                    842 	.area PSEG    (PAG,XDATA)
                                    843 ;--------------------------------------------------------
                                    844 ; external ram data
                                    845 ;--------------------------------------------------------
                                    846 	.area XSEG    (XDATA)
                           0061A6   847 _MONMUX	=	0x61a6
                           0061A6   848 _OPAMPMC	=	0x61a6
                           006230   849 _I2CCFG	=	0x6230
                           006231   850 _I2CSTAT	=	0x6231
                           006232   851 _I2CDATA	=	0x6232
                           006233   852 _I2CADDR	=	0x6233
                           006234   853 _I2CWC	=	0x6234
                           006235   854 _I2CIO	=	0x6235
                           006243   855 _OBSSEL0	=	0x6243
                           006244   856 _OBSSEL1	=	0x6244
                           006245   857 _OBSSEL2	=	0x6245
                           006246   858 _OBSSEL3	=	0x6246
                           006247   859 _OBSSEL4	=	0x6247
                           006248   860 _OBSSEL5	=	0x6248
                           006249   861 _CHVER	=	0x6249
                           00624A   862 _CHIPID	=	0x624a
                           00624B   863 _TESTREG0	=	0x624b
                           006260   864 _DBGDATA	=	0x6260
                           006262   865 _SRCRC	=	0x6262
                           006264   866 _BATTMON	=	0x6264
                           006265   867 _IVCTRL	=	0x6265
                           006270   868 _FCTL	=	0x6270
                           006271   869 _FADDRL	=	0x6271
                           006272   870 _FADDRH	=	0x6272
                           006273   871 _FWDATA	=	0x6273
                           006276   872 _CHIPINFO0	=	0x6276
                           006277   873 _CHIPINFO1	=	0x6277
                           006281   874 _IRCTL	=	0x6281
                           006290   875 _CLD	=	0x6290
                           0062A0   876 _XX_T1CCTL0	=	0x62a0
                           0062A1   877 _XX_T1CCTL1	=	0x62a1
                           0062A2   878 _XX_T1CCTL2	=	0x62a2
                           0062A3   879 _T1CCTL3	=	0x62a3
                           0062A4   880 _T1CCTL4	=	0x62a4
                           0062A6   881 _XX_T1CC0L	=	0x62a6
                           0062A7   882 _XX_T1CC0H	=	0x62a7
                           0062A8   883 _XX_T1CC1L	=	0x62a8
                           0062A9   884 _XX_T1CC1H	=	0x62a9
                           0062AA   885 _XX_T1CC2L	=	0x62aa
                           0062AB   886 _XX_T1CC2H	=	0x62ab
                           0062AC   887 _T1CC3L	=	0x62ac
                           0062AD   888 _T1CC3H	=	0x62ad
                           0062AE   889 _T1CC4L	=	0x62ae
                           0062AF   890 _T1CC4H	=	0x62af
                           0062B0   891 _STCC	=	0x62b0
                           0062B1   892 _STCS	=	0x62b1
                           0062B2   893 _STCV0	=	0x62b2
                           0062B3   894 _STCV1	=	0x62b3
                           0062B4   895 _STCV2	=	0x62b4
                           0062C0   896 _OPAMPC	=	0x62c0
                           0062C1   897 _OPAMPS	=	0x62c1
                           0062D0   898 _CMPCTL	=	0x62d0
                           006000   899 _RFCORE_RAM	=	0x6000
                           006000   900 _RXFIFO	=	0x6000
                           006080   901 _TXFIFO	=	0x6080
                           006100   902 _SRC_ADDR_TABLE	=	0x6100
                           006160   903 _SRCRESMASK0	=	0x6160
                           006161   904 _SRCRESMASK1	=	0x6161
                           006162   905 _SRCRESMASK2	=	0x6162
                           006163   906 _SRCRESINDEX	=	0x6163
                           006164   907 _SRCEXTPENDEN0	=	0x6164
                           006165   908 _SRCEXTPENDEN1	=	0x6165
                           006166   909 _SRCEXTPENDEN2	=	0x6166
                           006167   910 _SRCSHORTPENDEN0	=	0x6167
                           006168   911 _SRCSHORTPENDEN1	=	0x6168
                           006169   912 _SRCSHORTPENDEN2	=	0x6169
                           00616A   913 _EXT_ADDR0	=	0x616a
                           00616B   914 _EXT_ADDR1	=	0x616b
                           00616C   915 _EXT_ADDR2	=	0x616c
                           00616D   916 _EXT_ADDR3	=	0x616d
                           00616E   917 _EXT_ADDR4	=	0x616e
                           00616F   918 _EXT_ADDR5	=	0x616f
                           006170   919 _EXT_ADDR6	=	0x6170
                           006171   920 _EXT_ADDR7	=	0x6171
                           006172   921 _PAN_ID0	=	0x6172
                           006173   922 _PAN_ID1	=	0x6173
                           006174   923 _SHORT_ADDR0	=	0x6174
                           006175   924 _SHORT_ADDR1	=	0x6175
                           006180   925 _FRMFILT0	=	0x6180
                           006181   926 _FRMFILT1	=	0x6181
                           006182   927 _SRCMATCH	=	0x6182
                           006183   928 _SRCSHORTEN0	=	0x6183
                           006184   929 _SRCSHORTEN1	=	0x6184
                           006185   930 _SRCSHORTEN2	=	0x6185
                           006186   931 _SRCEXTEN0	=	0x6186
                           006187   932 _SRCEXTEN1	=	0x6187
                           006188   933 _SRCEXTEN2	=	0x6188
                           006189   934 _FRMCTRL0	=	0x6189
                           00618A   935 _FRMCTRL1	=	0x618a
                           00618B   936 _RXENABLE	=	0x618b
                           00618C   937 _RXMASKSET	=	0x618c
                           00618D   938 _RXMASKCLR	=	0x618d
                           00618E   939 _FREQTUNE	=	0x618e
                           00618F   940 _FREQCTRL	=	0x618f
                           006190   941 _TXPOWER	=	0x6190
                           006191   942 _TXCTRL	=	0x6191
                           006192   943 _FSMSTAT0	=	0x6192
                           006193   944 _FSMSTAT1	=	0x6193
                           006194   945 _FIFOPCTRL	=	0x6194
                           006195   946 _FSMCTRL	=	0x6195
                           006196   947 _CCACTRL0	=	0x6196
                           006197   948 _CCACTRL1	=	0x6197
                           006198   949 _RSSI	=	0x6198
                           006199   950 _RSSISTAT	=	0x6199
                           00619A   951 _RXFIRST	=	0x619a
                           00619B   952 _RXFIFOCNT	=	0x619b
                           00619C   953 _TXFIFOCNT	=	0x619c
                           00619D   954 _RXFIRST_PTR	=	0x619d
                           00619E   955 _RXLAST_PTR	=	0x619e
                           00619F   956 _RXP1_PTR	=	0x619f
                           0061A1   957 _TXFIRST_PTR	=	0x61a1
                           0061A2   958 _TXLAST_PTR	=	0x61a2
                           0061A3   959 _RFIRQM0	=	0x61a3
                           0061A4   960 _RFIRQM1	=	0x61a4
                           0061A5   961 _RFERRM	=	0x61a5
                           0061A7   962 _RFRND	=	0x61a7
                           0061A8   963 _MDMCTRL0	=	0x61a8
                           0061A9   964 _MDMCTRL1	=	0x61a9
                           0061AA   965 _FREQEST	=	0x61aa
                           0061AB   966 _RXCTRL	=	0x61ab
                           0061AC   967 _FSCTRL	=	0x61ac
                           0061AD   968 _FSCAL0	=	0x61ad
                           0061AE   969 _FSCAL1	=	0x61ae
                           0061AF   970 _FSCAL2	=	0x61af
                           0061B0   971 _FSCAL3	=	0x61b0
                           0061B1   972 _AGCCTRL0	=	0x61b1
                           0061B2   973 _AGCCTRL1	=	0x61b2
                           0061B3   974 _AGCCTRL2	=	0x61b3
                           0061B4   975 _AGCCTRL3	=	0x61b4
                           0061B5   976 _ADCTEST0	=	0x61b5
                           0061B6   977 _ADCTEST1	=	0x61b6
                           0061B7   978 _ADCTEST2	=	0x61b7
                           0061B8   979 _MDMTEST0	=	0x61b8
                           0061B9   980 _MDMTEST1	=	0x61b9
                           0061BA   981 _DACTEST0	=	0x61ba
                           0061BB   982 _DACTEST1	=	0x61bb
                           0061BC   983 _DACTEST2	=	0x61bc
                           0061BD   984 _ATEST	=	0x61bd
                           0061BE   985 _PTEST0	=	0x61be
                           0061BF   986 _PTEST1	=	0x61bf
                           0061FA   987 _TXFILTCFG	=	0x61fa
                           0061EB   988 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   989 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   990 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   991 _CSPPROG0	=	0x61c0
                           0061C1   992 _CSPPROG1	=	0x61c1
                           0061C2   993 _CSPPROG2	=	0x61c2
                           0061C3   994 _CSPPROG3	=	0x61c3
                           0061C4   995 _CSPPROG4	=	0x61c4
                           0061C5   996 _CSPPROG5	=	0x61c5
                           0061C6   997 _CSPPROG6	=	0x61c6
                           0061C7   998 _CSPPROG7	=	0x61c7
                           0061C8   999 _CSPPROG8	=	0x61c8
                           0061C9  1000 _CSPPROG9	=	0x61c9
                           0061CA  1001 _CSPPROG10	=	0x61ca
                           0061CB  1002 _CSPPROG11	=	0x61cb
                           0061CC  1003 _CSPPROG12	=	0x61cc
                           0061CD  1004 _CSPPROG13	=	0x61cd
                           0061CE  1005 _CSPPROG14	=	0x61ce
                           0061CF  1006 _CSPPROG15	=	0x61cf
                           0061D0  1007 _CSPPROG16	=	0x61d0
                           0061D1  1008 _CSPPROG17	=	0x61d1
                           0061D2  1009 _CSPPROG18	=	0x61d2
                           0061D3  1010 _CSPPROG19	=	0x61d3
                           0061D4  1011 _CSPPROG20	=	0x61d4
                           0061D5  1012 _CSPPROG21	=	0x61d5
                           0061D6  1013 _CSPPROG22	=	0x61d6
                           0061D7  1014 _CSPPROG23	=	0x61d7
                           0061E0  1015 _CSPCTRL	=	0x61e0
                           0061E1  1016 _CSPSTAT	=	0x61e1
                           0061E2  1017 _CSPX	=	0x61e2
                           0061E3  1018 _CSPY	=	0x61e3
                           0061E4  1019 _CSPZ	=	0x61e4
                           0061E5  1020 _CSPT	=	0x61e5
                           006200  1021 _USBADDR	=	0x6200
                           006201  1022 _USBPOW	=	0x6201
                           006202  1023 _USBIIF	=	0x6202
                           006204  1024 _USBOIF	=	0x6204
                           006206  1025 _USBCIF	=	0x6206
                           006207  1026 _USBIIE	=	0x6207
                           006209  1027 _USBOIE	=	0x6209
                           00620B  1028 _USBCIE	=	0x620b
                           00620C  1029 _USBFRML	=	0x620c
                           00620D  1030 _USBFRMH	=	0x620d
                           00620E  1031 _USBINDEX	=	0x620e
                           00620F  1032 _USBCTRL	=	0x620f
                           006210  1033 _USBMAXI	=	0x6210
                           006211  1034 _USBCS0	=	0x6211
                           006211  1035 _USBCSIL	=	0x6211
                           006212  1036 _USBCSIH	=	0x6212
                           006213  1037 _USBMAXO	=	0x6213
                           006214  1038 _USBCSOL	=	0x6214
                           006215  1039 _USBCSOH	=	0x6215
                           006216  1040 _USBCNT0	=	0x6216
                           006216  1041 _USBCNTL	=	0x6216
                           006217  1042 _USBCNTH	=	0x6217
                           006220  1043 _USBF0	=	0x6220
                           006222  1044 _USBF1	=	0x6222
                           006224  1045 _USBF2	=	0x6224
                           006226  1046 _USBF3	=	0x6226
                           006228  1047 _USBF4	=	0x6228
                           00622A  1048 _USBF5	=	0x622a
                           007080  1049 _X_P0	=	0x7080
                           007086  1050 _X_U0CSR	=	0x7086
                           007089  1051 _X_P0IFG	=	0x7089
                           00708A  1052 _X_P1IFG	=	0x708a
                           00708B  1053 _X_P2IFG	=	0x708b
                           00708C  1054 _X_PICTL	=	0x708c
                           00708D  1055 _X_P1IEN	=	0x708d
                           00708F  1056 _X_P0INP	=	0x708f
                           007090  1057 _X_P1	=	0x7090
                           007091  1058 _X_RFIRQF1	=	0x7091
                           007093  1059 _X_MPAGE	=	0x7093
                           007093  1060 _X__XPAGE	=	0x7093
                           007094  1061 _X_T2CTRL	=	0x7094
                           007095  1062 _X_ST0	=	0x7095
                           007096  1063 _X_ST1	=	0x7096
                           007097  1064 _X_ST2	=	0x7097
                           00709C  1065 _X_T2EVTCFG	=	0x709c
                           00709D  1066 _X_SLEEPSTA	=	0x709d
                           00709E  1067 _X_CLKCONSTA	=	0x709e
                           00709F  1068 _X_FMAP	=	0x709f
                           00709F  1069 _X_PSBANK	=	0x709f
                           0070A0  1070 _X_P2	=	0x70a0
                           0070A1  1071 _X_T2IRQF	=	0x70a1
                           0070A2  1072 _X_T2M0	=	0x70a2
                           0070A3  1073 _X_T2M1	=	0x70a3
                           0070A4  1074 _X_T2MOVF0	=	0x70a4
                           0070A5  1075 _X_T2MOVF1	=	0x70a5
                           0070A6  1076 _X_T2MOVF2	=	0x70a6
                           0070A7  1077 _X_T2IRQM	=	0x70a7
                           0070AB  1078 _X_P0IEN	=	0x70ab
                           0070AC  1079 _X_P2IEN	=	0x70ac
                           0070AD  1080 _X_STLOAD	=	0x70ad
                           0070AE  1081 _X_PMUX	=	0x70ae
                           0070AF  1082 _X_T1STAT	=	0x70af
                           0070B1  1083 _X_ENCDI	=	0x70b1
                           0070B2  1084 _X_ENCDO	=	0x70b2
                           0070B3  1085 _X_ENCCS	=	0x70b3
                           0070B4  1086 _X_ADCCON1	=	0x70b4
                           0070B5  1087 _X_ADCCON2	=	0x70b5
                           0070B6  1088 _X_ADCCON3	=	0x70b6
                           0070BA  1089 _X_ADCL	=	0x70ba
                           0070BB  1090 _X_ADCH	=	0x70bb
                           0070BC  1091 _X_RNDL	=	0x70bc
                           0070BD  1092 _X_RNDH	=	0x70bd
                           0070BE  1093 _X_SLEEPCMD	=	0x70be
                           0070BF  1094 _X_RFERRF	=	0x70bf
                           0070C1  1095 _X_U0DBUF	=	0x70c1
                           0070C2  1096 _X_U0BAUD	=	0x70c2
                           0070C3  1097 _X_T2MSEL	=	0x70c3
                           0070C4  1098 _X_U0UCR	=	0x70c4
                           0070C5  1099 _X_U0GCR	=	0x70c5
                           0070C6  1100 _X_CLKCONCMD	=	0x70c6
                           0070C7  1101 _X_MEMCTR	=	0x70c7
                           0070C9  1102 _X_WDCTL	=	0x70c9
                           0070CA  1103 _X_T3CNT	=	0x70ca
                           0070CB  1104 _X_T3CTL	=	0x70cb
                           0070CC  1105 _X_T3CCTL0	=	0x70cc
                           0070CD  1106 _X_T3CC0	=	0x70cd
                           0070CE  1107 _X_T3CCTL1	=	0x70ce
                           0070CF  1108 _X_T3CC1	=	0x70cf
                           0070D1  1109 _X_DMAIRQ	=	0x70d1
                           0070D2  1110 _X_DMA1CFGL	=	0x70d2
                           0070D3  1111 _X_DMA1CFGH	=	0x70d3
                           0070D4  1112 _X_DMA0CFGL	=	0x70d4
                           0070D5  1113 _X_DMA0CFGH	=	0x70d5
                           0070D6  1114 _X_DMAARM	=	0x70d6
                           0070D7  1115 _X_DMAREQ	=	0x70d7
                           0070D8  1116 _X_TIMIF	=	0x70d8
                           0070D9  1117 _X_RFD	=	0x70d9
                           0070DA  1118 _X_T1CC0L	=	0x70da
                           0070DB  1119 _X_T1CC0H	=	0x70db
                           0070DC  1120 _X_T1CC1L	=	0x70dc
                           0070DD  1121 _X_T1CC1H	=	0x70dd
                           0070DE  1122 _X_T1CC2L	=	0x70de
                           0070DF  1123 _X_T1CC2H	=	0x70df
                           0070E1  1124 _X_RFST	=	0x70e1
                           0070E2  1125 _X_T1CNTL	=	0x70e2
                           0070E3  1126 _X_T1CNTH	=	0x70e3
                           0070E4  1127 _X_T1CTL	=	0x70e4
                           0070E5  1128 _X_T1CCTL0	=	0x70e5
                           0070E6  1129 _X_T1CCTL1	=	0x70e6
                           0070E7  1130 _X_T1CCTL2	=	0x70e7
                           0070E9  1131 _X_RFIRQF0	=	0x70e9
                           0070EA  1132 _X_T4CNT	=	0x70ea
                           0070EB  1133 _X_T4CTL	=	0x70eb
                           0070EC  1134 _X_T4CCTL0	=	0x70ec
                           0070ED  1135 _X_T4CC0	=	0x70ed
                           0070EE  1136 _X_T4CCTL1	=	0x70ee
                           0070EF  1137 _X_T4CC1	=	0x70ef
                           0070F1  1138 _X_PERCFG	=	0x70f1
                           0070F2  1139 _X_APCFG	=	0x70f2
                           0070F3  1140 _X_P0SEL	=	0x70f3
                           0070F4  1141 _X_P1SEL	=	0x70f4
                           0070F5  1142 _X_P2SEL	=	0x70f5
                           0070F6  1143 _X_P1INP	=	0x70f6
                           0070F7  1144 _X_P2INP	=	0x70f7
                           0070F8  1145 _X_U1CSR	=	0x70f8
                           0070F9  1146 _X_U1DBUF	=	0x70f9
                           0070FA  1147 _X_U1BAUD	=	0x70fa
                           0070FB  1148 _X_U1UCR	=	0x70fb
                           0070FC  1149 _X_U1GCR	=	0x70fc
                           0070FD  1150 _X_P0DIR	=	0x70fd
                           0070FE  1151 _X_P1DIR	=	0x70fe
                           0070FF  1152 _X_P2DIR	=	0x70ff
                           007800  1153 _X_INFOPAGE	=	0x7800
                           00780C  1154 _X_IEEE_ADDR	=	0x780c
      000000                       1155 _lpp_is_on:
      000000                       1156 	.ds 1
      000001                       1157 _current_packet:
      000001                       1158 	.ds 8
      000009                       1159 _dutycycle_pt:
      000009                       1160 	.ds 2
      00000B                       1161 _timer:
      00000B                       1162 	.ds 22
      000021                       1163 _queued_packets_memb_memb_count:
      000021                       1164 	.ds 3
      000024                       1165 _queued_packets_memb_memb_mem:
      000024                       1166 	.ds 129
      0000A5                       1167 _encounter_memb_memb_count:
      0000A5                       1168 	.ds 4
      0000A9                       1169 _encounter_memb_memb_mem:
      0000A9                       1170 	.ds 228
      00018D                       1171 _stream_probe_timer:
      00018D                       1172 	.ds 22
      0001A3                       1173 _stream_off_timer:
      0001A3                       1174 	.ds 22
                                   1175 ;--------------------------------------------------------
                                   1176 ; absolute external ram data
                                   1177 ;--------------------------------------------------------
                                   1178 	.area XABS    (ABS,XDATA)
                                   1179 ;--------------------------------------------------------
                                   1180 ; external initialized ram data
                                   1181 ;--------------------------------------------------------
                                   1182 	.area XISEG   (XDATA)
      000000                       1183 _is_listening:
      000000                       1184 	.ds 1
      000001                       1185 _off_time_adjustment:
      000001                       1186 	.ds 2
      000003                       1187 _off_time:
      000003                       1188 	.ds 2
      000005                       1189 _pending_packets_list_list:
      000005                       1190 	.ds 3
      000008                       1191 _pending_packets_list:
      000008                       1192 	.ds 3
      00000B                       1193 _queued_packets_list_list:
      00000B                       1194 	.ds 3
      00000E                       1195 _queued_packets_list:
      00000E                       1196 	.ds 3
      000011                       1197 _queued_packets_memb:
      000011                       1198 	.ds 10
      00001B                       1199 _encounter_list_list:
      00001B                       1200 	.ds 3
      00001E                       1201 _encounter_list:
      00001E                       1202 	.ds 3
      000021                       1203 _encounter_memb:
      000021                       1204 	.ds 10
      00002B                       1205 _is_streaming:
      00002B                       1206 	.ds 1
                                   1207 	.area HOME    (CODE)
                                   1208 	.area GSINIT0 (CODE)
                                   1209 	.area GSINIT1 (CODE)
                                   1210 	.area GSINIT2 (CODE)
                                   1211 	.area GSINIT3 (CODE)
                                   1212 	.area GSINIT4 (CODE)
                                   1213 	.area GSINIT5 (CODE)
                                   1214 	.area GSINIT  (CODE)
                                   1215 	.area GSFINAL (CODE)
                                   1216 	.area CSEG    (CODE)
                                   1217 ;--------------------------------------------------------
                                   1218 ; global & static initialisations
                                   1219 ;--------------------------------------------------------
                                   1220 	.area HOME    (CODE)
                                   1221 	.area GSINIT  (CODE)
                                   1222 	.area GSFINAL (CODE)
                                   1223 	.area GSINIT  (CODE)
                                   1224 ;--------------------------------------------------------
                                   1225 ; Home
                                   1226 ;--------------------------------------------------------
                                   1227 	.area HOME    (CODE)
                                   1228 	.area HOME    (CODE)
                                   1229 ;--------------------------------------------------------
                                   1230 ; code
                                   1231 ;--------------------------------------------------------
                                   1232 	.area BANK1   (CODE)
                                   1233 ;------------------------------------------------------------
                                   1234 ;Allocation info for local variables in function 'turn_radio_on'
                                   1235 ;------------------------------------------------------------
                                   1236 ;	../../../core/net/mac/lpp.c:191: turn_radio_on(void)
                                   1237 ;	-----------------------------------------
                                   1238 ;	 function turn_radio_on
                                   1239 ;	-----------------------------------------
      000000                       1240 _turn_radio_on:
                           000007  1241 	ar7 = 0x07
                           000006  1242 	ar6 = 0x06
                           000005  1243 	ar5 = 0x05
                           000004  1244 	ar4 = 0x04
                           000003  1245 	ar3 = 0x03
                           000002  1246 	ar2 = 0x02
                           000001  1247 	ar1 = 0x01
                           000000  1248 	ar0 = 0x00
                                   1249 ;	../../../core/net/mac/lpp.c:193: NETSTACK_RADIO.on();
      000000 90r00r18         [24] 1250 	mov	dptr,#(_cc2530_rf_driver + 0x0018)
      000003 E4               [12] 1251 	clr	a
      000004 93               [24] 1252 	movc	a,@a+dptr
      000005 FD               [12] 1253 	mov	r5,a
      000006 A3               [24] 1254 	inc	dptr
      000007 E4               [12] 1255 	clr	a
      000008 93               [24] 1256 	movc	a,@a+dptr
      000009 FE               [12] 1257 	mov	r6,a
      00000A A3               [24] 1258 	inc	dptr
      00000B E4               [12] 1259 	clr	a
      00000C 93               [24] 1260 	movc	a,@a+dptr
      00000D FF               [12] 1261 	mov	r7,a
      00000E C0 07            [24] 1262 	push	ar7
      000010 C0 06            [24] 1263 	push	ar6
      000012 C0 05            [24] 1264 	push	ar5
      000014 C0 05            [24] 1265 	push	ar5
      000016 C0 06            [24] 1266 	push	ar6
      000018 C0 07            [24] 1267 	push	ar7
      00001A D0 02            [24] 1268 	pop	ar2
      00001C D0 01            [24] 1269 	pop	ar1
      00001E D0 00            [24] 1270 	pop	ar0
      000020 12r00r00         [24] 1271 	lcall	__sdcc_banked_call
      000023 D0 05            [24] 1272 	pop	ar5
      000025 D0 06            [24] 1273 	pop	ar6
      000027 D0 07            [24] 1274 	pop	ar7
                                   1275 ;	../../../core/net/mac/lpp.c:195: }
      000029 02r00r00         [24] 1276 	ljmp	__sdcc_banked_ret
                                   1277 ;------------------------------------------------------------
                                   1278 ;Allocation info for local variables in function 'turn_radio_off'
                                   1279 ;------------------------------------------------------------
                                   1280 ;	../../../core/net/mac/lpp.c:198: turn_radio_off(void)
                                   1281 ;	-----------------------------------------
                                   1282 ;	 function turn_radio_off
                                   1283 ;	-----------------------------------------
      00002C                       1284 _turn_radio_off:
                                   1285 ;	../../../core/net/mac/lpp.c:200: if(lpp_is_on && is_streaming == 0) {
      00002C 90r00r00         [24] 1286 	mov	dptr,#_lpp_is_on
      00002F E0               [24] 1287 	movx	a,@dptr
      000030 60 2F            [24] 1288 	jz	00104$
      000032 90r00r2B         [24] 1289 	mov	dptr,#_is_streaming
      000035 E0               [24] 1290 	movx	a,@dptr
      000036 70 29            [24] 1291 	jnz	00104$
                                   1292 ;	../../../core/net/mac/lpp.c:201: NETSTACK_RADIO.off();
      000038 90r00r1B         [24] 1293 	mov	dptr,#(_cc2530_rf_driver + 0x001b)
      00003B E4               [12] 1294 	clr	a
      00003C 93               [24] 1295 	movc	a,@a+dptr
      00003D FD               [12] 1296 	mov	r5,a
      00003E A3               [24] 1297 	inc	dptr
      00003F E4               [12] 1298 	clr	a
      000040 93               [24] 1299 	movc	a,@a+dptr
      000041 FE               [12] 1300 	mov	r6,a
      000042 A3               [24] 1301 	inc	dptr
      000043 E4               [12] 1302 	clr	a
      000044 93               [24] 1303 	movc	a,@a+dptr
      000045 FF               [12] 1304 	mov	r7,a
      000046 C0 07            [24] 1305 	push	ar7
      000048 C0 06            [24] 1306 	push	ar6
      00004A C0 05            [24] 1307 	push	ar5
      00004C C0 05            [24] 1308 	push	ar5
      00004E C0 06            [24] 1309 	push	ar6
      000050 C0 07            [24] 1310 	push	ar7
      000052 D0 02            [24] 1311 	pop	ar2
      000054 D0 01            [24] 1312 	pop	ar1
      000056 D0 00            [24] 1313 	pop	ar0
      000058 12r00r00         [24] 1314 	lcall	__sdcc_banked_call
      00005B D0 05            [24] 1315 	pop	ar5
      00005D D0 06            [24] 1316 	pop	ar6
      00005F D0 07            [24] 1317 	pop	ar7
      000061                       1318 00104$:
                                   1319 ;	../../../core/net/mac/lpp.c:204: }
      000061 02r00r00         [24] 1320 	ljmp	__sdcc_banked_ret
                                   1321 ;------------------------------------------------------------
                                   1322 ;Allocation info for local variables in function 'remove_encounter'
                                   1323 ;------------------------------------------------------------
                                   1324 ;encounter                 Allocated to registers r5 r6 r7 
                                   1325 ;e                         Allocated to stack - sp -2
                                   1326 ;------------------------------------------------------------
                                   1327 ;	../../../core/net/mac/lpp.c:207: remove_encounter(void *encounter)
                                   1328 ;	-----------------------------------------
                                   1329 ;	 function remove_encounter
                                   1330 ;	-----------------------------------------
      000064                       1331 _remove_encounter:
      000064 05 81            [12] 1332 	inc	sp
      000066 05 81            [12] 1333 	inc	sp
      000068 05 81            [12] 1334 	inc	sp
      00006A AD 82            [24] 1335 	mov	r5,dpl
      00006C AE 83            [24] 1336 	mov	r6,dph
      00006E AF F0            [24] 1337 	mov	r7,b
                                   1338 ;	../../../core/net/mac/lpp.c:209: struct encounter *e = encounter;
      000070 A8 81            [24] 1339 	mov	r0,sp
      000072 18               [12] 1340 	dec	r0
      000073 18               [12] 1341 	dec	r0
      000074 A6 05            [24] 1342 	mov	@r0,ar5
      000076 08               [12] 1343 	inc	r0
      000077 A6 06            [24] 1344 	mov	@r0,ar6
      000079 08               [12] 1345 	inc	r0
      00007A A6 07            [24] 1346 	mov	@r0,ar7
                                   1347 ;	../../../core/net/mac/lpp.c:211: ctimer_stop(&e->remove_timer);
      00007C A8 81            [24] 1348 	mov	r0,sp
      00007E 18               [12] 1349 	dec	r0
      00007F 18               [12] 1350 	dec	r0
      000080 74 0D            [12] 1351 	mov	a,#0x0d
      000082 26               [12] 1352 	add	a,@r0
      000083 FA               [12] 1353 	mov	r2,a
      000084 E4               [12] 1354 	clr	a
      000085 08               [12] 1355 	inc	r0
      000086 36               [12] 1356 	addc	a,@r0
      000087 FB               [12] 1357 	mov	r3,a
      000088 08               [12] 1358 	inc	r0
      000089 86 04            [24] 1359 	mov	ar4,@r0
      00008B 8A 82            [24] 1360 	mov	dpl,r2
      00008D 8B 83            [24] 1361 	mov	dph,r3
      00008F 8C F0            [24] 1362 	mov	b,r4
      000091 78r00            [12] 1363 	mov	r0,#_ctimer_stop
      000093 79s00            [12] 1364 	mov	r1,#(_ctimer_stop >> 8)
      000095 7As00            [12] 1365 	mov	r2,#(_ctimer_stop >> 16)
      000097 12r00r00         [24] 1366 	lcall	__sdcc_banked_call
                                   1367 ;	../../../core/net/mac/lpp.c:212: ctimer_stop(&e->turn_on_radio_timer);
      00009A A8 81            [24] 1368 	mov	r0,sp
      00009C 18               [12] 1369 	dec	r0
      00009D 18               [12] 1370 	dec	r0
      00009E 74 23            [12] 1371 	mov	a,#0x23
      0000A0 26               [12] 1372 	add	a,@r0
      0000A1 FA               [12] 1373 	mov	r2,a
      0000A2 E4               [12] 1374 	clr	a
      0000A3 08               [12] 1375 	inc	r0
      0000A4 36               [12] 1376 	addc	a,@r0
      0000A5 FB               [12] 1377 	mov	r3,a
      0000A6 08               [12] 1378 	inc	r0
      0000A7 86 04            [24] 1379 	mov	ar4,@r0
      0000A9 8A 82            [24] 1380 	mov	dpl,r2
      0000AB 8B 83            [24] 1381 	mov	dph,r3
      0000AD 8C F0            [24] 1382 	mov	b,r4
      0000AF 78r00            [12] 1383 	mov	r0,#_ctimer_stop
      0000B1 79s00            [12] 1384 	mov	r1,#(_ctimer_stop >> 8)
      0000B3 7As00            [12] 1385 	mov	r2,#(_ctimer_stop >> 16)
      0000B5 12r00r00         [24] 1386 	lcall	__sdcc_banked_call
                                   1387 ;	../../../core/net/mac/lpp.c:213: list_remove(encounter_list, e);
      0000B8 A8 81            [24] 1388 	mov	r0,sp
      0000BA 18               [12] 1389 	dec	r0
      0000BB 18               [12] 1390 	dec	r0
      0000BC 86 02            [24] 1391 	mov	ar2,@r0
      0000BE 08               [12] 1392 	inc	r0
      0000BF 86 03            [24] 1393 	mov	ar3,@r0
      0000C1 08               [12] 1394 	inc	r0
      0000C2 86 04            [24] 1395 	mov	ar4,@r0
      0000C4 90r00r1E         [24] 1396 	mov	dptr,#_encounter_list
      0000C7 E0               [24] 1397 	movx	a,@dptr
      0000C8 FD               [12] 1398 	mov	r5,a
      0000C9 A3               [24] 1399 	inc	dptr
      0000CA E0               [24] 1400 	movx	a,@dptr
      0000CB FE               [12] 1401 	mov	r6,a
      0000CC A3               [24] 1402 	inc	dptr
      0000CD E0               [24] 1403 	movx	a,@dptr
      0000CE FF               [12] 1404 	mov	r7,a
      0000CF C0 02            [24] 1405 	push	ar2
      0000D1 C0 03            [24] 1406 	push	ar3
      0000D3 C0 04            [24] 1407 	push	ar4
      0000D5 8D 82            [24] 1408 	mov	dpl,r5
      0000D7 8E 83            [24] 1409 	mov	dph,r6
      0000D9 8F F0            [24] 1410 	mov	b,r7
      0000DB 78r00            [12] 1411 	mov	r0,#_list_remove
      0000DD 79s00            [12] 1412 	mov	r1,#(_list_remove >> 8)
      0000DF 7As00            [12] 1413 	mov	r2,#(_list_remove >> 16)
      0000E1 12r00r00         [24] 1414 	lcall	__sdcc_banked_call
      0000E4 15 81            [12] 1415 	dec	sp
      0000E6 15 81            [12] 1416 	dec	sp
      0000E8 15 81            [12] 1417 	dec	sp
                                   1418 ;	../../../core/net/mac/lpp.c:214: memb_free(&encounter_memb, e);
      0000EA A8 81            [24] 1419 	mov	r0,sp
      0000EC 18               [12] 1420 	dec	r0
      0000ED 18               [12] 1421 	dec	r0
      0000EE 86 05            [24] 1422 	mov	ar5,@r0
      0000F0 08               [12] 1423 	inc	r0
      0000F1 86 06            [24] 1424 	mov	ar6,@r0
      0000F3 08               [12] 1425 	inc	r0
      0000F4 86 07            [24] 1426 	mov	ar7,@r0
      0000F6 C0 05            [24] 1427 	push	ar5
      0000F8 C0 06            [24] 1428 	push	ar6
      0000FA C0 07            [24] 1429 	push	ar7
      0000FC 90r00r21         [24] 1430 	mov	dptr,#_encounter_memb
      0000FF 75 F0 00         [24] 1431 	mov	b,#0x00
      000102 78r00            [12] 1432 	mov	r0,#_memb_free
      000104 79s00            [12] 1433 	mov	r1,#(_memb_free >> 8)
      000106 7As00            [12] 1434 	mov	r2,#(_memb_free >> 16)
      000108 12r00r00         [24] 1435 	lcall	__sdcc_banked_call
      00010B 15 81            [12] 1436 	dec	sp
      00010D 15 81            [12] 1437 	dec	sp
      00010F 15 81            [12] 1438 	dec	sp
                                   1439 ;	../../../core/net/mac/lpp.c:215: }
      000111 15 81            [12] 1440 	dec	sp
      000113 15 81            [12] 1441 	dec	sp
      000115 15 81            [12] 1442 	dec	sp
      000117 02r00r00         [24] 1443 	ljmp	__sdcc_banked_ret
                                   1444 ;------------------------------------------------------------
                                   1445 ;Allocation info for local variables in function 'register_encounter'
                                   1446 ;------------------------------------------------------------
                                   1447 ;time                      Allocated to stack - sp -13
                                   1448 ;neighbor                  Allocated to stack - sp -8
                                   1449 ;e                         Allocated to stack - sp -2
                                   1450 ;sloc0                     Allocated to stack - sp -5
                                   1451 ;------------------------------------------------------------
                                   1452 ;	../../../core/net/mac/lpp.c:218: register_encounter(rimeaddr_t *neighbor, clock_time_t time)
                                   1453 ;	-----------------------------------------
                                   1454 ;	 function register_encounter
                                   1455 ;	-----------------------------------------
      00011A                       1456 _register_encounter:
      00011A C0 82            [24] 1457 	push	dpl
      00011C C0 83            [24] 1458 	push	dph
      00011E C0 F0            [24] 1459 	push	b
      000120 E5 81            [12] 1460 	mov	a,sp
      000122 24 06            [12] 1461 	add	a,#0x06
      000124 F5 81            [12] 1462 	mov	sp,a
                                   1463 ;	../../../core/net/mac/lpp.c:223: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000126 90r00r1E         [24] 1464 	mov	dptr,#_encounter_list
      000129 E0               [24] 1465 	movx	a,@dptr
      00012A FA               [12] 1466 	mov	r2,a
      00012B A3               [24] 1467 	inc	dptr
      00012C E0               [24] 1468 	movx	a,@dptr
      00012D FB               [12] 1469 	mov	r3,a
      00012E A3               [24] 1470 	inc	dptr
      00012F E0               [24] 1471 	movx	a,@dptr
      000130 FC               [12] 1472 	mov	r4,a
      000131 8A 82            [24] 1473 	mov	dpl,r2
      000133 8B 83            [24] 1474 	mov	dph,r3
      000135 8C F0            [24] 1475 	mov	b,r4
      000137 78r00            [12] 1476 	mov	r0,#_list_head
      000139 79s00            [12] 1477 	mov	r1,#(_list_head >> 8)
      00013B 7As00            [12] 1478 	mov	r2,#(_list_head >> 16)
      00013D 12r00r00         [24] 1479 	lcall	__sdcc_banked_call
      000140 AA 82            [24] 1480 	mov	r2,dpl
      000142 AB 83            [24] 1481 	mov	r3,dph
      000144 AC F0            [24] 1482 	mov	r4,b
      000146                       1483 00109$:
      000146 EA               [12] 1484 	mov	a,r2
      000147 4B               [12] 1485 	orl	a,r3
      000148 70 03            [24] 1486 	jnz	00138$
      00014A 02r02r2D         [24] 1487 	ljmp	00103$
      00014D                       1488 00138$:
                                   1489 ;	../../../core/net/mac/lpp.c:224: if(rimeaddr_cmp(neighbor, &e->neighbor)) {
      00014D 74 03            [12] 1490 	mov	a,#0x03
      00014F 2A               [12] 1491 	add	a,r2
      000150 FD               [12] 1492 	mov	r5,a
      000151 E4               [12] 1493 	clr	a
      000152 3B               [12] 1494 	addc	a,r3
      000153 FE               [12] 1495 	mov	r6,a
      000154 8C 07            [24] 1496 	mov	ar7,r4
      000156 C0 04            [24] 1497 	push	ar4
      000158 C0 03            [24] 1498 	push	ar3
      00015A C0 02            [24] 1499 	push	ar2
      00015C C0 05            [24] 1500 	push	ar5
      00015E C0 06            [24] 1501 	push	ar6
      000160 C0 07            [24] 1502 	push	ar7
      000162 E5 81            [12] 1503 	mov	a,sp
      000164 24 F2            [12] 1504 	add	a,#0xf2
      000166 F8               [12] 1505 	mov	r0,a
      000167 86 82            [24] 1506 	mov	dpl,@r0
      000169 08               [12] 1507 	inc	r0
      00016A 86 83            [24] 1508 	mov	dph,@r0
      00016C 08               [12] 1509 	inc	r0
      00016D 86 F0            [24] 1510 	mov	b,@r0
      00016F 78r00            [12] 1511 	mov	r0,#_rimeaddr_cmp
      000171 79s00            [12] 1512 	mov	r1,#(_rimeaddr_cmp >> 8)
      000173 7As00            [12] 1513 	mov	r2,#(_rimeaddr_cmp >> 16)
      000175 12r00r00         [24] 1514 	lcall	__sdcc_banked_call
      000178 AE 82            [24] 1515 	mov	r6,dpl
      00017A AF 83            [24] 1516 	mov	r7,dph
      00017C 15 81            [12] 1517 	dec	sp
      00017E 15 81            [12] 1518 	dec	sp
      000180 15 81            [12] 1519 	dec	sp
      000182 D0 02            [24] 1520 	pop	ar2
      000184 D0 03            [24] 1521 	pop	ar3
      000186 D0 04            [24] 1522 	pop	ar4
      000188 EE               [12] 1523 	mov	a,r6
      000189 4F               [12] 1524 	orl	a,r7
      00018A 70 03            [24] 1525 	jnz	00139$
      00018C 02r02r09         [24] 1526 	ljmp	00110$
      00018F                       1527 00139$:
                                   1528 ;	../../../core/net/mac/lpp.c:225: e->time = time;
      00018F 74 0B            [12] 1529 	mov	a,#0x0b
      000191 2A               [12] 1530 	add	a,r2
      000192 FD               [12] 1531 	mov	r5,a
      000193 E4               [12] 1532 	clr	a
      000194 3B               [12] 1533 	addc	a,r3
      000195 FE               [12] 1534 	mov	r6,a
      000196 8C 07            [24] 1535 	mov	ar7,r4
      000198 8D 82            [24] 1536 	mov	dpl,r5
      00019A 8E 83            [24] 1537 	mov	dph,r6
      00019C 8F F0            [24] 1538 	mov	b,r7
      00019E E5 81            [12] 1539 	mov	a,sp
      0001A0 24 F3            [12] 1540 	add	a,#0xf3
      0001A2 F8               [12] 1541 	mov	r0,a
      0001A3 E6               [12] 1542 	mov	a,@r0
      0001A4 12r00r00         [24] 1543 	lcall	__gptrput
      0001A7 A3               [24] 1544 	inc	dptr
      0001A8 08               [12] 1545 	inc	r0
      0001A9 E6               [12] 1546 	mov	a,@r0
      0001AA 12r00r00         [24] 1547 	lcall	__gptrput
                                   1548 ;	../../../core/net/mac/lpp.c:226: ctimer_set(&e->remove_timer, ENCOUNTER_LIFETIME, remove_encounter, e);
      0001AD E5 81            [12] 1549 	mov	a,sp
      0001AF 24 FB            [12] 1550 	add	a,#0xfb
      0001B1 F8               [12] 1551 	mov	r0,a
      0001B2 A6 02            [24] 1552 	mov	@r0,ar2
      0001B4 08               [12] 1553 	inc	r0
      0001B5 A6 03            [24] 1554 	mov	@r0,ar3
      0001B7 08               [12] 1555 	inc	r0
      0001B8 A6 04            [24] 1556 	mov	@r0,ar4
      0001BA 74 0D            [12] 1557 	mov	a,#0x0d
      0001BC 2A               [12] 1558 	add	a,r2
      0001BD FD               [12] 1559 	mov	r5,a
      0001BE E4               [12] 1560 	clr	a
      0001BF 3B               [12] 1561 	addc	a,r3
      0001C0 FE               [12] 1562 	mov	r6,a
      0001C1 8C 07            [24] 1563 	mov	ar7,r4
      0001C3 C0 04            [24] 1564 	push	ar4
      0001C5 C0 03            [24] 1565 	push	ar3
      0001C7 C0 02            [24] 1566 	push	ar2
      0001C9 E5 81            [12] 1567 	mov	a,sp
      0001CB 24 F8            [12] 1568 	add	a,#0xf8
      0001CD F8               [12] 1569 	mov	r0,a
      0001CE E6               [12] 1570 	mov	a,@r0
      0001CF C0 E0            [24] 1571 	push	acc
      0001D1 08               [12] 1572 	inc	r0
      0001D2 E6               [12] 1573 	mov	a,@r0
      0001D3 C0 E0            [24] 1574 	push	acc
      0001D5 08               [12] 1575 	inc	r0
      0001D6 E6               [12] 1576 	mov	a,@r0
      0001D7 C0 E0            [24] 1577 	push	acc
      0001D9 74r64            [12] 1578 	mov	a,#_remove_encounter
      0001DB C0 E0            [24] 1579 	push	acc
      0001DD 74s00            [12] 1580 	mov	a,#(_remove_encounter >> 8)
      0001DF C0 E0            [24] 1581 	push	acc
      0001E1 74s00            [12] 1582 	mov	a,#(_remove_encounter >> 16)
      0001E3 C0 E0            [24] 1583 	push	acc
      0001E5 74 F0            [12] 1584 	mov	a,#0xf0
      0001E7 C0 E0            [24] 1585 	push	acc
      0001E9 E4               [12] 1586 	clr	a
      0001EA C0 E0            [24] 1587 	push	acc
      0001EC 8D 82            [24] 1588 	mov	dpl,r5
      0001EE 8E 83            [24] 1589 	mov	dph,r6
      0001F0 8F F0            [24] 1590 	mov	b,r7
      0001F2 78r00            [12] 1591 	mov	r0,#_ctimer_set
      0001F4 79s00            [12] 1592 	mov	r1,#(_ctimer_set >> 8)
      0001F6 7As00            [12] 1593 	mov	r2,#(_ctimer_set >> 16)
      0001F8 12r00r00         [24] 1594 	lcall	__sdcc_banked_call
      0001FB E5 81            [12] 1595 	mov	a,sp
      0001FD 24 F8            [12] 1596 	add	a,#0xf8
      0001FF F5 81            [12] 1597 	mov	sp,a
      000201 D0 02            [24] 1598 	pop	ar2
      000203 D0 03            [24] 1599 	pop	ar3
      000205 D0 04            [24] 1600 	pop	ar4
                                   1601 ;	../../../core/net/mac/lpp.c:227: break;
      000207 80 24            [24] 1602 	sjmp	00103$
      000209                       1603 00110$:
                                   1604 ;	../../../core/net/mac/lpp.c:223: for(e = list_head(encounter_list); e != NULL; e = list_item_next(e)) {
      000209 8A 05            [24] 1605 	mov	ar5,r2
      00020B 8B 06            [24] 1606 	mov	ar6,r3
      00020D 8C 07            [24] 1607 	mov	ar7,r4
      00020F 8D 82            [24] 1608 	mov	dpl,r5
      000211 8E 83            [24] 1609 	mov	dph,r6
      000213 8F F0            [24] 1610 	mov	b,r7
      000215 78r00            [12] 1611 	mov	r0,#_list_item_next
      000217 79s00            [12] 1612 	mov	r1,#(_list_item_next >> 8)
      000219 7As00            [12] 1613 	mov	r2,#(_list_item_next >> 16)
      00021B 12r00r00         [24] 1614 	lcall	__sdcc_banked_call
      00021E AD 82            [24] 1615 	mov	r5,dpl
      000220 AE 83            [24] 1616 	mov	r6,dph
      000222 AF F0            [24] 1617 	mov	r7,b
      000224 8D 02            [24] 1618 	mov	ar2,r5
      000226 8E 03            [24] 1619 	mov	ar3,r6
      000228 8F 04            [24] 1620 	mov	ar4,r7
      00022A 02r01r46         [24] 1621 	ljmp	00109$
      00022D                       1622 00103$:
                                   1623 ;	../../../core/net/mac/lpp.c:231: if(e == NULL) {
      00022D EA               [12] 1624 	mov	a,r2
      00022E 4B               [12] 1625 	orl	a,r3
      00022F 60 03            [24] 1626 	jz	00140$
      000231 02r03r34         [24] 1627 	ljmp	00111$
      000234                       1628 00140$:
                                   1629 ;	../../../core/net/mac/lpp.c:232: e = memb_alloc(&encounter_memb);
      000234 90r00r21         [24] 1630 	mov	dptr,#_encounter_memb
      000237 75 F0 00         [24] 1631 	mov	b,#0x00
      00023A 78r00            [12] 1632 	mov	r0,#_memb_alloc
      00023C 79s00            [12] 1633 	mov	r1,#(_memb_alloc >> 8)
      00023E 7As00            [12] 1634 	mov	r2,#(_memb_alloc >> 16)
      000240 12r00r00         [24] 1635 	lcall	__sdcc_banked_call
      000243 AD 82            [24] 1636 	mov	r5,dpl
      000245 AE 83            [24] 1637 	mov	r6,dph
      000247 AF F0            [24] 1638 	mov	r7,b
      000249 A8 81            [24] 1639 	mov	r0,sp
      00024B 18               [12] 1640 	dec	r0
      00024C 18               [12] 1641 	dec	r0
      00024D A6 05            [24] 1642 	mov	@r0,ar5
      00024F 08               [12] 1643 	inc	r0
      000250 A6 06            [24] 1644 	mov	@r0,ar6
      000252 08               [12] 1645 	inc	r0
      000253 A6 07            [24] 1646 	mov	@r0,ar7
                                   1647 ;	../../../core/net/mac/lpp.c:233: if(e == NULL) {
      000255 A8 81            [24] 1648 	mov	r0,sp
      000257 18               [12] 1649 	dec	r0
      000258 18               [12] 1650 	dec	r0
      000259 E6               [12] 1651 	mov	a,@r0
      00025A 08               [12] 1652 	inc	r0
      00025B 46               [12] 1653 	orl	a,@r0
      00025C 70 03            [24] 1654 	jnz	00105$
                                   1655 ;	../../../core/net/mac/lpp.c:235: return;
      00025E 02r03r34         [24] 1656 	ljmp	00111$
      000261                       1657 00105$:
                                   1658 ;	../../../core/net/mac/lpp.c:237: rimeaddr_copy(&e->neighbor, neighbor);
      000261 A8 81            [24] 1659 	mov	r0,sp
      000263 18               [12] 1660 	dec	r0
      000264 18               [12] 1661 	dec	r0
      000265 74 03            [12] 1662 	mov	a,#0x03
      000267 26               [12] 1663 	add	a,@r0
      000268 FA               [12] 1664 	mov	r2,a
      000269 E4               [12] 1665 	clr	a
      00026A 08               [12] 1666 	inc	r0
      00026B 36               [12] 1667 	addc	a,@r0
      00026C FB               [12] 1668 	mov	r3,a
      00026D 08               [12] 1669 	inc	r0
      00026E 86 04            [24] 1670 	mov	ar4,@r0
      000270 E5 81            [12] 1671 	mov	a,sp
      000272 24 F8            [12] 1672 	add	a,#0xf8
      000274 F8               [12] 1673 	mov	r0,a
      000275 E6               [12] 1674 	mov	a,@r0
      000276 C0 E0            [24] 1675 	push	acc
      000278 08               [12] 1676 	inc	r0
      000279 E6               [12] 1677 	mov	a,@r0
      00027A C0 E0            [24] 1678 	push	acc
      00027C 08               [12] 1679 	inc	r0
      00027D E6               [12] 1680 	mov	a,@r0
      00027E C0 E0            [24] 1681 	push	acc
      000280 8A 82            [24] 1682 	mov	dpl,r2
      000282 8B 83            [24] 1683 	mov	dph,r3
      000284 8C F0            [24] 1684 	mov	b,r4
      000286 78r00            [12] 1685 	mov	r0,#_rimeaddr_copy
      000288 79s00            [12] 1686 	mov	r1,#(_rimeaddr_copy >> 8)
      00028A 7As00            [12] 1687 	mov	r2,#(_rimeaddr_copy >> 16)
      00028C 12r00r00         [24] 1688 	lcall	__sdcc_banked_call
      00028F 15 81            [12] 1689 	dec	sp
      000291 15 81            [12] 1690 	dec	sp
      000293 15 81            [12] 1691 	dec	sp
                                   1692 ;	../../../core/net/mac/lpp.c:238: e->time = time;
      000295 A8 81            [24] 1693 	mov	r0,sp
      000297 18               [12] 1694 	dec	r0
      000298 18               [12] 1695 	dec	r0
      000299 74 0B            [12] 1696 	mov	a,#0x0b
      00029B 26               [12] 1697 	add	a,@r0
      00029C FA               [12] 1698 	mov	r2,a
      00029D E4               [12] 1699 	clr	a
      00029E 08               [12] 1700 	inc	r0
      00029F 36               [12] 1701 	addc	a,@r0
      0002A0 FB               [12] 1702 	mov	r3,a
      0002A1 08               [12] 1703 	inc	r0
      0002A2 86 04            [24] 1704 	mov	ar4,@r0
      0002A4 8A 82            [24] 1705 	mov	dpl,r2
      0002A6 8B 83            [24] 1706 	mov	dph,r3
      0002A8 8C F0            [24] 1707 	mov	b,r4
      0002AA E5 81            [12] 1708 	mov	a,sp
      0002AC 24 F3            [12] 1709 	add	a,#0xf3
      0002AE F8               [12] 1710 	mov	r0,a
      0002AF E6               [12] 1711 	mov	a,@r0
      0002B0 12r00r00         [24] 1712 	lcall	__gptrput
      0002B3 A3               [24] 1713 	inc	dptr
      0002B4 08               [12] 1714 	inc	r0
      0002B5 E6               [12] 1715 	mov	a,@r0
      0002B6 12r00r00         [24] 1716 	lcall	__gptrput
                                   1717 ;	../../../core/net/mac/lpp.c:239: ctimer_set(&e->remove_timer, ENCOUNTER_LIFETIME, remove_encounter, e);
      0002B9 A8 81            [24] 1718 	mov	r0,sp
      0002BB 18               [12] 1719 	dec	r0
      0002BC 18               [12] 1720 	dec	r0
      0002BD 86 02            [24] 1721 	mov	ar2,@r0
      0002BF 08               [12] 1722 	inc	r0
      0002C0 86 03            [24] 1723 	mov	ar3,@r0
      0002C2 08               [12] 1724 	inc	r0
      0002C3 86 04            [24] 1725 	mov	ar4,@r0
      0002C5 A8 81            [24] 1726 	mov	r0,sp
      0002C7 18               [12] 1727 	dec	r0
      0002C8 18               [12] 1728 	dec	r0
      0002C9 74 0D            [12] 1729 	mov	a,#0x0d
      0002CB 26               [12] 1730 	add	a,@r0
      0002CC FD               [12] 1731 	mov	r5,a
      0002CD E4               [12] 1732 	clr	a
      0002CE 08               [12] 1733 	inc	r0
      0002CF 36               [12] 1734 	addc	a,@r0
      0002D0 FE               [12] 1735 	mov	r6,a
      0002D1 08               [12] 1736 	inc	r0
      0002D2 86 07            [24] 1737 	mov	ar7,@r0
      0002D4 C0 02            [24] 1738 	push	ar2
      0002D6 C0 03            [24] 1739 	push	ar3
      0002D8 C0 04            [24] 1740 	push	ar4
      0002DA 74r64            [12] 1741 	mov	a,#_remove_encounter
      0002DC C0 E0            [24] 1742 	push	acc
      0002DE 74s00            [12] 1743 	mov	a,#(_remove_encounter >> 8)
      0002E0 C0 E0            [24] 1744 	push	acc
      0002E2 74s00            [12] 1745 	mov	a,#(_remove_encounter >> 16)
      0002E4 C0 E0            [24] 1746 	push	acc
      0002E6 74 F0            [12] 1747 	mov	a,#0xf0
      0002E8 C0 E0            [24] 1748 	push	acc
      0002EA E4               [12] 1749 	clr	a
      0002EB C0 E0            [24] 1750 	push	acc
      0002ED 8D 82            [24] 1751 	mov	dpl,r5
      0002EF 8E 83            [24] 1752 	mov	dph,r6
      0002F1 8F F0            [24] 1753 	mov	b,r7
      0002F3 78r00            [12] 1754 	mov	r0,#_ctimer_set
      0002F5 79s00            [12] 1755 	mov	r1,#(_ctimer_set >> 8)
      0002F7 7As00            [12] 1756 	mov	r2,#(_ctimer_set >> 16)
      0002F9 12r00r00         [24] 1757 	lcall	__sdcc_banked_call
      0002FC E5 81            [12] 1758 	mov	a,sp
      0002FE 24 F8            [12] 1759 	add	a,#0xf8
      000300 F5 81            [12] 1760 	mov	sp,a
                                   1761 ;	../../../core/net/mac/lpp.c:240: list_add(encounter_list, e);
      000302 A8 81            [24] 1762 	mov	r0,sp
      000304 18               [12] 1763 	dec	r0
      000305 18               [12] 1764 	dec	r0
      000306 86 05            [24] 1765 	mov	ar5,@r0
      000308 08               [12] 1766 	inc	r0
      000309 86 06            [24] 1767 	mov	ar6,@r0
      00030B 08               [12] 1768 	inc	r0
      00030C 86 07            [24] 1769 	mov	ar7,@r0
      00030E 90r00r1E         [24] 1770 	mov	dptr,#_encounter_list
      000311 E0               [24] 1771 	movx	a,@dptr
      000312 FA               [12] 1772 	mov	r2,a
      000313 A3               [24] 1773 	inc	dptr
      000314 E0               [24] 1774 	movx	a,@dptr
      000315 FB               [12] 1775 	mov	r3,a
      000316 A3               [24] 1776 	inc	dptr
      000317 E0               [24] 1777 	movx	a,@dptr
      000318 FC               [12] 1778 	mov	r4,a
      000319 C0 05            [24] 1779 	push	ar5
      00031B C0 06            [24] 1780 	push	ar6
      00031D C0 07            [24] 1781 	push	ar7
      00031F 8A 82            [24] 1782 	mov	dpl,r2
      000321 8B 83            [24] 1783 	mov	dph,r3
      000323 8C F0            [24] 1784 	mov	b,r4
      000325 78r00            [12] 1785 	mov	r0,#_list_add
      000327 79s00            [12] 1786 	mov	r1,#(_list_add >> 8)
      000329 7As00            [12] 1787 	mov	r2,#(_list_add >> 16)
      00032B 12r00r00         [24] 1788 	lcall	__sdcc_banked_call
      00032E 15 81            [12] 1789 	dec	sp
      000330 15 81            [12] 1790 	dec	sp
      000332 15 81            [12] 1791 	dec	sp
      000334                       1792 00111$:
                                   1793 ;	../../../core/net/mac/lpp.c:242: }
      000334 E5 81            [12] 1794 	mov	a,sp
      000336 24 F7            [12] 1795 	add	a,#0xf7
      000338 F5 81            [12] 1796 	mov	sp,a
      00033A 02r00r00         [24] 1797 	ljmp	__sdcc_banked_ret
                                   1798 ;------------------------------------------------------------
                                   1799 ;Allocation info for local variables in function 'stream_off'
                                   1800 ;------------------------------------------------------------
                                   1801 ;dummy                     Allocated to registers 
                                   1802 ;------------------------------------------------------------
                                   1803 ;	../../../core/net/mac/lpp.c:261: stream_off(void *dummy)
                                   1804 ;	-----------------------------------------
                                   1805 ;	 function stream_off
                                   1806 ;	-----------------------------------------
      00033D                       1807 _stream_off:
                                   1808 ;	../../../core/net/mac/lpp.c:263: is_streaming = 0;
      00033D 90r00r2B         [24] 1809 	mov	dptr,#_is_streaming
      000340 E4               [12] 1810 	clr	a
      000341 F0               [24] 1811 	movx	@dptr,a
                                   1812 ;	../../../core/net/mac/lpp.c:264: }
      000342 02r00r00         [24] 1813 	ljmp	__sdcc_banked_ret
                                   1814 ;------------------------------------------------------------
                                   1815 ;Allocation info for local variables in function 'turn_radio_on_for_neighbor'
                                   1816 ;------------------------------------------------------------
                                   1817 ;i                         Allocated to stack - sp -5
                                   1818 ;neighbor                  Allocated to registers r5 r6 r7 
                                   1819 ;sloc0                     Allocated to stack - sp +4
                                   1820 ;------------------------------------------------------------
                                   1821 ;	../../../core/net/mac/lpp.c:276: turn_radio_on_for_neighbor(rimeaddr_t *neighbor, struct queue_list_item *i)
                                   1822 ;	-----------------------------------------
                                   1823 ;	 function turn_radio_on_for_neighbor
                                   1824 ;	-----------------------------------------
      000345                       1825 _turn_radio_on_for_neighbor:
      000345 AD 82            [24] 1826 	mov	r5,dpl
      000347 AE 83            [24] 1827 	mov	r6,dph
      000349 AF F0            [24] 1828 	mov	r7,b
                                   1829 ;	../../../core/net/mac/lpp.c:280: if(packetbuf_attr(PACKETBUF_ATTR_PACKET_TYPE) ==
      00034B 75 82 0E         [24] 1830 	mov	dpl,#0x0e
      00034E C0 07            [24] 1831 	push	ar7
      000350 C0 06            [24] 1832 	push	ar6
      000352 C0 05            [24] 1833 	push	ar5
      000354 78r00            [12] 1834 	mov	r0,#_packetbuf_attr
      000356 79s00            [12] 1835 	mov	r1,#(_packetbuf_attr >> 8)
      000358 7As00            [12] 1836 	mov	r2,#(_packetbuf_attr >> 16)
      00035A 12r00r00         [24] 1837 	lcall	__sdcc_banked_call
      00035D AB 82            [24] 1838 	mov	r3,dpl
      00035F AC 83            [24] 1839 	mov	r4,dph
      000361 D0 05            [24] 1840 	pop	ar5
      000363 D0 06            [24] 1841 	pop	ar6
      000365 D0 07            [24] 1842 	pop	ar7
      000367 BB 02 77         [24] 1843 	cjne	r3,#0x02,00102$
      00036A BC 00 74         [24] 1844 	cjne	r4,#0x00,00102$
                                   1845 ;	../../../core/net/mac/lpp.c:282: is_streaming = 1;
      00036D 90r00r2B         [24] 1846 	mov	dptr,#_is_streaming
      000370 74 01            [12] 1847 	mov	a,#0x01
      000372 F0               [24] 1848 	movx	@dptr,a
                                   1849 ;	../../../core/net/mac/lpp.c:283: turn_radio_on();
      000373 78r00            [12] 1850 	mov	r0,#_turn_radio_on
      000375 79s00            [12] 1851 	mov	r1,#(_turn_radio_on >> 8)
      000377 7As00            [12] 1852 	mov	r2,#(_turn_radio_on >> 16)
      000379 12r00r00         [24] 1853 	lcall	__sdcc_banked_call
                                   1854 ;	../../../core/net/mac/lpp.c:284: list_add(queued_packets_list, i);
      00037C E5 81            [12] 1855 	mov	a,sp
      00037E 24 FB            [12] 1856 	add	a,#0xfb
      000380 F8               [12] 1857 	mov	r0,a
      000381 86 07            [24] 1858 	mov	ar7,@r0
      000383 08               [12] 1859 	inc	r0
      000384 86 06            [24] 1860 	mov	ar6,@r0
      000386 08               [12] 1861 	inc	r0
      000387 86 05            [24] 1862 	mov	ar5,@r0
      000389 90r00r0E         [24] 1863 	mov	dptr,#_queued_packets_list
      00038C E0               [24] 1864 	movx	a,@dptr
      00038D FA               [12] 1865 	mov	r2,a
      00038E A3               [24] 1866 	inc	dptr
      00038F E0               [24] 1867 	movx	a,@dptr
      000390 FB               [12] 1868 	mov	r3,a
      000391 A3               [24] 1869 	inc	dptr
      000392 E0               [24] 1870 	movx	a,@dptr
      000393 FC               [12] 1871 	mov	r4,a
      000394 C0 07            [24] 1872 	push	ar7
      000396 C0 06            [24] 1873 	push	ar6
      000398 C0 05            [24] 1874 	push	ar5
      00039A 8A 82            [24] 1875 	mov	dpl,r2
      00039C 8B 83            [24] 1876 	mov	dph,r3
      00039E 8C F0            [24] 1877 	mov	b,r4
      0003A0 78r00            [12] 1878 	mov	r0,#_list_add
      0003A2 79s00            [12] 1879 	mov	r1,#(_list_add >> 8)
      0003A4 7As00            [12] 1880 	mov	r2,#(_list_add >> 16)
      0003A6 12r00r00         [24] 1881 	lcall	__sdcc_banked_call
      0003A9 15 81            [12] 1882 	dec	sp
      0003AB 15 81            [12] 1883 	dec	sp
      0003AD 15 81            [12] 1884 	dec	sp
                                   1885 ;	../../../core/net/mac/lpp.c:285: ctimer_set(&stream_off_timer, STREAM_OFF_TIME,
      0003AF E4               [12] 1886 	clr	a
      0003B0 C0 E0            [24] 1887 	push	acc
      0003B2 C0 E0            [24] 1888 	push	acc
      0003B4 C0 E0            [24] 1889 	push	acc
      0003B6 74r3D            [12] 1890 	mov	a,#_stream_off
      0003B8 C0 E0            [24] 1891 	push	acc
      0003BA 74s03            [12] 1892 	mov	a,#(_stream_off >> 8)
      0003BC C0 E0            [24] 1893 	push	acc
      0003BE 74s00            [12] 1894 	mov	a,#(_stream_off >> 16)
      0003C0 C0 E0            [24] 1895 	push	acc
      0003C2 74 40            [12] 1896 	mov	a,#0x40
      0003C4 C0 E0            [24] 1897 	push	acc
      0003C6 E4               [12] 1898 	clr	a
      0003C7 C0 E0            [24] 1899 	push	acc
      0003C9 90r01rA3         [24] 1900 	mov	dptr,#_stream_off_timer
      0003CC 75 F0 00         [24] 1901 	mov	b,#0x00
      0003CF 78r00            [12] 1902 	mov	r0,#_ctimer_set
      0003D1 79s00            [12] 1903 	mov	r1,#(_ctimer_set >> 8)
      0003D3 7As00            [12] 1904 	mov	r2,#(_ctimer_set >> 16)
      0003D5 12r00r00         [24] 1905 	lcall	__sdcc_banked_call
      0003D8 E5 81            [12] 1906 	mov	a,sp
      0003DA 24 F8            [12] 1907 	add	a,#0xf8
      0003DC F5 81            [12] 1908 	mov	sp,a
                                   1909 ;	../../../core/net/mac/lpp.c:287: return;
      0003DE 02r00r00         [24] 1910 	ljmp	__sdcc_banked_ret
      0003E1                       1911 00102$:
                                   1912 ;	../../../core/net/mac/lpp.c:291: if(rimeaddr_cmp(neighbor, &rimeaddr_null)) {
      0003E1 74r00            [12] 1913 	mov	a,#_rimeaddr_null
      0003E3 C0 E0            [24] 1914 	push	acc
      0003E5 74s00            [12] 1915 	mov	a,#(_rimeaddr_null >> 8)
      0003E7 C0 E0            [24] 1916 	push	acc
      0003E9 74 80            [12] 1917 	mov	a,#0x80
      0003EB C0 E0            [24] 1918 	push	acc
      0003ED 8D 82            [24] 1919 	mov	dpl,r5
      0003EF 8E 83            [24] 1920 	mov	dph,r6
      0003F1 8F F0            [24] 1921 	mov	b,r7
      0003F3 78r00            [12] 1922 	mov	r0,#_rimeaddr_cmp
      0003F5 79s00            [12] 1923 	mov	r1,#(_rimeaddr_cmp >> 8)
      0003F7 7As00            [12] 1924 	mov	r2,#(_rimeaddr_cmp >> 16)
      0003F9 12r00r00         [24] 1925 	lcall	__sdcc_banked_call
      0003FC AE 82            [24] 1926 	mov	r6,dpl
      0003FE AF 83            [24] 1927 	mov	r7,dph
      000400 15 81            [12] 1928 	dec	sp
      000402 15 81            [12] 1929 	dec	sp
      000404 15 81            [12] 1930 	dec	sp
      000406 EE               [12] 1931 	mov	a,r6
      000407 4F               [12] 1932 	orl	a,r7
      000408 60 3E            [24] 1933 	jz	00104$
                                   1934 ;	../../../core/net/mac/lpp.c:295: turn_radio_on();
      00040A 78r00            [12] 1935 	mov	r0,#_turn_radio_on
      00040C 79s00            [12] 1936 	mov	r1,#(_turn_radio_on >> 8)
      00040E 7As00            [12] 1937 	mov	r2,#(_turn_radio_on >> 16)
      000410 12r00r00         [24] 1938 	lcall	__sdcc_banked_call
                                   1939 ;	../../../core/net/mac/lpp.c:297: list_add(queued_packets_list, i);
      000413 E5 81            [12] 1940 	mov	a,sp
      000415 24 FB            [12] 1941 	add	a,#0xfb
      000417 F8               [12] 1942 	mov	r0,a
      000418 86 05            [24] 1943 	mov	ar5,@r0
      00041A 08               [12] 1944 	inc	r0
      00041B 86 06            [24] 1945 	mov	ar6,@r0
      00041D 08               [12] 1946 	inc	r0
      00041E 86 07            [24] 1947 	mov	ar7,@r0
      000420 90r00r0E         [24] 1948 	mov	dptr,#_queued_packets_list
      000423 E0               [24] 1949 	movx	a,@dptr
      000424 FA               [12] 1950 	mov	r2,a
      000425 A3               [24] 1951 	inc	dptr
      000426 E0               [24] 1952 	movx	a,@dptr
      000427 FB               [12] 1953 	mov	r3,a
      000428 A3               [24] 1954 	inc	dptr
      000429 E0               [24] 1955 	movx	a,@dptr
      00042A FC               [12] 1956 	mov	r4,a
      00042B C0 05            [24] 1957 	push	ar5
      00042D C0 06            [24] 1958 	push	ar6
      00042F C0 07            [24] 1959 	push	ar7
      000431 8A 82            [24] 1960 	mov	dpl,r2
      000433 8B 83            [24] 1961 	mov	dph,r3
      000435 8C F0            [24] 1962 	mov	b,r4
      000437 78r00            [12] 1963 	mov	r0,#_list_add
      000439 79s00            [12] 1964 	mov	r1,#(_list_add >> 8)
      00043B 7As00            [12] 1965 	mov	r2,#(_list_add >> 16)
      00043D 12r00r00         [24] 1966 	lcall	__sdcc_banked_call
      000440 15 81            [12] 1967 	dec	sp
      000442 15 81            [12] 1968 	dec	sp
      000444 15 81            [12] 1969 	dec	sp
                                   1970 ;	../../../core/net/mac/lpp.c:298: return;
      000446 80 3C            [24] 1971 	sjmp	00105$
      000448                       1972 00104$:
                                   1973 ;	../../../core/net/mac/lpp.c:346: turn_radio_on();
      000448 78r00            [12] 1974 	mov	r0,#_turn_radio_on
      00044A 79s00            [12] 1975 	mov	r1,#(_turn_radio_on >> 8)
      00044C 7As00            [12] 1976 	mov	r2,#(_turn_radio_on >> 16)
      00044E 12r00r00         [24] 1977 	lcall	__sdcc_banked_call
                                   1978 ;	../../../core/net/mac/lpp.c:347: list_add(queued_packets_list, i);
      000451 E5 81            [12] 1979 	mov	a,sp
      000453 24 FB            [12] 1980 	add	a,#0xfb
      000455 F8               [12] 1981 	mov	r0,a
      000456 86 05            [24] 1982 	mov	ar5,@r0
      000458 08               [12] 1983 	inc	r0
      000459 86 06            [24] 1984 	mov	ar6,@r0
      00045B 08               [12] 1985 	inc	r0
      00045C 86 07            [24] 1986 	mov	ar7,@r0
      00045E 90r00r0E         [24] 1987 	mov	dptr,#_queued_packets_list
      000461 E0               [24] 1988 	movx	a,@dptr
      000462 FA               [12] 1989 	mov	r2,a
      000463 A3               [24] 1990 	inc	dptr
      000464 E0               [24] 1991 	movx	a,@dptr
      000465 FB               [12] 1992 	mov	r3,a
      000466 A3               [24] 1993 	inc	dptr
      000467 E0               [24] 1994 	movx	a,@dptr
      000468 FC               [12] 1995 	mov	r4,a
      000469 C0 05            [24] 1996 	push	ar5
      00046B C0 06            [24] 1997 	push	ar6
      00046D C0 07            [24] 1998 	push	ar7
      00046F 8A 82            [24] 1999 	mov	dpl,r2
      000471 8B 83            [24] 2000 	mov	dph,r3
      000473 8C F0            [24] 2001 	mov	b,r4
      000475 78r00            [12] 2002 	mov	r0,#_list_add
      000477 79s00            [12] 2003 	mov	r1,#(_list_add >> 8)
      000479 7As00            [12] 2004 	mov	r2,#(_list_add >> 16)
      00047B 12r00r00         [24] 2005 	lcall	__sdcc_banked_call
      00047E 15 81            [12] 2006 	dec	sp
      000480 15 81            [12] 2007 	dec	sp
      000482 15 81            [12] 2008 	dec	sp
                                   2009 ;	../../../core/net/mac/lpp.c:348: return;
      000484                       2010 00105$:
                                   2011 ;	../../../core/net/mac/lpp.c:349: }
      000484 02r00r00         [24] 2012 	ljmp	__sdcc_banked_ret
                                   2013 ;------------------------------------------------------------
                                   2014 ;Allocation info for local variables in function 'remove_queued_packet'
                                   2015 ;------------------------------------------------------------
                                   2016 ;tx_ok                     Allocated to stack - sp -11
                                   2017 ;i                         Allocated to stack - sp -7
                                   2018 ;sent                      Allocated to registers r5 r6 r7 
                                   2019 ;ptr                       Allocated to stack - sp -4
                                   2020 ;num_transmissions         Allocated to stack - sp -1
                                   2021 ;status                    Allocated to registers r3 r4 
                                   2022 ;------------------------------------------------------------
                                   2023 ;	../../../core/net/mac/lpp.c:352: remove_queued_packet(struct queue_list_item *i, uint8_t tx_ok)
                                   2024 ;	-----------------------------------------
                                   2025 ;	 function remove_queued_packet
                                   2026 ;	-----------------------------------------
      000487                       2027 _remove_queued_packet:
      000487 C0 82            [24] 2028 	push	dpl
      000489 C0 83            [24] 2029 	push	dph
      00048B C0 F0            [24] 2030 	push	b
      00048D E5 81            [12] 2031 	mov	a,sp
      00048F 24 05            [12] 2032 	add	a,#0x05
                                   2033 ;	../../../core/net/mac/lpp.c:363: queuebuf_to_packetbuf(i->packet);
      000491 F5 81            [12] 2034 	mov	sp,a
      000493 24 F9            [12] 2035 	add	a,#0xf9
      000495 F8               [12] 2036 	mov	r0,a
      000496 74 03            [12] 2037 	mov	a,#0x03
      000498 26               [12] 2038 	add	a,@r0
      000499 FA               [12] 2039 	mov	r2,a
      00049A E4               [12] 2040 	clr	a
      00049B 08               [12] 2041 	inc	r0
      00049C 36               [12] 2042 	addc	a,@r0
      00049D FB               [12] 2043 	mov	r3,a
      00049E 08               [12] 2044 	inc	r0
      00049F 86 04            [24] 2045 	mov	ar4,@r0
      0004A1 8A 82            [24] 2046 	mov	dpl,r2
      0004A3 8B 83            [24] 2047 	mov	dph,r3
      0004A5 8C F0            [24] 2048 	mov	b,r4
      0004A7 12r00r00         [24] 2049 	lcall	__gptrget
      0004AA FD               [12] 2050 	mov	r5,a
      0004AB A3               [24] 2051 	inc	dptr
      0004AC 12r00r00         [24] 2052 	lcall	__gptrget
      0004AF FE               [12] 2053 	mov	r6,a
      0004B0 A3               [24] 2054 	inc	dptr
      0004B1 12r00r00         [24] 2055 	lcall	__gptrget
      0004B4 FF               [12] 2056 	mov	r7,a
      0004B5 8D 82            [24] 2057 	mov	dpl,r5
      0004B7 8E 83            [24] 2058 	mov	dph,r6
      0004B9 8F F0            [24] 2059 	mov	b,r7
      0004BB C0 04            [24] 2060 	push	ar4
      0004BD C0 03            [24] 2061 	push	ar3
      0004BF C0 02            [24] 2062 	push	ar2
      0004C1 78r00            [12] 2063 	mov	r0,#_queuebuf_to_packetbuf
      0004C3 79s00            [12] 2064 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      0004C5 7As00            [12] 2065 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      0004C7 12r00r00         [24] 2066 	lcall	__sdcc_banked_call
      0004CA D0 02            [24] 2067 	pop	ar2
      0004CC D0 03            [24] 2068 	pop	ar3
      0004CE D0 04            [24] 2069 	pop	ar4
                                   2070 ;	../../../core/net/mac/lpp.c:365: ctimer_stop(&i->removal_timer);
      0004D0 E5 81            [12] 2071 	mov	a,sp
      0004D2 24 F9            [12] 2072 	add	a,#0xf9
      0004D4 F8               [12] 2073 	mov	r0,a
      0004D5 74 06            [12] 2074 	mov	a,#0x06
      0004D7 26               [12] 2075 	add	a,@r0
      0004D8 FD               [12] 2076 	mov	r5,a
      0004D9 E4               [12] 2077 	clr	a
      0004DA 08               [12] 2078 	inc	r0
      0004DB 36               [12] 2079 	addc	a,@r0
      0004DC FE               [12] 2080 	mov	r6,a
      0004DD 08               [12] 2081 	inc	r0
      0004DE 86 07            [24] 2082 	mov	ar7,@r0
      0004E0 8D 82            [24] 2083 	mov	dpl,r5
      0004E2 8E 83            [24] 2084 	mov	dph,r6
      0004E4 8F F0            [24] 2085 	mov	b,r7
      0004E6 C0 04            [24] 2086 	push	ar4
      0004E8 C0 03            [24] 2087 	push	ar3
      0004EA C0 02            [24] 2088 	push	ar2
      0004EC 78r00            [12] 2089 	mov	r0,#_ctimer_stop
      0004EE 79s00            [12] 2090 	mov	r1,#(_ctimer_stop >> 8)
      0004F0 7As00            [12] 2091 	mov	r2,#(_ctimer_stop >> 16)
      0004F2 12r00r00         [24] 2092 	lcall	__sdcc_banked_call
      0004F5 D0 02            [24] 2093 	pop	ar2
      0004F7 D0 03            [24] 2094 	pop	ar3
      0004F9 D0 04            [24] 2095 	pop	ar4
                                   2096 ;	../../../core/net/mac/lpp.c:366: queuebuf_free(i->packet);
      0004FB 8A 82            [24] 2097 	mov	dpl,r2
      0004FD 8B 83            [24] 2098 	mov	dph,r3
      0004FF 8C F0            [24] 2099 	mov	b,r4
      000501 12r00r00         [24] 2100 	lcall	__gptrget
      000504 FA               [12] 2101 	mov	r2,a
      000505 A3               [24] 2102 	inc	dptr
      000506 12r00r00         [24] 2103 	lcall	__gptrget
      000509 FB               [12] 2104 	mov	r3,a
      00050A A3               [24] 2105 	inc	dptr
      00050B 12r00r00         [24] 2106 	lcall	__gptrget
      00050E FC               [12] 2107 	mov	r4,a
      00050F 8A 82            [24] 2108 	mov	dpl,r2
      000511 8B 83            [24] 2109 	mov	dph,r3
      000513 8C F0            [24] 2110 	mov	b,r4
      000515 78r00            [12] 2111 	mov	r0,#_queuebuf_free
      000517 79s00            [12] 2112 	mov	r1,#(_queuebuf_free >> 8)
      000519 7As00            [12] 2113 	mov	r2,#(_queuebuf_free >> 16)
      00051B 12r00r00         [24] 2114 	lcall	__sdcc_banked_call
                                   2115 ;	../../../core/net/mac/lpp.c:367: list_remove(pending_packets_list, i);
      00051E E5 81            [12] 2116 	mov	a,sp
      000520 24 F9            [12] 2117 	add	a,#0xf9
      000522 F8               [12] 2118 	mov	r0,a
      000523 86 05            [24] 2119 	mov	ar5,@r0
      000525 08               [12] 2120 	inc	r0
      000526 86 06            [24] 2121 	mov	ar6,@r0
      000528 08               [12] 2122 	inc	r0
      000529 86 07            [24] 2123 	mov	ar7,@r0
      00052B 90r00r08         [24] 2124 	mov	dptr,#_pending_packets_list
      00052E E0               [24] 2125 	movx	a,@dptr
      00052F FA               [12] 2126 	mov	r2,a
      000530 A3               [24] 2127 	inc	dptr
      000531 E0               [24] 2128 	movx	a,@dptr
      000532 FB               [12] 2129 	mov	r3,a
      000533 A3               [24] 2130 	inc	dptr
      000534 E0               [24] 2131 	movx	a,@dptr
      000535 FC               [12] 2132 	mov	r4,a
      000536 C0 05            [24] 2133 	push	ar5
      000538 C0 06            [24] 2134 	push	ar6
      00053A C0 07            [24] 2135 	push	ar7
      00053C 8A 82            [24] 2136 	mov	dpl,r2
      00053E 8B 83            [24] 2137 	mov	dph,r3
      000540 8C F0            [24] 2138 	mov	b,r4
      000542 78r00            [12] 2139 	mov	r0,#_list_remove
      000544 79s00            [12] 2140 	mov	r1,#(_list_remove >> 8)
      000546 7As00            [12] 2141 	mov	r2,#(_list_remove >> 16)
      000548 12r00r00         [24] 2142 	lcall	__sdcc_banked_call
      00054B 15 81            [12] 2143 	dec	sp
      00054D 15 81            [12] 2144 	dec	sp
      00054F 15 81            [12] 2145 	dec	sp
                                   2146 ;	../../../core/net/mac/lpp.c:368: list_remove(queued_packets_list, i);
      000551 E5 81            [12] 2147 	mov	a,sp
      000553 24 F9            [12] 2148 	add	a,#0xf9
      000555 F8               [12] 2149 	mov	r0,a
      000556 86 05            [24] 2150 	mov	ar5,@r0
      000558 08               [12] 2151 	inc	r0
      000559 86 06            [24] 2152 	mov	ar6,@r0
      00055B 08               [12] 2153 	inc	r0
      00055C 86 07            [24] 2154 	mov	ar7,@r0
      00055E 90r00r0E         [24] 2155 	mov	dptr,#_queued_packets_list
      000561 E0               [24] 2156 	movx	a,@dptr
      000562 FA               [12] 2157 	mov	r2,a
      000563 A3               [24] 2158 	inc	dptr
      000564 E0               [24] 2159 	movx	a,@dptr
      000565 FB               [12] 2160 	mov	r3,a
      000566 A3               [24] 2161 	inc	dptr
      000567 E0               [24] 2162 	movx	a,@dptr
      000568 FC               [12] 2163 	mov	r4,a
      000569 C0 05            [24] 2164 	push	ar5
      00056B C0 06            [24] 2165 	push	ar6
      00056D C0 07            [24] 2166 	push	ar7
      00056F 8A 82            [24] 2167 	mov	dpl,r2
      000571 8B 83            [24] 2168 	mov	dph,r3
      000573 8C F0            [24] 2169 	mov	b,r4
      000575 78r00            [12] 2170 	mov	r0,#_list_remove
      000577 79s00            [12] 2171 	mov	r1,#(_list_remove >> 8)
      000579 7As00            [12] 2172 	mov	r2,#(_list_remove >> 16)
      00057B 12r00r00         [24] 2173 	lcall	__sdcc_banked_call
      00057E 15 81            [12] 2174 	dec	sp
      000580 15 81            [12] 2175 	dec	sp
      000582 15 81            [12] 2176 	dec	sp
                                   2177 ;	../../../core/net/mac/lpp.c:371: if(list_length(queued_packets_list) == 0 && is_listening == 0) {
      000584 90r00r0E         [24] 2178 	mov	dptr,#_queued_packets_list
      000587 E0               [24] 2179 	movx	a,@dptr
      000588 FD               [12] 2180 	mov	r5,a
      000589 A3               [24] 2181 	inc	dptr
      00058A E0               [24] 2182 	movx	a,@dptr
      00058B FE               [12] 2183 	mov	r6,a
      00058C A3               [24] 2184 	inc	dptr
      00058D E0               [24] 2185 	movx	a,@dptr
      00058E FF               [12] 2186 	mov	r7,a
      00058F 8D 82            [24] 2187 	mov	dpl,r5
      000591 8E 83            [24] 2188 	mov	dph,r6
      000593 8F F0            [24] 2189 	mov	b,r7
      000595 78r00            [12] 2190 	mov	r0,#_list_length
      000597 79s00            [12] 2191 	mov	r1,#(_list_length >> 8)
      000599 7As00            [12] 2192 	mov	r2,#(_list_length >> 16)
      00059B 12r00r00         [24] 2193 	lcall	__sdcc_banked_call
      00059E E5 82            [12] 2194 	mov	a,dpl
      0005A0 85 83 F0         [24] 2195 	mov	b,dph
      0005A3 45 F0            [12] 2196 	orl	a,b
      0005A5 70 2E            [24] 2197 	jnz	00102$
      0005A7 90r00r00         [24] 2198 	mov	dptr,#_is_listening
      0005AA E0               [24] 2199 	movx	a,@dptr
      0005AB 70 28            [24] 2200 	jnz	00102$
                                   2201 ;	../../../core/net/mac/lpp.c:372: turn_radio_off();
      0005AD 78r2C            [12] 2202 	mov	r0,#_turn_radio_off
      0005AF 79s00            [12] 2203 	mov	r1,#(_turn_radio_off >> 8)
      0005B1 7As00            [12] 2204 	mov	r2,#(_turn_radio_off >> 16)
      0005B3 12r00r00         [24] 2205 	lcall	__sdcc_banked_call
                                   2206 ;	../../../core/net/mac/lpp.c:373: compower_accumulate(&i->compower);
      0005B6 E5 81            [12] 2207 	mov	a,sp
      0005B8 24 F9            [12] 2208 	add	a,#0xf9
      0005BA F8               [12] 2209 	mov	r0,a
      0005BB 74 1C            [12] 2210 	mov	a,#0x1c
      0005BD 26               [12] 2211 	add	a,@r0
      0005BE FD               [12] 2212 	mov	r5,a
      0005BF E4               [12] 2213 	clr	a
      0005C0 08               [12] 2214 	inc	r0
      0005C1 36               [12] 2215 	addc	a,@r0
      0005C2 FE               [12] 2216 	mov	r6,a
      0005C3 08               [12] 2217 	inc	r0
      0005C4 86 07            [24] 2218 	mov	ar7,@r0
      0005C6 8D 82            [24] 2219 	mov	dpl,r5
      0005C8 8E 83            [24] 2220 	mov	dph,r6
      0005CA 8F F0            [24] 2221 	mov	b,r7
      0005CC 78r00            [12] 2222 	mov	r0,#_compower_accumulate
      0005CE 79s00            [12] 2223 	mov	r1,#(_compower_accumulate >> 8)
      0005D0 7As00            [12] 2224 	mov	r2,#(_compower_accumulate >> 16)
      0005D2 12r00r00         [24] 2225 	lcall	__sdcc_banked_call
      0005D5                       2226 00102$:
                                   2227 ;	../../../core/net/mac/lpp.c:376: sent = i->sent_callback;
      0005D5 E5 81            [12] 2228 	mov	a,sp
      0005D7 24 F9            [12] 2229 	add	a,#0xf9
      0005D9 F8               [12] 2230 	mov	r0,a
      0005DA 74 24            [12] 2231 	mov	a,#0x24
      0005DC 26               [12] 2232 	add	a,@r0
      0005DD FD               [12] 2233 	mov	r5,a
      0005DE E4               [12] 2234 	clr	a
      0005DF 08               [12] 2235 	inc	r0
      0005E0 36               [12] 2236 	addc	a,@r0
      0005E1 FE               [12] 2237 	mov	r6,a
      0005E2 08               [12] 2238 	inc	r0
      0005E3 86 07            [24] 2239 	mov	ar7,@r0
      0005E5 8D 82            [24] 2240 	mov	dpl,r5
      0005E7 8E 83            [24] 2241 	mov	dph,r6
      0005E9 8F F0            [24] 2242 	mov	b,r7
      0005EB 12r00r00         [24] 2243 	lcall	__gptrget
      0005EE FD               [12] 2244 	mov	r5,a
      0005EF A3               [24] 2245 	inc	dptr
      0005F0 12r00r00         [24] 2246 	lcall	__gptrget
      0005F3 FE               [12] 2247 	mov	r6,a
      0005F4 A3               [24] 2248 	inc	dptr
      0005F5 12r00r00         [24] 2249 	lcall	__gptrget
      0005F8 FF               [12] 2250 	mov	r7,a
                                   2251 ;	../../../core/net/mac/lpp.c:377: ptr = i->sent_callback_ptr;
      0005F9 E5 81            [12] 2252 	mov	a,sp
      0005FB 24 F9            [12] 2253 	add	a,#0xf9
      0005FD F8               [12] 2254 	mov	r0,a
      0005FE 74 27            [12] 2255 	mov	a,#0x27
      000600 26               [12] 2256 	add	a,@r0
      000601 FA               [12] 2257 	mov	r2,a
      000602 E4               [12] 2258 	clr	a
      000603 08               [12] 2259 	inc	r0
      000604 36               [12] 2260 	addc	a,@r0
      000605 FB               [12] 2261 	mov	r3,a
      000606 08               [12] 2262 	inc	r0
      000607 86 04            [24] 2263 	mov	ar4,@r0
      000609 8A 82            [24] 2264 	mov	dpl,r2
      00060B 8B 83            [24] 2265 	mov	dph,r3
      00060D 8C F0            [24] 2266 	mov	b,r4
      00060F E5 81            [12] 2267 	mov	a,sp
      000611 24 FC            [12] 2268 	add	a,#0xfc
      000613 F8               [12] 2269 	mov	r0,a
      000614 12r00r00         [24] 2270 	lcall	__gptrget
      000617 F6               [12] 2271 	mov	@r0,a
      000618 A3               [24] 2272 	inc	dptr
      000619 12r00r00         [24] 2273 	lcall	__gptrget
      00061C 08               [12] 2274 	inc	r0
      00061D F6               [12] 2275 	mov	@r0,a
      00061E A3               [24] 2276 	inc	dptr
      00061F 12r00r00         [24] 2277 	lcall	__gptrget
      000622 08               [12] 2278 	inc	r0
      000623 F6               [12] 2279 	mov	@r0,a
                                   2280 ;	../../../core/net/mac/lpp.c:378: num_transmissions = i->num_transmissions;
      000624 E5 81            [12] 2281 	mov	a,sp
      000626 24 F9            [12] 2282 	add	a,#0xf9
      000628 F8               [12] 2283 	mov	r0,a
      000629 74 2A            [12] 2284 	mov	a,#0x2a
      00062B 26               [12] 2285 	add	a,@r0
      00062C FA               [12] 2286 	mov	r2,a
      00062D E4               [12] 2287 	clr	a
      00062E 08               [12] 2288 	inc	r0
      00062F 36               [12] 2289 	addc	a,@r0
      000630 FB               [12] 2290 	mov	r3,a
      000631 08               [12] 2291 	inc	r0
      000632 86 04            [24] 2292 	mov	ar4,@r0
      000634 8A 82            [24] 2293 	mov	dpl,r2
      000636 8B 83            [24] 2294 	mov	dph,r3
      000638 8C F0            [24] 2295 	mov	b,r4
      00063A 12r00r00         [24] 2296 	lcall	__gptrget
      00063D FA               [12] 2297 	mov	r2,a
      00063E A8 81            [24] 2298 	mov	r0,sp
      000640 18               [12] 2299 	dec	r0
      000641 A6 02            [24] 2300 	mov	@r0,ar2
      000643 08               [12] 2301 	inc	r0
      000644 76 00            [12] 2302 	mov	@r0,#0x00
                                   2303 ;	../../../core/net/mac/lpp.c:379: memb_free(&queued_packets_memb, i);
      000646 E5 81            [12] 2304 	mov	a,sp
      000648 24 F9            [12] 2305 	add	a,#0xf9
      00064A F8               [12] 2306 	mov	r0,a
      00064B 86 02            [24] 2307 	mov	ar2,@r0
      00064D 08               [12] 2308 	inc	r0
      00064E 86 03            [24] 2309 	mov	ar3,@r0
      000650 08               [12] 2310 	inc	r0
      000651 86 04            [24] 2311 	mov	ar4,@r0
      000653 C0 07            [24] 2312 	push	ar7
      000655 C0 06            [24] 2313 	push	ar6
      000657 C0 05            [24] 2314 	push	ar5
      000659 C0 02            [24] 2315 	push	ar2
      00065B C0 03            [24] 2316 	push	ar3
      00065D C0 04            [24] 2317 	push	ar4
      00065F 90r00r11         [24] 2318 	mov	dptr,#_queued_packets_memb
      000662 75 F0 00         [24] 2319 	mov	b,#0x00
      000665 78r00            [12] 2320 	mov	r0,#_memb_free
      000667 79s00            [12] 2321 	mov	r1,#(_memb_free >> 8)
      000669 7As00            [12] 2322 	mov	r2,#(_memb_free >> 16)
      00066B 12r00r00         [24] 2323 	lcall	__sdcc_banked_call
      00066E 15 81            [12] 2324 	dec	sp
      000670 15 81            [12] 2325 	dec	sp
      000672 15 81            [12] 2326 	dec	sp
      000674 D0 05            [24] 2327 	pop	ar5
      000676 D0 06            [24] 2328 	pop	ar6
      000678 D0 07            [24] 2329 	pop	ar7
                                   2330 ;	../../../core/net/mac/lpp.c:380: if(num_transmissions == 0 || tx_ok == 0) {
      00067A A8 81            [24] 2331 	mov	r0,sp
      00067C 18               [12] 2332 	dec	r0
      00067D E6               [12] 2333 	mov	a,@r0
      00067E 08               [12] 2334 	inc	r0
      00067F 46               [12] 2335 	orl	a,@r0
      000680 60 08            [24] 2336 	jz	00104$
      000682 E5 81            [12] 2337 	mov	a,sp
      000684 24 F5            [12] 2338 	add	a,#0xf5
      000686 F8               [12] 2339 	mov	r0,a
      000687 E6               [12] 2340 	mov	a,@r0
      000688 70 06            [24] 2341 	jnz	00105$
      00068A                       2342 00104$:
                                   2343 ;	../../../core/net/mac/lpp.c:381: status = MAC_TX_NOACK;
      00068A 7B 02            [12] 2344 	mov	r3,#0x02
      00068C 7C 00            [12] 2345 	mov	r4,#0x00
      00068E 80 04            [24] 2346 	sjmp	00110$
      000690                       2347 00105$:
                                   2348 ;	../../../core/net/mac/lpp.c:383: status = MAC_TX_OK;
      000690 7B 00            [12] 2349 	mov	r3,#0x00
      000692 7C 00            [12] 2350 	mov	r4,#0x00
                                   2351 ;	../../../core/net/mac/lpp.c:385: mac_call_sent_callback(sent, ptr, status, num_transmissions);
      000694                       2352 00110$:
      000694 ED               [12] 2353 	mov	a,r5
      000695 4E               [12] 2354 	orl	a,r6
      000696 60 3E            [24] 2355 	jz	00113$
      000698 C0 07            [24] 2356 	push	ar7
      00069A C0 06            [24] 2357 	push	ar6
      00069C C0 05            [24] 2358 	push	ar5
      00069E E5 81            [12] 2359 	mov	a,sp
      0006A0 24 FC            [12] 2360 	add	a,#0xfc
      0006A2 F8               [12] 2361 	mov	r0,a
      0006A3 E6               [12] 2362 	mov	a,@r0
      0006A4 C0 E0            [24] 2363 	push	acc
      0006A6 08               [12] 2364 	inc	r0
      0006A7 E6               [12] 2365 	mov	a,@r0
      0006A8 C0 E0            [24] 2366 	push	acc
      0006AA C0 03            [24] 2367 	push	ar3
      0006AC C0 04            [24] 2368 	push	ar4
      0006AE C0 05            [24] 2369 	push	ar5
      0006B0 C0 06            [24] 2370 	push	ar6
      0006B2 C0 07            [24] 2371 	push	ar7
      0006B4 E5 81            [12] 2372 	mov	a,sp
      0006B6 24 F2            [12] 2373 	add	a,#0xf2
      0006B8 F8               [12] 2374 	mov	r0,a
      0006B9 86 82            [24] 2375 	mov	dpl,@r0
      0006BB 08               [12] 2376 	inc	r0
      0006BC 86 83            [24] 2377 	mov	dph,@r0
      0006BE 08               [12] 2378 	inc	r0
      0006BF 86 F0            [24] 2379 	mov	b,@r0
      0006C1 D0 02            [24] 2380 	pop	ar2
      0006C3 D0 01            [24] 2381 	pop	ar1
      0006C5 D0 00            [24] 2382 	pop	ar0
      0006C7 12r00r00         [24] 2383 	lcall	__sdcc_banked_call
      0006CA E5 81            [12] 2384 	mov	a,sp
      0006CC 24 FC            [12] 2385 	add	a,#0xfc
      0006CE F5 81            [12] 2386 	mov	sp,a
      0006D0 D0 05            [24] 2387 	pop	ar5
      0006D2 D0 06            [24] 2388 	pop	ar6
      0006D4 D0 07            [24] 2389 	pop	ar7
      0006D6                       2390 00113$:
                                   2391 ;	../../../core/net/mac/lpp.c:386: }
      0006D6 E5 81            [12] 2392 	mov	a,sp
      0006D8 24 F8            [12] 2393 	add	a,#0xf8
      0006DA F5 81            [12] 2394 	mov	sp,a
      0006DC 02r00r00         [24] 2395 	ljmp	__sdcc_banked_ret
                                   2396 ;------------------------------------------------------------
                                   2397 ;Allocation info for local variables in function 'remove_queued_old_packet_callback'
                                   2398 ;------------------------------------------------------------
                                   2399 ;item                      Allocated to registers r5 r6 r7 
                                   2400 ;------------------------------------------------------------
                                   2401 ;	../../../core/net/mac/lpp.c:389: remove_queued_old_packet_callback(void *item)
                                   2402 ;	-----------------------------------------
                                   2403 ;	 function remove_queued_old_packet_callback
                                   2404 ;	-----------------------------------------
      0006DF                       2405 _remove_queued_old_packet_callback:
      0006DF AD 82            [24] 2406 	mov	r5,dpl
      0006E1 AE 83            [24] 2407 	mov	r6,dph
      0006E3 AF F0            [24] 2408 	mov	r7,b
                                   2409 ;	../../../core/net/mac/lpp.c:391: remove_queued_packet(item, 0);
      0006E5 E4               [12] 2410 	clr	a
      0006E6 C0 E0            [24] 2411 	push	acc
      0006E8 8D 82            [24] 2412 	mov	dpl,r5
      0006EA 8E 83            [24] 2413 	mov	dph,r6
      0006EC 8F F0            [24] 2414 	mov	b,r7
      0006EE 78r87            [12] 2415 	mov	r0,#_remove_queued_packet
      0006F0 79s04            [12] 2416 	mov	r1,#(_remove_queued_packet >> 8)
      0006F2 7As00            [12] 2417 	mov	r2,#(_remove_queued_packet >> 16)
      0006F4 12r00r00         [24] 2418 	lcall	__sdcc_banked_call
      0006F7 15 81            [12] 2419 	dec	sp
                                   2420 ;	../../../core/net/mac/lpp.c:392: }
      0006F9 02r00r00         [24] 2421 	ljmp	__sdcc_banked_ret
                                   2422 ;------------------------------------------------------------
                                   2423 ;Allocation info for local variables in function 'listen_callback'
                                   2424 ;------------------------------------------------------------
                                   2425 ;periods                   Allocated to registers r6 r7 
                                   2426 ;------------------------------------------------------------
                                   2427 ;	../../../core/net/mac/lpp.c:412: listen_callback(int periods)
                                   2428 ;	-----------------------------------------
                                   2429 ;	 function listen_callback
                                   2430 ;	-----------------------------------------
      0006FC                       2431 _listen_callback:
      0006FC AE 82            [24] 2432 	mov	r6,dpl
                                   2433 ;	../../../core/net/mac/lpp.c:414: is_listening = periods;
      0006FE 90r00r00         [24] 2434 	mov	dptr,#_is_listening
      000701 EE               [12] 2435 	mov	a,r6
      000702 F0               [24] 2436 	movx	@dptr,a
                                   2437 ;	../../../core/net/mac/lpp.c:415: turn_radio_on();
      000703 78r00            [12] 2438 	mov	r0,#_turn_radio_on
      000705 79s00            [12] 2439 	mov	r1,#(_turn_radio_on >> 8)
      000707 7As00            [12] 2440 	mov	r2,#(_turn_radio_on >> 16)
      000709 12r00r00         [24] 2441 	lcall	__sdcc_banked_call
                                   2442 ;	../../../core/net/mac/lpp.c:416: }
      00070C 02r00r00         [24] 2443 	ljmp	__sdcc_banked_ret
                                   2444 ;------------------------------------------------------------
                                   2445 ;Allocation info for local variables in function 'send_probe'
                                   2446 ;------------------------------------------------------------
                                   2447 ;hdr                       Allocated to registers r5 r6 r7 
                                   2448 ;adata                     Allocated to stack - sp -5
                                   2449 ;a                         Allocated to stack - sp -2
                                   2450 ;hdrlen                    Allocated to registers r2 r3 
                                   2451 ;sloc0                     Allocated to stack - sp -8
                                   2452 ;------------------------------------------------------------
                                   2453 ;	../../../core/net/mac/lpp.c:422: send_probe(void)
                                   2454 ;	-----------------------------------------
                                   2455 ;	 function send_probe
                                   2456 ;	-----------------------------------------
      00070F                       2457 _send_probe:
      00070F E5 81            [12] 2458 	mov	a,sp
      000711 24 09            [12] 2459 	add	a,#0x09
      000713 F5 81            [12] 2460 	mov	sp,a
                                   2461 ;	../../../core/net/mac/lpp.c:429: packetbuf_clear();
      000715 78r00            [12] 2462 	mov	r0,#_packetbuf_clear
      000717 79s00            [12] 2463 	mov	r1,#(_packetbuf_clear >> 8)
      000719 7As00            [12] 2464 	mov	r2,#(_packetbuf_clear >> 16)
      00071B 12r00r00         [24] 2465 	lcall	__sdcc_banked_call
                                   2466 ;	../../../core/net/mac/lpp.c:430: packetbuf_set_datalen(sizeof(struct lpp_hdr));
      00071E 90 00 12         [24] 2467 	mov	dptr,#0x0012
      000721 78r00            [12] 2468 	mov	r0,#_packetbuf_set_datalen
      000723 79s00            [12] 2469 	mov	r1,#(_packetbuf_set_datalen >> 8)
      000725 7As00            [12] 2470 	mov	r2,#(_packetbuf_set_datalen >> 16)
      000727 12r00r00         [24] 2471 	lcall	__sdcc_banked_call
                                   2472 ;	../../../core/net/mac/lpp.c:431: hdr = packetbuf_dataptr();
      00072A 78r00            [12] 2473 	mov	r0,#_packetbuf_dataptr
      00072C 79s00            [12] 2474 	mov	r1,#(_packetbuf_dataptr >> 8)
      00072E 7As00            [12] 2475 	mov	r2,#(_packetbuf_dataptr >> 16)
      000730 12r00r00         [24] 2476 	lcall	__sdcc_banked_call
                                   2477 ;	../../../core/net/mac/lpp.c:432: hdr->type = TYPE_PROBE;
      000733 AD 82            [24] 2478 	mov	r5,dpl
      000735 AE 83            [24] 2479 	mov	r6,dph
      000737 AF F0            [24] 2480 	mov	r7,b
      000739 74 01            [12] 2481 	mov	a,#0x01
      00073B 12r00r00         [24] 2482 	lcall	__gptrput
      00073E A3               [24] 2483 	inc	dptr
      00073F E4               [12] 2484 	clr	a
      000740 12r00r00         [24] 2485 	lcall	__gptrput
                                   2486 ;	../../../core/net/mac/lpp.c:433: rimeaddr_copy(&hdr->sender, &rimeaddr_node_addr);
      000743 74 02            [12] 2487 	mov	a,#0x02
      000745 2D               [12] 2488 	add	a,r5
      000746 FA               [12] 2489 	mov	r2,a
      000747 E4               [12] 2490 	clr	a
      000748 3E               [12] 2491 	addc	a,r6
      000749 FB               [12] 2492 	mov	r3,a
      00074A 8F 04            [24] 2493 	mov	ar4,r7
      00074C C0 07            [24] 2494 	push	ar7
      00074E C0 06            [24] 2495 	push	ar6
      000750 C0 05            [24] 2496 	push	ar5
      000752 74r00            [12] 2497 	mov	a,#_rimeaddr_node_addr
      000754 C0 E0            [24] 2498 	push	acc
      000756 74s00            [12] 2499 	mov	a,#(_rimeaddr_node_addr >> 8)
      000758 C0 E0            [24] 2500 	push	acc
      00075A E4               [12] 2501 	clr	a
      00075B C0 E0            [24] 2502 	push	acc
      00075D 8A 82            [24] 2503 	mov	dpl,r2
      00075F 8B 83            [24] 2504 	mov	dph,r3
      000761 8C F0            [24] 2505 	mov	b,r4
      000763 78r00            [12] 2506 	mov	r0,#_rimeaddr_copy
      000765 79s00            [12] 2507 	mov	r1,#(_rimeaddr_copy >> 8)
      000767 7As00            [12] 2508 	mov	r2,#(_rimeaddr_copy >> 16)
      000769 12r00r00         [24] 2509 	lcall	__sdcc_banked_call
      00076C 15 81            [12] 2510 	dec	sp
      00076E 15 81            [12] 2511 	dec	sp
      000770 15 81            [12] 2512 	dec	sp
      000772 D0 05            [24] 2513 	pop	ar5
      000774 D0 06            [24] 2514 	pop	ar6
      000776 D0 07            [24] 2515 	pop	ar7
                                   2516 ;	../../../core/net/mac/lpp.c:435: rimeaddr_copy(&hdr->receiver, &rimeaddr_null);
      000778 74 0A            [12] 2517 	mov	a,#0x0a
      00077A 2D               [12] 2518 	add	a,r5
      00077B FA               [12] 2519 	mov	r2,a
      00077C E4               [12] 2520 	clr	a
      00077D 3E               [12] 2521 	addc	a,r6
      00077E FB               [12] 2522 	mov	r3,a
      00077F 8F 04            [24] 2523 	mov	ar4,r7
      000781 C0 07            [24] 2524 	push	ar7
      000783 C0 06            [24] 2525 	push	ar6
      000785 C0 05            [24] 2526 	push	ar5
      000787 74r00            [12] 2527 	mov	a,#_rimeaddr_null
      000789 C0 E0            [24] 2528 	push	acc
      00078B 74s00            [12] 2529 	mov	a,#(_rimeaddr_null >> 8)
      00078D C0 E0            [24] 2530 	push	acc
      00078F 74 80            [12] 2531 	mov	a,#0x80
      000791 C0 E0            [24] 2532 	push	acc
      000793 8A 82            [24] 2533 	mov	dpl,r2
      000795 8B 83            [24] 2534 	mov	dph,r3
      000797 8C F0            [24] 2535 	mov	b,r4
      000799 78r00            [12] 2536 	mov	r0,#_rimeaddr_copy
      00079B 79s00            [12] 2537 	mov	r1,#(_rimeaddr_copy >> 8)
      00079D 7As00            [12] 2538 	mov	r2,#(_rimeaddr_copy >> 16)
      00079F 12r00r00         [24] 2539 	lcall	__sdcc_banked_call
      0007A2 15 81            [12] 2540 	dec	sp
      0007A4 15 81            [12] 2541 	dec	sp
      0007A6 15 81            [12] 2542 	dec	sp
                                   2543 ;	../../../core/net/mac/lpp.c:437: packetbuf_set_addr(PACKETBUF_ADDR_RECEIVER, &rimeaddr_null);
      0007A8 74r00            [12] 2544 	mov	a,#_rimeaddr_null
      0007AA C0 E0            [24] 2545 	push	acc
      0007AC 74s00            [12] 2546 	mov	a,#(_rimeaddr_null >> 8)
      0007AE C0 E0            [24] 2547 	push	acc
      0007B0 74 80            [12] 2548 	mov	a,#0x80
      0007B2 C0 E0            [24] 2549 	push	acc
      0007B4 75 82 19         [24] 2550 	mov	dpl,#0x19
      0007B7 78r00            [12] 2551 	mov	r0,#_packetbuf_set_addr
      0007B9 79s00            [12] 2552 	mov	r1,#(_packetbuf_set_addr >> 8)
      0007BB 7As00            [12] 2553 	mov	r2,#(_packetbuf_set_addr >> 16)
      0007BD 12r00r00         [24] 2554 	lcall	__sdcc_banked_call
      0007C0 15 81            [12] 2555 	dec	sp
      0007C2 15 81            [12] 2556 	dec	sp
      0007C4 15 81            [12] 2557 	dec	sp
                                   2558 ;	../../../core/net/mac/lpp.c:439: int hdrlen = NETSTACK_FRAMER.create();
      0007C6 90r00r00         [24] 2559 	mov	dptr,#_framer_802154
      0007C9 E4               [12] 2560 	clr	a
      0007CA 93               [24] 2561 	movc	a,@a+dptr
      0007CB FA               [12] 2562 	mov	r2,a
      0007CC A3               [24] 2563 	inc	dptr
      0007CD E4               [12] 2564 	clr	a
      0007CE 93               [24] 2565 	movc	a,@a+dptr
      0007CF FB               [12] 2566 	mov	r3,a
      0007D0 A3               [24] 2567 	inc	dptr
      0007D1 E4               [12] 2568 	clr	a
      0007D2 93               [24] 2569 	movc	a,@a+dptr
      0007D3 FC               [12] 2570 	mov	r4,a
      0007D4 C0 04            [24] 2571 	push	ar4
      0007D6 C0 02            [24] 2572 	push	ar2
      0007D8 C0 03            [24] 2573 	push	ar3
      0007DA C0 04            [24] 2574 	push	ar4
      0007DC D0 02            [24] 2575 	pop	ar2
      0007DE D0 01            [24] 2576 	pop	ar1
      0007E0 D0 00            [24] 2577 	pop	ar0
      0007E2 12r00r00         [24] 2578 	lcall	__sdcc_banked_call
      0007E5 AA 82            [24] 2579 	mov	r2,dpl
      0007E7 AB 83            [24] 2580 	mov	r3,dph
      0007E9 D0 04            [24] 2581 	pop	ar4
      0007EB D0 05            [24] 2582 	pop	ar5
      0007ED D0 06            [24] 2583 	pop	ar6
      0007EF D0 07            [24] 2584 	pop	ar7
                                   2585 ;	../../../core/net/mac/lpp.c:440: if(hdrlen < 0) {
      0007F1 EB               [12] 2586 	mov	a,r3
      0007F2 30 E7 03         [24] 2587 	jnb	acc.7,00102$
                                   2588 ;	../../../core/net/mac/lpp.c:442: return;
      0007F5 02r0ArA0         [24] 2589 	ljmp	00110$
      0007F8                       2590 00102$:
                                   2591 ;	../../../core/net/mac/lpp.c:447: adata = (struct announcement_msg *)((char *)hdr + sizeof(struct lpp_hdr));
      0007F8 74 12            [12] 2592 	mov	a,#0x12
      0007FA 2D               [12] 2593 	add	a,r5
      0007FB FD               [12] 2594 	mov	r5,a
      0007FC E4               [12] 2595 	clr	a
      0007FD 3E               [12] 2596 	addc	a,r6
      0007FE FE               [12] 2597 	mov	r6,a
      0007FF E5 81            [12] 2598 	mov	a,sp
      000801 24 FB            [12] 2599 	add	a,#0xfb
      000803 F8               [12] 2600 	mov	r0,a
      000804 A6 05            [24] 2601 	mov	@r0,ar5
      000806 08               [12] 2602 	inc	r0
      000807 A6 06            [24] 2603 	mov	@r0,ar6
      000809 08               [12] 2604 	inc	r0
      00080A A6 07            [24] 2605 	mov	@r0,ar7
                                   2606 ;	../../../core/net/mac/lpp.c:449: adata->num = 0;
      00080C E5 81            [12] 2607 	mov	a,sp
      00080E 24 FB            [12] 2608 	add	a,#0xfb
      000810 F8               [12] 2609 	mov	r0,a
      000811 86 82            [24] 2610 	mov	dpl,@r0
      000813 08               [12] 2611 	inc	r0
      000814 86 83            [24] 2612 	mov	dph,@r0
      000816 08               [12] 2613 	inc	r0
      000817 86 F0            [24] 2614 	mov	b,@r0
      000819 E4               [12] 2615 	clr	a
      00081A 12r00r00         [24] 2616 	lcall	__gptrput
      00081D A3               [24] 2617 	inc	dptr
      00081E 12r00r00         [24] 2618 	lcall	__gptrput
                                   2619 ;	../../../core/net/mac/lpp.c:450: for(a = announcement_list(); a != NULL; a = list_item_next(a)) {
      000821 78r00            [12] 2620 	mov	r0,#_announcement_list
      000823 79s00            [12] 2621 	mov	r1,#(_announcement_list >> 8)
      000825 7As00            [12] 2622 	mov	r2,#(_announcement_list >> 16)
      000827 12r00r00         [24] 2623 	lcall	__sdcc_banked_call
      00082A AA 82            [24] 2624 	mov	r2,dpl
      00082C AB 83            [24] 2625 	mov	r3,dph
      00082E AC F0            [24] 2626 	mov	r4,b
      000830 A8 81            [24] 2627 	mov	r0,sp
      000832 18               [12] 2628 	dec	r0
      000833 18               [12] 2629 	dec	r0
      000834 A6 02            [24] 2630 	mov	@r0,ar2
      000836 08               [12] 2631 	inc	r0
      000837 A6 03            [24] 2632 	mov	@r0,ar3
      000839 08               [12] 2633 	inc	r0
      00083A A6 04            [24] 2634 	mov	@r0,ar4
      00083C E5 81            [12] 2635 	mov	a,sp
      00083E 24 FB            [12] 2636 	add	a,#0xfb
      000840 F8               [12] 2637 	mov	r0,a
      000841 74 02            [12] 2638 	mov	a,#0x02
      000843 26               [12] 2639 	add	a,@r0
      000844 FA               [12] 2640 	mov	r2,a
      000845 E4               [12] 2641 	clr	a
      000846 08               [12] 2642 	inc	r0
      000847 36               [12] 2643 	addc	a,@r0
      000848 FB               [12] 2644 	mov	r3,a
      000849 08               [12] 2645 	inc	r0
      00084A 86 04            [24] 2646 	mov	ar4,@r0
      00084C                       2647 00108$:
      00084C A8 81            [24] 2648 	mov	r0,sp
      00084E 18               [12] 2649 	dec	r0
      00084F 18               [12] 2650 	dec	r0
      000850 E6               [12] 2651 	mov	a,@r0
      000851 08               [12] 2652 	inc	r0
      000852 46               [12] 2653 	orl	a,@r0
      000853 70 03            [24] 2654 	jnz	00129$
      000855 02r09r97         [24] 2655 	ljmp	00103$
      000858                       2656 00129$:
                                   2657 ;	../../../core/net/mac/lpp.c:451: adata->data[adata->num].id = a->id;
      000858 E5 81            [12] 2658 	mov	a,sp
      00085A 24 FB            [12] 2659 	add	a,#0xfb
      00085C F8               [12] 2660 	mov	r0,a
      00085D 86 82            [24] 2661 	mov	dpl,@r0
      00085F 08               [12] 2662 	inc	r0
      000860 86 83            [24] 2663 	mov	dph,@r0
      000862 08               [12] 2664 	inc	r0
      000863 86 F0            [24] 2665 	mov	b,@r0
      000865 12r00r00         [24] 2666 	lcall	__gptrget
      000868 FE               [12] 2667 	mov	r6,a
      000869 A3               [24] 2668 	inc	dptr
      00086A 12r00r00         [24] 2669 	lcall	__gptrget
      00086D FF               [12] 2670 	mov	r7,a
      00086E EE               [12] 2671 	mov	a,r6
      00086F 2E               [12] 2672 	add	a,r6
      000870 FE               [12] 2673 	mov	r6,a
      000871 EF               [12] 2674 	mov	a,r7
      000872 33               [12] 2675 	rlc	a
      000873 FF               [12] 2676 	mov	r7,a
      000874 EE               [12] 2677 	mov	a,r6
      000875 2E               [12] 2678 	add	a,r6
      000876 FE               [12] 2679 	mov	r6,a
      000877 EF               [12] 2680 	mov	a,r7
      000878 33               [12] 2681 	rlc	a
      000879 FF               [12] 2682 	mov	r7,a
      00087A E5 81            [12] 2683 	mov	a,sp
      00087C 24 F8            [12] 2684 	add	a,#0xf8
      00087E F8               [12] 2685 	mov	r0,a
      00087F EE               [12] 2686 	mov	a,r6
      000880 2A               [12] 2687 	add	a,r2
      000881 F6               [12] 2688 	mov	@r0,a
      000882 EF               [12] 2689 	mov	a,r7
      000883 3B               [12] 2690 	addc	a,r3
      000884 08               [12] 2691 	inc	r0
      000885 F6               [12] 2692 	mov	@r0,a
      000886 08               [12] 2693 	inc	r0
      000887 A6 04            [24] 2694 	mov	@r0,ar4
      000889 A8 81            [24] 2695 	mov	r0,sp
      00088B 18               [12] 2696 	dec	r0
      00088C 18               [12] 2697 	dec	r0
      00088D 74 03            [12] 2698 	mov	a,#0x03
      00088F 26               [12] 2699 	add	a,@r0
      000890 FE               [12] 2700 	mov	r6,a
      000891 E4               [12] 2701 	clr	a
      000892 08               [12] 2702 	inc	r0
      000893 36               [12] 2703 	addc	a,@r0
      000894 FD               [12] 2704 	mov	r5,a
      000895 08               [12] 2705 	inc	r0
      000896 86 07            [24] 2706 	mov	ar7,@r0
      000898 8E 82            [24] 2707 	mov	dpl,r6
      00089A 8D 83            [24] 2708 	mov	dph,r5
      00089C 8F F0            [24] 2709 	mov	b,r7
      00089E 12r00r00         [24] 2710 	lcall	__gptrget
      0008A1 FE               [12] 2711 	mov	r6,a
      0008A2 A3               [24] 2712 	inc	dptr
      0008A3 12r00r00         [24] 2713 	lcall	__gptrget
      0008A6 FD               [12] 2714 	mov	r5,a
      0008A7 E5 81            [12] 2715 	mov	a,sp
      0008A9 24 F8            [12] 2716 	add	a,#0xf8
      0008AB F8               [12] 2717 	mov	r0,a
      0008AC 86 82            [24] 2718 	mov	dpl,@r0
      0008AE 08               [12] 2719 	inc	r0
      0008AF 86 83            [24] 2720 	mov	dph,@r0
      0008B1 08               [12] 2721 	inc	r0
      0008B2 86 F0            [24] 2722 	mov	b,@r0
      0008B4 EE               [12] 2723 	mov	a,r6
      0008B5 12r00r00         [24] 2724 	lcall	__gptrput
      0008B8 A3               [24] 2725 	inc	dptr
      0008B9 ED               [12] 2726 	mov	a,r5
      0008BA 12r00r00         [24] 2727 	lcall	__gptrput
                                   2728 ;	../../../core/net/mac/lpp.c:452: adata->data[adata->num].value = a->value;
      0008BD E5 81            [12] 2729 	mov	a,sp
      0008BF 24 FB            [12] 2730 	add	a,#0xfb
      0008C1 F8               [12] 2731 	mov	r0,a
      0008C2 86 82            [24] 2732 	mov	dpl,@r0
      0008C4 08               [12] 2733 	inc	r0
      0008C5 86 83            [24] 2734 	mov	dph,@r0
      0008C7 08               [12] 2735 	inc	r0
      0008C8 86 F0            [24] 2736 	mov	b,@r0
      0008CA 12r00r00         [24] 2737 	lcall	__gptrget
      0008CD FE               [12] 2738 	mov	r6,a
      0008CE A3               [24] 2739 	inc	dptr
      0008CF 12r00r00         [24] 2740 	lcall	__gptrget
      0008D2 FF               [12] 2741 	mov	r7,a
      0008D3 EE               [12] 2742 	mov	a,r6
      0008D4 2E               [12] 2743 	add	a,r6
      0008D5 FE               [12] 2744 	mov	r6,a
      0008D6 EF               [12] 2745 	mov	a,r7
      0008D7 33               [12] 2746 	rlc	a
      0008D8 FF               [12] 2747 	mov	r7,a
      0008D9 EE               [12] 2748 	mov	a,r6
      0008DA 2E               [12] 2749 	add	a,r6
      0008DB FE               [12] 2750 	mov	r6,a
      0008DC EF               [12] 2751 	mov	a,r7
      0008DD 33               [12] 2752 	rlc	a
      0008DE FF               [12] 2753 	mov	r7,a
      0008DF EE               [12] 2754 	mov	a,r6
      0008E0 2A               [12] 2755 	add	a,r2
      0008E1 FE               [12] 2756 	mov	r6,a
      0008E2 EF               [12] 2757 	mov	a,r7
      0008E3 3B               [12] 2758 	addc	a,r3
      0008E4 FF               [12] 2759 	mov	r7,a
      0008E5 8C 05            [24] 2760 	mov	ar5,r4
      0008E7 74 02            [12] 2761 	mov	a,#0x02
      0008E9 2E               [12] 2762 	add	a,r6
      0008EA FE               [12] 2763 	mov	r6,a
      0008EB E4               [12] 2764 	clr	a
      0008EC 3F               [12] 2765 	addc	a,r7
      0008ED FF               [12] 2766 	mov	r7,a
      0008EE C0 02            [24] 2767 	push	ar2
      0008F0 C0 03            [24] 2768 	push	ar3
      0008F2 C0 04            [24] 2769 	push	ar4
      0008F4 E5 81            [12] 2770 	mov	a,sp
      0008F6 24 FB            [12] 2771 	add	a,#0xfb
      0008F8 F8               [12] 2772 	mov	r0,a
      0008F9 74 05            [12] 2773 	mov	a,#0x05
      0008FB 26               [12] 2774 	add	a,@r0
      0008FC FA               [12] 2775 	mov	r2,a
      0008FD E4               [12] 2776 	clr	a
      0008FE 08               [12] 2777 	inc	r0
      0008FF 36               [12] 2778 	addc	a,@r0
      000900 FB               [12] 2779 	mov	r3,a
      000901 08               [12] 2780 	inc	r0
      000902 86 04            [24] 2781 	mov	ar4,@r0
      000904 8A 82            [24] 2782 	mov	dpl,r2
      000906 8B 83            [24] 2783 	mov	dph,r3
      000908 8C F0            [24] 2784 	mov	b,r4
      00090A 12r00r00         [24] 2785 	lcall	__gptrget
      00090D FA               [12] 2786 	mov	r2,a
      00090E A3               [24] 2787 	inc	dptr
      00090F 12r00r00         [24] 2788 	lcall	__gptrget
      000912 FB               [12] 2789 	mov	r3,a
      000913 8E 82            [24] 2790 	mov	dpl,r6
      000915 8F 83            [24] 2791 	mov	dph,r7
      000917 8D F0            [24] 2792 	mov	b,r5
      000919 EA               [12] 2793 	mov	a,r2
      00091A 12r00r00         [24] 2794 	lcall	__gptrput
      00091D A3               [24] 2795 	inc	dptr
      00091E EB               [12] 2796 	mov	a,r3
      00091F 12r00r00         [24] 2797 	lcall	__gptrput
                                   2798 ;	../../../core/net/mac/lpp.c:453: adata->num++;
      000922 E5 81            [12] 2799 	mov	a,sp
      000924 24 F8            [12] 2800 	add	a,#0xf8
      000926 F8               [12] 2801 	mov	r0,a
      000927 86 82            [24] 2802 	mov	dpl,@r0
      000929 08               [12] 2803 	inc	r0
      00092A 86 83            [24] 2804 	mov	dph,@r0
      00092C 08               [12] 2805 	inc	r0
      00092D 86 F0            [24] 2806 	mov	b,@r0
      00092F 12r00r00         [24] 2807 	lcall	__gptrget
      000932 FF               [12] 2808 	mov	r7,a
      000933 A3               [24] 2809 	inc	dptr
      000934 12r00r00         [24] 2810 	lcall	__gptrget
      000937 FE               [12] 2811 	mov	r6,a
      000938 0F               [12] 2812 	inc	r7
      000939 BF 00 01         [24] 2813 	cjne	r7,#0x00,00130$
      00093C 0E               [12] 2814 	inc	r6
      00093D                       2815 00130$:
      00093D E5 81            [12] 2816 	mov	a,sp
      00093F 24 F8            [12] 2817 	add	a,#0xf8
      000941 F8               [12] 2818 	mov	r0,a
      000942 86 82            [24] 2819 	mov	dpl,@r0
      000944 08               [12] 2820 	inc	r0
      000945 86 83            [24] 2821 	mov	dph,@r0
      000947 08               [12] 2822 	inc	r0
      000948 86 F0            [24] 2823 	mov	b,@r0
      00094A EF               [12] 2824 	mov	a,r7
      00094B 12r00r00         [24] 2825 	lcall	__gptrput
      00094E A3               [24] 2826 	inc	dptr
      00094F EE               [12] 2827 	mov	a,r6
      000950 12r00r00         [24] 2828 	lcall	__gptrput
                                   2829 ;	../../../core/net/mac/lpp.c:450: for(a = announcement_list(); a != NULL; a = list_item_next(a)) {
      000953 E5 81            [12] 2830 	mov	a,sp
      000955 24 FB            [12] 2831 	add	a,#0xfb
      000957 F8               [12] 2832 	mov	r0,a
      000958 86 02            [24] 2833 	mov	ar2,@r0
      00095A 08               [12] 2834 	inc	r0
      00095B 86 03            [24] 2835 	mov	ar3,@r0
      00095D 08               [12] 2836 	inc	r0
      00095E 86 04            [24] 2837 	mov	ar4,@r0
      000960 8A 82            [24] 2838 	mov	dpl,r2
      000962 8B 83            [24] 2839 	mov	dph,r3
      000964 8C F0            [24] 2840 	mov	b,r4
      000966 C0 04            [24] 2841 	push	ar4
      000968 C0 03            [24] 2842 	push	ar3
      00096A C0 02            [24] 2843 	push	ar2
      00096C 78r00            [12] 2844 	mov	r0,#_list_item_next
      00096E 79s00            [12] 2845 	mov	r1,#(_list_item_next >> 8)
      000970 7As00            [12] 2846 	mov	r2,#(_list_item_next >> 16)
      000972 12r00r00         [24] 2847 	lcall	__sdcc_banked_call
      000975 AD 82            [24] 2848 	mov	r5,dpl
      000977 AE 83            [24] 2849 	mov	r6,dph
      000979 AF F0            [24] 2850 	mov	r7,b
      00097B D0 02            [24] 2851 	pop	ar2
      00097D D0 03            [24] 2852 	pop	ar3
      00097F D0 04            [24] 2853 	pop	ar4
      000981 E5 81            [12] 2854 	mov	a,sp
      000983 24 FB            [12] 2855 	add	a,#0xfb
      000985 F8               [12] 2856 	mov	r0,a
      000986 A6 05            [24] 2857 	mov	@r0,ar5
      000988 08               [12] 2858 	inc	r0
      000989 A6 06            [24] 2859 	mov	@r0,ar6
      00098B 08               [12] 2860 	inc	r0
      00098C A6 07            [24] 2861 	mov	@r0,ar7
      00098E D0 04            [24] 2862 	pop	ar4
      000990 D0 03            [24] 2863 	pop	ar3
      000992 D0 02            [24] 2864 	pop	ar2
      000994 02r08r4C         [24] 2865 	ljmp	00108$
      000997                       2866 00103$:
                                   2867 ;	../../../core/net/mac/lpp.c:458: sizeof(struct announcement_data) * adata->num);
      000997 E5 81            [12] 2868 	mov	a,sp
      000999 24 FB            [12] 2869 	add	a,#0xfb
      00099B F8               [12] 2870 	mov	r0,a
      00099C 86 82            [24] 2871 	mov	dpl,@r0
      00099E 08               [12] 2872 	inc	r0
      00099F 86 83            [24] 2873 	mov	dph,@r0
      0009A1 08               [12] 2874 	inc	r0
      0009A2 86 F0            [24] 2875 	mov	b,@r0
      0009A4 12r00r00         [24] 2876 	lcall	__gptrget
      0009A7 FE               [12] 2877 	mov	r6,a
      0009A8 A3               [24] 2878 	inc	dptr
      0009A9 12r00r00         [24] 2879 	lcall	__gptrget
      0009AC FF               [12] 2880 	mov	r7,a
      0009AD EE               [12] 2881 	mov	a,r6
      0009AE 2E               [12] 2882 	add	a,r6
      0009AF FE               [12] 2883 	mov	r6,a
      0009B0 EF               [12] 2884 	mov	a,r7
      0009B1 33               [12] 2885 	rlc	a
      0009B2 FF               [12] 2886 	mov	r7,a
      0009B3 EE               [12] 2887 	mov	a,r6
      0009B4 2E               [12] 2888 	add	a,r6
      0009B5 FE               [12] 2889 	mov	r6,a
      0009B6 EF               [12] 2890 	mov	a,r7
      0009B7 33               [12] 2891 	rlc	a
      0009B8 FF               [12] 2892 	mov	r7,a
      0009B9 74 14            [12] 2893 	mov	a,#0x14
      0009BB 2E               [12] 2894 	add	a,r6
      0009BC FE               [12] 2895 	mov	r6,a
      0009BD E4               [12] 2896 	clr	a
      0009BE 3F               [12] 2897 	addc	a,r7
      0009BF FF               [12] 2898 	mov	r7,a
      0009C0 8E 82            [24] 2899 	mov	dpl,r6
      0009C2 8F 83            [24] 2900 	mov	dph,r7
      0009C4 78r00            [12] 2901 	mov	r0,#_packetbuf_set_datalen
      0009C6 79s00            [12] 2902 	mov	r1,#(_packetbuf_set_datalen >> 8)
      0009C8 7As00            [12] 2903 	mov	r2,#(_packetbuf_set_datalen >> 16)
      0009CA 12r00r00         [24] 2904 	lcall	__sdcc_banked_call
                                   2905 ;	../../../core/net/mac/lpp.c:464: if(NETSTACK_RADIO.channel_clear()) {
      0009CD 90r00r0F         [24] 2906 	mov	dptr,#(_cc2530_rf_driver + 0x000f)
      0009D0 E4               [12] 2907 	clr	a
      0009D1 93               [24] 2908 	movc	a,@a+dptr
      0009D2 FD               [12] 2909 	mov	r5,a
      0009D3 A3               [24] 2910 	inc	dptr
      0009D4 E4               [12] 2911 	clr	a
      0009D5 93               [24] 2912 	movc	a,@a+dptr
      0009D6 FE               [12] 2913 	mov	r6,a
      0009D7 A3               [24] 2914 	inc	dptr
      0009D8 E4               [12] 2915 	clr	a
      0009D9 93               [24] 2916 	movc	a,@a+dptr
      0009DA FF               [12] 2917 	mov	r7,a
      0009DB C0 07            [24] 2918 	push	ar7
      0009DD C0 05            [24] 2919 	push	ar5
      0009DF C0 06            [24] 2920 	push	ar6
      0009E1 C0 07            [24] 2921 	push	ar7
      0009E3 D0 02            [24] 2922 	pop	ar2
      0009E5 D0 01            [24] 2923 	pop	ar1
      0009E7 D0 00            [24] 2924 	pop	ar0
      0009E9 12r00r00         [24] 2925 	lcall	__sdcc_banked_call
      0009EC AD 82            [24] 2926 	mov	r5,dpl
      0009EE AE 83            [24] 2927 	mov	r6,dph
      0009F0 D0 07            [24] 2928 	pop	ar7
      0009F2 ED               [12] 2929 	mov	a,r5
      0009F3 4E               [12] 2930 	orl	a,r6
      0009F4 60 70            [24] 2931 	jz	00105$
                                   2932 ;	../../../core/net/mac/lpp.c:465: NETSTACK_RADIO.send(packetbuf_hdrptr(), packetbuf_totlen());
      0009F6 90r00r09         [24] 2933 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      0009F9 E4               [12] 2934 	clr	a
      0009FA 93               [24] 2935 	movc	a,@a+dptr
      0009FB FD               [12] 2936 	mov	r5,a
      0009FC A3               [24] 2937 	inc	dptr
      0009FD E4               [12] 2938 	clr	a
      0009FE 93               [24] 2939 	movc	a,@a+dptr
      0009FF FE               [12] 2940 	mov	r6,a
      000A00 A3               [24] 2941 	inc	dptr
      000A01 E4               [12] 2942 	clr	a
      000A02 93               [24] 2943 	movc	a,@a+dptr
      000A03 FF               [12] 2944 	mov	r7,a
      000A04 C0 07            [24] 2945 	push	ar7
      000A06 C0 06            [24] 2946 	push	ar6
      000A08 C0 05            [24] 2947 	push	ar5
      000A0A 78r00            [12] 2948 	mov	r0,#_packetbuf_totlen
      000A0C 79s00            [12] 2949 	mov	r1,#(_packetbuf_totlen >> 8)
      000A0E 7As00            [12] 2950 	mov	r2,#(_packetbuf_totlen >> 16)
      000A10 12r00r00         [24] 2951 	lcall	__sdcc_banked_call
      000A13 C8               [12] 2952 	xch	a,r0
      000A14 E5 81            [12] 2953 	mov	a,sp
      000A16 24 F5            [12] 2954 	add	a,#0xf5
      000A18 C8               [12] 2955 	xch	a,r0
      000A19 A6 82            [24] 2956 	mov	@r0,dpl
      000A1B 08               [12] 2957 	inc	r0
      000A1C A6 83            [24] 2958 	mov	@r0,dph
      000A1E 78r00            [12] 2959 	mov	r0,#_packetbuf_hdrptr
      000A20 79s00            [12] 2960 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000A22 7As00            [12] 2961 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000A24 12r00r00         [24] 2962 	lcall	__sdcc_banked_call
      000A27 AA 82            [24] 2963 	mov	r2,dpl
      000A29 AB 83            [24] 2964 	mov	r3,dph
      000A2B AC F0            [24] 2965 	mov	r4,b
      000A2D D0 05            [24] 2966 	pop	ar5
      000A2F D0 06            [24] 2967 	pop	ar6
      000A31 D0 07            [24] 2968 	pop	ar7
      000A33 C0 07            [24] 2969 	push	ar7
      000A35 C0 06            [24] 2970 	push	ar6
      000A37 C0 05            [24] 2971 	push	ar5
      000A39 E5 81            [12] 2972 	mov	a,sp
      000A3B 24 F5            [12] 2973 	add	a,#0xf5
      000A3D F8               [12] 2974 	mov	r0,a
      000A3E E6               [12] 2975 	mov	a,@r0
      000A3F C0 E0            [24] 2976 	push	acc
      000A41 08               [12] 2977 	inc	r0
      000A42 E6               [12] 2978 	mov	a,@r0
      000A43 C0 E0            [24] 2979 	push	acc
      000A45 C0 05            [24] 2980 	push	ar5
      000A47 C0 06            [24] 2981 	push	ar6
      000A49 C0 07            [24] 2982 	push	ar7
      000A4B 8A 82            [24] 2983 	mov	dpl,r2
      000A4D 8B 83            [24] 2984 	mov	dph,r3
      000A4F 8C F0            [24] 2985 	mov	b,r4
      000A51 D0 02            [24] 2986 	pop	ar2
      000A53 D0 01            [24] 2987 	pop	ar1
      000A55 D0 00            [24] 2988 	pop	ar0
      000A57 12r00r00         [24] 2989 	lcall	__sdcc_banked_call
      000A5A 15 81            [12] 2990 	dec	sp
      000A5C 15 81            [12] 2991 	dec	sp
      000A5E D0 05            [24] 2992 	pop	ar5
      000A60 D0 06            [24] 2993 	pop	ar6
      000A62 D0 07            [24] 2994 	pop	ar7
      000A64 80 2B            [24] 2995 	sjmp	00106$
      000A66                       2996 00105$:
                                   2997 ;	../../../core/net/mac/lpp.c:467: off_time_adjustment = random_rand() % (OFF_TIME / 2);
      000A66 78r00            [12] 2998 	mov	r0,#_random_rand
      000A68 79s00            [12] 2999 	mov	r1,#(_random_rand >> 8)
      000A6A 7As00            [12] 3000 	mov	r2,#(_random_rand >> 16)
      000A6C 12r00r00         [24] 3001 	lcall	__sdcc_banked_call
      000A6F AE 82            [24] 3002 	mov	r6,dpl
      000A71 AF 83            [24] 3003 	mov	r7,dph
      000A73 74 07            [12] 3004 	mov	a,#0x07
      000A75 C0 E0            [24] 3005 	push	acc
      000A77 E4               [12] 3006 	clr	a
      000A78 C0 E0            [24] 3007 	push	acc
      000A7A 8E 82            [24] 3008 	mov	dpl,r6
      000A7C 8F 83            [24] 3009 	mov	dph,r7
      000A7E 12r00r00         [24] 3010 	lcall	__moduint
      000A81 AE 82            [24] 3011 	mov	r6,dpl
      000A83 AF 83            [24] 3012 	mov	r7,dph
      000A85 15 81            [12] 3013 	dec	sp
      000A87 15 81            [12] 3014 	dec	sp
      000A89 90r00r01         [24] 3015 	mov	dptr,#_off_time_adjustment
      000A8C EE               [12] 3016 	mov	a,r6
      000A8D F0               [24] 3017 	movx	@dptr,a
      000A8E EF               [12] 3018 	mov	a,r7
      000A8F A3               [24] 3019 	inc	dptr
      000A90 F0               [24] 3020 	movx	@dptr,a
      000A91                       3021 00106$:
                                   3022 ;	../../../core/net/mac/lpp.c:470: compower_accumulate(&compower_idle_activity);
      000A91 90r00r00         [24] 3023 	mov	dptr,#_compower_idle_activity
      000A94 75 F0 00         [24] 3024 	mov	b,#0x00
      000A97 78r00            [12] 3025 	mov	r0,#_compower_accumulate
      000A99 79s00            [12] 3026 	mov	r1,#(_compower_accumulate >> 8)
      000A9B 7As00            [12] 3027 	mov	r2,#(_compower_accumulate >> 16)
      000A9D 12r00r00         [24] 3028 	lcall	__sdcc_banked_call
      000AA0                       3029 00110$:
                                   3030 ;	../../../core/net/mac/lpp.c:471: }
      000AA0 E5 81            [12] 3031 	mov	a,sp
      000AA2 24 F7            [12] 3032 	add	a,#0xf7
      000AA4 F5 81            [12] 3033 	mov	sp,a
      000AA6 02r00r00         [24] 3034 	ljmp	__sdcc_banked_ret
                                   3035 ;------------------------------------------------------------
                                   3036 ;Allocation info for local variables in function 'send_stream_probe'
                                   3037 ;------------------------------------------------------------
                                   3038 ;dummy                     Allocated to registers 
                                   3039 ;------------------------------------------------------------
                                   3040 ;	../../../core/net/mac/lpp.c:474: send_stream_probe(void *dummy)
                                   3041 ;	-----------------------------------------
                                   3042 ;	 function send_stream_probe
                                   3043 ;	-----------------------------------------
      000AA9                       3044 _send_stream_probe:
                                   3045 ;	../../../core/net/mac/lpp.c:478: turn_radio_on();
      000AA9 78r00            [12] 3046 	mov	r0,#_turn_radio_on
      000AAB 79s00            [12] 3047 	mov	r1,#(_turn_radio_on >> 8)
      000AAD 7As00            [12] 3048 	mov	r2,#(_turn_radio_on >> 16)
      000AAF 12r00r00         [24] 3049 	lcall	__sdcc_banked_call
                                   3050 ;	../../../core/net/mac/lpp.c:481: send_probe();
      000AB2 78r0F            [12] 3051 	mov	r0,#_send_probe
      000AB4 79s07            [12] 3052 	mov	r1,#(_send_probe >> 8)
      000AB6 7As00            [12] 3053 	mov	r2,#(_send_probe >> 16)
      000AB8 12r00r00         [24] 3054 	lcall	__sdcc_banked_call
                                   3055 ;	../../../core/net/mac/lpp.c:484: is_streaming = 1;
      000ABB 90r00r2B         [24] 3056 	mov	dptr,#_is_streaming
      000ABE 74 01            [12] 3057 	mov	a,#0x01
      000AC0 F0               [24] 3058 	movx	@dptr,a
                                   3059 ;	../../../core/net/mac/lpp.c:486: }
      000AC1 02r00r00         [24] 3060 	ljmp	__sdcc_banked_ret
                                   3061 ;------------------------------------------------------------
                                   3062 ;Allocation info for local variables in function 'num_packets_to_send'
                                   3063 ;------------------------------------------------------------
                                   3064 ;	../../../core/net/mac/lpp.c:489: num_packets_to_send(void)
                                   3065 ;	-----------------------------------------
                                   3066 ;	 function num_packets_to_send
                                   3067 ;	-----------------------------------------
      000AC4                       3068 _num_packets_to_send:
                                   3069 ;	../../../core/net/mac/lpp.c:503: return list_length(queued_packets_list);
      000AC4 90r00r0E         [24] 3070 	mov	dptr,#_queued_packets_list
      000AC7 E0               [24] 3071 	movx	a,@dptr
      000AC8 FD               [12] 3072 	mov	r5,a
      000AC9 A3               [24] 3073 	inc	dptr
      000ACA E0               [24] 3074 	movx	a,@dptr
      000ACB FE               [12] 3075 	mov	r6,a
      000ACC A3               [24] 3076 	inc	dptr
      000ACD E0               [24] 3077 	movx	a,@dptr
      000ACE FF               [12] 3078 	mov	r7,a
      000ACF 8D 82            [24] 3079 	mov	dpl,r5
      000AD1 8E 83            [24] 3080 	mov	dph,r6
      000AD3 8F F0            [24] 3081 	mov	b,r7
      000AD5 78r00            [12] 3082 	mov	r0,#_list_length
      000AD7 79s00            [12] 3083 	mov	r1,#(_list_length >> 8)
      000AD9 7As00            [12] 3084 	mov	r2,#(_list_length >> 16)
      000ADB 12r00r00         [24] 3085 	lcall	__sdcc_banked_call
      000ADE AE 82            [24] 3086 	mov	r6,dpl
      000AE0 AF 83            [24] 3087 	mov  r7,dph
                                   3088 ;	../../../core/net/mac/lpp.c:505: }
      000AE2 02r00r00         [24] 3089 	ljmp	__sdcc_banked_ret
                                   3090 ;------------------------------------------------------------
                                   3091 ;Allocation info for local variables in function 'dutycycle'
                                   3092 ;------------------------------------------------------------
                                   3093 ;ptr                       Allocated to registers r5 r6 r7 
                                   3094 ;t                         Allocated to stack - sp -2
                                   3095 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   3096 ;current_off_time          Allocated to registers r4 r3 
                                   3097 ;sloc0                     Allocated to stack - sp -5
                                   3098 ;------------------------------------------------------------
                                   3099 ;	../../../core/net/mac/lpp.c:513: dutycycle(void *ptr)
                                   3100 ;	-----------------------------------------
                                   3101 ;	 function dutycycle
                                   3102 ;	-----------------------------------------
      000AE5                       3103 _dutycycle:
      000AE5 E5 81            [12] 3104 	mov	a,sp
      000AE7 24 06            [12] 3105 	add	a,#0x06
      000AE9 F5 81            [12] 3106 	mov	sp,a
      000AEB AD 82            [24] 3107 	mov	r5,dpl
      000AED AE 83            [24] 3108 	mov	r6,dph
      000AEF AF F0            [24] 3109 	mov	r7,b
                                   3110 ;	../../../core/net/mac/lpp.c:515: struct ctimer *t = ptr;
      000AF1 A8 81            [24] 3111 	mov	r0,sp
      000AF3 18               [12] 3112 	dec	r0
      000AF4 18               [12] 3113 	dec	r0
      000AF5 A6 05            [24] 3114 	mov	@r0,ar5
      000AF7 08               [12] 3115 	inc	r0
      000AF8 A6 06            [24] 3116 	mov	@r0,ar6
      000AFA 08               [12] 3117 	inc	r0
      000AFB A6 07            [24] 3118 	mov	@r0,ar7
                                   3119 ;	../../../core/net/mac/lpp.c:517: PT_BEGIN(&dutycycle_pt);
      000AFD 7C 01            [12] 3120 	mov	r4,#0x01
      000AFF 90r00r09         [24] 3121 	mov	dptr,#_dutycycle_pt
      000B02 E0               [24] 3122 	movx	a,@dptr
      000B03 FA               [12] 3123 	mov	r2,a
      000B04 A3               [24] 3124 	inc	dptr
      000B05 E0               [24] 3125 	movx	a,@dptr
      000B06 FB               [12] 3126 	mov	r3,a
      000B07 BA 00 05         [24] 3127 	cjne	r2,#0x00,00198$
      000B0A BB 00 02         [24] 3128 	cjne	r3,#0x00,00198$
      000B0D 80 27            [24] 3129 	sjmp	00137$
      000B0F                       3130 00198$:
      000B0F BA 21 06         [24] 3131 	cjne	r2,#0x21,00199$
      000B12 BB 02 03         [24] 3132 	cjne	r3,#0x02,00199$
      000B15 02r0Br95         [24] 3133 	ljmp	00102$
      000B18                       3134 00199$:
      000B18 BA 48 06         [24] 3135 	cjne	r2,#0x48,00200$
      000B1B BB 02 03         [24] 3136 	cjne	r3,#0x02,00200$
      000B1E 02r0Cr89         [24] 3137 	ljmp	00112$
      000B21                       3138 00200$:
      000B21 BA 56 06         [24] 3139 	cjne	r2,#0x56,00201$
      000B24 BB 02 03         [24] 3140 	cjne	r3,#0x02,00201$
      000B27 02r0CrE8         [24] 3141 	ljmp	00118$
      000B2A                       3142 00201$:
      000B2A BA 5C 06         [24] 3143 	cjne	r2,#0x5c,00202$
      000B2D BB 02 03         [24] 3144 	cjne	r3,#0x02,00202$
      000B30 02r0Dr43         [24] 3145 	ljmp	00127$
      000B33                       3146 00202$:
      000B33 02r0Dr4E         [24] 3147 	ljmp	00139$
                                   3148 ;	../../../core/net/mac/lpp.c:519: while(1) {
      000B36                       3149 00137$:
                                   3150 ;	../../../core/net/mac/lpp.c:538: turn_radio_on();
      000B36 78r00            [12] 3151 	mov	r0,#_turn_radio_on
      000B38 79s00            [12] 3152 	mov	r1,#(_turn_radio_on >> 8)
      000B3A 7As00            [12] 3153 	mov	r2,#(_turn_radio_on >> 16)
      000B3C 12r00r00         [24] 3154 	lcall	__sdcc_banked_call
                                   3155 ;	../../../core/net/mac/lpp.c:541: send_probe();
      000B3F 78r0F            [12] 3156 	mov	r0,#_send_probe
      000B41 79s07            [12] 3157 	mov	r1,#(_send_probe >> 8)
      000B43 7As00            [12] 3158 	mov	r2,#(_send_probe >> 16)
      000B45 12r00r00         [24] 3159 	lcall	__sdcc_banked_call
                                   3160 ;	../../../core/net/mac/lpp.c:544: ctimer_set(t, LISTEN_TIME, (void (*)(void *))dutycycle, t);
      000B48 A8 81            [24] 3161 	mov	r0,sp
      000B4A 18               [12] 3162 	dec	r0
      000B4B 18               [12] 3163 	dec	r0
      000B4C 86 04            [24] 3164 	mov	ar4,@r0
      000B4E 08               [12] 3165 	inc	r0
      000B4F 86 03            [24] 3166 	mov	ar3,@r0
      000B51 08               [12] 3167 	inc	r0
      000B52 86 02            [24] 3168 	mov	ar2,@r0
      000B54 7DrE5            [12] 3169 	mov	r5,#_dutycycle
      000B56 7Es0A            [12] 3170 	mov	r6,#(_dutycycle >> 8)
      000B58 7Fs00            [12] 3171 	mov	r7,#(_dutycycle >> 16)
      000B5A C0 04            [24] 3172 	push	ar4
      000B5C C0 03            [24] 3173 	push	ar3
      000B5E C0 02            [24] 3174 	push	ar2
      000B60 C0 05            [24] 3175 	push	ar5
      000B62 C0 06            [24] 3176 	push	ar6
      000B64 C0 07            [24] 3177 	push	ar7
      000B66 74 01            [12] 3178 	mov	a,#0x01
      000B68 C0 E0            [24] 3179 	push	acc
      000B6A E4               [12] 3180 	clr	a
      000B6B C0 E0            [24] 3181 	push	acc
      000B6D E5 81            [12] 3182 	mov	a,sp
      000B6F 24 F6            [12] 3183 	add	a,#0xf6
      000B71 F8               [12] 3184 	mov	r0,a
      000B72 86 82            [24] 3185 	mov	dpl,@r0
      000B74 08               [12] 3186 	inc	r0
      000B75 86 83            [24] 3187 	mov	dph,@r0
      000B77 08               [12] 3188 	inc	r0
      000B78 86 F0            [24] 3189 	mov	b,@r0
      000B7A 78r00            [12] 3190 	mov	r0,#_ctimer_set
      000B7C 79s00            [12] 3191 	mov	r1,#(_ctimer_set >> 8)
      000B7E 7As00            [12] 3192 	mov	r2,#(_ctimer_set >> 16)
      000B80 12r00r00         [24] 3193 	lcall	__sdcc_banked_call
      000B83 E5 81            [12] 3194 	mov	a,sp
      000B85 24 F8            [12] 3195 	add	a,#0xf8
      000B87 F5 81            [12] 3196 	mov	sp,a
                                   3197 ;	../../../core/net/mac/lpp.c:545: PT_YIELD(&dutycycle_pt);
      000B89 7C 00            [12] 3198 	mov	r4,#0x00
      000B8B 90r00r09         [24] 3199 	mov	dptr,#_dutycycle_pt
      000B8E 74 21            [12] 3200 	mov	a,#0x21
      000B90 F0               [24] 3201 	movx	@dptr,a
      000B91 74 02            [12] 3202 	mov	a,#0x02
      000B93 A3               [24] 3203 	inc	dptr
      000B94 F0               [24] 3204 	movx	@dptr,a
      000B95                       3205 00102$:
      000B95 EC               [12] 3206 	mov	a,r4
      000B96 70 06            [24] 3207 	jnz	00106$
      000B98 90 00 01         [24] 3208 	mov	dptr,#0x0001
      000B9B 02r0Dr58         [24] 3209 	ljmp	00140$
      000B9E                       3210 00106$:
                                   3211 ;	../../../core/net/mac/lpp.c:568: if(num_packets_to_send() == 0) {
      000B9E 78rC4            [12] 3212 	mov	r0,#_num_packets_to_send
      000BA0 79s0A            [12] 3213 	mov	r1,#(_num_packets_to_send >> 8)
      000BA2 7As00            [12] 3214 	mov	r2,#(_num_packets_to_send >> 16)
      000BA4 12r00r00         [24] 3215 	lcall	__sdcc_banked_call
      000BA7 E5 82            [12] 3216 	mov	a,dpl
      000BA9 85 83 F0         [24] 3217 	mov	b,dph
      000BAC 45 F0            [12] 3218 	orl	a,b
      000BAE 60 03            [24] 3219 	jz	00204$
      000BB0 02r0CrF3         [24] 3220 	ljmp	00134$
      000BB3                       3221 00204$:
                                   3222 ;	../../../core/net/mac/lpp.c:572: if(is_listening == 0) {
      000BB3 90r00r00         [24] 3223 	mov	dptr,#_is_listening
      000BB6 E0               [24] 3224 	movx	a,@dptr
      000BB7 60 03            [24] 3225 	jz	00205$
      000BB9 02r0Cr95         [24] 3226 	ljmp	00125$
      000BBC                       3227 00205$:
                                   3228 ;	../../../core/net/mac/lpp.c:574: if(!NETSTACK_RADIO.receiving_packet()) {
      000BBC 90r00r12         [24] 3229 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      000BBF E4               [12] 3230 	clr	a
      000BC0 93               [24] 3231 	movc	a,@a+dptr
      000BC1 FD               [12] 3232 	mov	r5,a
      000BC2 A3               [24] 3233 	inc	dptr
      000BC3 E4               [12] 3234 	clr	a
      000BC4 93               [24] 3235 	movc	a,@a+dptr
      000BC5 FE               [12] 3236 	mov	r6,a
      000BC6 A3               [24] 3237 	inc	dptr
      000BC7 E4               [12] 3238 	clr	a
      000BC8 93               [24] 3239 	movc	a,@a+dptr
      000BC9 FF               [12] 3240 	mov	r7,a
      000BCA C0 07            [24] 3241 	push	ar7
      000BCC C0 05            [24] 3242 	push	ar5
      000BCE C0 06            [24] 3243 	push	ar6
      000BD0 C0 07            [24] 3244 	push	ar7
      000BD2 D0 02            [24] 3245 	pop	ar2
      000BD4 D0 01            [24] 3246 	pop	ar1
      000BD6 D0 00            [24] 3247 	pop	ar0
      000BD8 12r00r00         [24] 3248 	lcall	__sdcc_banked_call
      000BDB AD 82            [24] 3249 	mov	r5,dpl
      000BDD AE 83            [24] 3250 	mov	r6,dph
      000BDF D0 07            [24] 3251 	pop	ar7
      000BE1 ED               [12] 3252 	mov	a,r5
      000BE2 4E               [12] 3253 	orl	a,r6
      000BE3 70 18            [24] 3254 	jnz	00109$
                                   3255 ;	../../../core/net/mac/lpp.c:575: turn_radio_off();
      000BE5 78r2C            [12] 3256 	mov	r0,#_turn_radio_off
      000BE7 79s00            [12] 3257 	mov	r1,#(_turn_radio_off >> 8)
      000BE9 7As00            [12] 3258 	mov	r2,#(_turn_radio_off >> 16)
      000BEB 12r00r00         [24] 3259 	lcall	__sdcc_banked_call
                                   3260 ;	../../../core/net/mac/lpp.c:576: compower_accumulate(&compower_idle_activity);
      000BEE 90r00r00         [24] 3261 	mov	dptr,#_compower_idle_activity
      000BF1 75 F0 00         [24] 3262 	mov	b,#0x00
      000BF4 78r00            [12] 3263 	mov	r0,#_compower_accumulate
      000BF6 79s00            [12] 3264 	mov	r1,#(_compower_accumulate >> 8)
      000BF8 7As00            [12] 3265 	mov	r2,#(_compower_accumulate >> 16)
      000BFA 12r00r00         [24] 3266 	lcall	__sdcc_banked_call
      000BFD                       3267 00109$:
                                   3268 ;	../../../core/net/mac/lpp.c:578: current_off_time = off_time - off_time_adjustment;
      000BFD 90r00r01         [24] 3269 	mov	dptr,#_off_time_adjustment
      000C00 E0               [24] 3270 	movx	a,@dptr
      000C01 FE               [12] 3271 	mov	r6,a
      000C02 A3               [24] 3272 	inc	dptr
      000C03 E0               [24] 3273 	movx	a,@dptr
      000C04 FF               [12] 3274 	mov	r7,a
      000C05 90r00r03         [24] 3275 	mov	dptr,#_off_time
      000C08 E0               [24] 3276 	movx	a,@dptr
      000C09 FB               [12] 3277 	mov	r3,a
      000C0A A3               [24] 3278 	inc	dptr
      000C0B E0               [24] 3279 	movx	a,@dptr
      000C0C FD               [12] 3280 	mov	r5,a
      000C0D EB               [12] 3281 	mov	a,r3
      000C0E C3               [12] 3282 	clr	c
      000C0F 9E               [12] 3283 	subb	a,r6
      000C10 FE               [12] 3284 	mov	r6,a
      000C11 ED               [12] 3285 	mov	a,r5
      000C12 9F               [12] 3286 	subb	a,r7
      000C13 FF               [12] 3287 	mov	r7,a
      000C14 8E 04            [24] 3288 	mov	ar4,r6
      000C16 8F 03            [24] 3289 	mov	ar3,r7
                                   3290 ;	../../../core/net/mac/lpp.c:579: if(current_off_time < LISTEN_TIME * 2) {
      000C18 C3               [12] 3291 	clr	c
      000C19 EC               [12] 3292 	mov	a,r4
      000C1A 94 02            [12] 3293 	subb	a,#0x02
      000C1C EB               [12] 3294 	mov	a,r3
      000C1D 64 80            [12] 3295 	xrl	a,#0x80
      000C1F 94 80            [12] 3296 	subb	a,#0x80
      000C21 50 04            [24] 3297 	jnc	00111$
                                   3298 ;	../../../core/net/mac/lpp.c:580: current_off_time = LISTEN_TIME * 2;
      000C23 7C 02            [12] 3299 	mov	r4,#0x02
      000C25 7B 00            [12] 3300 	mov	r3,#0x00
      000C27                       3301 00111$:
                                   3302 ;	../../../core/net/mac/lpp.c:582: off_time_adjustment = 0;
      000C27 90r00r01         [24] 3303 	mov	dptr,#_off_time_adjustment
      000C2A E4               [12] 3304 	clr	a
      000C2B F0               [24] 3305 	movx	@dptr,a
      000C2C A3               [24] 3306 	inc	dptr
      000C2D F0               [24] 3307 	movx	@dptr,a
                                   3308 ;	../../../core/net/mac/lpp.c:583: ctimer_set(t, current_off_time, (void (*)(void *))dutycycle, t);
      000C2E A8 81            [24] 3309 	mov	r0,sp
      000C30 18               [12] 3310 	dec	r0
      000C31 18               [12] 3311 	dec	r0
      000C32 E5 81            [12] 3312 	mov	a,sp
      000C34 24 FB            [12] 3313 	add	a,#0xfb
      000C36 F9               [12] 3314 	mov	r1,a
      000C37 E6               [12] 3315 	mov	a,@r0
      000C38 F7               [12] 3316 	mov	@r1,a
      000C39 08               [12] 3317 	inc	r0
      000C3A 09               [12] 3318 	inc	r1
      000C3B E6               [12] 3319 	mov	a,@r0
      000C3C F7               [12] 3320 	mov	@r1,a
      000C3D 08               [12] 3321 	inc	r0
      000C3E 09               [12] 3322 	inc	r1
      000C3F E6               [12] 3323 	mov	a,@r0
      000C40 F7               [12] 3324 	mov	@r1,a
      000C41 7DrE5            [12] 3325 	mov	r5,#_dutycycle
      000C43 7Es0A            [12] 3326 	mov	r6,#(_dutycycle >> 8)
      000C45 7Fs00            [12] 3327 	mov	r7,#(_dutycycle >> 16)
      000C47 E5 81            [12] 3328 	mov	a,sp
      000C49 24 FB            [12] 3329 	add	a,#0xfb
      000C4B F8               [12] 3330 	mov	r0,a
      000C4C E6               [12] 3331 	mov	a,@r0
      000C4D C0 E0            [24] 3332 	push	acc
      000C4F 08               [12] 3333 	inc	r0
      000C50 E6               [12] 3334 	mov	a,@r0
      000C51 C0 E0            [24] 3335 	push	acc
      000C53 08               [12] 3336 	inc	r0
      000C54 E6               [12] 3337 	mov	a,@r0
      000C55 C0 E0            [24] 3338 	push	acc
      000C57 C0 05            [24] 3339 	push	ar5
      000C59 C0 06            [24] 3340 	push	ar6
      000C5B C0 07            [24] 3341 	push	ar7
      000C5D C0 04            [24] 3342 	push	ar4
      000C5F C0 03            [24] 3343 	push	ar3
      000C61 E5 81            [12] 3344 	mov	a,sp
      000C63 24 F6            [12] 3345 	add	a,#0xf6
      000C65 F8               [12] 3346 	mov	r0,a
      000C66 86 82            [24] 3347 	mov	dpl,@r0
      000C68 08               [12] 3348 	inc	r0
      000C69 86 83            [24] 3349 	mov	dph,@r0
      000C6B 08               [12] 3350 	inc	r0
      000C6C 86 F0            [24] 3351 	mov	b,@r0
      000C6E 78r00            [12] 3352 	mov	r0,#_ctimer_set
      000C70 79s00            [12] 3353 	mov	r1,#(_ctimer_set >> 8)
      000C72 7As00            [12] 3354 	mov	r2,#(_ctimer_set >> 16)
      000C74 12r00r00         [24] 3355 	lcall	__sdcc_banked_call
      000C77 E5 81            [12] 3356 	mov	a,sp
      000C79 24 F8            [12] 3357 	add	a,#0xf8
      000C7B F5 81            [12] 3358 	mov	sp,a
                                   3359 ;	../../../core/net/mac/lpp.c:584: PT_YIELD(&dutycycle_pt);
      000C7D 7C 00            [12] 3360 	mov	r4,#0x00
      000C7F 90r00r09         [24] 3361 	mov	dptr,#_dutycycle_pt
      000C82 74 48            [12] 3362 	mov	a,#0x48
      000C84 F0               [24] 3363 	movx	@dptr,a
      000C85 74 02            [12] 3364 	mov	a,#0x02
      000C87 A3               [24] 3365 	inc	dptr
      000C88 F0               [24] 3366 	movx	@dptr,a
      000C89                       3367 00112$:
      000C89 EC               [12] 3368 	mov	a,r4
      000C8A 60 03            [24] 3369 	jz	00208$
      000C8C 02r0Br36         [24] 3370 	ljmp	00137$
      000C8F                       3371 00208$:
      000C8F 90 00 01         [24] 3372 	mov	dptr,#0x0001
      000C92 02r0Dr58         [24] 3373 	ljmp	00140$
      000C95                       3374 00125$:
                                   3375 ;	../../../core/net/mac/lpp.c:596: is_listening--;
      000C95 90r00r00         [24] 3376 	mov	dptr,#_is_listening
      000C98 E0               [24] 3377 	movx	a,@dptr
      000C99 14               [12] 3378 	dec	a
      000C9A F0               [24] 3379 	movx	@dptr,a
                                   3380 ;	../../../core/net/mac/lpp.c:597: ctimer_set(t, OFF_TIME, (void (*)(void *))dutycycle, t);
      000C9B A8 81            [24] 3381 	mov	r0,sp
      000C9D 18               [12] 3382 	dec	r0
      000C9E 18               [12] 3383 	dec	r0
      000C9F 86 05            [24] 3384 	mov	ar5,@r0
      000CA1 08               [12] 3385 	inc	r0
      000CA2 86 06            [24] 3386 	mov	ar6,@r0
      000CA4 08               [12] 3387 	inc	r0
      000CA5 86 04            [24] 3388 	mov	ar4,@r0
      000CA7 7ArE5            [12] 3389 	mov	r2,#_dutycycle
      000CA9 7Bs0A            [12] 3390 	mov	r3,#(_dutycycle >> 8)
      000CAB 7Fs00            [12] 3391 	mov	r7,#(_dutycycle >> 16)
      000CAD C0 05            [24] 3392 	push	ar5
      000CAF C0 06            [24] 3393 	push	ar6
      000CB1 C0 04            [24] 3394 	push	ar4
      000CB3 C0 02            [24] 3395 	push	ar2
      000CB5 C0 03            [24] 3396 	push	ar3
      000CB7 C0 07            [24] 3397 	push	ar7
      000CB9 74 0F            [12] 3398 	mov	a,#0x0f
      000CBB C0 E0            [24] 3399 	push	acc
      000CBD E4               [12] 3400 	clr	a
      000CBE C0 E0            [24] 3401 	push	acc
      000CC0 E5 81            [12] 3402 	mov	a,sp
      000CC2 24 F6            [12] 3403 	add	a,#0xf6
      000CC4 F8               [12] 3404 	mov	r0,a
      000CC5 86 82            [24] 3405 	mov	dpl,@r0
      000CC7 08               [12] 3406 	inc	r0
      000CC8 86 83            [24] 3407 	mov	dph,@r0
      000CCA 08               [12] 3408 	inc	r0
      000CCB 86 F0            [24] 3409 	mov	b,@r0
      000CCD 78r00            [12] 3410 	mov	r0,#_ctimer_set
      000CCF 79s00            [12] 3411 	mov	r1,#(_ctimer_set >> 8)
      000CD1 7As00            [12] 3412 	mov	r2,#(_ctimer_set >> 16)
      000CD3 12r00r00         [24] 3413 	lcall	__sdcc_banked_call
      000CD6 E5 81            [12] 3414 	mov	a,sp
      000CD8 24 F8            [12] 3415 	add	a,#0xf8
      000CDA F5 81            [12] 3416 	mov	sp,a
                                   3417 ;	../../../core/net/mac/lpp.c:598: PT_YIELD(&dutycycle_pt);
      000CDC 7C 00            [12] 3418 	mov	r4,#0x00
      000CDE 90r00r09         [24] 3419 	mov	dptr,#_dutycycle_pt
      000CE1 74 56            [12] 3420 	mov	a,#0x56
      000CE3 F0               [24] 3421 	movx	@dptr,a
      000CE4 74 02            [12] 3422 	mov	a,#0x02
      000CE6 A3               [24] 3423 	inc	dptr
      000CE7 F0               [24] 3424 	movx	@dptr,a
      000CE8                       3425 00118$:
      000CE8 EC               [12] 3426 	mov	a,r4
      000CE9 60 03            [24] 3427 	jz	00209$
      000CEB 02r0Br36         [24] 3428 	ljmp	00137$
      000CEE                       3429 00209$:
      000CEE 90 00 01         [24] 3430 	mov	dptr,#0x0001
      000CF1 80 65            [24] 3431 	sjmp	00140$
      000CF3                       3432 00134$:
                                   3433 ;	../../../core/net/mac/lpp.c:603: ctimer_set(t, off_time, (void (*)(void *))dutycycle, t);
      000CF3 A8 81            [24] 3434 	mov	r0,sp
      000CF5 18               [12] 3435 	dec	r0
      000CF6 18               [12] 3436 	dec	r0
      000CF7 86 05            [24] 3437 	mov	ar5,@r0
      000CF9 08               [12] 3438 	inc	r0
      000CFA 86 06            [24] 3439 	mov	ar6,@r0
      000CFC 08               [12] 3440 	inc	r0
      000CFD 86 04            [24] 3441 	mov	ar4,@r0
      000CFF 7ArE5            [12] 3442 	mov	r2,#_dutycycle
      000D01 7Bs0A            [12] 3443 	mov	r3,#(_dutycycle >> 8)
      000D03 7Fs00            [12] 3444 	mov	r7,#(_dutycycle >> 16)
      000D05 C0 05            [24] 3445 	push	ar5
      000D07 C0 06            [24] 3446 	push	ar6
      000D09 C0 04            [24] 3447 	push	ar4
      000D0B C0 02            [24] 3448 	push	ar2
      000D0D C0 03            [24] 3449 	push	ar3
      000D0F C0 07            [24] 3450 	push	ar7
      000D11 90r00r03         [24] 3451 	mov	dptr,#_off_time
      000D14 E0               [24] 3452 	movx	a,@dptr
      000D15 C0 E0            [24] 3453 	push	acc
      000D17 A3               [24] 3454 	inc	dptr
      000D18 E0               [24] 3455 	movx	a,@dptr
      000D19 C0 E0            [24] 3456 	push	acc
      000D1B E5 81            [12] 3457 	mov	a,sp
      000D1D 24 F6            [12] 3458 	add	a,#0xf6
      000D1F F8               [12] 3459 	mov	r0,a
      000D20 86 82            [24] 3460 	mov	dpl,@r0
      000D22 08               [12] 3461 	inc	r0
      000D23 86 83            [24] 3462 	mov	dph,@r0
      000D25 08               [12] 3463 	inc	r0
      000D26 86 F0            [24] 3464 	mov	b,@r0
      000D28 78r00            [12] 3465 	mov	r0,#_ctimer_set
      000D2A 79s00            [12] 3466 	mov	r1,#(_ctimer_set >> 8)
      000D2C 7As00            [12] 3467 	mov	r2,#(_ctimer_set >> 16)
      000D2E 12r00r00         [24] 3468 	lcall	__sdcc_banked_call
      000D31 E5 81            [12] 3469 	mov	a,sp
      000D33 24 F8            [12] 3470 	add	a,#0xf8
      000D35 F5 81            [12] 3471 	mov	sp,a
                                   3472 ;	../../../core/net/mac/lpp.c:604: PT_YIELD(&dutycycle_pt);
      000D37 7C 00            [12] 3473 	mov	r4,#0x00
      000D39 90r00r09         [24] 3474 	mov	dptr,#_dutycycle_pt
      000D3C 74 5C            [12] 3475 	mov	a,#0x5c
      000D3E F0               [24] 3476 	movx	@dptr,a
      000D3F 74 02            [12] 3477 	mov	a,#0x02
      000D41 A3               [24] 3478 	inc	dptr
      000D42 F0               [24] 3479 	movx	@dptr,a
      000D43                       3480 00127$:
      000D43 EC               [12] 3481 	mov	a,r4
      000D44 60 03            [24] 3482 	jz	00210$
      000D46 02r0Br36         [24] 3483 	ljmp	00137$
      000D49                       3484 00210$:
      000D49 90 00 01         [24] 3485 	mov	dptr,#0x0001
                                   3486 ;	../../../core/net/mac/lpp.c:608: PT_END(&dutycycle_pt);
      000D4C 80 0A            [24] 3487 	sjmp	00140$
      000D4E                       3488 00139$:
      000D4E 90r00r09         [24] 3489 	mov	dptr,#_dutycycle_pt
      000D51 E4               [12] 3490 	clr	a
      000D52 F0               [24] 3491 	movx	@dptr,a
      000D53 A3               [24] 3492 	inc	dptr
      000D54 F0               [24] 3493 	movx	@dptr,a
      000D55 90 00 03         [24] 3494 	mov	dptr,#0x0003
      000D58                       3495 00140$:
                                   3496 ;	../../../core/net/mac/lpp.c:609: }
      000D58 E5 81            [12] 3497 	mov	a,sp
      000D5A 24 FA            [12] 3498 	add	a,#0xfa
      000D5C F5 81            [12] 3499 	mov	sp,a
      000D5E 02r00r00         [24] 3500 	ljmp	__sdcc_banked_ret
                                   3501 ;------------------------------------------------------------
                                   3502 ;Allocation info for local variables in function 'restart_dutycycle'
                                   3503 ;------------------------------------------------------------
                                   3504 ;initial_wait              Allocated to registers r6 r7 
                                   3505 ;------------------------------------------------------------
                                   3506 ;	../../../core/net/mac/lpp.c:612: restart_dutycycle(clock_time_t initial_wait)
                                   3507 ;	-----------------------------------------
                                   3508 ;	 function restart_dutycycle
                                   3509 ;	-----------------------------------------
      000D61                       3510 _restart_dutycycle:
      000D61 AE 82            [24] 3511 	mov	r6,dpl
      000D63 AF 83            [24] 3512 	mov	r7,dph
                                   3513 ;	../../../core/net/mac/lpp.c:614: PT_INIT(&dutycycle_pt);
      000D65 90r00r09         [24] 3514 	mov	dptr,#_dutycycle_pt
      000D68 E4               [12] 3515 	clr	a
      000D69 F0               [24] 3516 	movx	@dptr,a
      000D6A A3               [24] 3517 	inc	dptr
      000D6B F0               [24] 3518 	movx	@dptr,a
                                   3519 ;	../../../core/net/mac/lpp.c:615: ctimer_set(&timer, initial_wait, (void (*)(void *))dutycycle, &timer);  
      000D6C 7BrE5            [12] 3520 	mov	r3,#_dutycycle
      000D6E 7Cs0A            [12] 3521 	mov	r4,#(_dutycycle >> 8)
      000D70 7Ds00            [12] 3522 	mov	r5,#(_dutycycle >> 16)
      000D72 74r0B            [12] 3523 	mov	a,#_timer
      000D74 C0 E0            [24] 3524 	push	acc
      000D76 74s00            [12] 3525 	mov	a,#(_timer >> 8)
      000D78 C0 E0            [24] 3526 	push	acc
      000D7A E4               [12] 3527 	clr	a
      000D7B C0 E0            [24] 3528 	push	acc
      000D7D C0 03            [24] 3529 	push	ar3
      000D7F C0 04            [24] 3530 	push	ar4
      000D81 C0 05            [24] 3531 	push	ar5
      000D83 C0 06            [24] 3532 	push	ar6
      000D85 C0 07            [24] 3533 	push	ar7
      000D87 90r00r0B         [24] 3534 	mov	dptr,#_timer
      000D8A 75 F0 00         [24] 3535 	mov	b,#0x00
      000D8D 78r00            [12] 3536 	mov	r0,#_ctimer_set
      000D8F 79s00            [12] 3537 	mov	r1,#(_ctimer_set >> 8)
      000D91 7As00            [12] 3538 	mov	r2,#(_ctimer_set >> 16)
      000D93 12r00r00         [24] 3539 	lcall	__sdcc_banked_call
      000D96 E5 81            [12] 3540 	mov	a,sp
      000D98 24 F8            [12] 3541 	add	a,#0xf8
      000D9A F5 81            [12] 3542 	mov	sp,a
                                   3543 ;	../../../core/net/mac/lpp.c:616: }
      000D9C 02r00r00         [24] 3544 	ljmp	__sdcc_banked_ret
                                   3545 ;------------------------------------------------------------
                                   3546 ;Allocation info for local variables in function 'send_packet'
                                   3547 ;------------------------------------------------------------
                                   3548 ;ptr                       Allocated to stack - sp -35
                                   3549 ;sent                      Allocated to stack - sp -29
                                   3550 ;hdr                       Allocated to stack - sp -23
                                   3551 ;timeout                   Allocated to stack - sp -5
                                   3552 ;is_broadcast              Allocated to stack - sp -3
                                   3553 ;hdrlen                    Allocated to registers r5 r6 
                                   3554 ;i                         Allocated to stack - sp -2
                                   3555 ;sloc0                     Allocated to stack - sp -26
                                   3556 ;------------------------------------------------------------
                                   3557 ;	../../../core/net/mac/lpp.c:633: send_packet(mac_callback_t sent, void *ptr)
                                   3558 ;	-----------------------------------------
                                   3559 ;	 function send_packet
                                   3560 ;	-----------------------------------------
      000D9F                       3561 _send_packet:
      000D9F C0 82            [24] 3562 	push	dpl
      000DA1 C0 83            [24] 3563 	push	dph
      000DA3 C0 F0            [24] 3564 	push	b
      000DA5 E5 81            [12] 3565 	mov	a,sp
      000DA7 24 1B            [12] 3566 	add	a,#0x1b
                                   3567 ;	../../../core/net/mac/lpp.c:637: uint8_t is_broadcast = 0;
      000DA9 F5 81            [12] 3568 	mov	sp,a
      000DAB 24 FD            [12] 3569 	add	a,#0xfd
      000DAD F8               [12] 3570 	mov	r0,a
      000DAE 76 00            [12] 3571 	mov	@r0,#0x00
                                   3572 ;	../../../core/net/mac/lpp.c:639: rimeaddr_copy(&hdr.sender, &rimeaddr_node_addr);
      000DB0 E5 81            [12] 3573 	mov	a,sp
      000DB2 24 E9            [12] 3574 	add	a,#0xe9
      000DB4 FB               [12] 3575 	mov	r3,a
      000DB5 24 02            [12] 3576 	add	a,#0x02
      000DB7 FA               [12] 3577 	mov	r2,a
      000DB8 7C 00            [12] 3578 	mov	r4,#0x00
      000DBA 7F 40            [12] 3579 	mov	r7,#0x40
      000DBC C0 03            [24] 3580 	push	ar3
      000DBE 74r00            [12] 3581 	mov	a,#_rimeaddr_node_addr
      000DC0 C0 E0            [24] 3582 	push	acc
      000DC2 74s00            [12] 3583 	mov	a,#(_rimeaddr_node_addr >> 8)
      000DC4 C0 E0            [24] 3584 	push	acc
      000DC6 E4               [12] 3585 	clr	a
      000DC7 C0 E0            [24] 3586 	push	acc
      000DC9 8A 82            [24] 3587 	mov	dpl,r2
      000DCB 8C 83            [24] 3588 	mov	dph,r4
      000DCD 8F F0            [24] 3589 	mov	b,r7
      000DCF 78r00            [12] 3590 	mov	r0,#_rimeaddr_copy
      000DD1 79s00            [12] 3591 	mov	r1,#(_rimeaddr_copy >> 8)
      000DD3 7As00            [12] 3592 	mov	r2,#(_rimeaddr_copy >> 16)
      000DD5 12r00r00         [24] 3593 	lcall	__sdcc_banked_call
      000DD8 15 81            [12] 3594 	dec	sp
      000DDA 15 81            [12] 3595 	dec	sp
      000DDC 15 81            [12] 3596 	dec	sp
                                   3597 ;	../../../core/net/mac/lpp.c:640: rimeaddr_copy(&hdr.receiver, packetbuf_addr(PACKETBUF_ADDR_RECEIVER));
      000DDE 75 82 19         [24] 3598 	mov	dpl,#0x19
      000DE1 78r00            [12] 3599 	mov	r0,#_packetbuf_addr
      000DE3 79s00            [12] 3600 	mov	r1,#(_packetbuf_addr >> 8)
      000DE5 7As00            [12] 3601 	mov	r2,#(_packetbuf_addr >> 16)
      000DE7 12r00r00         [24] 3602 	lcall	__sdcc_banked_call
      000DEA C8               [12] 3603 	xch	a,r0
      000DEB E5 81            [12] 3604 	mov	a,sp
      000DED 24 E5            [12] 3605 	add	a,#0xe5
      000DEF C8               [12] 3606 	xch	a,r0
      000DF0 A6 82            [24] 3607 	mov	@r0,dpl
      000DF2 08               [12] 3608 	inc	r0
      000DF3 A6 83            [24] 3609 	mov	@r0,dph
      000DF5 08               [12] 3610 	inc	r0
      000DF6 A6 F0            [24] 3611 	mov	@r0,b
      000DF8 D0 03            [24] 3612 	pop	ar3
      000DFA 74 0A            [12] 3613 	mov	a,#0x0a
      000DFC 2B               [12] 3614 	add	a,r3
      000DFD FB               [12] 3615 	mov	r3,a
      000DFE FA               [12] 3616 	mov	r2,a
      000DFF 7C 00            [12] 3617 	mov	r4,#0x00
      000E01 7F 40            [12] 3618 	mov	r7,#0x40
      000E03 C0 03            [24] 3619 	push	ar3
      000E05 E5 81            [12] 3620 	mov	a,sp
      000E07 24 E5            [12] 3621 	add	a,#0xe5
      000E09 F8               [12] 3622 	mov	r0,a
      000E0A E6               [12] 3623 	mov	a,@r0
      000E0B C0 E0            [24] 3624 	push	acc
      000E0D 08               [12] 3625 	inc	r0
      000E0E E6               [12] 3626 	mov	a,@r0
      000E0F C0 E0            [24] 3627 	push	acc
      000E11 08               [12] 3628 	inc	r0
      000E12 E6               [12] 3629 	mov	a,@r0
      000E13 C0 E0            [24] 3630 	push	acc
      000E15 8A 82            [24] 3631 	mov	dpl,r2
      000E17 8C 83            [24] 3632 	mov	dph,r4
      000E19 8F F0            [24] 3633 	mov	b,r7
      000E1B 78r00            [12] 3634 	mov	r0,#_rimeaddr_copy
      000E1D 79s00            [12] 3635 	mov	r1,#(_rimeaddr_copy >> 8)
      000E1F 7As00            [12] 3636 	mov	r2,#(_rimeaddr_copy >> 16)
      000E21 12r00r00         [24] 3637 	lcall	__sdcc_banked_call
      000E24 15 81            [12] 3638 	dec	sp
      000E26 15 81            [12] 3639 	dec	sp
      000E28 15 81            [12] 3640 	dec	sp
      000E2A D0 03            [24] 3641 	pop	ar3
                                   3642 ;	../../../core/net/mac/lpp.c:641: if(rimeaddr_cmp(&hdr.receiver, &rimeaddr_null)) {
      000E2C 7F 00            [12] 3643 	mov	r7,#0x00
      000E2E 7E 40            [12] 3644 	mov	r6,#0x40
      000E30 74r00            [12] 3645 	mov	a,#_rimeaddr_null
      000E32 C0 E0            [24] 3646 	push	acc
      000E34 74s00            [12] 3647 	mov	a,#(_rimeaddr_null >> 8)
      000E36 C0 E0            [24] 3648 	push	acc
      000E38 74 80            [12] 3649 	mov	a,#0x80
      000E3A C0 E0            [24] 3650 	push	acc
      000E3C 8B 82            [24] 3651 	mov	dpl,r3
      000E3E 8F 83            [24] 3652 	mov	dph,r7
      000E40 8E F0            [24] 3653 	mov	b,r6
      000E42 78r00            [12] 3654 	mov	r0,#_rimeaddr_cmp
      000E44 79s00            [12] 3655 	mov	r1,#(_rimeaddr_cmp >> 8)
      000E46 7As00            [12] 3656 	mov	r2,#(_rimeaddr_cmp >> 16)
      000E48 12r00r00         [24] 3657 	lcall	__sdcc_banked_call
      000E4B AE 82            [24] 3658 	mov	r6,dpl
      000E4D AF 83            [24] 3659 	mov	r7,dph
      000E4F 15 81            [12] 3660 	dec	sp
      000E51 15 81            [12] 3661 	dec	sp
      000E53 15 81            [12] 3662 	dec	sp
      000E55 EE               [12] 3663 	mov	a,r6
      000E56 4F               [12] 3664 	orl	a,r7
      000E57 60 07            [24] 3665 	jz	00102$
                                   3666 ;	../../../core/net/mac/lpp.c:642: is_broadcast = 1;
      000E59 E5 81            [12] 3667 	mov	a,sp
      000E5B 24 FD            [12] 3668 	add	a,#0xfd
      000E5D F8               [12] 3669 	mov	r0,a
      000E5E 76 01            [12] 3670 	mov	@r0,#0x01
      000E60                       3671 00102$:
                                   3672 ;	../../../core/net/mac/lpp.c:644: hdr.type = TYPE_DATA;
      000E60 E5 81            [12] 3673 	mov	a,sp
      000E62 24 E9            [12] 3674 	add	a,#0xe9
      000E64 F8               [12] 3675 	mov	r0,a
      000E65 76 02            [12] 3676 	mov	@r0,#0x02
      000E67 08               [12] 3677 	inc	r0
      000E68 76 00            [12] 3678 	mov	@r0,#0x00
                                   3679 ;	../../../core/net/mac/lpp.c:646: packetbuf_hdralloc(sizeof(struct lpp_hdr));
      000E6A 90 00 12         [24] 3680 	mov	dptr,#0x0012
      000E6D 78r00            [12] 3681 	mov	r0,#_packetbuf_hdralloc
      000E6F 79s00            [12] 3682 	mov	r1,#(_packetbuf_hdralloc >> 8)
      000E71 7As00            [12] 3683 	mov	r2,#(_packetbuf_hdralloc >> 16)
      000E73 12r00r00         [24] 3684 	lcall	__sdcc_banked_call
                                   3685 ;	../../../core/net/mac/lpp.c:647: memcpy(packetbuf_hdrptr(), &hdr, sizeof(struct lpp_hdr));
      000E76 E5 81            [12] 3686 	mov	a,sp
      000E78 24 E9            [12] 3687 	add	a,#0xe9
      000E7A FF               [12] 3688 	mov	r7,a
      000E7B 7E 00            [12] 3689 	mov	r6,#0x00
      000E7D 7D 40            [12] 3690 	mov	r5,#0x40
      000E7F C0 07            [24] 3691 	push	ar7
      000E81 C0 06            [24] 3692 	push	ar6
      000E83 C0 05            [24] 3693 	push	ar5
      000E85 78r00            [12] 3694 	mov	r0,#_packetbuf_hdrptr
      000E87 79s00            [12] 3695 	mov	r1,#(_packetbuf_hdrptr >> 8)
      000E89 7As00            [12] 3696 	mov	r2,#(_packetbuf_hdrptr >> 16)
      000E8B 12r00r00         [24] 3697 	lcall	__sdcc_banked_call
      000E8E AA 82            [24] 3698 	mov	r2,dpl
      000E90 AB 83            [24] 3699 	mov	r3,dph
      000E92 AC F0            [24] 3700 	mov	r4,b
      000E94 D0 05            [24] 3701 	pop	ar5
      000E96 D0 06            [24] 3702 	pop	ar6
      000E98 D0 07            [24] 3703 	pop	ar7
      000E9A 74 12            [12] 3704 	mov	a,#0x12
      000E9C C0 E0            [24] 3705 	push	acc
      000E9E E4               [12] 3706 	clr	a
      000E9F C0 E0            [24] 3707 	push	acc
      000EA1 C0 07            [24] 3708 	push	ar7
      000EA3 C0 06            [24] 3709 	push	ar6
      000EA5 C0 05            [24] 3710 	push	ar5
      000EA7 8A 82            [24] 3711 	mov	dpl,r2
      000EA9 8B 83            [24] 3712 	mov	dph,r3
      000EAB 8C F0            [24] 3713 	mov	b,r4
      000EAD 78r00            [12] 3714 	mov	r0,#___memcpy
      000EAF 79s00            [12] 3715 	mov	r1,#(___memcpy >> 8)
      000EB1 7As00            [12] 3716 	mov	r2,#(___memcpy >> 16)
      000EB3 12r00r00         [24] 3717 	lcall	__sdcc_banked_call
      000EB6 E5 81            [12] 3718 	mov	a,sp
      000EB8 24 FB            [12] 3719 	add	a,#0xfb
      000EBA F5 81            [12] 3720 	mov	sp,a
                                   3721 ;	../../../core/net/mac/lpp.c:648: packetbuf_compact();
      000EBC 78r00            [12] 3722 	mov	r0,#_packetbuf_compact
      000EBE 79s00            [12] 3723 	mov	r1,#(_packetbuf_compact >> 8)
      000EC0 7As00            [12] 3724 	mov	r2,#(_packetbuf_compact >> 16)
      000EC2 12r00r00         [24] 3725 	lcall	__sdcc_banked_call
                                   3726 ;	../../../core/net/mac/lpp.c:650: packetbuf_set_attr(PACKETBUF_ATTR_MAC_ACK, 1);
      000EC5 74 01            [12] 3727 	mov	a,#0x01
      000EC7 C0 E0            [24] 3728 	push	acc
      000EC9 E4               [12] 3729 	clr	a
      000ECA C0 E0            [24] 3730 	push	acc
      000ECC 75 82 0B         [24] 3731 	mov	dpl,#0x0b
      000ECF 78r00            [12] 3732 	mov	r0,#_packetbuf_set_attr
      000ED1 79s00            [12] 3733 	mov	r1,#(_packetbuf_set_attr >> 8)
      000ED3 7As00            [12] 3734 	mov	r2,#(_packetbuf_set_attr >> 16)
      000ED5 12r00r00         [24] 3735 	lcall	__sdcc_banked_call
      000ED8 15 81            [12] 3736 	dec	sp
      000EDA 15 81            [12] 3737 	dec	sp
                                   3738 ;	../../../core/net/mac/lpp.c:653: int hdrlen = NETSTACK_FRAMER.create();
      000EDC 90r00r00         [24] 3739 	mov	dptr,#_framer_802154
      000EDF E4               [12] 3740 	clr	a
      000EE0 93               [24] 3741 	movc	a,@a+dptr
      000EE1 FD               [12] 3742 	mov	r5,a
      000EE2 A3               [24] 3743 	inc	dptr
      000EE3 E4               [12] 3744 	clr	a
      000EE4 93               [24] 3745 	movc	a,@a+dptr
      000EE5 FE               [12] 3746 	mov	r6,a
      000EE6 A3               [24] 3747 	inc	dptr
      000EE7 E4               [12] 3748 	clr	a
      000EE8 93               [24] 3749 	movc	a,@a+dptr
      000EE9 FF               [12] 3750 	mov	r7,a
      000EEA C0 07            [24] 3751 	push	ar7
      000EEC C0 05            [24] 3752 	push	ar5
      000EEE C0 06            [24] 3753 	push	ar6
      000EF0 C0 07            [24] 3754 	push	ar7
      000EF2 D0 02            [24] 3755 	pop	ar2
      000EF4 D0 01            [24] 3756 	pop	ar1
      000EF6 D0 00            [24] 3757 	pop	ar0
      000EF8 12r00r00         [24] 3758 	lcall	__sdcc_banked_call
      000EFB AD 82            [24] 3759 	mov	r5,dpl
      000EFD AE 83            [24] 3760 	mov	r6,dph
      000EFF D0 07            [24] 3761 	pop	ar7
                                   3762 ;	../../../core/net/mac/lpp.c:654: if(hdrlen < 0) {
      000F01 EE               [12] 3763 	mov	a,r6
      000F02 30 E7 45         [24] 3764 	jnb	acc.7,00109$
                                   3765 ;	../../../core/net/mac/lpp.c:656: mac_call_sent_callback(sent, ptr, MAC_TX_ERR_FATAL, 0);
      000F05 E5 81            [12] 3766 	mov	a,sp
      000F07 24 E3            [12] 3767 	add	a,#0xe3
      000F09 F8               [12] 3768 	mov	r0,a
      000F0A E6               [12] 3769 	mov	a,@r0
      000F0B 08               [12] 3770 	inc	r0
      000F0C 46               [12] 3771 	orl	a,@r0
      000F0D 60 38            [24] 3772 	jz	00106$
      000F0F E4               [12] 3773 	clr	a
      000F10 C0 E0            [24] 3774 	push	acc
      000F12 C0 E0            [24] 3775 	push	acc
      000F14 74 05            [12] 3776 	mov	a,#0x05
      000F16 C0 E0            [24] 3777 	push	acc
      000F18 E4               [12] 3778 	clr	a
      000F19 C0 E0            [24] 3779 	push	acc
      000F1B E5 81            [12] 3780 	mov	a,sp
      000F1D 24 DF            [12] 3781 	add	a,#0xdf
      000F1F F8               [12] 3782 	mov	r0,a
      000F20 E6               [12] 3783 	mov	a,@r0
      000F21 C0 E0            [24] 3784 	push	acc
      000F23 08               [12] 3785 	inc	r0
      000F24 E6               [12] 3786 	mov	a,@r0
      000F25 C0 E0            [24] 3787 	push	acc
      000F27 08               [12] 3788 	inc	r0
      000F28 E6               [12] 3789 	mov	a,@r0
      000F29 C0 E0            [24] 3790 	push	acc
      000F2B E5 81            [12] 3791 	mov	a,sp
      000F2D 24 D6            [12] 3792 	add	a,#0xd6
      000F2F F8               [12] 3793 	mov	r0,a
      000F30 86 82            [24] 3794 	mov	dpl,@r0
      000F32 08               [12] 3795 	inc	r0
      000F33 86 83            [24] 3796 	mov	dph,@r0
      000F35 08               [12] 3797 	inc	r0
      000F36 86 F0            [24] 3798 	mov	b,@r0
      000F38 D0 02            [24] 3799 	pop	ar2
      000F3A D0 01            [24] 3800 	pop	ar1
      000F3C D0 00            [24] 3801 	pop	ar0
      000F3E 12r00r00         [24] 3802 	lcall	__sdcc_banked_call
      000F41 E5 81            [12] 3803 	mov	a,sp
      000F43 24 FC            [12] 3804 	add	a,#0xfc
      000F45 F5 81            [12] 3805 	mov	sp,a
      000F47                       3806 00106$:
                                   3807 ;	../../../core/net/mac/lpp.c:657: return;
      000F47 02r11rA8         [24] 3808 	ljmp	00129$
      000F4A                       3809 00109$:
                                   3810 ;	../../../core/net/mac/lpp.c:681: i = memb_alloc(&queued_packets_memb);
      000F4A 90r00r11         [24] 3811 	mov	dptr,#_queued_packets_memb
      000F4D 75 F0 00         [24] 3812 	mov	b,#0x00
      000F50 78r00            [12] 3813 	mov	r0,#_memb_alloc
      000F52 79s00            [12] 3814 	mov	r1,#(_memb_alloc >> 8)
      000F54 7As00            [12] 3815 	mov	r2,#(_memb_alloc >> 16)
      000F56 12r00r00         [24] 3816 	lcall	__sdcc_banked_call
      000F59 AD 82            [24] 3817 	mov	r5,dpl
      000F5B AE 83            [24] 3818 	mov	r6,dph
      000F5D AF F0            [24] 3819 	mov	r7,b
      000F5F A8 81            [24] 3820 	mov	r0,sp
      000F61 18               [12] 3821 	dec	r0
      000F62 18               [12] 3822 	dec	r0
      000F63 A6 05            [24] 3823 	mov	@r0,ar5
      000F65 08               [12] 3824 	inc	r0
      000F66 A6 06            [24] 3825 	mov	@r0,ar6
      000F68 08               [12] 3826 	inc	r0
      000F69 A6 07            [24] 3827 	mov	@r0,ar7
                                   3828 ;	../../../core/net/mac/lpp.c:682: if(i != NULL) {
      000F6B A8 81            [24] 3829 	mov	r0,sp
      000F6D 18               [12] 3830 	dec	r0
      000F6E 18               [12] 3831 	dec	r0
      000F6F E6               [12] 3832 	mov	a,@r0
      000F70 08               [12] 3833 	inc	r0
      000F71 46               [12] 3834 	orl	a,@r0
      000F72 70 03            [24] 3835 	jnz	00166$
      000F74 02r11r4B         [24] 3836 	ljmp	00127$
      000F77                       3837 00166$:
                                   3838 ;	../../../core/net/mac/lpp.c:683: i->sent_callback = sent;
      000F77 A8 81            [24] 3839 	mov	r0,sp
      000F79 18               [12] 3840 	dec	r0
      000F7A 18               [12] 3841 	dec	r0
      000F7B 74 24            [12] 3842 	mov	a,#0x24
      000F7D 26               [12] 3843 	add	a,@r0
      000F7E FA               [12] 3844 	mov	r2,a
      000F7F E4               [12] 3845 	clr	a
      000F80 08               [12] 3846 	inc	r0
      000F81 36               [12] 3847 	addc	a,@r0
      000F82 FB               [12] 3848 	mov	r3,a
      000F83 08               [12] 3849 	inc	r0
      000F84 86 04            [24] 3850 	mov	ar4,@r0
      000F86 8A 82            [24] 3851 	mov	dpl,r2
      000F88 8B 83            [24] 3852 	mov	dph,r3
      000F8A 8C F0            [24] 3853 	mov	b,r4
      000F8C E5 81            [12] 3854 	mov	a,sp
      000F8E 24 E3            [12] 3855 	add	a,#0xe3
      000F90 F8               [12] 3856 	mov	r0,a
      000F91 E6               [12] 3857 	mov	a,@r0
      000F92 12r00r00         [24] 3858 	lcall	__gptrput
      000F95 A3               [24] 3859 	inc	dptr
      000F96 08               [12] 3860 	inc	r0
      000F97 E6               [12] 3861 	mov	a,@r0
      000F98 12r00r00         [24] 3862 	lcall	__gptrput
      000F9B A3               [24] 3863 	inc	dptr
      000F9C 08               [12] 3864 	inc	r0
      000F9D E6               [12] 3865 	mov	a,@r0
      000F9E 12r00r00         [24] 3866 	lcall	__gptrput
                                   3867 ;	../../../core/net/mac/lpp.c:684: i->sent_callback_ptr = ptr;
      000FA1 A8 81            [24] 3868 	mov	r0,sp
      000FA3 18               [12] 3869 	dec	r0
      000FA4 18               [12] 3870 	dec	r0
      000FA5 74 27            [12] 3871 	mov	a,#0x27
      000FA7 26               [12] 3872 	add	a,@r0
      000FA8 FA               [12] 3873 	mov	r2,a
      000FA9 E4               [12] 3874 	clr	a
      000FAA 08               [12] 3875 	inc	r0
      000FAB 36               [12] 3876 	addc	a,@r0
      000FAC FB               [12] 3877 	mov	r3,a
      000FAD 08               [12] 3878 	inc	r0
      000FAE 86 04            [24] 3879 	mov	ar4,@r0
      000FB0 8A 82            [24] 3880 	mov	dpl,r2
      000FB2 8B 83            [24] 3881 	mov	dph,r3
      000FB4 8C F0            [24] 3882 	mov	b,r4
      000FB6 E5 81            [12] 3883 	mov	a,sp
      000FB8 24 DD            [12] 3884 	add	a,#0xdd
      000FBA F8               [12] 3885 	mov	r0,a
      000FBB E6               [12] 3886 	mov	a,@r0
      000FBC 12r00r00         [24] 3887 	lcall	__gptrput
      000FBF A3               [24] 3888 	inc	dptr
      000FC0 08               [12] 3889 	inc	r0
      000FC1 E6               [12] 3890 	mov	a,@r0
      000FC2 12r00r00         [24] 3891 	lcall	__gptrput
      000FC5 A3               [24] 3892 	inc	dptr
      000FC6 08               [12] 3893 	inc	r0
      000FC7 E6               [12] 3894 	mov	a,@r0
      000FC8 12r00r00         [24] 3895 	lcall	__gptrput
                                   3896 ;	../../../core/net/mac/lpp.c:685: i->num_transmissions = 0;
      000FCB A8 81            [24] 3897 	mov	r0,sp
      000FCD 18               [12] 3898 	dec	r0
      000FCE 18               [12] 3899 	dec	r0
      000FCF 74 2A            [12] 3900 	mov	a,#0x2a
      000FD1 26               [12] 3901 	add	a,@r0
      000FD2 FA               [12] 3902 	mov	r2,a
      000FD3 E4               [12] 3903 	clr	a
      000FD4 08               [12] 3904 	inc	r0
      000FD5 36               [12] 3905 	addc	a,@r0
      000FD6 FB               [12] 3906 	mov	r3,a
      000FD7 08               [12] 3907 	inc	r0
      000FD8 86 04            [24] 3908 	mov	ar4,@r0
      000FDA 8A 82            [24] 3909 	mov	dpl,r2
      000FDC 8B 83            [24] 3910 	mov	dph,r3
      000FDE 8C F0            [24] 3911 	mov	b,r4
      000FE0 E4               [12] 3912 	clr	a
      000FE1 12r00r00         [24] 3913 	lcall	__gptrput
                                   3914 ;	../../../core/net/mac/lpp.c:686: i->packet = queuebuf_new_from_packetbuf();
      000FE4 A8 81            [24] 3915 	mov	r0,sp
      000FE6 18               [12] 3916 	dec	r0
      000FE7 18               [12] 3917 	dec	r0
      000FE8 74 03            [12] 3918 	mov	a,#0x03
      000FEA 26               [12] 3919 	add	a,@r0
      000FEB FA               [12] 3920 	mov	r2,a
      000FEC E4               [12] 3921 	clr	a
      000FED 08               [12] 3922 	inc	r0
      000FEE 36               [12] 3923 	addc	a,@r0
      000FEF FB               [12] 3924 	mov	r3,a
      000FF0 08               [12] 3925 	inc	r0
      000FF1 86 04            [24] 3926 	mov	ar4,@r0
      000FF3 C0 04            [24] 3927 	push	ar4
      000FF5 C0 03            [24] 3928 	push	ar3
      000FF7 C0 02            [24] 3929 	push	ar2
      000FF9 78r00            [12] 3930 	mov	r0,#_queuebuf_new_from_packetbuf
      000FFB 79s00            [12] 3931 	mov	r1,#(_queuebuf_new_from_packetbuf >> 8)
      000FFD 7As00            [12] 3932 	mov	r2,#(_queuebuf_new_from_packetbuf >> 16)
      000FFF 12r00r00         [24] 3933 	lcall	__sdcc_banked_call
      001002 AD 82            [24] 3934 	mov	r5,dpl
      001004 AE 83            [24] 3935 	mov	r6,dph
      001006 AF F0            [24] 3936 	mov	r7,b
      001008 D0 02            [24] 3937 	pop	ar2
      00100A D0 03            [24] 3938 	pop	ar3
      00100C D0 04            [24] 3939 	pop	ar4
      00100E 8A 82            [24] 3940 	mov	dpl,r2
      001010 8B 83            [24] 3941 	mov	dph,r3
      001012 8C F0            [24] 3942 	mov	b,r4
      001014 ED               [12] 3943 	mov	a,r5
      001015 12r00r00         [24] 3944 	lcall	__gptrput
      001018 A3               [24] 3945 	inc	dptr
      001019 EE               [12] 3946 	mov	a,r6
      00101A 12r00r00         [24] 3947 	lcall	__gptrput
      00101D A3               [24] 3948 	inc	dptr
      00101E EF               [12] 3949 	mov	a,r7
      00101F 12r00r00         [24] 3950 	lcall	__gptrput
                                   3951 ;	../../../core/net/mac/lpp.c:687: if(i->packet == NULL) {
      001022 ED               [12] 3952 	mov	a,r5
      001023 4E               [12] 3953 	orl	a,r6
      001024 60 03            [24] 3954 	jz	00167$
      001026 02r10rB0         [24] 3955 	ljmp	00119$
      001029                       3956 00167$:
                                   3957 ;	../../../core/net/mac/lpp.c:688: memb_free(&queued_packets_memb, i);
      001029 A8 81            [24] 3958 	mov	r0,sp
      00102B 18               [12] 3959 	dec	r0
      00102C 18               [12] 3960 	dec	r0
      00102D 86 05            [24] 3961 	mov	ar5,@r0
      00102F 08               [12] 3962 	inc	r0
      001030 86 06            [24] 3963 	mov	ar6,@r0
      001032 08               [12] 3964 	inc	r0
      001033 86 07            [24] 3965 	mov	ar7,@r0
      001035 C0 05            [24] 3966 	push	ar5
      001037 C0 06            [24] 3967 	push	ar6
      001039 C0 07            [24] 3968 	push	ar7
      00103B 90r00r11         [24] 3969 	mov	dptr,#_queued_packets_memb
      00103E 75 F0 00         [24] 3970 	mov	b,#0x00
      001041 78r00            [12] 3971 	mov	r0,#_memb_free
      001043 79s00            [12] 3972 	mov	r1,#(_memb_free >> 8)
      001045 7As00            [12] 3973 	mov	r2,#(_memb_free >> 16)
      001047 12r00r00         [24] 3974 	lcall	__sdcc_banked_call
      00104A 15 81            [12] 3975 	dec	sp
      00104C 15 81            [12] 3976 	dec	sp
      00104E 15 81            [12] 3977 	dec	sp
                                   3978 ;	../../../core/net/mac/lpp.c:689: printf("null packet\n");
      001050 74r00            [12] 3979 	mov	a,#___str_0
      001052 C0 E0            [24] 3980 	push	acc
      001054 74s00            [12] 3981 	mov	a,#(___str_0 >> 8)
      001056 C0 E0            [24] 3982 	push	acc
      001058 74 80            [12] 3983 	mov	a,#0x80
      00105A C0 E0            [24] 3984 	push	acc
      00105C 78r00            [12] 3985 	mov	r0,#_printf
      00105E 79s00            [12] 3986 	mov	r1,#(_printf >> 8)
      001060 7As00            [12] 3987 	mov	r2,#(_printf >> 16)
      001062 12r00r00         [24] 3988 	lcall	__sdcc_banked_call
      001065 15 81            [12] 3989 	dec	sp
      001067 15 81            [12] 3990 	dec	sp
      001069 15 81            [12] 3991 	dec	sp
                                   3992 ;	../../../core/net/mac/lpp.c:690: mac_call_sent_callback(sent, ptr, MAC_TX_ERR, 0);
      00106B E5 81            [12] 3993 	mov	a,sp
      00106D 24 E3            [12] 3994 	add	a,#0xe3
      00106F F8               [12] 3995 	mov	r0,a
      001070 E6               [12] 3996 	mov	a,@r0
      001071 08               [12] 3997 	inc	r0
      001072 46               [12] 3998 	orl	a,@r0
      001073 60 38            [24] 3999 	jz	00113$
      001075 E4               [12] 4000 	clr	a
      001076 C0 E0            [24] 4001 	push	acc
      001078 C0 E0            [24] 4002 	push	acc
      00107A 74 04            [12] 4003 	mov	a,#0x04
      00107C C0 E0            [24] 4004 	push	acc
      00107E E4               [12] 4005 	clr	a
      00107F C0 E0            [24] 4006 	push	acc
      001081 E5 81            [12] 4007 	mov	a,sp
      001083 24 DF            [12] 4008 	add	a,#0xdf
      001085 F8               [12] 4009 	mov	r0,a
      001086 E6               [12] 4010 	mov	a,@r0
      001087 C0 E0            [24] 4011 	push	acc
      001089 08               [12] 4012 	inc	r0
      00108A E6               [12] 4013 	mov	a,@r0
      00108B C0 E0            [24] 4014 	push	acc
      00108D 08               [12] 4015 	inc	r0
      00108E E6               [12] 4016 	mov	a,@r0
      00108F C0 E0            [24] 4017 	push	acc
      001091 E5 81            [12] 4018 	mov	a,sp
      001093 24 D6            [12] 4019 	add	a,#0xd6
      001095 F8               [12] 4020 	mov	r0,a
      001096 86 82            [24] 4021 	mov	dpl,@r0
      001098 08               [12] 4022 	inc	r0
      001099 86 83            [24] 4023 	mov	dph,@r0
      00109B 08               [12] 4024 	inc	r0
      00109C 86 F0            [24] 4025 	mov	b,@r0
      00109E D0 02            [24] 4026 	pop	ar2
      0010A0 D0 01            [24] 4027 	pop	ar1
      0010A2 D0 00            [24] 4028 	pop	ar0
      0010A4 12r00r00         [24] 4029 	lcall	__sdcc_banked_call
      0010A7 E5 81            [12] 4030 	mov	a,sp
      0010A9 24 FC            [12] 4031 	add	a,#0xfc
      0010AB F5 81            [12] 4032 	mov	sp,a
      0010AD                       4033 00113$:
                                   4034 ;	../../../core/net/mac/lpp.c:691: return;
      0010AD 02r11rA8         [24] 4035 	ljmp	00129$
      0010B0                       4036 00119$:
                                   4037 ;	../../../core/net/mac/lpp.c:693: if(is_broadcast) {
      0010B0 E5 81            [12] 4038 	mov	a,sp
      0010B2 24 FD            [12] 4039 	add	a,#0xfd
      0010B4 F8               [12] 4040 	mov	r0,a
      0010B5 E6               [12] 4041 	mov	a,@r0
      0010B6 60 0C            [24] 4042 	jz	00116$
                                   4043 ;	../../../core/net/mac/lpp.c:694: timeout = PACKET_LIFETIME;
      0010B8 E5 81            [12] 4044 	mov	a,sp
      0010BA 24 FB            [12] 4045 	add	a,#0xfb
      0010BC F8               [12] 4046 	mov	r0,a
      0010BD 76 10            [12] 4047 	mov	@r0,#0x10
      0010BF 08               [12] 4048 	inc	r0
      0010C0 76 00            [12] 4049 	mov	@r0,#0x00
      0010C2 80 0A            [24] 4050 	sjmp	00117$
      0010C4                       4051 00116$:
                                   4052 ;	../../../core/net/mac/lpp.c:708: timeout = UNICAST_TIMEOUT;
      0010C4 E5 81            [12] 4053 	mov	a,sp
      0010C6 24 FB            [12] 4054 	add	a,#0xfb
      0010C8 F8               [12] 4055 	mov	r0,a
      0010C9 76 18            [12] 4056 	mov	@r0,#0x18
      0010CB 08               [12] 4057 	inc	r0
      0010CC 76 00            [12] 4058 	mov	@r0,#0x00
      0010CE                       4059 00117$:
                                   4060 ;	../../../core/net/mac/lpp.c:714: remove_queued_old_packet_callback, i);
      0010CE A8 81            [24] 4061 	mov	r0,sp
      0010D0 18               [12] 4062 	dec	r0
      0010D1 18               [12] 4063 	dec	r0
      0010D2 86 03            [24] 4064 	mov	ar3,@r0
      0010D4 08               [12] 4065 	inc	r0
      0010D5 86 04            [24] 4066 	mov	ar4,@r0
      0010D7 08               [12] 4067 	inc	r0
      0010D8 86 05            [24] 4068 	mov	ar5,@r0
                                   4069 ;	../../../core/net/mac/lpp.c:713: ctimer_set(&i->removal_timer, timeout,
      0010DA A8 81            [24] 4070 	mov	r0,sp
      0010DC 18               [12] 4071 	dec	r0
      0010DD 18               [12] 4072 	dec	r0
      0010DE 74 06            [12] 4073 	mov	a,#0x06
      0010E0 26               [12] 4074 	add	a,@r0
      0010E1 FA               [12] 4075 	mov	r2,a
      0010E2 E4               [12] 4076 	clr	a
      0010E3 08               [12] 4077 	inc	r0
      0010E4 36               [12] 4078 	addc	a,@r0
      0010E5 FE               [12] 4079 	mov	r6,a
      0010E6 08               [12] 4080 	inc	r0
      0010E7 86 07            [24] 4081 	mov	ar7,@r0
      0010E9 C0 03            [24] 4082 	push	ar3
      0010EB C0 04            [24] 4083 	push	ar4
      0010ED C0 05            [24] 4084 	push	ar5
      0010EF 74rDF            [12] 4085 	mov	a,#_remove_queued_old_packet_callback
      0010F1 C0 E0            [24] 4086 	push	acc
      0010F3 74s06            [12] 4087 	mov	a,#(_remove_queued_old_packet_callback >> 8)
      0010F5 C0 E0            [24] 4088 	push	acc
      0010F7 74s00            [12] 4089 	mov	a,#(_remove_queued_old_packet_callback >> 16)
      0010F9 C0 E0            [24] 4090 	push	acc
      0010FB E5 81            [12] 4091 	mov	a,sp
      0010FD 24 F5            [12] 4092 	add	a,#0xf5
      0010FF F8               [12] 4093 	mov	r0,a
      001100 E6               [12] 4094 	mov	a,@r0
      001101 C0 E0            [24] 4095 	push	acc
      001103 08               [12] 4096 	inc	r0
      001104 E6               [12] 4097 	mov	a,@r0
      001105 C0 E0            [24] 4098 	push	acc
      001107 8A 82            [24] 4099 	mov	dpl,r2
      001109 8E 83            [24] 4100 	mov	dph,r6
      00110B 8F F0            [24] 4101 	mov	b,r7
      00110D 78r00            [12] 4102 	mov	r0,#_ctimer_set
      00110F 79s00            [12] 4103 	mov	r1,#(_ctimer_set >> 8)
      001111 7As00            [12] 4104 	mov	r2,#(_ctimer_set >> 16)
      001113 12r00r00         [24] 4105 	lcall	__sdcc_banked_call
      001116 E5 81            [12] 4106 	mov	a,sp
      001118 24 F8            [12] 4107 	add	a,#0xf8
                                   4108 ;	../../../core/net/mac/lpp.c:719: turn_radio_on_for_neighbor(&hdr.receiver, i);
      00111A F5 81            [12] 4109 	mov	sp,a
      00111C 24 E9            [12] 4110 	add	a,#0xe9
      00111E 24 0A            [12] 4111 	add	a,#0x0a
      001120 FF               [12] 4112 	mov	r7,a
      001121 7E 00            [12] 4113 	mov	r6,#0x00
      001123 7D 40            [12] 4114 	mov	r5,#0x40
      001125 A8 81            [24] 4115 	mov	r0,sp
      001127 18               [12] 4116 	dec	r0
      001128 18               [12] 4117 	dec	r0
      001129 E6               [12] 4118 	mov	a,@r0
      00112A C0 E0            [24] 4119 	push	acc
      00112C 08               [12] 4120 	inc	r0
      00112D E6               [12] 4121 	mov	a,@r0
      00112E C0 E0            [24] 4122 	push	acc
      001130 08               [12] 4123 	inc	r0
      001131 E6               [12] 4124 	mov	a,@r0
      001132 C0 E0            [24] 4125 	push	acc
      001134 8F 82            [24] 4126 	mov	dpl,r7
      001136 8E 83            [24] 4127 	mov	dph,r6
      001138 8D F0            [24] 4128 	mov	b,r5
      00113A 78r45            [12] 4129 	mov	r0,#_turn_radio_on_for_neighbor
      00113C 79s03            [12] 4130 	mov	r1,#(_turn_radio_on_for_neighbor >> 8)
      00113E 7As00            [12] 4131 	mov	r2,#(_turn_radio_on_for_neighbor >> 16)
      001140 12r00r00         [24] 4132 	lcall	__sdcc_banked_call
      001143 15 81            [12] 4133 	dec	sp
      001145 15 81            [12] 4134 	dec	sp
      001147 15 81            [12] 4135 	dec	sp
      001149 80 5D            [24] 4136 	sjmp	00129$
      00114B                       4137 00127$:
                                   4138 ;	../../../core/net/mac/lpp.c:723: printf("i == NULL\n");
      00114B 74r0D            [12] 4139 	mov	a,#___str_1
      00114D C0 E0            [24] 4140 	push	acc
      00114F 74s00            [12] 4141 	mov	a,#(___str_1 >> 8)
      001151 C0 E0            [24] 4142 	push	acc
      001153 74 80            [12] 4143 	mov	a,#0x80
      001155 C0 E0            [24] 4144 	push	acc
      001157 78r00            [12] 4145 	mov	r0,#_printf
      001159 79s00            [12] 4146 	mov	r1,#(_printf >> 8)
      00115B 7As00            [12] 4147 	mov	r2,#(_printf >> 16)
      00115D 12r00r00         [24] 4148 	lcall	__sdcc_banked_call
      001160 15 81            [12] 4149 	dec	sp
      001162 15 81            [12] 4150 	dec	sp
      001164 15 81            [12] 4151 	dec	sp
                                   4152 ;	../../../core/net/mac/lpp.c:724: mac_call_sent_callback(sent, ptr, MAC_TX_ERR, 0);
      001166 E5 81            [12] 4153 	mov	a,sp
      001168 24 E3            [12] 4154 	add	a,#0xe3
      00116A F8               [12] 4155 	mov	r0,a
      00116B E6               [12] 4156 	mov	a,@r0
      00116C 08               [12] 4157 	inc	r0
      00116D 46               [12] 4158 	orl	a,@r0
      00116E 60 38            [24] 4159 	jz	00129$
      001170 E4               [12] 4160 	clr	a
      001171 C0 E0            [24] 4161 	push	acc
      001173 C0 E0            [24] 4162 	push	acc
      001175 74 04            [12] 4163 	mov	a,#0x04
      001177 C0 E0            [24] 4164 	push	acc
      001179 E4               [12] 4165 	clr	a
      00117A C0 E0            [24] 4166 	push	acc
      00117C E5 81            [12] 4167 	mov	a,sp
      00117E 24 DF            [12] 4168 	add	a,#0xdf
      001180 F8               [12] 4169 	mov	r0,a
      001181 E6               [12] 4170 	mov	a,@r0
      001182 C0 E0            [24] 4171 	push	acc
      001184 08               [12] 4172 	inc	r0
      001185 E6               [12] 4173 	mov	a,@r0
      001186 C0 E0            [24] 4174 	push	acc
      001188 08               [12] 4175 	inc	r0
      001189 E6               [12] 4176 	mov	a,@r0
      00118A C0 E0            [24] 4177 	push	acc
      00118C E5 81            [12] 4178 	mov	a,sp
      00118E 24 D6            [12] 4179 	add	a,#0xd6
      001190 F8               [12] 4180 	mov	r0,a
      001191 86 82            [24] 4181 	mov	dpl,@r0
      001193 08               [12] 4182 	inc	r0
      001194 86 83            [24] 4183 	mov	dph,@r0
      001196 08               [12] 4184 	inc	r0
      001197 86 F0            [24] 4185 	mov	b,@r0
      001199 D0 02            [24] 4186 	pop	ar2
      00119B D0 01            [24] 4187 	pop	ar1
      00119D D0 00            [24] 4188 	pop	ar0
      00119F 12r00r00         [24] 4189 	lcall	__sdcc_banked_call
      0011A2 E5 81            [12] 4190 	mov	a,sp
      0011A4 24 FC            [12] 4191 	add	a,#0xfc
      0011A6 F5 81            [12] 4192 	mov	sp,a
      0011A8                       4193 00129$:
                                   4194 ;	../../../core/net/mac/lpp.c:727: }
      0011A8 E5 81            [12] 4195 	mov	a,sp
      0011AA 24 E2            [12] 4196 	add	a,#0xe2
      0011AC F5 81            [12] 4197 	mov	sp,a
      0011AE 02r00r00         [24] 4198 	ljmp	__sdcc_banked_ret
                                   4199 ;------------------------------------------------------------
                                   4200 ;Allocation info for local variables in function 'send_list'
                                   4201 ;------------------------------------------------------------
                                   4202 ;ptr                       Allocated to stack - sp -5
                                   4203 ;buf_list                  Allocated to stack - sp -8
                                   4204 ;sent                      Allocated to registers r5 r6 r7 
                                   4205 ;------------------------------------------------------------
                                   4206 ;	../../../core/net/mac/lpp.c:730: send_list(mac_callback_t sent, void *ptr, struct rdc_buf_list *buf_list)
                                   4207 ;	-----------------------------------------
                                   4208 ;	 function send_list
                                   4209 ;	-----------------------------------------
      0011B1                       4210 _send_list:
      0011B1 AD 82            [24] 4211 	mov	r5,dpl
      0011B3 AE 83            [24] 4212 	mov	r6,dph
      0011B5 AF F0            [24] 4213 	mov	r7,b
                                   4214 ;	../../../core/net/mac/lpp.c:732: if(buf_list != NULL) {
      0011B7 E5 81            [12] 4215 	mov	a,sp
      0011B9 24 F8            [12] 4216 	add	a,#0xf8
      0011BB F8               [12] 4217 	mov	r0,a
      0011BC E6               [12] 4218 	mov	a,@r0
      0011BD 08               [12] 4219 	inc	r0
      0011BE 46               [12] 4220 	orl	a,@r0
      0011BF 60 68            [24] 4221 	jz	00103$
                                   4222 ;	../../../core/net/mac/lpp.c:733: queuebuf_to_packetbuf(buf_list->buf);
      0011C1 E5 81            [12] 4223 	mov	a,sp
      0011C3 24 F8            [12] 4224 	add	a,#0xf8
      0011C5 F8               [12] 4225 	mov	r0,a
      0011C6 86 02            [24] 4226 	mov	ar2,@r0
      0011C8 08               [12] 4227 	inc	r0
      0011C9 86 03            [24] 4228 	mov	ar3,@r0
      0011CB 08               [12] 4229 	inc	r0
      0011CC 86 04            [24] 4230 	mov	ar4,@r0
      0011CE 74 03            [12] 4231 	mov	a,#0x03
      0011D0 2A               [12] 4232 	add	a,r2
      0011D1 FA               [12] 4233 	mov	r2,a
      0011D2 E4               [12] 4234 	clr	a
      0011D3 3B               [12] 4235 	addc	a,r3
      0011D4 FB               [12] 4236 	mov	r3,a
      0011D5 8A 82            [24] 4237 	mov	dpl,r2
      0011D7 8B 83            [24] 4238 	mov	dph,r3
      0011D9 8C F0            [24] 4239 	mov	b,r4
      0011DB 12r00r00         [24] 4240 	lcall	__gptrget
      0011DE FA               [12] 4241 	mov	r2,a
      0011DF A3               [24] 4242 	inc	dptr
      0011E0 12r00r00         [24] 4243 	lcall	__gptrget
      0011E3 FB               [12] 4244 	mov	r3,a
      0011E4 A3               [24] 4245 	inc	dptr
      0011E5 12r00r00         [24] 4246 	lcall	__gptrget
      0011E8 FC               [12] 4247 	mov	r4,a
      0011E9 8A 82            [24] 4248 	mov	dpl,r2
      0011EB 8B 83            [24] 4249 	mov	dph,r3
      0011ED 8C F0            [24] 4250 	mov	b,r4
      0011EF C0 07            [24] 4251 	push	ar7
      0011F1 C0 06            [24] 4252 	push	ar6
      0011F3 C0 05            [24] 4253 	push	ar5
      0011F5 78r00            [12] 4254 	mov	r0,#_queuebuf_to_packetbuf
      0011F7 79s00            [12] 4255 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      0011F9 7As00            [12] 4256 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      0011FB 12r00r00         [24] 4257 	lcall	__sdcc_banked_call
      0011FE D0 05            [24] 4258 	pop	ar5
      001200 D0 06            [24] 4259 	pop	ar6
      001202 D0 07            [24] 4260 	pop	ar7
                                   4261 ;	../../../core/net/mac/lpp.c:734: send_packet(sent, ptr);
      001204 E5 81            [12] 4262 	mov	a,sp
      001206 24 FB            [12] 4263 	add	a,#0xfb
      001208 F8               [12] 4264 	mov	r0,a
      001209 E6               [12] 4265 	mov	a,@r0
      00120A C0 E0            [24] 4266 	push	acc
      00120C 08               [12] 4267 	inc	r0
      00120D E6               [12] 4268 	mov	a,@r0
      00120E C0 E0            [24] 4269 	push	acc
      001210 08               [12] 4270 	inc	r0
      001211 E6               [12] 4271 	mov	a,@r0
      001212 C0 E0            [24] 4272 	push	acc
      001214 8D 82            [24] 4273 	mov	dpl,r5
      001216 8E 83            [24] 4274 	mov	dph,r6
      001218 8F F0            [24] 4275 	mov	b,r7
      00121A 78r9F            [12] 4276 	mov	r0,#_send_packet
      00121C 79s0D            [12] 4277 	mov	r1,#(_send_packet >> 8)
      00121E 7As00            [12] 4278 	mov	r2,#(_send_packet >> 16)
      001220 12r00r00         [24] 4279 	lcall	__sdcc_banked_call
      001223 15 81            [12] 4280 	dec	sp
      001225 15 81            [12] 4281 	dec	sp
      001227 15 81            [12] 4282 	dec	sp
      001229                       4283 00103$:
                                   4284 ;	../../../core/net/mac/lpp.c:736: }
      001229 02r00r00         [24] 4285 	ljmp	__sdcc_banked_ret
                                   4286 ;------------------------------------------------------------
                                   4287 ;Allocation info for local variables in function 'detect_ack'
                                   4288 ;------------------------------------------------------------
                                   4289 ;wt                        Allocated to registers 
                                   4290 ;ack_received              Allocated to registers r7 
                                   4291 ;len                       Allocated to registers r4 r5 
                                   4292 ;ackbuf                    Allocated to stack - sp -4
                                   4293 ;------------------------------------------------------------
                                   4294 ;	../../../core/net/mac/lpp.c:739: detect_ack(void)
                                   4295 ;	-----------------------------------------
                                   4296 ;	 function detect_ack
                                   4297 ;	-----------------------------------------
      00122C                       4298 _detect_ack:
      00122C E5 81            [12] 4299 	mov	a,sp
      00122E 24 05            [12] 4300 	add	a,#0x05
      001230 F5 81            [12] 4301 	mov	sp,a
                                   4302 ;	../../../core/net/mac/lpp.c:745: uint8_t ack_received = 0;
      001232 7F 00            [12] 4303 	mov	r7,#0x00
                                   4304 ;	../../../core/net/mac/lpp.c:747: wt = RTIMER_NOW();
      001234 AD E2            [24] 4305 	mov	r5,_T1CNTL
      001236 7E 00            [12] 4306 	mov	r6,#0x00
      001238 AB E3            [24] 4307 	mov	r3,_T1CNTH
      00123A 8B 04            [24] 4308 	mov	ar4,r3
      00123C E4               [12] 4309 	clr	a
      00123D 2D               [12] 4310 	add	a,r5
      00123E FD               [12] 4311 	mov	r5,a
      00123F EC               [12] 4312 	mov	a,r4
      001240 3E               [12] 4313 	addc	a,r6
      001241 FE               [12] 4314 	mov	r6,a
                                   4315 ;	../../../core/net/mac/lpp.c:748: leds_on(LEDS_GREEN);
      001242 75 82 01         [24] 4316 	mov	dpl,#0x01
      001245 C0 07            [24] 4317 	push	ar7
      001247 C0 06            [24] 4318 	push	ar6
      001249 C0 05            [24] 4319 	push	ar5
      00124B 78r00            [12] 4320 	mov	r0,#_leds_on
      00124D 79s00            [12] 4321 	mov	r1,#(_leds_on >> 8)
      00124F 7As00            [12] 4322 	mov	r2,#(_leds_on >> 16)
      001251 12r00r00         [24] 4323 	lcall	__sdcc_banked_call
      001254 D0 05            [24] 4324 	pop	ar5
      001256 D0 06            [24] 4325 	pop	ar6
      001258 D0 07            [24] 4326 	pop	ar7
                                   4327 ;	../../../core/net/mac/lpp.c:749: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + INTER_PACKET_INTERVAL)) { }
      00125A 74 03            [12] 4328 	mov	a,#0x03
      00125C 2D               [12] 4329 	add	a,r5
      00125D FD               [12] 4330 	mov	r5,a
      00125E E4               [12] 4331 	clr	a
      00125F 3E               [12] 4332 	addc	a,r6
      001260 FE               [12] 4333 	mov	r6,a
      001261                       4334 00101$:
      001261 C0 07            [24] 4335 	push	ar7
      001263 AB E2            [24] 4336 	mov	r3,_T1CNTL
      001265 7C 00            [12] 4337 	mov	r4,#0x00
      001267 AA E3            [24] 4338 	mov	r2,_T1CNTH
      001269 8A 07            [24] 4339 	mov	ar7,r2
      00126B E4               [12] 4340 	clr	a
      00126C 2B               [12] 4341 	add	a,r3
      00126D FB               [12] 4342 	mov	r3,a
      00126E EF               [12] 4343 	mov	a,r7
      00126F 3C               [12] 4344 	addc	a,r4
      001270 FC               [12] 4345 	mov	r4,a
      001271 EB               [12] 4346 	mov	a,r3
      001272 C3               [12] 4347 	clr	c
      001273 9D               [12] 4348 	subb	a,r5
      001274 EC               [12] 4349 	mov	a,r4
      001275 9E               [12] 4350 	subb	a,r6
      001276 D0 07            [24] 4351 	pop	ar7
      001278 20 E7 E6         [24] 4352 	jb	acc.7,00101$
                                   4353 ;	../../../core/net/mac/lpp.c:750: leds_off(LEDS_GREEN);
      00127B 75 82 01         [24] 4354 	mov	dpl,#0x01
      00127E C0 07            [24] 4355 	push	ar7
      001280 78r00            [12] 4356 	mov	r0,#_leds_off
      001282 79s00            [12] 4357 	mov	r1,#(_leds_off >> 8)
      001284 7As00            [12] 4358 	mov	r2,#(_leds_off >> 16)
      001286 12r00r00         [24] 4359 	lcall	__sdcc_banked_call
                                   4360 ;	../../../core/net/mac/lpp.c:752: if((NETSTACK_RADIO.receiving_packet() ||
      001289 90r00r12         [24] 4361 	mov	dptr,#(_cc2530_rf_driver + 0x0012)
      00128C E4               [12] 4362 	clr	a
      00128D 93               [24] 4363 	movc	a,@a+dptr
      00128E FC               [12] 4364 	mov	r4,a
      00128F A3               [24] 4365 	inc	dptr
      001290 E4               [12] 4366 	clr	a
      001291 93               [24] 4367 	movc	a,@a+dptr
      001292 FD               [12] 4368 	mov	r5,a
      001293 A3               [24] 4369 	inc	dptr
      001294 E4               [12] 4370 	clr	a
      001295 93               [24] 4371 	movc	a,@a+dptr
      001296 FE               [12] 4372 	mov	r6,a
      001297 C0 06            [24] 4373 	push	ar6
      001299 C0 04            [24] 4374 	push	ar4
      00129B C0 05            [24] 4375 	push	ar5
      00129D C0 06            [24] 4376 	push	ar6
      00129F D0 02            [24] 4377 	pop	ar2
      0012A1 D0 01            [24] 4378 	pop	ar1
      0012A3 D0 00            [24] 4379 	pop	ar0
      0012A5 12r00r00         [24] 4380 	lcall	__sdcc_banked_call
      0012A8 AC 82            [24] 4381 	mov	r4,dpl
      0012AA AD 83            [24] 4382 	mov	r5,dph
      0012AC D0 06            [24] 4383 	pop	ar6
      0012AE D0 07            [24] 4384 	pop	ar7
      0012B0 EC               [12] 4385 	mov	a,r4
      0012B1 4D               [12] 4386 	orl	a,r5
      0012B2 70 5D            [24] 4387 	jnz	00109$
                                   4388 ;	../../../core/net/mac/lpp.c:753: NETSTACK_RADIO.pending_packet() ||
      0012B4 90r00r15         [24] 4389 	mov	dptr,#(_cc2530_rf_driver + 0x0015)
      0012B7 E4               [12] 4390 	clr	a
      0012B8 93               [24] 4391 	movc	a,@a+dptr
      0012B9 FC               [12] 4392 	mov	r4,a
      0012BA A3               [24] 4393 	inc	dptr
      0012BB E4               [12] 4394 	clr	a
      0012BC 93               [24] 4395 	movc	a,@a+dptr
      0012BD FD               [12] 4396 	mov	r5,a
      0012BE A3               [24] 4397 	inc	dptr
      0012BF E4               [12] 4398 	clr	a
      0012C0 93               [24] 4399 	movc	a,@a+dptr
      0012C1 FE               [12] 4400 	mov	r6,a
      0012C2 C0 07            [24] 4401 	push	ar7
      0012C4 C0 06            [24] 4402 	push	ar6
      0012C6 C0 04            [24] 4403 	push	ar4
      0012C8 C0 05            [24] 4404 	push	ar5
      0012CA C0 06            [24] 4405 	push	ar6
      0012CC D0 02            [24] 4406 	pop	ar2
      0012CE D0 01            [24] 4407 	pop	ar1
      0012D0 D0 00            [24] 4408 	pop	ar0
      0012D2 12r00r00         [24] 4409 	lcall	__sdcc_banked_call
      0012D5 AC 82            [24] 4410 	mov	r4,dpl
      0012D7 AD 83            [24] 4411 	mov	r5,dph
      0012D9 D0 06            [24] 4412 	pop	ar6
      0012DB D0 07            [24] 4413 	pop	ar7
      0012DD EC               [12] 4414 	mov	a,r4
      0012DE 4D               [12] 4415 	orl	a,r5
      0012DF 70 30            [24] 4416 	jnz	00109$
                                   4417 ;	../../../core/net/mac/lpp.c:754: NETSTACK_RADIO.channel_clear() == 0)) {
      0012E1 90r00r0F         [24] 4418 	mov	dptr,#(_cc2530_rf_driver + 0x000f)
      0012E4 E4               [12] 4419 	clr	a
      0012E5 93               [24] 4420 	movc	a,@a+dptr
      0012E6 FC               [12] 4421 	mov	r4,a
      0012E7 A3               [24] 4422 	inc	dptr
      0012E8 E4               [12] 4423 	clr	a
      0012E9 93               [24] 4424 	movc	a,@a+dptr
      0012EA FD               [12] 4425 	mov	r5,a
      0012EB A3               [24] 4426 	inc	dptr
      0012EC E4               [12] 4427 	clr	a
      0012ED 93               [24] 4428 	movc	a,@a+dptr
      0012EE FE               [12] 4429 	mov	r6,a
      0012EF C0 07            [24] 4430 	push	ar7
      0012F1 C0 06            [24] 4431 	push	ar6
      0012F3 C0 04            [24] 4432 	push	ar4
      0012F5 C0 05            [24] 4433 	push	ar5
      0012F7 C0 06            [24] 4434 	push	ar6
      0012F9 D0 02            [24] 4435 	pop	ar2
      0012FB D0 01            [24] 4436 	pop	ar1
      0012FD D0 00            [24] 4437 	pop	ar0
      0012FF 12r00r00         [24] 4438 	lcall	__sdcc_banked_call
      001302 AC 82            [24] 4439 	mov	r4,dpl
      001304 AD 83            [24] 4440 	mov	r5,dph
      001306 D0 06            [24] 4441 	pop	ar6
      001308 D0 07            [24] 4442 	pop	ar7
      00130A EC               [12] 4443 	mov	a,r4
      00130B 4D               [12] 4444 	orl	a,r5
      00130C 60 03            [24] 4445 	jz	00160$
      00130E 02r13r96         [24] 4446 	ljmp	00110$
      001311                       4447 00160$:
      001311                       4448 00109$:
                                   4449 ;	../../../core/net/mac/lpp.c:758: wt = RTIMER_NOW();
      001311 AD E2            [24] 4450 	mov	r5,_T1CNTL
      001313 7E 00            [12] 4451 	mov	r6,#0x00
      001315 AB E3            [24] 4452 	mov	r3,_T1CNTH
      001317 8B 04            [24] 4453 	mov	ar4,r3
      001319 E4               [12] 4454 	clr	a
      00131A FB               [12] 4455 	mov	r3,a
      00131B 2D               [12] 4456 	add	a,r5
      00131C FD               [12] 4457 	mov	r5,a
      00131D EC               [12] 4458 	mov	a,r4
      00131E 3E               [12] 4459 	addc	a,r6
      00131F FE               [12] 4460 	mov	r6,a
                                   4461 ;	../../../core/net/mac/lpp.c:759: while(RTIMER_CLOCK_LT(RTIMER_NOW(), wt + AFTER_ACK_DETECTECT_WAIT_TIME)) { }
      001320 74 0F            [12] 4462 	mov	a,#0x0f
      001322 2D               [12] 4463 	add	a,r5
      001323 FD               [12] 4464 	mov	r5,a
      001324 E4               [12] 4465 	clr	a
      001325 3E               [12] 4466 	addc	a,r6
      001326 FE               [12] 4467 	mov	r6,a
      001327                       4468 00104$:
      001327 C0 07            [24] 4469 	push	ar7
      001329 AB E2            [24] 4470 	mov	r3,_T1CNTL
      00132B 7C 00            [12] 4471 	mov	r4,#0x00
      00132D AA E3            [24] 4472 	mov	r2,_T1CNTH
      00132F 8A 07            [24] 4473 	mov	ar7,r2
      001331 E4               [12] 4474 	clr	a
      001332 2B               [12] 4475 	add	a,r3
      001333 FB               [12] 4476 	mov	r3,a
      001334 EF               [12] 4477 	mov	a,r7
      001335 3C               [12] 4478 	addc	a,r4
      001336 FC               [12] 4479 	mov	r4,a
      001337 EB               [12] 4480 	mov	a,r3
      001338 C3               [12] 4481 	clr	c
      001339 9D               [12] 4482 	subb	a,r5
      00133A EC               [12] 4483 	mov	a,r4
      00133B 9E               [12] 4484 	subb	a,r6
      00133C D0 07            [24] 4485 	pop	ar7
      00133E 20 E7 E6         [24] 4486 	jb	acc.7,00104$
                                   4487 ;	../../../core/net/mac/lpp.c:761: len = NETSTACK_RADIO.read(ackbuf, ACK_LEN);
      001341 C0 07            [24] 4488 	push	ar7
      001343 90r00r0C         [24] 4489 	mov	dptr,#(_cc2530_rf_driver + 0x000c)
      001346 E4               [12] 4490 	clr	a
      001347 93               [24] 4491 	movc	a,@a+dptr
      001348 FC               [12] 4492 	mov	r4,a
      001349 A3               [24] 4493 	inc	dptr
      00134A E4               [12] 4494 	clr	a
      00134B 93               [24] 4495 	movc	a,@a+dptr
      00134C FD               [12] 4496 	mov	r5,a
      00134D A3               [24] 4497 	inc	dptr
      00134E E4               [12] 4498 	clr	a
      00134F 93               [24] 4499 	movc	a,@a+dptr
      001350 FE               [12] 4500 	mov	r6,a
      001351 E5 81            [12] 4501 	mov	a,sp
      001353 24 FB            [12] 4502 	add	a,#0xfb
      001355 FA               [12] 4503 	mov	r2,a
      001356 7B 00            [12] 4504 	mov	r3,#0x00
      001358 7F 40            [12] 4505 	mov	r7,#0x40
      00135A C0 07            [24] 4506 	push	ar7
      00135C C0 06            [24] 4507 	push	ar6
      00135E 74 03            [12] 4508 	mov	a,#0x03
      001360 C0 E0            [24] 4509 	push	acc
      001362 E4               [12] 4510 	clr	a
      001363 C0 E0            [24] 4511 	push	acc
      001365 C0 04            [24] 4512 	push	ar4
      001367 C0 05            [24] 4513 	push	ar5
      001369 C0 06            [24] 4514 	push	ar6
      00136B 8A 82            [24] 4515 	mov	dpl,r2
      00136D 8B 83            [24] 4516 	mov	dph,r3
      00136F 8F F0            [24] 4517 	mov	b,r7
      001371 D0 02            [24] 4518 	pop	ar2
      001373 D0 01            [24] 4519 	pop	ar1
      001375 D0 00            [24] 4520 	pop	ar0
      001377 12r00r00         [24] 4521 	lcall	__sdcc_banked_call
      00137A AC 82            [24] 4522 	mov	r4,dpl
      00137C AD 83            [24] 4523 	mov	r5,dph
      00137E 15 81            [12] 4524 	dec	sp
      001380 15 81            [12] 4525 	dec	sp
      001382 D0 06            [24] 4526 	pop	ar6
      001384 D0 07            [24] 4527 	pop	ar7
                                   4528 ;	../../../core/net/mac/lpp.c:762: if(len == ACK_LEN) {
      001386 BC 03 05         [24] 4529 	cjne	r4,#0x03,00162$
      001389 BD 00 02         [24] 4530 	cjne	r5,#0x00,00162$
      00138C 80 04            [24] 4531 	sjmp	00163$
      00138E                       4532 00162$:
      00138E D0 07            [24] 4533 	pop	ar7
      001390 80 04            [24] 4534 	sjmp	00110$
      001392                       4535 00163$:
      001392 D0 07            [24] 4536 	pop	ar7
                                   4537 ;	../../../core/net/mac/lpp.c:763: ack_received = 1;
      001394 7F 01            [12] 4538 	mov	r7,#0x01
      001396                       4539 00110$:
                                   4540 ;	../../../core/net/mac/lpp.c:766: if(ack_received) {
      001396 EF               [12] 4541 	mov	a,r7
      001397 60 10            [24] 4542 	jz	00114$
                                   4543 ;	../../../core/net/mac/lpp.c:767: leds_toggle(LEDS_RED);
      001399 75 82 02         [24] 4544 	mov	dpl,#0x02
      00139C C0 07            [24] 4545 	push	ar7
      00139E 78r00            [12] 4546 	mov	r0,#_leds_toggle
      0013A0 79s00            [12] 4547 	mov	r1,#(_leds_toggle >> 8)
      0013A2 7As00            [12] 4548 	mov	r2,#(_leds_toggle >> 16)
      0013A4 12r00r00         [24] 4549 	lcall	__sdcc_banked_call
      0013A7 D0 07            [24] 4550 	pop	ar7
      0013A9                       4551 00114$:
                                   4552 ;	../../../core/net/mac/lpp.c:769: return ack_received;
      0013A9 7E 00            [12] 4553 	mov	r6,#0x00
      0013AB 8F 82            [24] 4554 	mov	dpl,r7
      0013AD 8E 83            [24] 4555 	mov	dph,r6
                                   4556 ;	../../../core/net/mac/lpp.c:770: }
      0013AF E5 81            [12] 4557 	mov	a,sp
      0013B1 24 FB            [12] 4558 	add	a,#0xfb
      0013B3 F5 81            [12] 4559 	mov	sp,a
      0013B5 02r00r00         [24] 4560 	ljmp	__sdcc_banked_ret
                                   4561 ;------------------------------------------------------------
                                   4562 ;Allocation info for local variables in function 'input_packet'
                                   4563 ;------------------------------------------------------------
                                   4564 ;hdr                       Allocated to stack - sp -26
                                   4565 ;reception_time            Allocated to registers 
                                   4566 ;ret                       Allocated to registers 
                                   4567 ;adata                     Allocated to stack - sp -8
                                   4568 ;i                         Allocated to stack - sp -6
                                   4569 ;receiver                  Allocated to stack - sp -3
                                   4570 ;sent                      Allocated to stack - sp +0
                                   4571 ;sloc0                     Allocated to stack - sp -31
                                   4572 ;sloc1                     Allocated to stack - sp -29
                                   4573 ;------------------------------------------------------------
                                   4574 ;	../../../core/net/mac/lpp.c:779: input_packet(void)
                                   4575 ;	-----------------------------------------
                                   4576 ;	 function input_packet
                                   4577 ;	-----------------------------------------
      0013B8                       4578 _input_packet:
      0013B8 E5 81            [12] 4579 	mov	a,sp
      0013BA 24 20            [12] 4580 	add	a,#0x20
      0013BC F5 81            [12] 4581 	mov	sp,a
                                   4582 ;	../../../core/net/mac/lpp.c:785: reception_time = clock_time();
      0013BE 78r00            [12] 4583 	mov	r0,#_clock_time
      0013C0 79s00            [12] 4584 	mov	r1,#(_clock_time >> 8)
      0013C2 7As00            [12] 4585 	mov	r2,#(_clock_time >> 16)
      0013C4 12r00r00         [24] 4586 	lcall	__sdcc_banked_call
      0013C7 AE 82            [24] 4587 	mov	r6,dpl
      0013C9 AF 83            [24] 4588 	mov	r7,dph
                                   4589 ;	../../../core/net/mac/lpp.c:787: if(NETSTACK_FRAMER.parse() < 0) {
      0013CB 90r00r03         [24] 4590 	mov	dptr,#(_framer_802154 + 0x0003)
      0013CE E4               [12] 4591 	clr	a
      0013CF 93               [24] 4592 	movc	a,@a+dptr
      0013D0 FB               [12] 4593 	mov	r3,a
      0013D1 A3               [24] 4594 	inc	dptr
      0013D2 E4               [12] 4595 	clr	a
      0013D3 93               [24] 4596 	movc	a,@a+dptr
      0013D4 FC               [12] 4597 	mov	r4,a
      0013D5 A3               [24] 4598 	inc	dptr
      0013D6 E4               [12] 4599 	clr	a
      0013D7 93               [24] 4600 	movc	a,@a+dptr
      0013D8 FD               [12] 4601 	mov	r5,a
      0013D9 C0 07            [24] 4602 	push	ar7
      0013DB C0 06            [24] 4603 	push	ar6
      0013DD C0 05            [24] 4604 	push	ar5
      0013DF C0 03            [24] 4605 	push	ar3
      0013E1 C0 04            [24] 4606 	push	ar4
      0013E3 C0 05            [24] 4607 	push	ar5
      0013E5 D0 02            [24] 4608 	pop	ar2
      0013E7 D0 01            [24] 4609 	pop	ar1
      0013E9 D0 00            [24] 4610 	pop	ar0
      0013EB 12r00r00         [24] 4611 	lcall	__sdcc_banked_call
      0013EE AC 83            [24] 4612 	mov	r4,dph
      0013F0 D0 05            [24] 4613 	pop	ar5
      0013F2 D0 06            [24] 4614 	pop	ar6
      0013F4 D0 07            [24] 4615 	pop	ar7
      0013F6 EC               [12] 4616 	mov	a,r4
      0013F7 30 E7 23         [24] 4617 	jnb	acc.7,00102$
                                   4618 ;	../../../core/net/mac/lpp.c:788: printf("lpp input_packet framer error\n");
      0013FA C0 07            [24] 4619 	push	ar7
      0013FC C0 06            [24] 4620 	push	ar6
      0013FE 74r18            [12] 4621 	mov	a,#___str_2
      001400 C0 E0            [24] 4622 	push	acc
      001402 74s00            [12] 4623 	mov	a,#(___str_2 >> 8)
      001404 C0 E0            [24] 4624 	push	acc
      001406 74 80            [12] 4625 	mov	a,#0x80
      001408 C0 E0            [24] 4626 	push	acc
      00140A 78r00            [12] 4627 	mov	r0,#_printf
      00140C 79s00            [12] 4628 	mov	r1,#(_printf >> 8)
      00140E 7As00            [12] 4629 	mov	r2,#(_printf >> 16)
      001410 12r00r00         [24] 4630 	lcall	__sdcc_banked_call
      001413 15 81            [12] 4631 	dec	sp
      001415 15 81            [12] 4632 	dec	sp
      001417 15 81            [12] 4633 	dec	sp
      001419 D0 06            [24] 4634 	pop	ar6
      00141B D0 07            [24] 4635 	pop	ar7
      00141D                       4636 00102$:
                                   4637 ;	../../../core/net/mac/lpp.c:791: memcpy(&hdr, packetbuf_dataptr(), sizeof(struct lpp_hdr));;
      00141D C0 06            [24] 4638 	push	ar6
      00141F C0 07            [24] 4639 	push	ar7
      001421 C0 07            [24] 4640 	push	ar7
      001423 C0 06            [24] 4641 	push	ar6
      001425 78r00            [12] 4642 	mov	r0,#_packetbuf_dataptr
      001427 79s00            [12] 4643 	mov	r1,#(_packetbuf_dataptr >> 8)
      001429 7As00            [12] 4644 	mov	r2,#(_packetbuf_dataptr >> 16)
      00142B 12r00r00         [24] 4645 	lcall	__sdcc_banked_call
      00142E AB 82            [24] 4646 	mov	r3,dpl
      001430 AC 83            [24] 4647 	mov	r4,dph
      001432 AD F0            [24] 4648 	mov	r5,b
      001434 D0 06            [24] 4649 	pop	ar6
      001436 D0 07            [24] 4650 	pop	ar7
      001438 E5 81            [12] 4651 	mov	a,sp
      00143A 24 E4            [12] 4652 	add	a,#0xe4
      00143C F9               [12] 4653 	mov	r1,a
      00143D FA               [12] 4654 	mov	r2,a
      00143E 7E 00            [12] 4655 	mov	r6,#0x00
      001440 7F 40            [12] 4656 	mov	r7,#0x40
      001442 C0 07            [24] 4657 	push	ar7
      001444 C0 06            [24] 4658 	push	ar6
      001446 C0 01            [24] 4659 	push	ar1
      001448 74 12            [12] 4660 	mov	a,#0x12
      00144A C0 E0            [24] 4661 	push	acc
      00144C E4               [12] 4662 	clr	a
      00144D C0 E0            [24] 4663 	push	acc
      00144F C0 03            [24] 4664 	push	ar3
      001451 C0 04            [24] 4665 	push	ar4
      001453 C0 05            [24] 4666 	push	ar5
      001455 8A 82            [24] 4667 	mov	dpl,r2
      001457 8E 83            [24] 4668 	mov	dph,r6
      001459 8F F0            [24] 4669 	mov	b,r7
      00145B 78r00            [12] 4670 	mov	r0,#___memcpy
      00145D 79s00            [12] 4671 	mov	r1,#(___memcpy >> 8)
      00145F 7As00            [12] 4672 	mov	r2,#(___memcpy >> 16)
      001461 12r00r00         [24] 4673 	lcall	__sdcc_banked_call
      001464 E5 81            [12] 4674 	mov	a,sp
      001466 24 FB            [12] 4675 	add	a,#0xfb
      001468 F5 81            [12] 4676 	mov	sp,a
                                   4677 ;	../../../core/net/mac/lpp.c:792: packetbuf_hdrreduce(sizeof(struct lpp_hdr));
      00146A 90 00 12         [24] 4678 	mov	dptr,#0x0012
      00146D 78r00            [12] 4679 	mov	r0,#_packetbuf_hdrreduce
      00146F 79s00            [12] 4680 	mov	r1,#(_packetbuf_hdrreduce >> 8)
      001471 7As00            [12] 4681 	mov	r2,#(_packetbuf_hdrreduce >> 16)
      001473 12r00r00         [24] 4682 	lcall	__sdcc_banked_call
      001476 D0 01            [24] 4683 	pop	ar1
      001478 D0 06            [24] 4684 	pop	ar6
      00147A D0 07            [24] 4685 	pop	ar7
                                   4686 ;	../../../core/net/mac/lpp.c:795: if(hdr.type == TYPE_PROBE) {
      00147C 87 06            [24] 4687 	mov	ar6,@r1
      00147E 09               [12] 4688 	inc	r1
      00147F 87 07            [24] 4689 	mov	ar7,@r1
      001481 BE 01 05         [24] 4690 	cjne	r6,#0x01,00191$
      001484 BF 00 02         [24] 4691 	cjne	r7,#0x00,00191$
      001487 80 07            [24] 4692 	sjmp	00192$
      001489                       4693 00191$:
      001489 D0 07            [24] 4694 	pop	ar7
      00148B D0 06            [24] 4695 	pop	ar6
      00148D 02r18r8E         [24] 4696 	ljmp	00125$
      001490                       4697 00192$:
      001490 D0 07            [24] 4698 	pop	ar7
      001492 D0 06            [24] 4699 	pop	ar6
                                   4700 ;	../../../core/net/mac/lpp.c:800: register_encounter(&hdr.sender, reception_time);
      001494 E5 81            [12] 4701 	mov	a,sp
      001496 24 E6            [12] 4702 	add	a,#0xe6
      001498 24 02            [12] 4703 	add	a,#0x02
      00149A FD               [12] 4704 	mov	r5,a
      00149B 7C 00            [12] 4705 	mov	r4,#0x00
      00149D 7B 40            [12] 4706 	mov	r3,#0x40
      00149F C0 06            [24] 4707 	push	ar6
      0014A1 C0 07            [24] 4708 	push	ar7
      0014A3 8D 82            [24] 4709 	mov	dpl,r5
      0014A5 8C 83            [24] 4710 	mov	dph,r4
      0014A7 8B F0            [24] 4711 	mov	b,r3
      0014A9 78r1A            [12] 4712 	mov	r0,#_register_encounter
      0014AB 79s01            [12] 4713 	mov	r1,#(_register_encounter >> 8)
      0014AD 7As00            [12] 4714 	mov	r2,#(_register_encounter >> 16)
      0014AF 12r00r00         [24] 4715 	lcall	__sdcc_banked_call
      0014B2 15 81            [12] 4716 	dec	sp
      0014B4 15 81            [12] 4717 	dec	sp
                                   4718 ;	../../../core/net/mac/lpp.c:803: memcpy(&adata, packetbuf_dataptr(),
      0014B6 78r00            [12] 4719 	mov	r0,#_packetbuf_datalen
      0014B8 79s00            [12] 4720 	mov	r1,#(_packetbuf_datalen >> 8)
      0014BA 7As00            [12] 4721 	mov	r2,#(_packetbuf_datalen >> 16)
      0014BC 12r00r00         [24] 4722 	lcall	__sdcc_banked_call
      0014BF AE 82            [24] 4723 	mov	r6,dpl
      0014C1 AF 83            [24] 4724 	mov	r7,dph
      0014C3 C3               [12] 4725 	clr	c
      0014C4 EE               [12] 4726 	mov	a,r6
      0014C5 94 02            [12] 4727 	subb	a,#0x02
      0014C7 EF               [12] 4728 	mov	a,r7
      0014C8 94 00            [12] 4729 	subb	a,#0x00
      0014CA 50 16            [24] 4730 	jnc	00132$
      0014CC 78r00            [12] 4731 	mov	r0,#_packetbuf_datalen
      0014CE 79s00            [12] 4732 	mov	r1,#(_packetbuf_datalen >> 8)
      0014D0 7As00            [12] 4733 	mov	r2,#(_packetbuf_datalen >> 16)
      0014D2 12r00r00         [24] 4734 	lcall	__sdcc_banked_call
      0014D5 C8               [12] 4735 	xch	a,r0
      0014D6 E5 81            [12] 4736 	mov	a,sp
      0014D8 24 E1            [12] 4737 	add	a,#0xe1
      0014DA C8               [12] 4738 	xch	a,r0
      0014DB A6 82            [24] 4739 	mov	@r0,dpl
      0014DD 08               [12] 4740 	inc	r0
      0014DE A6 83            [24] 4741 	mov	@r0,dph
      0014E0 80 0A            [24] 4742 	sjmp	00133$
      0014E2                       4743 00132$:
      0014E2 E5 81            [12] 4744 	mov	a,sp
      0014E4 24 E1            [12] 4745 	add	a,#0xe1
      0014E6 F8               [12] 4746 	mov	r0,a
      0014E7 76 02            [12] 4747 	mov	@r0,#0x02
      0014E9 08               [12] 4748 	inc	r0
      0014EA 76 00            [12] 4749 	mov	@r0,#0x00
      0014EC                       4750 00133$:
      0014EC 78r00            [12] 4751 	mov	r0,#_packetbuf_dataptr
      0014EE 79s00            [12] 4752 	mov	r1,#(_packetbuf_dataptr >> 8)
      0014F0 7As00            [12] 4753 	mov	r2,#(_packetbuf_dataptr >> 16)
      0014F2 12r00r00         [24] 4754 	lcall	__sdcc_banked_call
      0014F5 AB 82            [24] 4755 	mov	r3,dpl
      0014F7 AC 83            [24] 4756 	mov	r4,dph
      0014F9 AD F0            [24] 4757 	mov	r5,b
      0014FB E5 81            [12] 4758 	mov	a,sp
      0014FD 24 F8            [12] 4759 	add	a,#0xf8
      0014FF FA               [12] 4760 	mov	r2,a
      001500 7E 00            [12] 4761 	mov	r6,#0x00
      001502 7F 40            [12] 4762 	mov	r7,#0x40
      001504 E5 81            [12] 4763 	mov	a,sp
      001506 24 E1            [12] 4764 	add	a,#0xe1
      001508 F8               [12] 4765 	mov	r0,a
      001509 E6               [12] 4766 	mov	a,@r0
      00150A C0 E0            [24] 4767 	push	acc
      00150C 08               [12] 4768 	inc	r0
      00150D E6               [12] 4769 	mov	a,@r0
      00150E C0 E0            [24] 4770 	push	acc
      001510 C0 03            [24] 4771 	push	ar3
      001512 C0 04            [24] 4772 	push	ar4
      001514 C0 05            [24] 4773 	push	ar5
      001516 8A 82            [24] 4774 	mov	dpl,r2
      001518 8E 83            [24] 4775 	mov	dph,r6
      00151A 8F F0            [24] 4776 	mov	b,r7
      00151C 78r00            [12] 4777 	mov	r0,#___memcpy
      00151E 79s00            [12] 4778 	mov	r1,#(___memcpy >> 8)
      001520 7As00            [12] 4779 	mov	r2,#(___memcpy >> 16)
      001522 12r00r00         [24] 4780 	lcall	__sdcc_banked_call
      001525 E5 81            [12] 4781 	mov	a,sp
      001527 24 FB            [12] 4782 	add	a,#0xfb
      001529 F5 81            [12] 4783 	mov	sp,a
                                   4784 ;	../../../core/net/mac/lpp.c:831: if(list_length(queued_packets_list) > 0) {
      00152B 90r00r0E         [24] 4785 	mov	dptr,#_queued_packets_list
      00152E E0               [24] 4786 	movx	a,@dptr
      00152F FD               [12] 4787 	mov	r5,a
      001530 A3               [24] 4788 	inc	dptr
      001531 E0               [24] 4789 	movx	a,@dptr
      001532 FE               [12] 4790 	mov	r6,a
      001533 A3               [24] 4791 	inc	dptr
      001534 E0               [24] 4792 	movx	a,@dptr
      001535 FF               [12] 4793 	mov	r7,a
      001536 8D 82            [24] 4794 	mov	dpl,r5
      001538 8E 83            [24] 4795 	mov	dph,r6
      00153A 8F F0            [24] 4796 	mov	b,r7
      00153C 78r00            [12] 4797 	mov	r0,#_list_length
      00153E 79s00            [12] 4798 	mov	r1,#(_list_length >> 8)
      001540 7As00            [12] 4799 	mov	r2,#(_list_length >> 16)
      001542 12r00r00         [24] 4800 	lcall	__sdcc_banked_call
      001545 AE 82            [24] 4801 	mov	r6,dpl
      001547 AF 83            [24] 4802 	mov	r7,dph
      001549 C3               [12] 4803 	clr	c
      00154A E4               [12] 4804 	clr	a
      00154B 9E               [12] 4805 	subb	a,r6
      00154C 74 80            [12] 4806 	mov	a,#(0x00 ^ 0x80)
      00154E 8F F0            [24] 4807 	mov	b,r7
      001550 63 F0 80         [24] 4808 	xrl	b,#0x80
      001553 95 F0            [12] 4809 	subb	a,b
      001555 40 03            [24] 4810 	jc	00194$
      001557 02r19rB2         [24] 4811 	ljmp	00130$
      00155A                       4812 00194$:
                                   4813 ;	../../../core/net/mac/lpp.c:833: for(i = list_head(queued_packets_list); i != NULL; i = list_item_next(i)) {
      00155A 90r00r0E         [24] 4814 	mov	dptr,#_queued_packets_list
      00155D E0               [24] 4815 	movx	a,@dptr
      00155E FD               [12] 4816 	mov	r5,a
      00155F A3               [24] 4817 	inc	dptr
      001560 E0               [24] 4818 	movx	a,@dptr
      001561 FE               [12] 4819 	mov	r6,a
      001562 A3               [24] 4820 	inc	dptr
      001563 E0               [24] 4821 	movx	a,@dptr
      001564 FF               [12] 4822 	mov	r7,a
      001565 8D 82            [24] 4823 	mov	dpl,r5
      001567 8E 83            [24] 4824 	mov	dph,r6
      001569 8F F0            [24] 4825 	mov	b,r7
      00156B 78r00            [12] 4826 	mov	r0,#_list_head
      00156D 79s00            [12] 4827 	mov	r1,#(_list_head >> 8)
      00156F 7As00            [12] 4828 	mov	r2,#(_list_head >> 16)
      001571 12r00r00         [24] 4829 	lcall	__sdcc_banked_call
      001574 AD 82            [24] 4830 	mov	r5,dpl
      001576 AE 83            [24] 4831 	mov	r6,dph
      001578 AF F0            [24] 4832 	mov	r7,b
      00157A E5 81            [12] 4833 	mov	a,sp
      00157C 24 FA            [12] 4834 	add	a,#0xfa
      00157E F8               [12] 4835 	mov	r0,a
      00157F A6 05            [24] 4836 	mov	@r0,ar5
      001581 08               [12] 4837 	inc	r0
      001582 A6 06            [24] 4838 	mov	@r0,ar6
      001584 08               [12] 4839 	inc	r0
      001585 A6 07            [24] 4840 	mov	@r0,ar7
      001587 E5 81            [12] 4841 	mov	a,sp
      001589 24 E6            [12] 4842 	add	a,#0xe6
      00158B 24 02            [12] 4843 	add	a,#0x02
      00158D FC               [12] 4844 	mov	r4,a
      00158E                       4845 00128$:
      00158E E5 81            [12] 4846 	mov	a,sp
      001590 24 FA            [12] 4847 	add	a,#0xfa
      001592 F8               [12] 4848 	mov	r0,a
      001593 E6               [12] 4849 	mov	a,@r0
      001594 08               [12] 4850 	inc	r0
      001595 46               [12] 4851 	orl	a,@r0
      001596 70 03            [24] 4852 	jnz	00195$
      001598 02r19rB2         [24] 4853 	ljmp	00130$
      00159B                       4854 00195$:
                                   4855 ;	../../../core/net/mac/lpp.c:837: sent = 0;
      00159B A8 81            [24] 4856 	mov	r0,sp
      00159D 76 00            [12] 4857 	mov	@r0,#0x00
                                   4858 ;	../../../core/net/mac/lpp.c:839: receiver = queuebuf_addr(i->packet, PACKETBUF_ADDR_RECEIVER);
      00159F E5 81            [12] 4859 	mov	a,sp
      0015A1 24 FA            [12] 4860 	add	a,#0xfa
      0015A3 F8               [12] 4861 	mov	r0,a
      0015A4 74 03            [12] 4862 	mov	a,#0x03
      0015A6 26               [12] 4863 	add	a,@r0
      0015A7 FA               [12] 4864 	mov	r2,a
      0015A8 E4               [12] 4865 	clr	a
      0015A9 08               [12] 4866 	inc	r0
      0015AA 36               [12] 4867 	addc	a,@r0
      0015AB FB               [12] 4868 	mov	r3,a
      0015AC 08               [12] 4869 	inc	r0
      0015AD 86 07            [24] 4870 	mov	ar7,@r0
      0015AF 8A 82            [24] 4871 	mov	dpl,r2
      0015B1 8B 83            [24] 4872 	mov	dph,r3
      0015B3 8F F0            [24] 4873 	mov	b,r7
      0015B5 12r00r00         [24] 4874 	lcall	__gptrget
      0015B8 FA               [12] 4875 	mov	r2,a
      0015B9 A3               [24] 4876 	inc	dptr
      0015BA 12r00r00         [24] 4877 	lcall	__gptrget
      0015BD FB               [12] 4878 	mov	r3,a
      0015BE A3               [24] 4879 	inc	dptr
      0015BF 12r00r00         [24] 4880 	lcall	__gptrget
      0015C2 FF               [12] 4881 	mov	r7,a
      0015C3 C0 04            [24] 4882 	push	ar4
      0015C5 74 19            [12] 4883 	mov	a,#0x19
      0015C7 C0 E0            [24] 4884 	push	acc
      0015C9 8A 82            [24] 4885 	mov	dpl,r2
      0015CB 8B 83            [24] 4886 	mov	dph,r3
      0015CD 8F F0            [24] 4887 	mov	b,r7
      0015CF 78r00            [12] 4888 	mov	r0,#_queuebuf_addr
      0015D1 79s00            [12] 4889 	mov	r1,#(_queuebuf_addr >> 8)
      0015D3 7As00            [12] 4890 	mov	r2,#(_queuebuf_addr >> 16)
      0015D5 12r00r00         [24] 4891 	lcall	__sdcc_banked_call
      0015D8 AD 82            [24] 4892 	mov	r5,dpl
      0015DA AE 83            [24] 4893 	mov	r6,dph
      0015DC AF F0            [24] 4894 	mov	r7,b
      0015DE 15 81            [12] 4895 	dec	sp
      0015E0 D0 04            [24] 4896 	pop	ar4
      0015E2 E5 81            [12] 4897 	mov	a,sp
      0015E4 24 FD            [12] 4898 	add	a,#0xfd
      0015E6 F8               [12] 4899 	mov	r0,a
      0015E7 A6 05            [24] 4900 	mov	@r0,ar5
      0015E9 08               [12] 4901 	inc	r0
      0015EA A6 06            [24] 4902 	mov	@r0,ar6
      0015EC 08               [12] 4903 	inc	r0
      0015ED A6 07            [24] 4904 	mov	@r0,ar7
                                   4905 ;	../../../core/net/mac/lpp.c:840: if(rimeaddr_cmp(receiver, &hdr.sender) ||
      0015EF 8C 02            [24] 4906 	mov	ar2,r4
      0015F1 7B 00            [12] 4907 	mov	r3,#0x00
      0015F3 7F 40            [12] 4908 	mov	r7,#0x40
      0015F5 C0 04            [24] 4909 	push	ar4
      0015F7 C0 02            [24] 4910 	push	ar2
      0015F9 C0 03            [24] 4911 	push	ar3
      0015FB C0 07            [24] 4912 	push	ar7
      0015FD E5 81            [12] 4913 	mov	a,sp
      0015FF 24 F9            [12] 4914 	add	a,#0xf9
      001601 F8               [12] 4915 	mov	r0,a
      001602 86 82            [24] 4916 	mov	dpl,@r0
      001604 08               [12] 4917 	inc	r0
      001605 86 83            [24] 4918 	mov	dph,@r0
      001607 08               [12] 4919 	inc	r0
      001608 86 F0            [24] 4920 	mov	b,@r0
      00160A 78r00            [12] 4921 	mov	r0,#_rimeaddr_cmp
      00160C 79s00            [12] 4922 	mov	r1,#(_rimeaddr_cmp >> 8)
      00160E 7As00            [12] 4923 	mov	r2,#(_rimeaddr_cmp >> 16)
      001610 12r00r00         [24] 4924 	lcall	__sdcc_banked_call
      001613 AE 82            [24] 4925 	mov	r6,dpl
      001615 AF 83            [24] 4926 	mov	r7,dph
      001617 15 81            [12] 4927 	dec	sp
      001619 15 81            [12] 4928 	dec	sp
      00161B 15 81            [12] 4929 	dec	sp
      00161D D0 04            [24] 4930 	pop	ar4
      00161F EE               [12] 4931 	mov	a,r6
      001620 4F               [12] 4932 	orl	a,r7
      001621 70 37            [24] 4933 	jnz	00112$
                                   4934 ;	../../../core/net/mac/lpp.c:841: rimeaddr_cmp(receiver, &rimeaddr_null)) {
      001623 C0 04            [24] 4935 	push	ar4
      001625 74r00            [12] 4936 	mov	a,#_rimeaddr_null
      001627 C0 E0            [24] 4937 	push	acc
      001629 74s00            [12] 4938 	mov	a,#(_rimeaddr_null >> 8)
      00162B C0 E0            [24] 4939 	push	acc
      00162D 74 80            [12] 4940 	mov	a,#0x80
      00162F C0 E0            [24] 4941 	push	acc
      001631 E5 81            [12] 4942 	mov	a,sp
      001633 24 F9            [12] 4943 	add	a,#0xf9
      001635 F8               [12] 4944 	mov	r0,a
      001636 86 82            [24] 4945 	mov	dpl,@r0
      001638 08               [12] 4946 	inc	r0
      001639 86 83            [24] 4947 	mov	dph,@r0
      00163B 08               [12] 4948 	inc	r0
      00163C 86 F0            [24] 4949 	mov	b,@r0
      00163E 78r00            [12] 4950 	mov	r0,#_rimeaddr_cmp
      001640 79s00            [12] 4951 	mov	r1,#(_rimeaddr_cmp >> 8)
      001642 7As00            [12] 4952 	mov	r2,#(_rimeaddr_cmp >> 16)
      001644 12r00r00         [24] 4953 	lcall	__sdcc_banked_call
      001647 AE 82            [24] 4954 	mov	r6,dpl
      001649 AF 83            [24] 4955 	mov	r7,dph
      00164B 15 81            [12] 4956 	dec	sp
      00164D 15 81            [12] 4957 	dec	sp
      00164F 15 81            [12] 4958 	dec	sp
      001651 D0 04            [24] 4959 	pop	ar4
      001653 EE               [12] 4960 	mov	a,r6
      001654 4F               [12] 4961 	orl	a,r7
      001655 70 03            [24] 4962 	jnz	00197$
      001657 02r18r58         [24] 4963 	ljmp	00129$
      00165A                       4964 00197$:
      00165A                       4965 00112$:
                                   4966 ;	../../../core/net/mac/lpp.c:842: queuebuf_to_packetbuf(i->packet);
      00165A C0 04            [24] 4967 	push	ar4
      00165C E5 81            [12] 4968 	mov	a,sp
      00165E 24 F9            [12] 4969 	add	a,#0xf9
      001660 F8               [12] 4970 	mov	r0,a
      001661 74 03            [12] 4971 	mov	a,#0x03
      001663 26               [12] 4972 	add	a,@r0
      001664 FD               [12] 4973 	mov	r5,a
      001665 E4               [12] 4974 	clr	a
      001666 08               [12] 4975 	inc	r0
      001667 36               [12] 4976 	addc	a,@r0
      001668 FE               [12] 4977 	mov	r6,a
      001669 08               [12] 4978 	inc	r0
      00166A 86 07            [24] 4979 	mov	ar7,@r0
      00166C 8D 82            [24] 4980 	mov	dpl,r5
      00166E 8E 83            [24] 4981 	mov	dph,r6
      001670 8F F0            [24] 4982 	mov	b,r7
      001672 12r00r00         [24] 4983 	lcall	__gptrget
      001675 FA               [12] 4984 	mov	r2,a
      001676 A3               [24] 4985 	inc	dptr
      001677 12r00r00         [24] 4986 	lcall	__gptrget
      00167A FB               [12] 4987 	mov	r3,a
      00167B A3               [24] 4988 	inc	dptr
      00167C 12r00r00         [24] 4989 	lcall	__gptrget
      00167F FC               [12] 4990 	mov	r4,a
      001680 8A 82            [24] 4991 	mov	dpl,r2
      001682 8B 83            [24] 4992 	mov	dph,r3
      001684 8C F0            [24] 4993 	mov	b,r4
      001686 C0 07            [24] 4994 	push	ar7
      001688 C0 06            [24] 4995 	push	ar6
      00168A C0 05            [24] 4996 	push	ar5
      00168C C0 04            [24] 4997 	push	ar4
      00168E 78r00            [12] 4998 	mov	r0,#_queuebuf_to_packetbuf
      001690 79s00            [12] 4999 	mov	r1,#(_queuebuf_to_packetbuf >> 8)
      001692 7As00            [12] 5000 	mov	r2,#(_queuebuf_to_packetbuf >> 16)
      001694 12r00r00         [24] 5001 	lcall	__sdcc_banked_call
      001697 D0 04            [24] 5002 	pop	ar4
      001699 D0 05            [24] 5003 	pop	ar5
      00169B D0 06            [24] 5004 	pop	ar6
      00169D D0 07            [24] 5005 	pop	ar7
                                   5006 ;	../../../core/net/mac/lpp.c:862: i->num_transmissions = 1;
      00169F E5 81            [12] 5007 	mov	a,sp
      0016A1 24 F9            [12] 5008 	add	a,#0xf9
      0016A3 F8               [12] 5009 	mov	r0,a
      0016A4 74 2A            [12] 5010 	mov	a,#0x2a
      0016A6 26               [12] 5011 	add	a,@r0
      0016A7 FA               [12] 5012 	mov	r2,a
      0016A8 E4               [12] 5013 	clr	a
      0016A9 08               [12] 5014 	inc	r0
      0016AA 36               [12] 5015 	addc	a,@r0
      0016AB FB               [12] 5016 	mov	r3,a
      0016AC 08               [12] 5017 	inc	r0
      0016AD 86 04            [24] 5018 	mov	ar4,@r0
      0016AF 8A 82            [24] 5019 	mov	dpl,r2
      0016B1 8B 83            [24] 5020 	mov	dph,r3
      0016B3 8C F0            [24] 5021 	mov	b,r4
      0016B5 74 01            [12] 5022 	mov	a,#0x01
      0016B7 12r00r00         [24] 5023 	lcall	__gptrput
                                   5024 ;	../../../core/net/mac/lpp.c:863: ret = NETSTACK_RADIO.send(queuebuf_dataptr(i->packet),
      0016BA 90r00r09         [24] 5025 	mov	dptr,#(_cc2530_rf_driver + 0x0009)
      0016BD E5 81            [12] 5026 	mov	a,sp
      0016BF 24 E2            [12] 5027 	add	a,#0xe2
      0016C1 F8               [12] 5028 	mov	r0,a
      0016C2 E4               [12] 5029 	clr	a
      0016C3 93               [24] 5030 	movc	a,@a+dptr
      0016C4 F6               [12] 5031 	mov	@r0,a
      0016C5 A3               [24] 5032 	inc	dptr
      0016C6 E4               [12] 5033 	clr	a
      0016C7 93               [24] 5034 	movc	a,@a+dptr
      0016C8 08               [12] 5035 	inc	r0
      0016C9 F6               [12] 5036 	mov	@r0,a
      0016CA A3               [24] 5037 	inc	dptr
      0016CB E4               [12] 5038 	clr	a
      0016CC 93               [24] 5039 	movc	a,@a+dptr
      0016CD 08               [12] 5040 	inc	r0
      0016CE F6               [12] 5041 	mov	@r0,a
                                   5042 ;	../../../core/net/mac/lpp.c:864: queuebuf_datalen(i->packet));
      0016CF 8D 82            [24] 5043 	mov	dpl,r5
      0016D1 8E 83            [24] 5044 	mov	dph,r6
      0016D3 8F F0            [24] 5045 	mov	b,r7
      0016D5 12r00r00         [24] 5046 	lcall	__gptrget
      0016D8 FA               [12] 5047 	mov	r2,a
      0016D9 A3               [24] 5048 	inc	dptr
      0016DA 12r00r00         [24] 5049 	lcall	__gptrget
      0016DD FB               [12] 5050 	mov	r3,a
      0016DE A3               [24] 5051 	inc	dptr
      0016DF 12r00r00         [24] 5052 	lcall	__gptrget
      0016E2 FC               [12] 5053 	mov	r4,a
      0016E3 8A 82            [24] 5054 	mov	dpl,r2
      0016E5 8B 83            [24] 5055 	mov	dph,r3
      0016E7 8C F0            [24] 5056 	mov	b,r4
      0016E9 C0 07            [24] 5057 	push	ar7
      0016EB C0 06            [24] 5058 	push	ar6
      0016ED C0 05            [24] 5059 	push	ar5
      0016EF 78r00            [12] 5060 	mov	r0,#_queuebuf_datalen
      0016F1 79s00            [12] 5061 	mov	r1,#(_queuebuf_datalen >> 8)
      0016F3 7As00            [12] 5062 	mov	r2,#(_queuebuf_datalen >> 16)
      0016F5 12r00r00         [24] 5063 	lcall	__sdcc_banked_call
      0016F8 AB 82            [24] 5064 	mov	r3,dpl
      0016FA AC 83            [24] 5065 	mov	r4,dph
      0016FC D0 05            [24] 5066 	pop	ar5
      0016FE D0 06            [24] 5067 	pop	ar6
      001700 D0 07            [24] 5068 	pop	ar7
                                   5069 ;	../../../core/net/mac/lpp.c:863: ret = NETSTACK_RADIO.send(queuebuf_dataptr(i->packet),
      001702 8D 82            [24] 5070 	mov	dpl,r5
      001704 8E 83            [24] 5071 	mov	dph,r6
      001706 8F F0            [24] 5072 	mov	b,r7
      001708 12r00r00         [24] 5073 	lcall	__gptrget
      00170B FD               [12] 5074 	mov	r5,a
      00170C A3               [24] 5075 	inc	dptr
      00170D 12r00r00         [24] 5076 	lcall	__gptrget
      001710 FE               [12] 5077 	mov	r6,a
      001711 A3               [24] 5078 	inc	dptr
      001712 12r00r00         [24] 5079 	lcall	__gptrget
      001715 FF               [12] 5080 	mov	r7,a
      001716 8D 82            [24] 5081 	mov	dpl,r5
      001718 8E 83            [24] 5082 	mov	dph,r6
      00171A 8F F0            [24] 5083 	mov	b,r7
      00171C C0 04            [24] 5084 	push	ar4
      00171E C0 03            [24] 5085 	push	ar3
      001720 78r00            [12] 5086 	mov	r0,#_queuebuf_dataptr
      001722 79s00            [12] 5087 	mov	r1,#(_queuebuf_dataptr >> 8)
      001724 7As00            [12] 5088 	mov	r2,#(_queuebuf_dataptr >> 16)
      001726 12r00r00         [24] 5089 	lcall	__sdcc_banked_call
      001729 AD 82            [24] 5090 	mov	r5,dpl
      00172B AE 83            [24] 5091 	mov	r6,dph
      00172D AF F0            [24] 5092 	mov	r7,b
      00172F D0 03            [24] 5093 	pop	ar3
      001731 D0 04            [24] 5094 	pop	ar4
      001733 C0 04            [24] 5095 	push	ar4
      001735 C0 03            [24] 5096 	push	ar3
      001737 C0 04            [24] 5097 	push	ar4
      001739 E5 81            [12] 5098 	mov	a,sp
      00173B 24 DF            [12] 5099 	add	a,#0xdf
      00173D F8               [12] 5100 	mov	r0,a
      00173E E6               [12] 5101 	mov	a,@r0
      00173F C0 E0            [24] 5102 	push	acc
      001741 08               [12] 5103 	inc	r0
      001742 E6               [12] 5104 	mov	a,@r0
      001743 C0 E0            [24] 5105 	push	acc
      001745 08               [12] 5106 	inc	r0
      001746 E6               [12] 5107 	mov	a,@r0
      001747 C0 E0            [24] 5108 	push	acc
      001749 8D 82            [24] 5109 	mov	dpl,r5
      00174B 8E 83            [24] 5110 	mov	dph,r6
      00174D 8F F0            [24] 5111 	mov	b,r7
      00174F D0 02            [24] 5112 	pop	ar2
      001751 D0 01            [24] 5113 	pop	ar1
      001753 D0 00            [24] 5114 	pop	ar0
      001755 12r00r00         [24] 5115 	lcall	__sdcc_banked_call
      001758 15 81            [12] 5116 	dec	sp
      00175A 15 81            [12] 5117 	dec	sp
      00175C D0 04            [24] 5118 	pop	ar4
                                   5119 ;	../../../core/net/mac/lpp.c:875: compower_accumulate(&i->compower);
      00175E E5 81            [12] 5120 	mov	a,sp
      001760 24 F9            [12] 5121 	add	a,#0xf9
      001762 F8               [12] 5122 	mov	r0,a
      001763 74 1C            [12] 5123 	mov	a,#0x1c
      001765 26               [12] 5124 	add	a,@r0
      001766 FD               [12] 5125 	mov	r5,a
      001767 E4               [12] 5126 	clr	a
      001768 08               [12] 5127 	inc	r0
      001769 36               [12] 5128 	addc	a,@r0
      00176A FE               [12] 5129 	mov	r6,a
      00176B 08               [12] 5130 	inc	r0
      00176C 86 07            [24] 5131 	mov	ar7,@r0
      00176E 8D 82            [24] 5132 	mov	dpl,r5
      001770 8E 83            [24] 5133 	mov	dph,r6
      001772 8F F0            [24] 5134 	mov	b,r7
      001774 C0 04            [24] 5135 	push	ar4
      001776 78r00            [12] 5136 	mov	r0,#_compower_accumulate
      001778 79s00            [12] 5137 	mov	r1,#(_compower_accumulate >> 8)
      00177A 7As00            [12] 5138 	mov	r2,#(_compower_accumulate >> 16)
      00177C 12r00r00         [24] 5139 	lcall	__sdcc_banked_call
                                   5140 ;	../../../core/net/mac/lpp.c:881: if(!rimeaddr_cmp(receiver, &rimeaddr_null)) {
      00177F 74r00            [12] 5141 	mov	a,#_rimeaddr_null
      001781 C0 E0            [24] 5142 	push	acc
      001783 74s00            [12] 5143 	mov	a,#(_rimeaddr_null >> 8)
      001785 C0 E0            [24] 5144 	push	acc
      001787 74 80            [12] 5145 	mov	a,#0x80
      001789 C0 E0            [24] 5146 	push	acc
      00178B E5 81            [12] 5147 	mov	a,sp
      00178D 24 F8            [12] 5148 	add	a,#0xf8
      00178F F8               [12] 5149 	mov	r0,a
      001790 86 82            [24] 5150 	mov	dpl,@r0
      001792 08               [12] 5151 	inc	r0
      001793 86 83            [24] 5152 	mov	dph,@r0
      001795 08               [12] 5153 	inc	r0
      001796 86 F0            [24] 5154 	mov	b,@r0
      001798 78r00            [12] 5155 	mov	r0,#_rimeaddr_cmp
      00179A 79s00            [12] 5156 	mov	r1,#(_rimeaddr_cmp >> 8)
      00179C 7As00            [12] 5157 	mov	r2,#(_rimeaddr_cmp >> 16)
      00179E 12r00r00         [24] 5158 	lcall	__sdcc_banked_call
      0017A1 AE 82            [24] 5159 	mov	r6,dpl
      0017A3 AF 83            [24] 5160 	mov	r7,dph
      0017A5 15 81            [12] 5161 	dec	sp
      0017A7 15 81            [12] 5162 	dec	sp
      0017A9 15 81            [12] 5163 	dec	sp
      0017AB D0 04            [24] 5164 	pop	ar4
      0017AD D0 04            [24] 5165 	pop	ar4
      0017AF EE               [12] 5166 	mov	a,r6
      0017B0 4F               [12] 5167 	orl	a,r7
      0017B1 60 03            [24] 5168 	jz	00198$
      0017B3 02r18r46         [24] 5169 	ljmp	00109$
      0017B6                       5170 00198$:
                                   5171 ;	../../../core/net/mac/lpp.c:890: if(detect_ack()) {
      0017B6 C0 04            [24] 5172 	push	ar4
      0017B8 78r2C            [12] 5173 	mov	r0,#_detect_ack
      0017BA 79s12            [12] 5174 	mov	r1,#(_detect_ack >> 8)
      0017BC 7As00            [12] 5175 	mov	r2,#(_detect_ack >> 16)
      0017BE 12r00r00         [24] 5176 	lcall	__sdcc_banked_call
      0017C1 E5 82            [12] 5177 	mov	a,dpl
      0017C3 85 83 F0         [24] 5178 	mov	b,dph
      0017C6 D0 04            [24] 5179 	pop	ar4
      0017C8 45 F0            [12] 5180 	orl	a,b
      0017CA 60 22            [24] 5181 	jz	00104$
                                   5182 ;	../../../core/net/mac/lpp.c:891: remove_queued_packet(i, 1);
      0017CC C0 04            [24] 5183 	push	ar4
      0017CE 74 01            [12] 5184 	mov	a,#0x01
      0017D0 C0 E0            [24] 5185 	push	acc
      0017D2 E5 81            [12] 5186 	mov	a,sp
      0017D4 24 F8            [12] 5187 	add	a,#0xf8
      0017D6 F8               [12] 5188 	mov	r0,a
      0017D7 86 82            [24] 5189 	mov	dpl,@r0
      0017D9 08               [12] 5190 	inc	r0
      0017DA 86 83            [24] 5191 	mov	dph,@r0
      0017DC 08               [12] 5192 	inc	r0
      0017DD 86 F0            [24] 5193 	mov	b,@r0
      0017DF 78r87            [12] 5194 	mov	r0,#_remove_queued_packet
      0017E1 79s04            [12] 5195 	mov	r1,#(_remove_queued_packet >> 8)
      0017E3 7As00            [12] 5196 	mov	r2,#(_remove_queued_packet >> 16)
      0017E5 12r00r00         [24] 5197 	lcall	__sdcc_banked_call
      0017E8 15 81            [12] 5198 	dec	sp
      0017EA D0 04            [24] 5199 	pop	ar4
      0017EC 80 1F            [24] 5200 	sjmp	00105$
      0017EE                       5201 00104$:
                                   5202 ;	../../../core/net/mac/lpp.c:893: remove_queued_packet(i, 0);
      0017EE C0 04            [24] 5203 	push	ar4
      0017F0 E4               [12] 5204 	clr	a
      0017F1 C0 E0            [24] 5205 	push	acc
      0017F3 E5 81            [12] 5206 	mov	a,sp
      0017F5 24 F8            [12] 5207 	add	a,#0xf8
      0017F7 F8               [12] 5208 	mov	r0,a
      0017F8 86 82            [24] 5209 	mov	dpl,@r0
      0017FA 08               [12] 5210 	inc	r0
      0017FB 86 83            [24] 5211 	mov	dph,@r0
      0017FD 08               [12] 5212 	inc	r0
      0017FE 86 F0            [24] 5213 	mov	b,@r0
      001800 78r87            [12] 5214 	mov	r0,#_remove_queued_packet
      001802 79s04            [12] 5215 	mov	r1,#(_remove_queued_packet >> 8)
      001804 7As00            [12] 5216 	mov	r2,#(_remove_queued_packet >> 16)
      001806 12r00r00         [24] 5217 	lcall	__sdcc_banked_call
      001809 15 81            [12] 5218 	dec	sp
      00180B D0 04            [24] 5219 	pop	ar4
      00180D                       5220 00105$:
                                   5221 ;	../../../core/net/mac/lpp.c:905: if(is_streaming) {
      00180D 90r00r2B         [24] 5222 	mov	dptr,#_is_streaming
      001810 E0               [24] 5223 	movx	a,@dptr
      001811 60 33            [24] 5224 	jz	00109$
                                   5225 ;	../../../core/net/mac/lpp.c:906: ctimer_set(&stream_probe_timer, STREAM_PROBE_TIME,
      001813 C0 04            [24] 5226 	push	ar4
      001815 E4               [12] 5227 	clr	a
      001816 C0 E0            [24] 5228 	push	acc
      001818 C0 E0            [24] 5229 	push	acc
      00181A C0 E0            [24] 5230 	push	acc
      00181C 74rA9            [12] 5231 	mov	a,#_send_stream_probe
      00181E C0 E0            [24] 5232 	push	acc
      001820 74s0A            [12] 5233 	mov	a,#(_send_stream_probe >> 8)
      001822 C0 E0            [24] 5234 	push	acc
      001824 74s00            [12] 5235 	mov	a,#(_send_stream_probe >> 16)
      001826 C0 E0            [24] 5236 	push	acc
      001828 74 01            [12] 5237 	mov	a,#0x01
      00182A C0 E0            [24] 5238 	push	acc
      00182C E4               [12] 5239 	clr	a
      00182D C0 E0            [24] 5240 	push	acc
      00182F 90r01r8D         [24] 5241 	mov	dptr,#_stream_probe_timer
      001832 75 F0 00         [24] 5242 	mov	b,#0x00
      001835 78r00            [12] 5243 	mov	r0,#_ctimer_set
      001837 79s00            [12] 5244 	mov	r1,#(_ctimer_set >> 8)
      001839 7As00            [12] 5245 	mov	r2,#(_ctimer_set >> 16)
      00183B 12r00r00         [24] 5246 	lcall	__sdcc_banked_call
      00183E E5 81            [12] 5247 	mov	a,sp
      001840 24 F8            [12] 5248 	add	a,#0xf8
      001842 F5 81            [12] 5249 	mov	sp,a
      001844 D0 04            [24] 5250 	pop	ar4
      001846                       5251 00109$:
                                   5252 ;	../../../core/net/mac/lpp.c:912: if(sent) {
      001846 A8 81            [24] 5253 	mov	r0,sp
      001848 E6               [12] 5254 	mov	a,@r0
      001849 60 0D            [24] 5255 	jz	00129$
                                   5256 ;	../../../core/net/mac/lpp.c:913: turn_radio_off();
      00184B C0 04            [24] 5257 	push	ar4
      00184D 78r2C            [12] 5258 	mov	r0,#_turn_radio_off
      00184F 79s00            [12] 5259 	mov	r1,#(_turn_radio_off >> 8)
      001851 7As00            [12] 5260 	mov	r2,#(_turn_radio_off >> 16)
      001853 12r00r00         [24] 5261 	lcall	__sdcc_banked_call
      001856 D0 04            [24] 5262 	pop	ar4
      001858                       5263 00129$:
                                   5264 ;	../../../core/net/mac/lpp.c:833: for(i = list_head(queued_packets_list); i != NULL; i = list_item_next(i)) {
      001858 E5 81            [12] 5265 	mov	a,sp
      00185A 24 FA            [12] 5266 	add	a,#0xfa
      00185C F8               [12] 5267 	mov	r0,a
      00185D 86 05            [24] 5268 	mov	ar5,@r0
      00185F 08               [12] 5269 	inc	r0
      001860 86 06            [24] 5270 	mov	ar6,@r0
      001862 08               [12] 5271 	inc	r0
      001863 86 07            [24] 5272 	mov	ar7,@r0
      001865 8D 82            [24] 5273 	mov	dpl,r5
      001867 8E 83            [24] 5274 	mov	dph,r6
      001869 8F F0            [24] 5275 	mov	b,r7
      00186B C0 04            [24] 5276 	push	ar4
      00186D 78r00            [12] 5277 	mov	r0,#_list_item_next
      00186F 79s00            [12] 5278 	mov	r1,#(_list_item_next >> 8)
      001871 7As00            [12] 5279 	mov	r2,#(_list_item_next >> 16)
      001873 12r00r00         [24] 5280 	lcall	__sdcc_banked_call
      001876 AD 82            [24] 5281 	mov	r5,dpl
      001878 AE 83            [24] 5282 	mov	r6,dph
      00187A AF F0            [24] 5283 	mov	r7,b
      00187C D0 04            [24] 5284 	pop	ar4
      00187E E5 81            [12] 5285 	mov	a,sp
      001880 24 FA            [12] 5286 	add	a,#0xfa
      001882 F8               [12] 5287 	mov	r0,a
      001883 A6 05            [24] 5288 	mov	@r0,ar5
      001885 08               [12] 5289 	inc	r0
      001886 A6 06            [24] 5290 	mov	@r0,ar6
      001888 08               [12] 5291 	inc	r0
      001889 A6 07            [24] 5292 	mov	@r0,ar7
      00188B 02r15r8E         [24] 5293 	ljmp	00128$
      00188E                       5294 00125$:
                                   5295 ;	../../../core/net/mac/lpp.c:929: } else if(hdr.type == TYPE_DATA) {
      00188E E5 81            [12] 5296 	mov	a,sp
      001890 24 E6            [12] 5297 	add	a,#0xe6
      001892 F9               [12] 5298 	mov	r1,a
      001893 87 06            [24] 5299 	mov	ar6,@r1
      001895 09               [12] 5300 	inc	r1
      001896 87 07            [24] 5301 	mov	ar7,@r1
      001898 BE 02 05         [24] 5302 	cjne	r6,#0x02,00202$
      00189B BF 00 02         [24] 5303 	cjne	r7,#0x00,00202$
      00189E 80 03            [24] 5304 	sjmp	00203$
      0018A0                       5305 00202$:
      0018A0 02r19rB2         [24] 5306 	ljmp	00130$
      0018A3                       5307 00203$:
                                   5308 ;	../../../core/net/mac/lpp.c:930: turn_radio_off();
      0018A3 78r2C            [12] 5309 	mov	r0,#_turn_radio_off
      0018A5 79s00            [12] 5310 	mov	r1,#(_turn_radio_off >> 8)
      0018A7 7As00            [12] 5311 	mov	r2,#(_turn_radio_off >> 16)
      0018A9 12r00r00         [24] 5312 	lcall	__sdcc_banked_call
                                   5313 ;	../../../core/net/mac/lpp.c:931: if(!rimeaddr_cmp(&hdr.receiver, &rimeaddr_null)) {
      0018AC E5 81            [12] 5314 	mov	a,sp
      0018AE 24 E6            [12] 5315 	add	a,#0xe6
      0018B0 24 0A            [12] 5316 	add	a,#0x0a
      0018B2 FF               [12] 5317 	mov	r7,a
      0018B3 7E 00            [12] 5318 	mov	r6,#0x00
      0018B5 7D 40            [12] 5319 	mov	r5,#0x40
      0018B7 74r00            [12] 5320 	mov	a,#_rimeaddr_null
      0018B9 C0 E0            [24] 5321 	push	acc
      0018BB 74s00            [12] 5322 	mov	a,#(_rimeaddr_null >> 8)
      0018BD C0 E0            [24] 5323 	push	acc
      0018BF 74 80            [12] 5324 	mov	a,#0x80
      0018C1 C0 E0            [24] 5325 	push	acc
      0018C3 8F 82            [24] 5326 	mov	dpl,r7
      0018C5 8E 83            [24] 5327 	mov	dph,r6
      0018C7 8D F0            [24] 5328 	mov	b,r5
      0018C9 78r00            [12] 5329 	mov	r0,#_rimeaddr_cmp
      0018CB 79s00            [12] 5330 	mov	r1,#(_rimeaddr_cmp >> 8)
      0018CD 7As00            [12] 5331 	mov	r2,#(_rimeaddr_cmp >> 16)
      0018CF 12r00r00         [24] 5332 	lcall	__sdcc_banked_call
      0018D2 AE 82            [24] 5333 	mov	r6,dpl
      0018D4 AF 83            [24] 5334 	mov	r7,dph
      0018D6 15 81            [12] 5335 	dec	sp
      0018D8 15 81            [12] 5336 	dec	sp
      0018DA 15 81            [12] 5337 	dec	sp
      0018DC EE               [12] 5338 	mov	a,r6
      0018DD 4F               [12] 5339 	orl	a,r7
      0018DE 70 59            [24] 5340 	jnz	00121$
                                   5341 ;	../../../core/net/mac/lpp.c:932: if(!rimeaddr_cmp(&hdr.receiver, &rimeaddr_node_addr)) {
      0018E0 E5 81            [12] 5342 	mov	a,sp
      0018E2 24 E6            [12] 5343 	add	a,#0xe6
      0018E4 24 0A            [12] 5344 	add	a,#0x0a
      0018E6 FF               [12] 5345 	mov	r7,a
      0018E7 7E 00            [12] 5346 	mov	r6,#0x00
      0018E9 7D 40            [12] 5347 	mov	r5,#0x40
      0018EB 74r00            [12] 5348 	mov	a,#_rimeaddr_node_addr
      0018ED C0 E0            [24] 5349 	push	acc
      0018EF 74s00            [12] 5350 	mov	a,#(_rimeaddr_node_addr >> 8)
      0018F1 C0 E0            [24] 5351 	push	acc
      0018F3 E4               [12] 5352 	clr	a
      0018F4 C0 E0            [24] 5353 	push	acc
      0018F6 8F 82            [24] 5354 	mov	dpl,r7
      0018F8 8E 83            [24] 5355 	mov	dph,r6
      0018FA 8D F0            [24] 5356 	mov	b,r5
      0018FC 78r00            [12] 5357 	mov	r0,#_rimeaddr_cmp
      0018FE 79s00            [12] 5358 	mov	r1,#(_rimeaddr_cmp >> 8)
      001900 7As00            [12] 5359 	mov	r2,#(_rimeaddr_cmp >> 16)
      001902 12r00r00         [24] 5360 	lcall	__sdcc_banked_call
      001905 AE 82            [24] 5361 	mov	r6,dpl
      001907 AF 83            [24] 5362 	mov	r7,dph
      001909 15 81            [12] 5363 	dec	sp
      00190B 15 81            [12] 5364 	dec	sp
      00190D 15 81            [12] 5365 	dec	sp
      00190F EE               [12] 5366 	mov	a,r6
      001910 4F               [12] 5367 	orl	a,r7
      001911 70 03            [24] 5368 	jnz	00119$
                                   5369 ;	../../../core/net/mac/lpp.c:937: return;
      001913 02r19rB2         [24] 5370 	ljmp	00130$
      001916                       5371 00119$:
                                   5372 ;	../../../core/net/mac/lpp.c:939: packetbuf_set_addr(PACKETBUF_ADDR_RECEIVER, &hdr.receiver);
      001916 E5 81            [12] 5373 	mov	a,sp
      001918 24 E6            [12] 5374 	add	a,#0xe6
      00191A 24 0A            [12] 5375 	add	a,#0x0a
      00191C FF               [12] 5376 	mov	r7,a
      00191D 7E 00            [12] 5377 	mov	r6,#0x00
      00191F 7D 40            [12] 5378 	mov	r5,#0x40
      001921 C0 07            [24] 5379 	push	ar7
      001923 C0 06            [24] 5380 	push	ar6
      001925 C0 05            [24] 5381 	push	ar5
      001927 75 82 19         [24] 5382 	mov	dpl,#0x19
      00192A 78r00            [12] 5383 	mov	r0,#_packetbuf_set_addr
      00192C 79s00            [12] 5384 	mov	r1,#(_packetbuf_set_addr >> 8)
      00192E 7As00            [12] 5385 	mov	r2,#(_packetbuf_set_addr >> 16)
      001930 12r00r00         [24] 5386 	lcall	__sdcc_banked_call
      001933 15 81            [12] 5387 	dec	sp
      001935 15 81            [12] 5388 	dec	sp
      001937 15 81            [12] 5389 	dec	sp
      001939                       5390 00121$:
                                   5391 ;	../../../core/net/mac/lpp.c:941: packetbuf_set_addr(PACKETBUF_ADDR_SENDER, &hdr.sender);
      001939 E5 81            [12] 5392 	mov	a,sp
      00193B 24 E6            [12] 5393 	add	a,#0xe6
      00193D 24 02            [12] 5394 	add	a,#0x02
      00193F FF               [12] 5395 	mov	r7,a
      001940 7E 00            [12] 5396 	mov	r6,#0x00
      001942 7D 40            [12] 5397 	mov	r5,#0x40
      001944 C0 07            [24] 5398 	push	ar7
      001946 C0 06            [24] 5399 	push	ar6
      001948 C0 05            [24] 5400 	push	ar5
      00194A 75 82 18         [24] 5401 	mov	dpl,#0x18
      00194D 78r00            [12] 5402 	mov	r0,#_packetbuf_set_addr
      00194F 79s00            [12] 5403 	mov	r1,#(_packetbuf_set_addr >> 8)
      001951 7As00            [12] 5404 	mov	r2,#(_packetbuf_set_addr >> 16)
      001953 12r00r00         [24] 5405 	lcall	__sdcc_banked_call
      001956 15 81            [12] 5406 	dec	sp
      001958 15 81            [12] 5407 	dec	sp
      00195A 15 81            [12] 5408 	dec	sp
                                   5409 ;	../../../core/net/mac/lpp.c:948: compower_accumulate(&current_packet);
      00195C 90r00r01         [24] 5410 	mov	dptr,#_current_packet
      00195F 75 F0 00         [24] 5411 	mov	b,#0x00
      001962 78r00            [12] 5412 	mov	r0,#_compower_accumulate
      001964 79s00            [12] 5413 	mov	r1,#(_compower_accumulate >> 8)
      001966 7As00            [12] 5414 	mov	r2,#(_compower_accumulate >> 16)
      001968 12r00r00         [24] 5415 	lcall	__sdcc_banked_call
                                   5416 ;	../../../core/net/mac/lpp.c:953: compower_attrconv(&current_packet);
      00196B 90r00r01         [24] 5417 	mov	dptr,#_current_packet
      00196E 75 F0 00         [24] 5418 	mov	b,#0x00
      001971 78r00            [12] 5419 	mov	r0,#_compower_attrconv
      001973 79s00            [12] 5420 	mov	r1,#(_compower_attrconv >> 8)
      001975 7As00            [12] 5421 	mov	r2,#(_compower_attrconv >> 16)
      001977 12r00r00         [24] 5422 	lcall	__sdcc_banked_call
                                   5423 ;	../../../core/net/mac/lpp.c:957: compower_clear(&current_packet);
      00197A 90r00r01         [24] 5424 	mov	dptr,#_current_packet
      00197D 75 F0 00         [24] 5425 	mov	b,#0x00
      001980 78r00            [12] 5426 	mov	r0,#_compower_clear
      001982 79s00            [12] 5427 	mov	r1,#(_compower_clear >> 8)
      001984 7As00            [12] 5428 	mov	r2,#(_compower_clear >> 16)
      001986 12r00r00         [24] 5429 	lcall	__sdcc_banked_call
                                   5430 ;	../../../core/net/mac/lpp.c:1000: NETSTACK_MAC.input();
      001989 90r00r09         [24] 5431 	mov	dptr,#(_csma_driver + 0x0009)
      00198C E4               [12] 5432 	clr	a
      00198D 93               [24] 5433 	movc	a,@a+dptr
      00198E FD               [12] 5434 	mov	r5,a
      00198F A3               [24] 5435 	inc	dptr
      001990 E4               [12] 5436 	clr	a
      001991 93               [24] 5437 	movc	a,@a+dptr
      001992 FE               [12] 5438 	mov	r6,a
      001993 A3               [24] 5439 	inc	dptr
      001994 E4               [12] 5440 	clr	a
      001995 93               [24] 5441 	movc	a,@a+dptr
      001996 FF               [12] 5442 	mov	r7,a
      001997 C0 07            [24] 5443 	push	ar7
      001999 C0 06            [24] 5444 	push	ar6
      00199B C0 05            [24] 5445 	push	ar5
      00199D C0 05            [24] 5446 	push	ar5
      00199F C0 06            [24] 5447 	push	ar6
      0019A1 C0 07            [24] 5448 	push	ar7
      0019A3 D0 02            [24] 5449 	pop	ar2
      0019A5 D0 01            [24] 5450 	pop	ar1
      0019A7 D0 00            [24] 5451 	pop	ar0
      0019A9 12r00r00         [24] 5452 	lcall	__sdcc_banked_call
      0019AC D0 05            [24] 5453 	pop	ar5
      0019AE D0 06            [24] 5454 	pop	ar6
      0019B0 D0 07            [24] 5455 	pop	ar7
      0019B2                       5456 00130$:
                                   5457 ;	../../../core/net/mac/lpp.c:1002: }
      0019B2 E5 81            [12] 5458 	mov	a,sp
      0019B4 24 E0            [12] 5459 	add	a,#0xe0
      0019B6 F5 81            [12] 5460 	mov	sp,a
      0019B8 02r00r00         [24] 5461 	ljmp	__sdcc_banked_ret
                                   5462 ;------------------------------------------------------------
                                   5463 ;Allocation info for local variables in function 'on'
                                   5464 ;------------------------------------------------------------
                                   5465 ;	../../../core/net/mac/lpp.c:1005: on(void)
                                   5466 ;	-----------------------------------------
                                   5467 ;	 function on
                                   5468 ;	-----------------------------------------
      0019BB                       5469 _on:
                                   5470 ;	../../../core/net/mac/lpp.c:1007: lpp_is_on = 1;
      0019BB 90r00r00         [24] 5471 	mov	dptr,#_lpp_is_on
      0019BE 74 01            [12] 5472 	mov	a,#0x01
      0019C0 F0               [24] 5473 	movx	@dptr,a
                                   5474 ;	../../../core/net/mac/lpp.c:1008: turn_radio_on();
      0019C1 78r00            [12] 5475 	mov	r0,#_turn_radio_on
      0019C3 79s00            [12] 5476 	mov	r1,#(_turn_radio_on >> 8)
      0019C5 7As00            [12] 5477 	mov	r2,#(_turn_radio_on >> 16)
      0019C7 12r00r00         [24] 5478 	lcall	__sdcc_banked_call
                                   5479 ;	../../../core/net/mac/lpp.c:1009: return 1;
      0019CA 90 00 01         [24] 5480 	mov	dptr,#0x0001
                                   5481 ;	../../../core/net/mac/lpp.c:1010: }
      0019CD 02r00r00         [24] 5482 	ljmp	__sdcc_banked_ret
                                   5483 ;------------------------------------------------------------
                                   5484 ;Allocation info for local variables in function 'off'
                                   5485 ;------------------------------------------------------------
                                   5486 ;keep_radio_on             Allocated to registers r6 r7 
                                   5487 ;------------------------------------------------------------
                                   5488 ;	../../../core/net/mac/lpp.c:1013: off(int keep_radio_on)
                                   5489 ;	-----------------------------------------
                                   5490 ;	 function off
                                   5491 ;	-----------------------------------------
      0019D0                       5492 _off:
      0019D0 AE 82            [24] 5493 	mov	r6,dpl
      0019D2 AF 83            [24] 5494 	mov	r7,dph
                                   5495 ;	../../../core/net/mac/lpp.c:1015: lpp_is_on = 0;
      0019D4 90r00r00         [24] 5496 	mov	dptr,#_lpp_is_on
      0019D7 E4               [12] 5497 	clr	a
      0019D8 F0               [24] 5498 	movx	@dptr,a
                                   5499 ;	../../../core/net/mac/lpp.c:1016: if(keep_radio_on) {
      0019D9 EE               [12] 5500 	mov	a,r6
      0019DA 4F               [12] 5501 	orl	a,r7
      0019DB 60 0B            [24] 5502 	jz	00102$
                                   5503 ;	../../../core/net/mac/lpp.c:1017: turn_radio_on();
      0019DD 78r00            [12] 5504 	mov	r0,#_turn_radio_on
      0019DF 79s00            [12] 5505 	mov	r1,#(_turn_radio_on >> 8)
      0019E1 7As00            [12] 5506 	mov	r2,#(_turn_radio_on >> 16)
      0019E3 12r00r00         [24] 5507 	lcall	__sdcc_banked_call
      0019E6 80 09            [24] 5508 	sjmp	00103$
      0019E8                       5509 00102$:
                                   5510 ;	../../../core/net/mac/lpp.c:1019: turn_radio_off();
      0019E8 78r2C            [12] 5511 	mov	r0,#_turn_radio_off
      0019EA 79s00            [12] 5512 	mov	r1,#(_turn_radio_off >> 8)
      0019EC 7As00            [12] 5513 	mov	r2,#(_turn_radio_off >> 16)
      0019EE 12r00r00         [24] 5514 	lcall	__sdcc_banked_call
      0019F1                       5515 00103$:
                                   5516 ;	../../../core/net/mac/lpp.c:1021: return 1;
      0019F1 90 00 01         [24] 5517 	mov	dptr,#0x0001
                                   5518 ;	../../../core/net/mac/lpp.c:1022: }
      0019F4 02r00r00         [24] 5519 	ljmp	__sdcc_banked_ret
                                   5520 ;------------------------------------------------------------
                                   5521 ;Allocation info for local variables in function 'channel_check_interval'
                                   5522 ;------------------------------------------------------------
                                   5523 ;	../../../core/net/mac/lpp.c:1025: channel_check_interval(void)
                                   5524 ;	-----------------------------------------
                                   5525 ;	 function channel_check_interval
                                   5526 ;	-----------------------------------------
      0019F7                       5527 _channel_check_interval:
                                   5528 ;	../../../core/net/mac/lpp.c:1027: return OFF_TIME + LISTEN_TIME;
      0019F7 90 00 10         [24] 5529 	mov	dptr,#0x0010
                                   5530 ;	../../../core/net/mac/lpp.c:1028: }
      0019FA 02r00r00         [24] 5531 	ljmp	__sdcc_banked_ret
                                   5532 ;------------------------------------------------------------
                                   5533 ;Allocation info for local variables in function 'init'
                                   5534 ;------------------------------------------------------------
                                   5535 ;	../../../core/net/mac/lpp.c:1031: init(void)
                                   5536 ;	-----------------------------------------
                                   5537 ;	 function init
                                   5538 ;	-----------------------------------------
      0019FD                       5539 _init:
                                   5540 ;	../../../core/net/mac/lpp.c:1033: restart_dutycycle(random_rand() % OFF_TIME);
      0019FD 78r00            [12] 5541 	mov	r0,#_random_rand
      0019FF 79s00            [12] 5542 	mov	r1,#(_random_rand >> 8)
      001A01 7As00            [12] 5543 	mov	r2,#(_random_rand >> 16)
      001A03 12r00r00         [24] 5544 	lcall	__sdcc_banked_call
      001A06 AE 82            [24] 5545 	mov	r6,dpl
      001A08 AF 83            [24] 5546 	mov	r7,dph
      001A0A 74 0F            [12] 5547 	mov	a,#0x0f
      001A0C C0 E0            [24] 5548 	push	acc
      001A0E E4               [12] 5549 	clr	a
      001A0F C0 E0            [24] 5550 	push	acc
      001A11 8E 82            [24] 5551 	mov	dpl,r6
      001A13 8F 83            [24] 5552 	mov	dph,r7
      001A15 12r00r00         [24] 5553 	lcall	__moduint
      001A18 AE 82            [24] 5554 	mov	r6,dpl
      001A1A AF 83            [24] 5555 	mov	r7,dph
      001A1C 15 81            [12] 5556 	dec	sp
      001A1E 15 81            [12] 5557 	dec	sp
      001A20 8E 82            [24] 5558 	mov	dpl,r6
      001A22 8F 83            [24] 5559 	mov	dph,r7
      001A24 78r61            [12] 5560 	mov	r0,#_restart_dutycycle
      001A26 79s0D            [12] 5561 	mov	r1,#(_restart_dutycycle >> 8)
      001A28 7As00            [12] 5562 	mov	r2,#(_restart_dutycycle >> 16)
      001A2A 12r00r00         [24] 5563 	lcall	__sdcc_banked_call
                                   5564 ;	../../../core/net/mac/lpp.c:1035: lpp_is_on = 1;
      001A2D 90r00r00         [24] 5565 	mov	dptr,#_lpp_is_on
      001A30 74 01            [12] 5566 	mov	a,#0x01
      001A32 F0               [24] 5567 	movx	@dptr,a
                                   5568 ;	../../../core/net/mac/lpp.c:1037: announcement_register_listen_callback(listen_callback);
      001A33 90r06rFC         [24] 5569 	mov	dptr,#_listen_callback
      001A36 75 F0s00         [24] 5570 	mov	b,#(_listen_callback >> 16)
      001A39 78r00            [12] 5571 	mov	r0,#_announcement_register_listen_callback
      001A3B 79s00            [12] 5572 	mov	r1,#(_announcement_register_listen_callback >> 8)
      001A3D 7As00            [12] 5573 	mov	r2,#(_announcement_register_listen_callback >> 16)
      001A3F 12r00r00         [24] 5574 	lcall	__sdcc_banked_call
                                   5575 ;	../../../core/net/mac/lpp.c:1039: memb_init(&queued_packets_memb);
      001A42 90r00r11         [24] 5576 	mov	dptr,#_queued_packets_memb
      001A45 75 F0 00         [24] 5577 	mov	b,#0x00
      001A48 78r00            [12] 5578 	mov	r0,#_memb_init
      001A4A 79s00            [12] 5579 	mov	r1,#(_memb_init >> 8)
      001A4C 7As00            [12] 5580 	mov	r2,#(_memb_init >> 16)
      001A4E 12r00r00         [24] 5581 	lcall	__sdcc_banked_call
                                   5582 ;	../../../core/net/mac/lpp.c:1040: list_init(queued_packets_list);
      001A51 90r00r0E         [24] 5583 	mov	dptr,#_queued_packets_list
      001A54 E0               [24] 5584 	movx	a,@dptr
      001A55 FD               [12] 5585 	mov	r5,a
      001A56 A3               [24] 5586 	inc	dptr
      001A57 E0               [24] 5587 	movx	a,@dptr
      001A58 FE               [12] 5588 	mov	r6,a
      001A59 A3               [24] 5589 	inc	dptr
      001A5A E0               [24] 5590 	movx	a,@dptr
      001A5B FF               [12] 5591 	mov	r7,a
      001A5C 8D 82            [24] 5592 	mov	dpl,r5
      001A5E 8E 83            [24] 5593 	mov	dph,r6
      001A60 8F F0            [24] 5594 	mov	b,r7
      001A62 78r00            [12] 5595 	mov	r0,#_list_init
      001A64 79s00            [12] 5596 	mov	r1,#(_list_init >> 8)
      001A66 7As00            [12] 5597 	mov	r2,#(_list_init >> 16)
      001A68 12r00r00         [24] 5598 	lcall	__sdcc_banked_call
                                   5599 ;	../../../core/net/mac/lpp.c:1041: list_init(pending_packets_list);
      001A6B 90r00r08         [24] 5600 	mov	dptr,#_pending_packets_list
      001A6E E0               [24] 5601 	movx	a,@dptr
      001A6F FD               [12] 5602 	mov	r5,a
      001A70 A3               [24] 5603 	inc	dptr
      001A71 E0               [24] 5604 	movx	a,@dptr
      001A72 FE               [12] 5605 	mov	r6,a
      001A73 A3               [24] 5606 	inc	dptr
      001A74 E0               [24] 5607 	movx	a,@dptr
      001A75 FF               [12] 5608 	mov	r7,a
      001A76 8D 82            [24] 5609 	mov	dpl,r5
      001A78 8E 83            [24] 5610 	mov	dph,r6
      001A7A 8F F0            [24] 5611 	mov	b,r7
      001A7C 78r00            [12] 5612 	mov	r0,#_list_init
      001A7E 79s00            [12] 5613 	mov	r1,#(_list_init >> 8)
      001A80 7As00            [12] 5614 	mov	r2,#(_list_init >> 16)
      001A82 12r00r00         [24] 5615 	lcall	__sdcc_banked_call
                                   5616 ;	../../../core/net/mac/lpp.c:1042: }
      001A85 02r00r00         [24] 5617 	ljmp	__sdcc_banked_ret
                                   5618 	.area CSEG    (CODE)
                                   5619 	.area CONST   (CODE)
      000000                       5620 ___str_0:
      000000 6E 75 6C 6C 20 70 61  5621 	.ascii "null packet"
             63 6B 65 74
      00000B 0A                    5622 	.db 0x0a
      00000C 00                    5623 	.db 0x00
      00000D                       5624 ___str_1:
      00000D 69 20 3D 3D 20 4E 55  5625 	.ascii "i == NULL"
             4C 4C
      000016 0A                    5626 	.db 0x0a
      000017 00                    5627 	.db 0x00
      000018                       5628 ___str_2:
      000018 6C 70 70 20 69 6E 70  5629 	.ascii "lpp input_packet framer error"
             75 74 5F 70 61 63 6B
             65 74 20 66 72 61 6D
             65 72 20 65 72 72 6F
             72
      000035 0A                    5630 	.db 0x0a
      000036 00                    5631 	.db 0x00
      000037                       5632 _lpp_driver:
      000037r4Fs00 80              5633 	.byte __str_3, (__str_3 >> 8),#0x80
      00003ArFDs19s00              5634 	.byte _init, (_init >> 8), (_init >> 16)
      00003Dr9Fs0Ds00              5635 	.byte _send_packet, (_send_packet >> 8), (_send_packet >> 16)
      000040rB1s11s00              5636 	.byte _send_list, (_send_list >> 8), (_send_list >> 16)
      000043rB8s13s00              5637 	.byte _input_packet, (_input_packet >> 8), (_input_packet >> 16)
      000046rBBs19s00              5638 	.byte _on, (_on >> 8), (_on >> 16)
      000049rD0s19s00              5639 	.byte _off, (_off >> 8), (_off >> 16)
      00004CrF7s19s00              5640 	.byte _channel_check_interval, (_channel_check_interval >> 8), (_channel_check_interval >> 16)
      00004F                       5641 __str_3:
      00004F 4C 50 50              5642 	.ascii "LPP"
      000052 00                    5643 	.db 0x00
                                   5644 	.area XINIT   (CODE)
      000000                       5645 __xinit__is_listening:
      000000 00                    5646 	.db #0x00	; 0
      000001                       5647 __xinit__off_time_adjustment:
      000001 00 00                 5648 	.byte #0x00,#0x00	; 0
      000003                       5649 __xinit__off_time:
      000003 0F 00                 5650 	.byte #0x0f,#0x00	; 15
      000005                       5651 __xinit__pending_packets_list_list:
                                   5652 ; generic printIvalPtr
      000005 00 00 00              5653 	.byte #0x00,#0x00,#0x00
      000008                       5654 __xinit__pending_packets_list:
      000008r05s00 00              5655 	.byte _pending_packets_list_list, (_pending_packets_list_list >> 8),#0x00
      00000B                       5656 __xinit__queued_packets_list_list:
                                   5657 ; generic printIvalPtr
      00000B 00 00 00              5658 	.byte #0x00,#0x00,#0x00
      00000E                       5659 __xinit__queued_packets_list:
      00000Er0Bs00 00              5660 	.byte _queued_packets_list_list, (_queued_packets_list_list >> 8),#0x00
      000011                       5661 __xinit__queued_packets_memb:
      000011 2B 00                 5662 	.byte #0x2b,#0x00	; 43
      000013 03 00                 5663 	.byte #0x03,#0x00	; 3
      000015r21s00 00              5664 	.byte _queued_packets_memb_memb_count, (_queued_packets_memb_memb_count >> 8),#0x00
      000018r24s00 00              5665 	.byte _queued_packets_memb_memb_mem, (_queued_packets_memb_memb_mem >> 8),#0x00
      00001B                       5666 __xinit__encounter_list_list:
                                   5667 ; generic printIvalPtr
      00001B 00 00 00              5668 	.byte #0x00,#0x00,#0x00
      00001E                       5669 __xinit__encounter_list:
      00001Er1Bs00 00              5670 	.byte _encounter_list_list, (_encounter_list_list >> 8),#0x00
      000021                       5671 __xinit__encounter_memb:
      000021 39 00                 5672 	.byte #0x39,#0x00	; 57
      000023 04 00                 5673 	.byte #0x04,#0x00	; 4
      000025rA5s00 00              5674 	.byte _encounter_memb_memb_count, (_encounter_memb_memb_count >> 8),#0x00
      000028rA9s00 00              5675 	.byte _encounter_memb_memb_mem, (_encounter_memb_memb_mem >> 8),#0x00
      00002B                       5676 __xinit__is_streaming:
      00002B 00                    5677 	.db #0x00	; 0
                                   5678 	.area CABS    (ABS,CODE)
