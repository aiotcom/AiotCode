                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.4 #10774 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module crc16
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _crc16_data
                                     12 	.globl _crc16_add
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 	.area RSEG    (ABS,DATA)
      000000                         17 	.org 0x0000
                                     18 ;--------------------------------------------------------
                                     19 ; special function bits
                                     20 ;--------------------------------------------------------
                                     21 	.area RSEG    (ABS,DATA)
      000000                         22 	.org 0x0000
                                     23 ;--------------------------------------------------------
                                     24 ; overlayable register banks
                                     25 ;--------------------------------------------------------
                                     26 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         27 	.ds 8
                                     28 ;--------------------------------------------------------
                                     29 ; internal ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DSEG    (DATA)
                                     32 ;--------------------------------------------------------
                                     33 ; overlayable items in internal ram 
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; indirectly addressable internal ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area ISEG    (DATA)
                                     39 ;--------------------------------------------------------
                                     40 ; absolute internal ram data
                                     41 ;--------------------------------------------------------
                                     42 	.area IABS    (ABS,DATA)
                                     43 	.area IABS    (ABS,DATA)
                                     44 ;--------------------------------------------------------
                                     45 ; bit data
                                     46 ;--------------------------------------------------------
                                     47 	.area BSEG    (BIT)
                                     48 ;--------------------------------------------------------
                                     49 ; paged external ram data
                                     50 ;--------------------------------------------------------
                                     51 	.area PSEG    (PAG,XDATA)
                                     52 ;--------------------------------------------------------
                                     53 ; external ram data
                                     54 ;--------------------------------------------------------
                                     55 	.area XSEG    (XDATA)
                                     56 ;--------------------------------------------------------
                                     57 ; absolute external ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area XABS    (ABS,XDATA)
                                     60 ;--------------------------------------------------------
                                     61 ; external initialized ram data
                                     62 ;--------------------------------------------------------
                                     63 	.area XISEG   (XDATA)
                                     64 	.area HOME    (CODE)
                                     65 	.area GSINIT0 (CODE)
                                     66 	.area GSINIT1 (CODE)
                                     67 	.area GSINIT2 (CODE)
                                     68 	.area GSINIT3 (CODE)
                                     69 	.area GSINIT4 (CODE)
                                     70 	.area GSINIT5 (CODE)
                                     71 	.area GSINIT  (CODE)
                                     72 	.area GSFINAL (CODE)
                                     73 	.area CSEG    (CODE)
                                     74 ;--------------------------------------------------------
                                     75 ; global & static initialisations
                                     76 ;--------------------------------------------------------
                                     77 	.area HOME    (CODE)
                                     78 	.area GSINIT  (CODE)
                                     79 	.area GSFINAL (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 ;--------------------------------------------------------
                                     82 ; Home
                                     83 ;--------------------------------------------------------
                                     84 	.area HOME    (CODE)
                                     85 	.area HOME    (CODE)
                                     86 ;--------------------------------------------------------
                                     87 ; code
                                     88 ;--------------------------------------------------------
                                     89 	.area BANK1   (CODE)
                                     90 ;------------------------------------------------------------
                                     91 ;Allocation info for local variables in function 'crc16_add'
                                     92 ;------------------------------------------------------------
                                     93 ;acc                       Allocated to stack - sp -4
                                     94 ;b                         Allocated to registers r7 
                                     95 ;------------------------------------------------------------
                                     96 ;	../../../core/lib/crc16.c:47: crc16_add(unsigned char b, unsigned short acc)
                                     97 ;	-----------------------------------------
                                     98 ;	 function crc16_add
                                     99 ;	-----------------------------------------
      000000                        100 _crc16_add:
                           000007   101 	ar7 = 0x07
                           000006   102 	ar6 = 0x06
                           000005   103 	ar5 = 0x05
                           000004   104 	ar4 = 0x04
                           000003   105 	ar3 = 0x03
                           000002   106 	ar2 = 0x02
                           000001   107 	ar1 = 0x01
                           000000   108 	ar0 = 0x00
      000000 AF 82            [24]  109 	mov	r7,dpl
                                    110 ;	../../../core/lib/crc16.c:57: acc ^= b;
      000002 7E 00            [12]  111 	mov	r6,#0x00
      000004 E5 81            [12]  112 	mov	a,sp
      000006 24 FC            [12]  113 	add	a,#0xfc
      000008 F8               [12]  114 	mov	r0,a
      000009 EF               [12]  115 	mov	a,r7
      00000A 66               [12]  116 	xrl	a,@r0
      00000B F6               [12]  117 	mov	@r0,a
      00000C EE               [12]  118 	mov	a,r6
      00000D 08               [12]  119 	inc	r0
      00000E 66               [12]  120 	xrl	a,@r0
      00000F F6               [12]  121 	mov	@r0,a
                                    122 ;	../../../core/lib/crc16.c:58: acc  = (acc >> 8) | (acc << 8);
      000010 E5 81            [12]  123 	mov	a,sp
      000012 24 FC            [12]  124 	add	a,#0xfc
      000014 F8               [12]  125 	mov	r0,a
      000015 E6               [12]  126 	mov	a,@r0
      000016 08               [12]  127 	inc	r0
      000017 18               [12]  128 	dec	r0
      000018 E6               [12]  129 	mov  a,@r0
      000019 08               [12]  130 	inc	r0
      00001A F6               [12]  131 	mov	@r0,a
                                    132 ;	../../../core/lib/crc16.c:59: acc ^= (acc & 0xff00) << 4;
      00001B E5 81            [12]  133 	mov	a,sp
      00001D 24 FC            [12]  134 	add	a,#0xfc
      00001F F8               [12]  135 	mov	r0,a
      000020 7E 00            [12]  136 	mov	r6,#0x00
      000022 08               [12]  137 	inc	r0
      000023 E6               [12]  138 	mov	a,@r0
      000024 C4               [12]  139 	swap	a
      000025 54 F0            [12]  140 	anl	a,#0xf0
      000027 CE               [12]  141 	xch	a,r6
      000028 C4               [12]  142 	swap	a
      000029 CE               [12]  143 	xch	a,r6
      00002A 6E               [12]  144 	xrl	a,r6
      00002B CE               [12]  145 	xch	a,r6
      00002C 54 F0            [12]  146 	anl	a,#0xf0
      00002E CE               [12]  147 	xch	a,r6
      00002F 6E               [12]  148 	xrl	a,r6
      000030 FF               [12]  149 	mov	r7,a
      000031 E5 81            [12]  150 	mov	a,sp
      000033 24 FC            [12]  151 	add	a,#0xfc
      000035 F8               [12]  152 	mov	r0,a
      000036 EE               [12]  153 	mov	a,r6
      000037 66               [12]  154 	xrl	a,@r0
      000038 F6               [12]  155 	mov	@r0,a
      000039 EF               [12]  156 	mov	a,r7
      00003A 08               [12]  157 	inc	r0
      00003B 66               [12]  158 	xrl	a,@r0
      00003C F6               [12]  159 	mov	@r0,a
                                    160 ;	../../../core/lib/crc16.c:60: acc ^= (acc >> 8) >> 4;
      00003D E5 81            [12]  161 	mov	a,sp
      00003F 24 FC            [12]  162 	add	a,#0xfc
      000041 F8               [12]  163 	mov	r0,a
      000042 08               [12]  164 	inc	r0
      000043 86 06            [24]  165 	mov	ar6,@r0
      000045 E4               [12]  166 	clr	a
      000046 C4               [12]  167 	swap	a
      000047 CE               [12]  168 	xch	a,r6
      000048 C4               [12]  169 	swap	a
      000049 54 0F            [12]  170 	anl	a,#0x0f
      00004B 6E               [12]  171 	xrl	a,r6
      00004C CE               [12]  172 	xch	a,r6
      00004D 54 0F            [12]  173 	anl	a,#0x0f
      00004F CE               [12]  174 	xch	a,r6
      000050 6E               [12]  175 	xrl	a,r6
      000051 CE               [12]  176 	xch	a,r6
      000052 FF               [12]  177 	mov	r7,a
      000053 E5 81            [12]  178 	mov	a,sp
      000055 24 FC            [12]  179 	add	a,#0xfc
      000057 F8               [12]  180 	mov	r0,a
      000058 EE               [12]  181 	mov	a,r6
      000059 66               [12]  182 	xrl	a,@r0
      00005A F6               [12]  183 	mov	@r0,a
      00005B EF               [12]  184 	mov	a,r7
      00005C 08               [12]  185 	inc	r0
      00005D 66               [12]  186 	xrl	a,@r0
      00005E F6               [12]  187 	mov	@r0,a
                                    188 ;	../../../core/lib/crc16.c:61: acc ^= (acc & 0xff00) >> 5;
      00005F E5 81            [12]  189 	mov	a,sp
      000061 24 FC            [12]  190 	add	a,#0xfc
      000063 F8               [12]  191 	mov	r0,a
      000064 7E 00            [12]  192 	mov	r6,#0x00
      000066 08               [12]  193 	inc	r0
      000067 E6               [12]  194 	mov	a,@r0
      000068 C4               [12]  195 	swap	a
      000069 03               [12]  196 	rr	a
      00006A CE               [12]  197 	xch	a,r6
      00006B C4               [12]  198 	swap	a
      00006C 03               [12]  199 	rr	a
      00006D 54 07            [12]  200 	anl	a,#0x07
      00006F 6E               [12]  201 	xrl	a,r6
      000070 CE               [12]  202 	xch	a,r6
      000071 54 07            [12]  203 	anl	a,#0x07
      000073 CE               [12]  204 	xch	a,r6
      000074 6E               [12]  205 	xrl	a,r6
      000075 CE               [12]  206 	xch	a,r6
      000076 FF               [12]  207 	mov	r7,a
      000077 E5 81            [12]  208 	mov	a,sp
      000079 24 FC            [12]  209 	add	a,#0xfc
      00007B F8               [12]  210 	mov	r0,a
      00007C EE               [12]  211 	mov	a,r6
      00007D 66               [12]  212 	xrl	a,@r0
      00007E F6               [12]  213 	mov	@r0,a
      00007F EF               [12]  214 	mov	a,r7
      000080 08               [12]  215 	inc	r0
      000081 66               [12]  216 	xrl	a,@r0
      000082 F6               [12]  217 	mov	@r0,a
                                    218 ;	../../../core/lib/crc16.c:62: return acc;
      000083 E5 81            [12]  219 	mov	a,sp
      000085 24 FC            [12]  220 	add	a,#0xfc
      000087 F8               [12]  221 	mov	r0,a
      000088 86 82            [24]  222 	mov	dpl,@r0
      00008A 08               [12]  223 	inc	r0
      00008B 86 83            [24]  224 	mov	dph,@r0
                                    225 ;	../../../core/lib/crc16.c:63: }
      00008D 02r00r00         [24]  226 	ljmp	__sdcc_banked_ret
                                    227 ;------------------------------------------------------------
                                    228 ;Allocation info for local variables in function 'crc16_data'
                                    229 ;------------------------------------------------------------
                                    230 ;len                       Allocated to stack - sp -6
                                    231 ;acc                       Allocated to stack - sp -8
                                    232 ;data                      Allocated to registers 
                                    233 ;i                         Allocated to registers 
                                    234 ;sloc0                     Allocated to stack - sp -1
                                    235 ;------------------------------------------------------------
                                    236 ;	../../../core/lib/crc16.c:66: crc16_data(const unsigned char *data, int len, unsigned short acc)
                                    237 ;	-----------------------------------------
                                    238 ;	 function crc16_data
                                    239 ;	-----------------------------------------
      000090                        240 _crc16_data:
      000090 05 81            [12]  241 	inc	sp
      000092 05 81            [12]  242 	inc	sp
      000094 AD 82            [24]  243 	mov	r5,dpl
      000096 AE 83            [24]  244 	mov	r6,dph
      000098 AF F0            [24]  245 	mov	r7,b
                                    246 ;	../../../core/lib/crc16.c:70: for(i = 0; i < len; ++i) {
      00009A A8 81            [24]  247 	mov	r0,sp
      00009C 18               [12]  248 	dec	r0
      00009D E4               [12]  249 	clr	a
      00009E F6               [12]  250 	mov	@r0,a
      00009F 08               [12]  251 	inc	r0
      0000A0 F6               [12]  252 	mov	@r0,a
      0000A1                        253 00103$:
      0000A1 A8 81            [24]  254 	mov	r0,sp
      0000A3 18               [12]  255 	dec	r0
      0000A4 E5 81            [12]  256 	mov	a,sp
      0000A6 24 FA            [12]  257 	add	a,#0xfa
      0000A8 F9               [12]  258 	mov	r1,a
      0000A9 C3               [12]  259 	clr	c
      0000AA E6               [12]  260 	mov	a,@r0
      0000AB 97               [12]  261 	subb	a,@r1
      0000AC 08               [12]  262 	inc	r0
      0000AD E6               [12]  263 	mov	a,@r0
      0000AE 64 80            [12]  264 	xrl	a,#0x80
      0000B0 09               [12]  265 	inc	r1
      0000B1 87 F0            [24]  266 	mov	b,@r1
      0000B3 63 F0 80         [24]  267 	xrl	b,#0x80
      0000B6 95 F0            [12]  268 	subb	a,b
      0000B8 50 4F            [24]  269 	jnc	00101$
                                    270 ;	../../../core/lib/crc16.c:71: acc = crc16_add(*data, acc);
      0000BA 8D 82            [24]  271 	mov	dpl,r5
      0000BC 8E 83            [24]  272 	mov	dph,r6
      0000BE 8F F0            [24]  273 	mov	b,r7
      0000C0 12r00r00         [24]  274 	lcall	__gptrget
      0000C3 FA               [12]  275 	mov	r2,a
      0000C4 A3               [24]  276 	inc	dptr
      0000C5 AD 82            [24]  277 	mov	r5,dpl
      0000C7 AE 83            [24]  278 	mov	r6,dph
      0000C9 C0 07            [24]  279 	push	ar7
      0000CB C0 06            [24]  280 	push	ar6
      0000CD C0 05            [24]  281 	push	ar5
      0000CF E5 81            [12]  282 	mov	a,sp
      0000D1 24 F5            [12]  283 	add	a,#0xf5
      0000D3 F8               [12]  284 	mov	r0,a
      0000D4 E6               [12]  285 	mov	a,@r0
      0000D5 C0 E0            [24]  286 	push	acc
      0000D7 08               [12]  287 	inc	r0
      0000D8 E6               [12]  288 	mov	a,@r0
      0000D9 C0 E0            [24]  289 	push	acc
      0000DB 8A 82            [24]  290 	mov	dpl,r2
      0000DD 78r00            [12]  291 	mov	r0,#_crc16_add
      0000DF 79s00            [12]  292 	mov	r1,#(_crc16_add >> 8)
      0000E1 7As00            [12]  293 	mov	r2,#(_crc16_add >> 16)
      0000E3 12r00r00         [24]  294 	lcall	__sdcc_banked_call
      0000E6 AA 82            [24]  295 	mov	r2,dpl
      0000E8 AC 83            [24]  296 	mov	r4,dph
      0000EA 15 81            [12]  297 	dec	sp
      0000EC 15 81            [12]  298 	dec	sp
      0000EE D0 05            [24]  299 	pop	ar5
      0000F0 D0 06            [24]  300 	pop	ar6
      0000F2 D0 07            [24]  301 	pop	ar7
      0000F4 E5 81            [12]  302 	mov	a,sp
      0000F6 24 F8            [12]  303 	add	a,#0xf8
      0000F8 F8               [12]  304 	mov	r0,a
      0000F9 A6 02            [24]  305 	mov	@r0,ar2
      0000FB 08               [12]  306 	inc	r0
      0000FC A6 04            [24]  307 	mov	@r0,ar4
                                    308 ;	../../../core/lib/crc16.c:72: ++data;
                                    309 ;	../../../core/lib/crc16.c:70: for(i = 0; i < len; ++i) {
      0000FE A8 81            [24]  310 	mov	r0,sp
      000100 18               [12]  311 	dec	r0
      000101 06               [12]  312 	inc	@r0
      000102 B6 00 02         [24]  313 	cjne	@r0,#0x00,00117$
      000105 08               [12]  314 	inc	r0
      000106 06               [12]  315 	inc	@r0
      000107                        316 00117$:
      000107 80 98            [24]  317 	sjmp	00103$
      000109                        318 00101$:
                                    319 ;	../../../core/lib/crc16.c:74: return acc;
      000109 E5 81            [12]  320 	mov	a,sp
      00010B 24 F8            [12]  321 	add	a,#0xf8
      00010D F8               [12]  322 	mov	r0,a
      00010E 86 82            [24]  323 	mov	dpl,@r0
      000110 08               [12]  324 	inc	r0
      000111 86 83            [24]  325 	mov	dph,@r0
                                    326 ;	../../../core/lib/crc16.c:75: }
      000113 15 81            [12]  327 	dec	sp
      000115 15 81            [12]  328 	dec	sp
      000117 02r00r00         [24]  329 	ljmp	__sdcc_banked_ret
                                    330 	.area CSEG    (CODE)
                                    331 	.area CONST   (CODE)
                                    332 	.area XINIT   (CODE)
                                    333 	.area CABS    (ABS,CODE)
