                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.4 #10774 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module viztool
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _uip_ds6_route_list_head
                                     12 	.globl _uip_ds6_route_num_routes
                                     13 	.globl _uip_ds6_defrt_choose
                                     14 	.globl _uip_ds6_defrt_lookup
                                     15 	.globl _uip_udp_packet_send
                                     16 	.globl _udp_new
                                     17 	.globl _uip_htonl
                                     18 	.globl _list_item_next
                                     19 	.globl ___memcpy
                                     20 	.globl _memset
                                     21 	.globl _ACTIVE
                                     22 	.globl _TX_BYTE
                                     23 	.globl _RX_BYTE
                                     24 	.globl _ERR
                                     25 	.globl _FE
                                     26 	.globl _SLAVE
                                     27 	.globl _RE
                                     28 	.globl _MODE
                                     29 	.globl _T3OVFIF
                                     30 	.globl _T3CH0IF
                                     31 	.globl _T3CH1IF
                                     32 	.globl _T4OVFIF
                                     33 	.globl _T4CH0IF
                                     34 	.globl _T4CH1IF
                                     35 	.globl _OVFIM
                                     36 	.globl _B_0
                                     37 	.globl _B_1
                                     38 	.globl _B_2
                                     39 	.globl _B_3
                                     40 	.globl _B_4
                                     41 	.globl _B_5
                                     42 	.globl _B_6
                                     43 	.globl _B_7
                                     44 	.globl _P2IF
                                     45 	.globl _UTX0IF
                                     46 	.globl _UTX1IF
                                     47 	.globl _P1IF
                                     48 	.globl _WDTIF
                                     49 	.globl _ACC_0
                                     50 	.globl _ACC_1
                                     51 	.globl _ACC_2
                                     52 	.globl _ACC_3
                                     53 	.globl _ACC_4
                                     54 	.globl _ACC_5
                                     55 	.globl _ACC_6
                                     56 	.globl _ACC_7
                                     57 	.globl _P
                                     58 	.globl _F1
                                     59 	.globl _OV
                                     60 	.globl _RS0
                                     61 	.globl _RS1
                                     62 	.globl _F0
                                     63 	.globl _AC
                                     64 	.globl _CY
                                     65 	.globl _DMAIF
                                     66 	.globl _T1IF
                                     67 	.globl _T2IF
                                     68 	.globl _T3IF
                                     69 	.globl _T4IF
                                     70 	.globl _P0IF
                                     71 	.globl _STIF
                                     72 	.globl _DMAIE
                                     73 	.globl _T1IE
                                     74 	.globl _T2IE
                                     75 	.globl _T3IE
                                     76 	.globl _T4IE
                                     77 	.globl _P0IE
                                     78 	.globl _RFERRIE
                                     79 	.globl _ADCIE
                                     80 	.globl _URX0IE
                                     81 	.globl _URX1IE
                                     82 	.globl _ENCIE
                                     83 	.globl _STIE
                                     84 	.globl _EA
                                     85 	.globl _P2_0
                                     86 	.globl _P2_1
                                     87 	.globl _P2_2
                                     88 	.globl _P2_3
                                     89 	.globl _P2_4
                                     90 	.globl _P2_5
                                     91 	.globl _P2_6
                                     92 	.globl _P2_7
                                     93 	.globl _ENCIF_0
                                     94 	.globl _ENCIF_1
                                     95 	.globl _P1_0
                                     96 	.globl _P1_1
                                     97 	.globl _P1_2
                                     98 	.globl _P1_3
                                     99 	.globl _P1_4
                                    100 	.globl _P1_5
                                    101 	.globl _P1_6
                                    102 	.globl _P1_7
                                    103 	.globl _IT0
                                    104 	.globl _RFERRIF
                                    105 	.globl _IT1
                                    106 	.globl _URX0IF
                                    107 	.globl _ADCIF
                                    108 	.globl _URX1IF
                                    109 	.globl _P0_0
                                    110 	.globl _P0_1
                                    111 	.globl _P0_2
                                    112 	.globl _P0_3
                                    113 	.globl _P0_4
                                    114 	.globl _P0_5
                                    115 	.globl _P0_6
                                    116 	.globl _P0_7
                                    117 	.globl _WDCTL
                                    118 	.globl _U1GCR
                                    119 	.globl _U1UCR
                                    120 	.globl _U1BAUD
                                    121 	.globl _U1DBUF
                                    122 	.globl _U1CSR
                                    123 	.globl _U0GCR
                                    124 	.globl _U0UCR
                                    125 	.globl _U0BAUD
                                    126 	.globl _U0DBUF
                                    127 	.globl _U0CSR
                                    128 	.globl _TIMIF
                                    129 	.globl _T4CC1
                                    130 	.globl _T4CCTL1
                                    131 	.globl _T4CC0
                                    132 	.globl _T4CCTL0
                                    133 	.globl _T4CTL
                                    134 	.globl _T4CNT
                                    135 	.globl _T3CC1
                                    136 	.globl _T3CCTL1
                                    137 	.globl _T3CC0
                                    138 	.globl _T3CCTL0
                                    139 	.globl _T3CTL
                                    140 	.globl _T3CNT
                                    141 	.globl _T2MSEL
                                    142 	.globl _T2IRQM
                                    143 	.globl _T2MOVF2
                                    144 	.globl _T2MOVF1
                                    145 	.globl _T2MOVF0
                                    146 	.globl _T2M1
                                    147 	.globl _T2M0
                                    148 	.globl _T2IRQF
                                    149 	.globl _T2EVTCFG
                                    150 	.globl _T2CTRL
                                    151 	.globl _T1STAT
                                    152 	.globl _T1CCTL2
                                    153 	.globl _T1CCTL1
                                    154 	.globl _T1CCTL0
                                    155 	.globl _T1CTL
                                    156 	.globl _T1CNTH
                                    157 	.globl _T1CNTL
                                    158 	.globl _T1CC2H
                                    159 	.globl _T1CC2L
                                    160 	.globl _T1CC1H
                                    161 	.globl _T1CC1L
                                    162 	.globl _T1CC0H
                                    163 	.globl _T1CC0L
                                    164 	.globl _CLKCONSTA
                                    165 	.globl _CLKCONCMD
                                    166 	.globl _SLEEPSTA
                                    167 	.globl _SLEEPCMD
                                    168 	.globl _STLOAD
                                    169 	.globl _ST2
                                    170 	.globl _ST1
                                    171 	.globl _ST0
                                    172 	.globl _RFERRF
                                    173 	.globl _RFIRQF0
                                    174 	.globl _RFST
                                    175 	.globl _RFD
                                    176 	.globl _RFIRQF1
                                    177 	.globl _PSBANK
                                    178 	.globl _FMAP
                                    179 	.globl _MEMCTR
                                    180 	.globl __XPAGE
                                    181 	.globl _MPAGE
                                    182 	.globl _PMUX
                                    183 	.globl _P2DIR
                                    184 	.globl _P1DIR
                                    185 	.globl _P0DIR
                                    186 	.globl _P2INP
                                    187 	.globl _P1INP
                                    188 	.globl _P2SEL
                                    189 	.globl _P1SEL
                                    190 	.globl _P0SEL
                                    191 	.globl _APCFG
                                    192 	.globl _PERCFG
                                    193 	.globl _P0INP
                                    194 	.globl _P2IEN
                                    195 	.globl _P1IEN
                                    196 	.globl _P0IEN
                                    197 	.globl _PICTL
                                    198 	.globl _P2IFG
                                    199 	.globl _P1IFG
                                    200 	.globl _P0IFG
                                    201 	.globl _DMAREQ
                                    202 	.globl _DMAARM
                                    203 	.globl _DMA0CFGH
                                    204 	.globl _DMA0CFGL
                                    205 	.globl _DMA1CFGH
                                    206 	.globl _DMA1CFGL
                                    207 	.globl _DMAIRQ
                                    208 	.globl _ENCCS
                                    209 	.globl _ENCDO
                                    210 	.globl _ENCDI
                                    211 	.globl _RNDH
                                    212 	.globl _RNDL
                                    213 	.globl _ADCH
                                    214 	.globl _ADCL
                                    215 	.globl _ADCCON3
                                    216 	.globl _ADCCON2
                                    217 	.globl _ADCCON1
                                    218 	.globl _B
                                    219 	.globl _IRCON2
                                    220 	.globl _ACC
                                    221 	.globl _PSW
                                    222 	.globl _IRCON
                                    223 	.globl _IP1
                                    224 	.globl _IEN1
                                    225 	.globl _IP0
                                    226 	.globl _IEN0
                                    227 	.globl _P2
                                    228 	.globl _S1CON
                                    229 	.globl _IEN2
                                    230 	.globl _S0CON
                                    231 	.globl _DPS
                                    232 	.globl _P1
                                    233 	.globl _TCON
                                    234 	.globl _PCON
                                    235 	.globl _DPH1
                                    236 	.globl _DPL1
                                    237 	.globl _DPH0
                                    238 	.globl _DPL0
                                    239 	.globl _SP
                                    240 	.globl _P0
                                    241 	.globl _viztool_process
                                    242 	.globl _X_IEEE_ADDR
                                    243 	.globl _X_INFOPAGE
                                    244 	.globl _X_P2DIR
                                    245 	.globl _X_P1DIR
                                    246 	.globl _X_P0DIR
                                    247 	.globl _X_U1GCR
                                    248 	.globl _X_U1UCR
                                    249 	.globl _X_U1BAUD
                                    250 	.globl _X_U1DBUF
                                    251 	.globl _X_U1CSR
                                    252 	.globl _X_P2INP
                                    253 	.globl _X_P1INP
                                    254 	.globl _X_P2SEL
                                    255 	.globl _X_P1SEL
                                    256 	.globl _X_P0SEL
                                    257 	.globl _X_APCFG
                                    258 	.globl _X_PERCFG
                                    259 	.globl _X_T4CC1
                                    260 	.globl _X_T4CCTL1
                                    261 	.globl _X_T4CC0
                                    262 	.globl _X_T4CCTL0
                                    263 	.globl _X_T4CTL
                                    264 	.globl _X_T4CNT
                                    265 	.globl _X_RFIRQF0
                                    266 	.globl _X_T1CCTL2
                                    267 	.globl _X_T1CCTL1
                                    268 	.globl _X_T1CCTL0
                                    269 	.globl _X_T1CTL
                                    270 	.globl _X_T1CNTH
                                    271 	.globl _X_T1CNTL
                                    272 	.globl _X_RFST
                                    273 	.globl _X_T1CC2H
                                    274 	.globl _X_T1CC2L
                                    275 	.globl _X_T1CC1H
                                    276 	.globl _X_T1CC1L
                                    277 	.globl _X_T1CC0H
                                    278 	.globl _X_T1CC0L
                                    279 	.globl _X_RFD
                                    280 	.globl _X_TIMIF
                                    281 	.globl _X_DMAREQ
                                    282 	.globl _X_DMAARM
                                    283 	.globl _X_DMA0CFGH
                                    284 	.globl _X_DMA0CFGL
                                    285 	.globl _X_DMA1CFGH
                                    286 	.globl _X_DMA1CFGL
                                    287 	.globl _X_DMAIRQ
                                    288 	.globl _X_T3CC1
                                    289 	.globl _X_T3CCTL1
                                    290 	.globl _X_T3CC0
                                    291 	.globl _X_T3CCTL0
                                    292 	.globl _X_T3CTL
                                    293 	.globl _X_T3CNT
                                    294 	.globl _X_WDCTL
                                    295 	.globl _X_MEMCTR
                                    296 	.globl _X_CLKCONCMD
                                    297 	.globl _X_U0GCR
                                    298 	.globl _X_U0UCR
                                    299 	.globl _X_T2MSEL
                                    300 	.globl _X_U0BAUD
                                    301 	.globl _X_U0DBUF
                                    302 	.globl _X_RFERRF
                                    303 	.globl _X_SLEEPCMD
                                    304 	.globl _X_RNDH
                                    305 	.globl _X_RNDL
                                    306 	.globl _X_ADCH
                                    307 	.globl _X_ADCL
                                    308 	.globl _X_ADCCON3
                                    309 	.globl _X_ADCCON2
                                    310 	.globl _X_ADCCON1
                                    311 	.globl _X_ENCCS
                                    312 	.globl _X_ENCDO
                                    313 	.globl _X_ENCDI
                                    314 	.globl _X_T1STAT
                                    315 	.globl _X_PMUX
                                    316 	.globl _X_STLOAD
                                    317 	.globl _X_P2IEN
                                    318 	.globl _X_P0IEN
                                    319 	.globl _X_T2IRQM
                                    320 	.globl _X_T2MOVF2
                                    321 	.globl _X_T2MOVF1
                                    322 	.globl _X_T2MOVF0
                                    323 	.globl _X_T2M1
                                    324 	.globl _X_T2M0
                                    325 	.globl _X_T2IRQF
                                    326 	.globl _X_P2
                                    327 	.globl _X_PSBANK
                                    328 	.globl _X_FMAP
                                    329 	.globl _X_CLKCONSTA
                                    330 	.globl _X_SLEEPSTA
                                    331 	.globl _X_T2EVTCFG
                                    332 	.globl _X_ST2
                                    333 	.globl _X_ST1
                                    334 	.globl _X_ST0
                                    335 	.globl _X_T2CTRL
                                    336 	.globl _X__XPAGE
                                    337 	.globl _X_MPAGE
                                    338 	.globl _X_RFIRQF1
                                    339 	.globl _X_P1
                                    340 	.globl _X_P0INP
                                    341 	.globl _X_P1IEN
                                    342 	.globl _X_PICTL
                                    343 	.globl _X_P2IFG
                                    344 	.globl _X_P1IFG
                                    345 	.globl _X_P0IFG
                                    346 	.globl _X_U0CSR
                                    347 	.globl _X_P0
                                    348 	.globl _USBF5
                                    349 	.globl _USBF4
                                    350 	.globl _USBF3
                                    351 	.globl _USBF2
                                    352 	.globl _USBF1
                                    353 	.globl _USBF0
                                    354 	.globl _USBCNTH
                                    355 	.globl _USBCNTL
                                    356 	.globl _USBCNT0
                                    357 	.globl _USBCSOH
                                    358 	.globl _USBCSOL
                                    359 	.globl _USBMAXO
                                    360 	.globl _USBCSIH
                                    361 	.globl _USBCSIL
                                    362 	.globl _USBCS0
                                    363 	.globl _USBMAXI
                                    364 	.globl _USBCTRL
                                    365 	.globl _USBINDEX
                                    366 	.globl _USBFRMH
                                    367 	.globl _USBFRML
                                    368 	.globl _USBCIE
                                    369 	.globl _USBOIE
                                    370 	.globl _USBIIE
                                    371 	.globl _USBCIF
                                    372 	.globl _USBOIF
                                    373 	.globl _USBIIF
                                    374 	.globl _USBPOW
                                    375 	.globl _USBADDR
                                    376 	.globl _CSPT
                                    377 	.globl _CSPZ
                                    378 	.globl _CSPY
                                    379 	.globl _CSPX
                                    380 	.globl _CSPSTAT
                                    381 	.globl _CSPCTRL
                                    382 	.globl _CSPPROG23
                                    383 	.globl _CSPPROG22
                                    384 	.globl _CSPPROG21
                                    385 	.globl _CSPPROG20
                                    386 	.globl _CSPPROG19
                                    387 	.globl _CSPPROG18
                                    388 	.globl _CSPPROG17
                                    389 	.globl _CSPPROG16
                                    390 	.globl _CSPPROG15
                                    391 	.globl _CSPPROG14
                                    392 	.globl _CSPPROG13
                                    393 	.globl _CSPPROG12
                                    394 	.globl _CSPPROG11
                                    395 	.globl _CSPPROG10
                                    396 	.globl _CSPPROG9
                                    397 	.globl _CSPPROG8
                                    398 	.globl _CSPPROG7
                                    399 	.globl _CSPPROG6
                                    400 	.globl _CSPPROG5
                                    401 	.globl _CSPPROG4
                                    402 	.globl _CSPPROG3
                                    403 	.globl _CSPPROG2
                                    404 	.globl _CSPPROG1
                                    405 	.globl _CSPPROG0
                                    406 	.globl _RFC_OBS_CTRL2
                                    407 	.globl _RFC_OBS_CTRL1
                                    408 	.globl _RFC_OBS_CTRL0
                                    409 	.globl _TXFILTCFG
                                    410 	.globl _PTEST1
                                    411 	.globl _PTEST0
                                    412 	.globl _ATEST
                                    413 	.globl _DACTEST2
                                    414 	.globl _DACTEST1
                                    415 	.globl _DACTEST0
                                    416 	.globl _MDMTEST1
                                    417 	.globl _MDMTEST0
                                    418 	.globl _ADCTEST2
                                    419 	.globl _ADCTEST1
                                    420 	.globl _ADCTEST0
                                    421 	.globl _AGCCTRL3
                                    422 	.globl _AGCCTRL2
                                    423 	.globl _AGCCTRL1
                                    424 	.globl _AGCCTRL0
                                    425 	.globl _FSCAL3
                                    426 	.globl _FSCAL2
                                    427 	.globl _FSCAL1
                                    428 	.globl _FSCAL0
                                    429 	.globl _FSCTRL
                                    430 	.globl _RXCTRL
                                    431 	.globl _FREQEST
                                    432 	.globl _MDMCTRL1
                                    433 	.globl _MDMCTRL0
                                    434 	.globl _RFRND
                                    435 	.globl _RFERRM
                                    436 	.globl _RFIRQM1
                                    437 	.globl _RFIRQM0
                                    438 	.globl _TXLAST_PTR
                                    439 	.globl _TXFIRST_PTR
                                    440 	.globl _RXP1_PTR
                                    441 	.globl _RXLAST_PTR
                                    442 	.globl _RXFIRST_PTR
                                    443 	.globl _TXFIFOCNT
                                    444 	.globl _RXFIFOCNT
                                    445 	.globl _RXFIRST
                                    446 	.globl _RSSISTAT
                                    447 	.globl _RSSI
                                    448 	.globl _CCACTRL1
                                    449 	.globl _CCACTRL0
                                    450 	.globl _FSMCTRL
                                    451 	.globl _FIFOPCTRL
                                    452 	.globl _FSMSTAT1
                                    453 	.globl _FSMSTAT0
                                    454 	.globl _TXCTRL
                                    455 	.globl _TXPOWER
                                    456 	.globl _FREQCTRL
                                    457 	.globl _FREQTUNE
                                    458 	.globl _RXMASKCLR
                                    459 	.globl _RXMASKSET
                                    460 	.globl _RXENABLE
                                    461 	.globl _FRMCTRL1
                                    462 	.globl _FRMCTRL0
                                    463 	.globl _SRCEXTEN2
                                    464 	.globl _SRCEXTEN1
                                    465 	.globl _SRCEXTEN0
                                    466 	.globl _SRCSHORTEN2
                                    467 	.globl _SRCSHORTEN1
                                    468 	.globl _SRCSHORTEN0
                                    469 	.globl _SRCMATCH
                                    470 	.globl _FRMFILT1
                                    471 	.globl _FRMFILT0
                                    472 	.globl _SHORT_ADDR1
                                    473 	.globl _SHORT_ADDR0
                                    474 	.globl _PAN_ID1
                                    475 	.globl _PAN_ID0
                                    476 	.globl _EXT_ADDR7
                                    477 	.globl _EXT_ADDR6
                                    478 	.globl _EXT_ADDR5
                                    479 	.globl _EXT_ADDR4
                                    480 	.globl _EXT_ADDR3
                                    481 	.globl _EXT_ADDR2
                                    482 	.globl _EXT_ADDR1
                                    483 	.globl _EXT_ADDR0
                                    484 	.globl _SRCSHORTPENDEN2
                                    485 	.globl _SRCSHORTPENDEN1
                                    486 	.globl _SRCSHORTPENDEN0
                                    487 	.globl _SRCEXTPENDEN2
                                    488 	.globl _SRCEXTPENDEN1
                                    489 	.globl _SRCEXTPENDEN0
                                    490 	.globl _SRCRESINDEX
                                    491 	.globl _SRCRESMASK2
                                    492 	.globl _SRCRESMASK1
                                    493 	.globl _SRCRESMASK0
                                    494 	.globl _SRC_ADDR_TABLE
                                    495 	.globl _TXFIFO
                                    496 	.globl _RXFIFO
                                    497 	.globl _RFCORE_RAM
                                    498 	.globl _CMPCTL
                                    499 	.globl _OPAMPS
                                    500 	.globl _OPAMPC
                                    501 	.globl _STCV2
                                    502 	.globl _STCV1
                                    503 	.globl _STCV0
                                    504 	.globl _STCS
                                    505 	.globl _STCC
                                    506 	.globl _T1CC4H
                                    507 	.globl _T1CC4L
                                    508 	.globl _T1CC3H
                                    509 	.globl _T1CC3L
                                    510 	.globl _XX_T1CC2H
                                    511 	.globl _XX_T1CC2L
                                    512 	.globl _XX_T1CC1H
                                    513 	.globl _XX_T1CC1L
                                    514 	.globl _XX_T1CC0H
                                    515 	.globl _XX_T1CC0L
                                    516 	.globl _T1CCTL4
                                    517 	.globl _T1CCTL3
                                    518 	.globl _XX_T1CCTL2
                                    519 	.globl _XX_T1CCTL1
                                    520 	.globl _XX_T1CCTL0
                                    521 	.globl _CLD
                                    522 	.globl _IRCTL
                                    523 	.globl _CHIPINFO1
                                    524 	.globl _CHIPINFO0
                                    525 	.globl _FWDATA
                                    526 	.globl _FADDRH
                                    527 	.globl _FADDRL
                                    528 	.globl _FCTL
                                    529 	.globl _IVCTRL
                                    530 	.globl _BATTMON
                                    531 	.globl _SRCRC
                                    532 	.globl _DBGDATA
                                    533 	.globl _TESTREG0
                                    534 	.globl _CHIPID
                                    535 	.globl _CHVER
                                    536 	.globl _OBSSEL5
                                    537 	.globl _OBSSEL4
                                    538 	.globl _OBSSEL3
                                    539 	.globl _OBSSEL2
                                    540 	.globl _OBSSEL1
                                    541 	.globl _OBSSEL0
                                    542 	.globl _I2CIO
                                    543 	.globl _I2CWC
                                    544 	.globl _I2CADDR
                                    545 	.globl _I2CDATA
                                    546 	.globl _I2CSTAT
                                    547 	.globl _I2CCFG
                                    548 	.globl _OPAMPMC
                                    549 	.globl _MONMUX
                                    550 ;--------------------------------------------------------
                                    551 ; special function registers
                                    552 ;--------------------------------------------------------
                                    553 	.area RSEG    (ABS,DATA)
      000000                        554 	.org 0x0000
                           000080   555 _P0	=	0x0080
                           000081   556 _SP	=	0x0081
                           000082   557 _DPL0	=	0x0082
                           000083   558 _DPH0	=	0x0083
                           000084   559 _DPL1	=	0x0084
                           000085   560 _DPH1	=	0x0085
                           000087   561 _PCON	=	0x0087
                           000088   562 _TCON	=	0x0088
                           000090   563 _P1	=	0x0090
                           000092   564 _DPS	=	0x0092
                           000098   565 _S0CON	=	0x0098
                           00009A   566 _IEN2	=	0x009a
                           00009B   567 _S1CON	=	0x009b
                           0000A0   568 _P2	=	0x00a0
                           0000A8   569 _IEN0	=	0x00a8
                           0000A9   570 _IP0	=	0x00a9
                           0000B8   571 _IEN1	=	0x00b8
                           0000B9   572 _IP1	=	0x00b9
                           0000C0   573 _IRCON	=	0x00c0
                           0000D0   574 _PSW	=	0x00d0
                           0000E0   575 _ACC	=	0x00e0
                           0000E8   576 _IRCON2	=	0x00e8
                           0000F0   577 _B	=	0x00f0
                           0000B4   578 _ADCCON1	=	0x00b4
                           0000B5   579 _ADCCON2	=	0x00b5
                           0000B6   580 _ADCCON3	=	0x00b6
                           0000BA   581 _ADCL	=	0x00ba
                           0000BB   582 _ADCH	=	0x00bb
                           0000BC   583 _RNDL	=	0x00bc
                           0000BD   584 _RNDH	=	0x00bd
                           0000B1   585 _ENCDI	=	0x00b1
                           0000B2   586 _ENCDO	=	0x00b2
                           0000B3   587 _ENCCS	=	0x00b3
                           0000D1   588 _DMAIRQ	=	0x00d1
                           0000D2   589 _DMA1CFGL	=	0x00d2
                           0000D3   590 _DMA1CFGH	=	0x00d3
                           0000D4   591 _DMA0CFGL	=	0x00d4
                           0000D5   592 _DMA0CFGH	=	0x00d5
                           0000D6   593 _DMAARM	=	0x00d6
                           0000D7   594 _DMAREQ	=	0x00d7
                           000089   595 _P0IFG	=	0x0089
                           00008A   596 _P1IFG	=	0x008a
                           00008B   597 _P2IFG	=	0x008b
                           00008C   598 _PICTL	=	0x008c
                           0000AB   599 _P0IEN	=	0x00ab
                           00008D   600 _P1IEN	=	0x008d
                           0000AC   601 _P2IEN	=	0x00ac
                           00008F   602 _P0INP	=	0x008f
                           0000F1   603 _PERCFG	=	0x00f1
                           0000F2   604 _APCFG	=	0x00f2
                           0000F3   605 _P0SEL	=	0x00f3
                           0000F4   606 _P1SEL	=	0x00f4
                           0000F5   607 _P2SEL	=	0x00f5
                           0000F6   608 _P1INP	=	0x00f6
                           0000F7   609 _P2INP	=	0x00f7
                           0000FD   610 _P0DIR	=	0x00fd
                           0000FE   611 _P1DIR	=	0x00fe
                           0000FF   612 _P2DIR	=	0x00ff
                           0000AE   613 _PMUX	=	0x00ae
                           000093   614 _MPAGE	=	0x0093
                           000093   615 __XPAGE	=	0x0093
                           0000C7   616 _MEMCTR	=	0x00c7
                           00009F   617 _FMAP	=	0x009f
                           00009F   618 _PSBANK	=	0x009f
                           000091   619 _RFIRQF1	=	0x0091
                           0000D9   620 _RFD	=	0x00d9
                           0000E1   621 _RFST	=	0x00e1
                           0000E9   622 _RFIRQF0	=	0x00e9
                           0000BF   623 _RFERRF	=	0x00bf
                           000095   624 _ST0	=	0x0095
                           000096   625 _ST1	=	0x0096
                           000097   626 _ST2	=	0x0097
                           0000AD   627 _STLOAD	=	0x00ad
                           0000BE   628 _SLEEPCMD	=	0x00be
                           00009D   629 _SLEEPSTA	=	0x009d
                           0000C6   630 _CLKCONCMD	=	0x00c6
                           00009E   631 _CLKCONSTA	=	0x009e
                           0000DA   632 _T1CC0L	=	0x00da
                           0000DB   633 _T1CC0H	=	0x00db
                           0000DC   634 _T1CC1L	=	0x00dc
                           0000DD   635 _T1CC1H	=	0x00dd
                           0000DE   636 _T1CC2L	=	0x00de
                           0000DF   637 _T1CC2H	=	0x00df
                           0000E2   638 _T1CNTL	=	0x00e2
                           0000E3   639 _T1CNTH	=	0x00e3
                           0000E4   640 _T1CTL	=	0x00e4
                           0000E5   641 _T1CCTL0	=	0x00e5
                           0000E6   642 _T1CCTL1	=	0x00e6
                           0000E7   643 _T1CCTL2	=	0x00e7
                           0000AF   644 _T1STAT	=	0x00af
                           000094   645 _T2CTRL	=	0x0094
                           00009C   646 _T2EVTCFG	=	0x009c
                           0000A1   647 _T2IRQF	=	0x00a1
                           0000A2   648 _T2M0	=	0x00a2
                           0000A3   649 _T2M1	=	0x00a3
                           0000A4   650 _T2MOVF0	=	0x00a4
                           0000A5   651 _T2MOVF1	=	0x00a5
                           0000A6   652 _T2MOVF2	=	0x00a6
                           0000A7   653 _T2IRQM	=	0x00a7
                           0000C3   654 _T2MSEL	=	0x00c3
                           0000CA   655 _T3CNT	=	0x00ca
                           0000CB   656 _T3CTL	=	0x00cb
                           0000CC   657 _T3CCTL0	=	0x00cc
                           0000CD   658 _T3CC0	=	0x00cd
                           0000CE   659 _T3CCTL1	=	0x00ce
                           0000CF   660 _T3CC1	=	0x00cf
                           0000EA   661 _T4CNT	=	0x00ea
                           0000EB   662 _T4CTL	=	0x00eb
                           0000EC   663 _T4CCTL0	=	0x00ec
                           0000ED   664 _T4CC0	=	0x00ed
                           0000EE   665 _T4CCTL1	=	0x00ee
                           0000EF   666 _T4CC1	=	0x00ef
                           0000D8   667 _TIMIF	=	0x00d8
                           000086   668 _U0CSR	=	0x0086
                           0000C1   669 _U0DBUF	=	0x00c1
                           0000C2   670 _U0BAUD	=	0x00c2
                           0000C4   671 _U0UCR	=	0x00c4
                           0000C5   672 _U0GCR	=	0x00c5
                           0000F8   673 _U1CSR	=	0x00f8
                           0000F9   674 _U1DBUF	=	0x00f9
                           0000FA   675 _U1BAUD	=	0x00fa
                           0000FB   676 _U1UCR	=	0x00fb
                           0000FC   677 _U1GCR	=	0x00fc
                           0000C9   678 _WDCTL	=	0x00c9
                                    679 ;--------------------------------------------------------
                                    680 ; special function bits
                                    681 ;--------------------------------------------------------
                                    682 	.area RSEG    (ABS,DATA)
      000000                        683 	.org 0x0000
                           000087   684 _P0_7	=	0x0087
                           000086   685 _P0_6	=	0x0086
                           000085   686 _P0_5	=	0x0085
                           000084   687 _P0_4	=	0x0084
                           000083   688 _P0_3	=	0x0083
                           000082   689 _P0_2	=	0x0082
                           000081   690 _P0_1	=	0x0081
                           000080   691 _P0_0	=	0x0080
                           00008F   692 _URX1IF	=	0x008f
                           00008D   693 _ADCIF	=	0x008d
                           00008B   694 _URX0IF	=	0x008b
                           00008A   695 _IT1	=	0x008a
                           000089   696 _RFERRIF	=	0x0089
                           000088   697 _IT0	=	0x0088
                           000097   698 _P1_7	=	0x0097
                           000096   699 _P1_6	=	0x0096
                           000095   700 _P1_5	=	0x0095
                           000094   701 _P1_4	=	0x0094
                           000093   702 _P1_3	=	0x0093
                           000092   703 _P1_2	=	0x0092
                           000091   704 _P1_1	=	0x0091
                           000090   705 _P1_0	=	0x0090
                           000099   706 _ENCIF_1	=	0x0099
                           000098   707 _ENCIF_0	=	0x0098
                           0000A7   708 _P2_7	=	0x00a7
                           0000A6   709 _P2_6	=	0x00a6
                           0000A5   710 _P2_5	=	0x00a5
                           0000A4   711 _P2_4	=	0x00a4
                           0000A3   712 _P2_3	=	0x00a3
                           0000A2   713 _P2_2	=	0x00a2
                           0000A1   714 _P2_1	=	0x00a1
                           0000A0   715 _P2_0	=	0x00a0
                           0000AF   716 _EA	=	0x00af
                           0000AD   717 _STIE	=	0x00ad
                           0000AC   718 _ENCIE	=	0x00ac
                           0000AB   719 _URX1IE	=	0x00ab
                           0000AA   720 _URX0IE	=	0x00aa
                           0000A9   721 _ADCIE	=	0x00a9
                           0000A8   722 _RFERRIE	=	0x00a8
                           0000BD   723 _P0IE	=	0x00bd
                           0000BC   724 _T4IE	=	0x00bc
                           0000BB   725 _T3IE	=	0x00bb
                           0000BA   726 _T2IE	=	0x00ba
                           0000B9   727 _T1IE	=	0x00b9
                           0000B8   728 _DMAIE	=	0x00b8
                           0000C7   729 _STIF	=	0x00c7
                           0000C5   730 _P0IF	=	0x00c5
                           0000C4   731 _T4IF	=	0x00c4
                           0000C3   732 _T3IF	=	0x00c3
                           0000C2   733 _T2IF	=	0x00c2
                           0000C1   734 _T1IF	=	0x00c1
                           0000C0   735 _DMAIF	=	0x00c0
                           0000D7   736 _CY	=	0x00d7
                           0000D6   737 _AC	=	0x00d6
                           0000D5   738 _F0	=	0x00d5
                           0000D4   739 _RS1	=	0x00d4
                           0000D3   740 _RS0	=	0x00d3
                           0000D2   741 _OV	=	0x00d2
                           0000D1   742 _F1	=	0x00d1
                           0000D0   743 _P	=	0x00d0
                           0000E7   744 _ACC_7	=	0x00e7
                           0000E6   745 _ACC_6	=	0x00e6
                           0000E5   746 _ACC_5	=	0x00e5
                           0000E4   747 _ACC_4	=	0x00e4
                           0000E3   748 _ACC_3	=	0x00e3
                           0000E2   749 _ACC_2	=	0x00e2
                           0000E1   750 _ACC_1	=	0x00e1
                           0000E0   751 _ACC_0	=	0x00e0
                           0000EC   752 _WDTIF	=	0x00ec
                           0000EB   753 _P1IF	=	0x00eb
                           0000EA   754 _UTX1IF	=	0x00ea
                           0000E9   755 _UTX0IF	=	0x00e9
                           0000E8   756 _P2IF	=	0x00e8
                           0000F7   757 _B_7	=	0x00f7
                           0000F6   758 _B_6	=	0x00f6
                           0000F5   759 _B_5	=	0x00f5
                           0000F4   760 _B_4	=	0x00f4
                           0000F3   761 _B_3	=	0x00f3
                           0000F2   762 _B_2	=	0x00f2
                           0000F1   763 _B_1	=	0x00f1
                           0000F0   764 _B_0	=	0x00f0
                           0000DE   765 _OVFIM	=	0x00de
                           0000DD   766 _T4CH1IF	=	0x00dd
                           0000DC   767 _T4CH0IF	=	0x00dc
                           0000DB   768 _T4OVFIF	=	0x00db
                           0000DA   769 _T3CH1IF	=	0x00da
                           0000D9   770 _T3CH0IF	=	0x00d9
                           0000D8   771 _T3OVFIF	=	0x00d8
                           0000FF   772 _MODE	=	0x00ff
                           0000FE   773 _RE	=	0x00fe
                           0000FD   774 _SLAVE	=	0x00fd
                           0000FC   775 _FE	=	0x00fc
                           0000FB   776 _ERR	=	0x00fb
                           0000FA   777 _RX_BYTE	=	0x00fa
                           0000F9   778 _TX_BYTE	=	0x00f9
                           0000F8   779 _ACTIVE	=	0x00f8
                                    780 ;--------------------------------------------------------
                                    781 ; overlayable register banks
                                    782 ;--------------------------------------------------------
                                    783 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        784 	.ds 8
                                    785 ;--------------------------------------------------------
                                    786 ; internal ram data
                                    787 ;--------------------------------------------------------
                                    788 	.area DSEG    (DATA)
                                    789 ;--------------------------------------------------------
                                    790 ; overlayable items in internal ram 
                                    791 ;--------------------------------------------------------
                                    792 ;--------------------------------------------------------
                                    793 ; indirectly addressable internal ram data
                                    794 ;--------------------------------------------------------
                                    795 	.area ISEG    (DATA)
                                    796 ;--------------------------------------------------------
                                    797 ; absolute internal ram data
                                    798 ;--------------------------------------------------------
                                    799 	.area IABS    (ABS,DATA)
                                    800 	.area IABS    (ABS,DATA)
                                    801 ;--------------------------------------------------------
                                    802 ; bit data
                                    803 ;--------------------------------------------------------
                                    804 	.area BSEG    (BIT)
                                    805 ;--------------------------------------------------------
                                    806 ; paged external ram data
                                    807 ;--------------------------------------------------------
                                    808 	.area PSEG    (PAG,XDATA)
                                    809 ;--------------------------------------------------------
                                    810 ; external ram data
                                    811 ;--------------------------------------------------------
                                    812 	.area XSEG    (XDATA)
                           0061A6   813 _MONMUX	=	0x61a6
                           0061A6   814 _OPAMPMC	=	0x61a6
                           006230   815 _I2CCFG	=	0x6230
                           006231   816 _I2CSTAT	=	0x6231
                           006232   817 _I2CDATA	=	0x6232
                           006233   818 _I2CADDR	=	0x6233
                           006234   819 _I2CWC	=	0x6234
                           006235   820 _I2CIO	=	0x6235
                           006243   821 _OBSSEL0	=	0x6243
                           006244   822 _OBSSEL1	=	0x6244
                           006245   823 _OBSSEL2	=	0x6245
                           006246   824 _OBSSEL3	=	0x6246
                           006247   825 _OBSSEL4	=	0x6247
                           006248   826 _OBSSEL5	=	0x6248
                           006249   827 _CHVER	=	0x6249
                           00624A   828 _CHIPID	=	0x624a
                           00624B   829 _TESTREG0	=	0x624b
                           006260   830 _DBGDATA	=	0x6260
                           006262   831 _SRCRC	=	0x6262
                           006264   832 _BATTMON	=	0x6264
                           006265   833 _IVCTRL	=	0x6265
                           006270   834 _FCTL	=	0x6270
                           006271   835 _FADDRL	=	0x6271
                           006272   836 _FADDRH	=	0x6272
                           006273   837 _FWDATA	=	0x6273
                           006276   838 _CHIPINFO0	=	0x6276
                           006277   839 _CHIPINFO1	=	0x6277
                           006281   840 _IRCTL	=	0x6281
                           006290   841 _CLD	=	0x6290
                           0062A0   842 _XX_T1CCTL0	=	0x62a0
                           0062A1   843 _XX_T1CCTL1	=	0x62a1
                           0062A2   844 _XX_T1CCTL2	=	0x62a2
                           0062A3   845 _T1CCTL3	=	0x62a3
                           0062A4   846 _T1CCTL4	=	0x62a4
                           0062A6   847 _XX_T1CC0L	=	0x62a6
                           0062A7   848 _XX_T1CC0H	=	0x62a7
                           0062A8   849 _XX_T1CC1L	=	0x62a8
                           0062A9   850 _XX_T1CC1H	=	0x62a9
                           0062AA   851 _XX_T1CC2L	=	0x62aa
                           0062AB   852 _XX_T1CC2H	=	0x62ab
                           0062AC   853 _T1CC3L	=	0x62ac
                           0062AD   854 _T1CC3H	=	0x62ad
                           0062AE   855 _T1CC4L	=	0x62ae
                           0062AF   856 _T1CC4H	=	0x62af
                           0062B0   857 _STCC	=	0x62b0
                           0062B1   858 _STCS	=	0x62b1
                           0062B2   859 _STCV0	=	0x62b2
                           0062B3   860 _STCV1	=	0x62b3
                           0062B4   861 _STCV2	=	0x62b4
                           0062C0   862 _OPAMPC	=	0x62c0
                           0062C1   863 _OPAMPS	=	0x62c1
                           0062D0   864 _CMPCTL	=	0x62d0
                           006000   865 _RFCORE_RAM	=	0x6000
                           006000   866 _RXFIFO	=	0x6000
                           006080   867 _TXFIFO	=	0x6080
                           006100   868 _SRC_ADDR_TABLE	=	0x6100
                           006160   869 _SRCRESMASK0	=	0x6160
                           006161   870 _SRCRESMASK1	=	0x6161
                           006162   871 _SRCRESMASK2	=	0x6162
                           006163   872 _SRCRESINDEX	=	0x6163
                           006164   873 _SRCEXTPENDEN0	=	0x6164
                           006165   874 _SRCEXTPENDEN1	=	0x6165
                           006166   875 _SRCEXTPENDEN2	=	0x6166
                           006167   876 _SRCSHORTPENDEN0	=	0x6167
                           006168   877 _SRCSHORTPENDEN1	=	0x6168
                           006169   878 _SRCSHORTPENDEN2	=	0x6169
                           00616A   879 _EXT_ADDR0	=	0x616a
                           00616B   880 _EXT_ADDR1	=	0x616b
                           00616C   881 _EXT_ADDR2	=	0x616c
                           00616D   882 _EXT_ADDR3	=	0x616d
                           00616E   883 _EXT_ADDR4	=	0x616e
                           00616F   884 _EXT_ADDR5	=	0x616f
                           006170   885 _EXT_ADDR6	=	0x6170
                           006171   886 _EXT_ADDR7	=	0x6171
                           006172   887 _PAN_ID0	=	0x6172
                           006173   888 _PAN_ID1	=	0x6173
                           006174   889 _SHORT_ADDR0	=	0x6174
                           006175   890 _SHORT_ADDR1	=	0x6175
                           006180   891 _FRMFILT0	=	0x6180
                           006181   892 _FRMFILT1	=	0x6181
                           006182   893 _SRCMATCH	=	0x6182
                           006183   894 _SRCSHORTEN0	=	0x6183
                           006184   895 _SRCSHORTEN1	=	0x6184
                           006185   896 _SRCSHORTEN2	=	0x6185
                           006186   897 _SRCEXTEN0	=	0x6186
                           006187   898 _SRCEXTEN1	=	0x6187
                           006188   899 _SRCEXTEN2	=	0x6188
                           006189   900 _FRMCTRL0	=	0x6189
                           00618A   901 _FRMCTRL1	=	0x618a
                           00618B   902 _RXENABLE	=	0x618b
                           00618C   903 _RXMASKSET	=	0x618c
                           00618D   904 _RXMASKCLR	=	0x618d
                           00618E   905 _FREQTUNE	=	0x618e
                           00618F   906 _FREQCTRL	=	0x618f
                           006190   907 _TXPOWER	=	0x6190
                           006191   908 _TXCTRL	=	0x6191
                           006192   909 _FSMSTAT0	=	0x6192
                           006193   910 _FSMSTAT1	=	0x6193
                           006194   911 _FIFOPCTRL	=	0x6194
                           006195   912 _FSMCTRL	=	0x6195
                           006196   913 _CCACTRL0	=	0x6196
                           006197   914 _CCACTRL1	=	0x6197
                           006198   915 _RSSI	=	0x6198
                           006199   916 _RSSISTAT	=	0x6199
                           00619A   917 _RXFIRST	=	0x619a
                           00619B   918 _RXFIFOCNT	=	0x619b
                           00619C   919 _TXFIFOCNT	=	0x619c
                           00619D   920 _RXFIRST_PTR	=	0x619d
                           00619E   921 _RXLAST_PTR	=	0x619e
                           00619F   922 _RXP1_PTR	=	0x619f
                           0061A1   923 _TXFIRST_PTR	=	0x61a1
                           0061A2   924 _TXLAST_PTR	=	0x61a2
                           0061A3   925 _RFIRQM0	=	0x61a3
                           0061A4   926 _RFIRQM1	=	0x61a4
                           0061A5   927 _RFERRM	=	0x61a5
                           0061A7   928 _RFRND	=	0x61a7
                           0061A8   929 _MDMCTRL0	=	0x61a8
                           0061A9   930 _MDMCTRL1	=	0x61a9
                           0061AA   931 _FREQEST	=	0x61aa
                           0061AB   932 _RXCTRL	=	0x61ab
                           0061AC   933 _FSCTRL	=	0x61ac
                           0061AD   934 _FSCAL0	=	0x61ad
                           0061AE   935 _FSCAL1	=	0x61ae
                           0061AF   936 _FSCAL2	=	0x61af
                           0061B0   937 _FSCAL3	=	0x61b0
                           0061B1   938 _AGCCTRL0	=	0x61b1
                           0061B2   939 _AGCCTRL1	=	0x61b2
                           0061B3   940 _AGCCTRL2	=	0x61b3
                           0061B4   941 _AGCCTRL3	=	0x61b4
                           0061B5   942 _ADCTEST0	=	0x61b5
                           0061B6   943 _ADCTEST1	=	0x61b6
                           0061B7   944 _ADCTEST2	=	0x61b7
                           0061B8   945 _MDMTEST0	=	0x61b8
                           0061B9   946 _MDMTEST1	=	0x61b9
                           0061BA   947 _DACTEST0	=	0x61ba
                           0061BB   948 _DACTEST1	=	0x61bb
                           0061BC   949 _DACTEST2	=	0x61bc
                           0061BD   950 _ATEST	=	0x61bd
                           0061BE   951 _PTEST0	=	0x61be
                           0061BF   952 _PTEST1	=	0x61bf
                           0061FA   953 _TXFILTCFG	=	0x61fa
                           0061EB   954 _RFC_OBS_CTRL0	=	0x61eb
                           0061EC   955 _RFC_OBS_CTRL1	=	0x61ec
                           0061ED   956 _RFC_OBS_CTRL2	=	0x61ed
                           0061C0   957 _CSPPROG0	=	0x61c0
                           0061C1   958 _CSPPROG1	=	0x61c1
                           0061C2   959 _CSPPROG2	=	0x61c2
                           0061C3   960 _CSPPROG3	=	0x61c3
                           0061C4   961 _CSPPROG4	=	0x61c4
                           0061C5   962 _CSPPROG5	=	0x61c5
                           0061C6   963 _CSPPROG6	=	0x61c6
                           0061C7   964 _CSPPROG7	=	0x61c7
                           0061C8   965 _CSPPROG8	=	0x61c8
                           0061C9   966 _CSPPROG9	=	0x61c9
                           0061CA   967 _CSPPROG10	=	0x61ca
                           0061CB   968 _CSPPROG11	=	0x61cb
                           0061CC   969 _CSPPROG12	=	0x61cc
                           0061CD   970 _CSPPROG13	=	0x61cd
                           0061CE   971 _CSPPROG14	=	0x61ce
                           0061CF   972 _CSPPROG15	=	0x61cf
                           0061D0   973 _CSPPROG16	=	0x61d0
                           0061D1   974 _CSPPROG17	=	0x61d1
                           0061D2   975 _CSPPROG18	=	0x61d2
                           0061D3   976 _CSPPROG19	=	0x61d3
                           0061D4   977 _CSPPROG20	=	0x61d4
                           0061D5   978 _CSPPROG21	=	0x61d5
                           0061D6   979 _CSPPROG22	=	0x61d6
                           0061D7   980 _CSPPROG23	=	0x61d7
                           0061E0   981 _CSPCTRL	=	0x61e0
                           0061E1   982 _CSPSTAT	=	0x61e1
                           0061E2   983 _CSPX	=	0x61e2
                           0061E3   984 _CSPY	=	0x61e3
                           0061E4   985 _CSPZ	=	0x61e4
                           0061E5   986 _CSPT	=	0x61e5
                           006200   987 _USBADDR	=	0x6200
                           006201   988 _USBPOW	=	0x6201
                           006202   989 _USBIIF	=	0x6202
                           006204   990 _USBOIF	=	0x6204
                           006206   991 _USBCIF	=	0x6206
                           006207   992 _USBIIE	=	0x6207
                           006209   993 _USBOIE	=	0x6209
                           00620B   994 _USBCIE	=	0x620b
                           00620C   995 _USBFRML	=	0x620c
                           00620D   996 _USBFRMH	=	0x620d
                           00620E   997 _USBINDEX	=	0x620e
                           00620F   998 _USBCTRL	=	0x620f
                           006210   999 _USBMAXI	=	0x6210
                           006211  1000 _USBCS0	=	0x6211
                           006211  1001 _USBCSIL	=	0x6211
                           006212  1002 _USBCSIH	=	0x6212
                           006213  1003 _USBMAXO	=	0x6213
                           006214  1004 _USBCSOL	=	0x6214
                           006215  1005 _USBCSOH	=	0x6215
                           006216  1006 _USBCNT0	=	0x6216
                           006216  1007 _USBCNTL	=	0x6216
                           006217  1008 _USBCNTH	=	0x6217
                           006220  1009 _USBF0	=	0x6220
                           006222  1010 _USBF1	=	0x6222
                           006224  1011 _USBF2	=	0x6224
                           006226  1012 _USBF3	=	0x6226
                           006228  1013 _USBF4	=	0x6228
                           00622A  1014 _USBF5	=	0x622a
                           007080  1015 _X_P0	=	0x7080
                           007086  1016 _X_U0CSR	=	0x7086
                           007089  1017 _X_P0IFG	=	0x7089
                           00708A  1018 _X_P1IFG	=	0x708a
                           00708B  1019 _X_P2IFG	=	0x708b
                           00708C  1020 _X_PICTL	=	0x708c
                           00708D  1021 _X_P1IEN	=	0x708d
                           00708F  1022 _X_P0INP	=	0x708f
                           007090  1023 _X_P1	=	0x7090
                           007091  1024 _X_RFIRQF1	=	0x7091
                           007093  1025 _X_MPAGE	=	0x7093
                           007093  1026 _X__XPAGE	=	0x7093
                           007094  1027 _X_T2CTRL	=	0x7094
                           007095  1028 _X_ST0	=	0x7095
                           007096  1029 _X_ST1	=	0x7096
                           007097  1030 _X_ST2	=	0x7097
                           00709C  1031 _X_T2EVTCFG	=	0x709c
                           00709D  1032 _X_SLEEPSTA	=	0x709d
                           00709E  1033 _X_CLKCONSTA	=	0x709e
                           00709F  1034 _X_FMAP	=	0x709f
                           00709F  1035 _X_PSBANK	=	0x709f
                           0070A0  1036 _X_P2	=	0x70a0
                           0070A1  1037 _X_T2IRQF	=	0x70a1
                           0070A2  1038 _X_T2M0	=	0x70a2
                           0070A3  1039 _X_T2M1	=	0x70a3
                           0070A4  1040 _X_T2MOVF0	=	0x70a4
                           0070A5  1041 _X_T2MOVF1	=	0x70a5
                           0070A6  1042 _X_T2MOVF2	=	0x70a6
                           0070A7  1043 _X_T2IRQM	=	0x70a7
                           0070AB  1044 _X_P0IEN	=	0x70ab
                           0070AC  1045 _X_P2IEN	=	0x70ac
                           0070AD  1046 _X_STLOAD	=	0x70ad
                           0070AE  1047 _X_PMUX	=	0x70ae
                           0070AF  1048 _X_T1STAT	=	0x70af
                           0070B1  1049 _X_ENCDI	=	0x70b1
                           0070B2  1050 _X_ENCDO	=	0x70b2
                           0070B3  1051 _X_ENCCS	=	0x70b3
                           0070B4  1052 _X_ADCCON1	=	0x70b4
                           0070B5  1053 _X_ADCCON2	=	0x70b5
                           0070B6  1054 _X_ADCCON3	=	0x70b6
                           0070BA  1055 _X_ADCL	=	0x70ba
                           0070BB  1056 _X_ADCH	=	0x70bb
                           0070BC  1057 _X_RNDL	=	0x70bc
                           0070BD  1058 _X_RNDH	=	0x70bd
                           0070BE  1059 _X_SLEEPCMD	=	0x70be
                           0070BF  1060 _X_RFERRF	=	0x70bf
                           0070C1  1061 _X_U0DBUF	=	0x70c1
                           0070C2  1062 _X_U0BAUD	=	0x70c2
                           0070C3  1063 _X_T2MSEL	=	0x70c3
                           0070C4  1064 _X_U0UCR	=	0x70c4
                           0070C5  1065 _X_U0GCR	=	0x70c5
                           0070C6  1066 _X_CLKCONCMD	=	0x70c6
                           0070C7  1067 _X_MEMCTR	=	0x70c7
                           0070C9  1068 _X_WDCTL	=	0x70c9
                           0070CA  1069 _X_T3CNT	=	0x70ca
                           0070CB  1070 _X_T3CTL	=	0x70cb
                           0070CC  1071 _X_T3CCTL0	=	0x70cc
                           0070CD  1072 _X_T3CC0	=	0x70cd
                           0070CE  1073 _X_T3CCTL1	=	0x70ce
                           0070CF  1074 _X_T3CC1	=	0x70cf
                           0070D1  1075 _X_DMAIRQ	=	0x70d1
                           0070D2  1076 _X_DMA1CFGL	=	0x70d2
                           0070D3  1077 _X_DMA1CFGH	=	0x70d3
                           0070D4  1078 _X_DMA0CFGL	=	0x70d4
                           0070D5  1079 _X_DMA0CFGH	=	0x70d5
                           0070D6  1080 _X_DMAARM	=	0x70d6
                           0070D7  1081 _X_DMAREQ	=	0x70d7
                           0070D8  1082 _X_TIMIF	=	0x70d8
                           0070D9  1083 _X_RFD	=	0x70d9
                           0070DA  1084 _X_T1CC0L	=	0x70da
                           0070DB  1085 _X_T1CC0H	=	0x70db
                           0070DC  1086 _X_T1CC1L	=	0x70dc
                           0070DD  1087 _X_T1CC1H	=	0x70dd
                           0070DE  1088 _X_T1CC2L	=	0x70de
                           0070DF  1089 _X_T1CC2H	=	0x70df
                           0070E1  1090 _X_RFST	=	0x70e1
                           0070E2  1091 _X_T1CNTL	=	0x70e2
                           0070E3  1092 _X_T1CNTH	=	0x70e3
                           0070E4  1093 _X_T1CTL	=	0x70e4
                           0070E5  1094 _X_T1CCTL0	=	0x70e5
                           0070E6  1095 _X_T1CCTL1	=	0x70e6
                           0070E7  1096 _X_T1CCTL2	=	0x70e7
                           0070E9  1097 _X_RFIRQF0	=	0x70e9
                           0070EA  1098 _X_T4CNT	=	0x70ea
                           0070EB  1099 _X_T4CTL	=	0x70eb
                           0070EC  1100 _X_T4CCTL0	=	0x70ec
                           0070ED  1101 _X_T4CC0	=	0x70ed
                           0070EE  1102 _X_T4CCTL1	=	0x70ee
                           0070EF  1103 _X_T4CC1	=	0x70ef
                           0070F1  1104 _X_PERCFG	=	0x70f1
                           0070F2  1105 _X_APCFG	=	0x70f2
                           0070F3  1106 _X_P0SEL	=	0x70f3
                           0070F4  1107 _X_P1SEL	=	0x70f4
                           0070F5  1108 _X_P2SEL	=	0x70f5
                           0070F6  1109 _X_P1INP	=	0x70f6
                           0070F7  1110 _X_P2INP	=	0x70f7
                           0070F8  1111 _X_U1CSR	=	0x70f8
                           0070F9  1112 _X_U1DBUF	=	0x70f9
                           0070FA  1113 _X_U1BAUD	=	0x70fa
                           0070FB  1114 _X_U1UCR	=	0x70fb
                           0070FC  1115 _X_U1GCR	=	0x70fc
                           0070FD  1116 _X_P0DIR	=	0x70fd
                           0070FE  1117 _X_P1DIR	=	0x70fe
                           0070FF  1118 _X_P2DIR	=	0x70ff
                           007800  1119 _X_INFOPAGE	=	0x7800
                           00780C  1120 _X_IEEE_ADDR	=	0x780c
      000000                       1121 _server_conn:
      000000                       1122 	.ds 3
      000003                       1123 _buf:
      000003                       1124 	.ds 60
      00003F                       1125 _len:
      00003F                       1126 	.ds 1
      000040                       1127 _rt:
      000040                       1128 	.ds 3
      000043                       1129 _defrt:
      000043                       1130 	.ds 3
      000046                       1131 _addr:
      000046                       1132 	.ds 3
                                   1133 ;--------------------------------------------------------
                                   1134 ; absolute external ram data
                                   1135 ;--------------------------------------------------------
                                   1136 	.area XABS    (ABS,XDATA)
                                   1137 ;--------------------------------------------------------
                                   1138 ; external initialized ram data
                                   1139 ;--------------------------------------------------------
                                   1140 	.area XISEG   (XDATA)
      000000                       1141 _viztool_process::
      000000                       1142 	.ds 13
                                   1143 	.area HOME    (CODE)
                                   1144 	.area GSINIT0 (CODE)
                                   1145 	.area GSINIT1 (CODE)
                                   1146 	.area GSINIT2 (CODE)
                                   1147 	.area GSINIT3 (CODE)
                                   1148 	.area GSINIT4 (CODE)
                                   1149 	.area GSINIT5 (CODE)
                                   1150 	.area GSINIT  (CODE)
                                   1151 	.area GSFINAL (CODE)
                                   1152 	.area CSEG    (CODE)
                                   1153 ;--------------------------------------------------------
                                   1154 ; global & static initialisations
                                   1155 ;--------------------------------------------------------
                                   1156 	.area HOME    (CODE)
                                   1157 	.area GSINIT  (CODE)
                                   1158 	.area GSFINAL (CODE)
                                   1159 	.area GSINIT  (CODE)
                                   1160 ;--------------------------------------------------------
                                   1161 ; Home
                                   1162 ;--------------------------------------------------------
                                   1163 	.area HOME    (CODE)
                                   1164 	.area HOME    (CODE)
                                   1165 ;--------------------------------------------------------
                                   1166 ; code
                                   1167 ;--------------------------------------------------------
                                   1168 	.area BANK1   (CODE)
                                   1169 ;------------------------------------------------------------
                                   1170 ;Allocation info for local variables in function 'process_request'
                                   1171 ;------------------------------------------------------------
                                   1172 ;len                       Allocated to registers r7 
                                   1173 ;count                     Allocated to stack - sp -5
                                   1174 ;i                         Allocated to stack - sp -4
                                   1175 ;left                      Allocated to registers r7 
                                   1176 ;entry_size                Allocated to registers 
                                   1177 ;flip                      Allocated to stack - sp -3
                                   1178 ;flip                      Allocated to registers 
                                   1179 ;sloc0                     Allocated to stack - sp -20
                                   1180 ;sloc1                     Allocated to stack - sp -19
                                   1181 ;sloc2                     Allocated to stack - sp -18
                                   1182 ;sloc3                     Allocated to stack - sp -15
                                   1183 ;sloc4                     Allocated to stack - sp -12
                                   1184 ;sloc5                     Allocated to stack - sp -9
                                   1185 ;------------------------------------------------------------
                                   1186 ;	../../../platform/cc2530dk/./viztool.c:78: process_request() CC_NON_BANKED
                                   1187 ;	-----------------------------------------
                                   1188 ;	 function process_request
                                   1189 ;	-----------------------------------------
      000000                       1190 _process_request:
                           000007  1191 	ar7 = 0x07
                           000006  1192 	ar6 = 0x06
                           000005  1193 	ar5 = 0x05
                           000004  1194 	ar4 = 0x04
                           000003  1195 	ar3 = 0x03
                           000002  1196 	ar2 = 0x02
                           000001  1197 	ar1 = 0x01
                           000000  1198 	ar0 = 0x00
      000000 E5 81            [12] 1199 	mov	a,sp
      000002 24 15            [12] 1200 	add	a,#0x15
      000004 F5 81            [12] 1201 	mov	sp,a
                                   1202 ;	../../../platform/cc2530dk/./viztool.c:86: left = VIZTOOL_MAX_PAYLOAD_LEN - 1;
      000006 7F 3B            [12] 1203 	mov	r7,#0x3b
                                   1204 ;	../../../platform/cc2530dk/./viztool.c:87: len = 2; /* start filling the buffer from position [2] */
      000008 7E 02            [12] 1205 	mov	r6,#0x02
                                   1206 ;	../../../platform/cc2530dk/./viztool.c:88: count = 0;
      00000A E5 81            [12] 1207 	mov	a,sp
      00000C 24 FB            [12] 1208 	add	a,#0xfb
      00000E F8               [12] 1209 	mov	r0,a
      00000F 76 00            [12] 1210 	mov	@r0,#0x00
                                   1211 ;	../../../platform/cc2530dk/./viztool.c:89: if(buf[0] == REQUEST_TYPE_ND) {
      000011 90r00r03         [24] 1212 	mov	dptr,#_buf
      000014 E0               [24] 1213 	movx	a,@dptr
      000015 FC               [12] 1214 	mov	r4,a
      000016 BC 01 02         [24] 1215 	cjne	r4,#0x01,00300$
      000019 80 03            [24] 1216 	sjmp	00301$
      00001B                       1217 00300$:
      00001B 02r01rE9         [24] 1218 	ljmp	00140$
      00001E                       1219 00301$:
                                   1220 ;	../../../platform/cc2530dk/./viztool.c:92: for(i = buf[1]; i < UIP_DS6_NBR_NB; i++) {
      00001E 90r00r04         [24] 1221 	mov	dptr,#(_buf + 0x0001)
      000021 E5 81            [12] 1222 	mov	a,sp
      000023 24 FC            [12] 1223 	add	a,#0xfc
      000025 F8               [12] 1224 	mov	r0,a
      000026 E0               [24] 1225 	movx	a,@dptr
      000027 F6               [12] 1226 	mov	@r0,a
      000028 E5 81            [12] 1227 	mov	a,sp
      00002A 24 FB            [12] 1228 	add	a,#0xfb
      00002C F8               [12] 1229 	mov	r0,a
      00002D E5 81            [12] 1230 	mov	a,sp
      00002F 24 EC            [12] 1231 	add	a,#0xec
      000031 F9               [12] 1232 	mov	r1,a
      000032 E6               [12] 1233 	mov	a,@r0
      000033 F7               [12] 1234 	mov	@r1,a
      000034 E5 81            [12] 1235 	mov	a,sp
      000036 24 ED            [12] 1236 	add	a,#0xed
      000038 F8               [12] 1237 	mov	r0,a
      000039 A6 07            [24] 1238 	mov	@r0,ar7
      00003B                       1239 00143$:
      00003B E5 81            [12] 1240 	mov	a,sp
      00003D 24 FC            [12] 1241 	add	a,#0xfc
      00003F F8               [12] 1242 	mov	r0,a
      000040 B6 04 00         [24] 1243 	cjne	@r0,#0x04,00302$
      000043                       1244 00302$:
      000043 40 03            [24] 1245 	jc	00303$
      000045 02r08rF5         [24] 1246 	ljmp	00180$
      000048                       1247 00303$:
                                   1248 ;	../../../platform/cc2530dk/./viztool.c:93: if(uip_ds6_nbr_cache[i].isused) {
      000048 E5 81            [12] 1249 	mov	a,sp
      00004A 24 FC            [12] 1250 	add	a,#0xfc
      00004C F8               [12] 1251 	mov	r0,a
      00004D E6               [12] 1252 	mov	a,@r0
      00004E 75 F0 2E         [24] 1253 	mov	b,#0x2e
      000051 A4               [48] 1254 	mul	ab
      000052 24r00            [12] 1255 	add	a,#_uip_ds6_nbr_cache
      000054 FA               [12] 1256 	mov	r2,a
      000055 74s00            [12] 1257 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      000057 35 F0            [12] 1258 	addc	a,b
      000059 FC               [12] 1259 	mov	r4,a
      00005A 8A 82            [24] 1260 	mov	dpl,r2
      00005C 8C 83            [24] 1261 	mov	dph,r4
      00005E E0               [24] 1262 	movx	a,@dptr
      00005F 70 03            [24] 1263 	jnz	00304$
      000061 02r01rE0         [24] 1264 	ljmp	00144$
      000064                       1265 00304$:
                                   1266 ;	../../../platform/cc2530dk/./viztool.c:102: memcpy(buf + len, &i, sizeof(i));
      000064 E5 81            [12] 1267 	mov	a,sp
      000066 24 FC            [12] 1268 	add	a,#0xfc
      000068 FA               [12] 1269 	mov	r2,a
      000069 E5 81            [12] 1270 	mov	a,sp
      00006B 24 EE            [12] 1271 	add	a,#0xee
      00006D F8               [12] 1272 	mov	r0,a
      00006E A6 02            [24] 1273 	mov	@r0,ar2
      000070 08               [12] 1274 	inc	r0
      000071 76 00            [12] 1275 	mov	@r0,#0x00
      000073 08               [12] 1276 	inc	r0
      000074 76 40            [12] 1277 	mov	@r0,#0x40
      000076 EE               [12] 1278 	mov	a,r6
      000077 24r03            [12] 1279 	add	a,#_buf
      000079 FB               [12] 1280 	mov	r3,a
      00007A E4               [12] 1281 	clr	a
      00007B 34s00            [12] 1282 	addc	a,#(_buf >> 8)
      00007D FC               [12] 1283 	mov	r4,a
      00007E 7A 00            [12] 1284 	mov	r2,#0x00
      000080 C0 06            [24] 1285 	push	ar6
      000082 74 01            [12] 1286 	mov	a,#0x01
      000084 C0 E0            [24] 1287 	push	acc
      000086 E4               [12] 1288 	clr	a
      000087 C0 E0            [24] 1289 	push	acc
      000089 E5 81            [12] 1290 	mov	a,sp
      00008B 24 EB            [12] 1291 	add	a,#0xeb
      00008D F8               [12] 1292 	mov	r0,a
      00008E E6               [12] 1293 	mov	a,@r0
      00008F C0 E0            [24] 1294 	push	acc
      000091 08               [12] 1295 	inc	r0
      000092 E6               [12] 1296 	mov	a,@r0
      000093 C0 E0            [24] 1297 	push	acc
      000095 08               [12] 1298 	inc	r0
      000096 E6               [12] 1299 	mov	a,@r0
      000097 C0 E0            [24] 1300 	push	acc
      000099 8B 82            [24] 1301 	mov	dpl,r3
      00009B 8C 83            [24] 1302 	mov	dph,r4
      00009D 8A F0            [24] 1303 	mov	b,r2
      00009F 78r00            [12] 1304 	mov	r0,#___memcpy
      0000A1 79s00            [12] 1305 	mov	r1,#(___memcpy >> 8)
      0000A3 7As00            [12] 1306 	mov	r2,#(___memcpy >> 16)
      0000A5 12r00r00         [24] 1307 	lcall	__sdcc_banked_call
      0000A8 E5 81            [12] 1308 	mov	a,sp
      0000AA 24 FB            [12] 1309 	add	a,#0xfb
      0000AC F5 81            [12] 1310 	mov	sp,a
      0000AE D0 06            [24] 1311 	pop	ar6
                                   1312 ;	../../../platform/cc2530dk/./viztool.c:103: len += sizeof(i);
      0000B0 E5 81            [12] 1313 	mov	a,sp
      0000B2 24 EE            [12] 1314 	add	a,#0xee
      0000B4 F8               [12] 1315 	mov	r0,a
      0000B5 EE               [12] 1316 	mov	a,r6
      0000B6 04               [12] 1317 	inc	a
      0000B7 F6               [12] 1318 	mov	@r0,a
                                   1319 ;	../../../platform/cc2530dk/./viztool.c:104: memcpy(buf + len, &uip_ds6_nbr_cache[i].ipaddr, sizeof(uip_ipaddr_t));
      0000B8 E5 81            [12] 1320 	mov	a,sp
      0000BA 24 FC            [12] 1321 	add	a,#0xfc
      0000BC F8               [12] 1322 	mov	r0,a
      0000BD E6               [12] 1323 	mov	a,@r0
      0000BE 75 F0 2E         [24] 1324 	mov	b,#0x2e
      0000C1 A4               [48] 1325 	mul	ab
      0000C2 24r00            [12] 1326 	add	a,#_uip_ds6_nbr_cache
      0000C4 FA               [12] 1327 	mov	r2,a
      0000C5 74s00            [12] 1328 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      0000C7 35 F0            [12] 1329 	addc	a,b
      0000C9 FB               [12] 1330 	mov	r3,a
      0000CA 0A               [12] 1331 	inc	r2
      0000CB BA 00 01         [24] 1332 	cjne	r2,#0x00,00305$
      0000CE 0B               [12] 1333 	inc	r3
      0000CF                       1334 00305$:
      0000CF 8A 07            [24] 1335 	mov	ar7,r2
      0000D1 8B 06            [24] 1336 	mov	ar6,r3
      0000D3 7D 00            [12] 1337 	mov	r5,#0x00
      0000D5 E5 81            [12] 1338 	mov	a,sp
      0000D7 24 EE            [12] 1339 	add	a,#0xee
      0000D9 F8               [12] 1340 	mov	r0,a
      0000DA E6               [12] 1341 	mov	a,@r0
      0000DB 24r03            [12] 1342 	add	a,#_buf
      0000DD FB               [12] 1343 	mov	r3,a
      0000DE E4               [12] 1344 	clr	a
      0000DF 34s00            [12] 1345 	addc	a,#(_buf >> 8)
      0000E1 FC               [12] 1346 	mov	r4,a
      0000E2 7A 00            [12] 1347 	mov	r2,#0x00
      0000E4 74 10            [12] 1348 	mov	a,#0x10
      0000E6 C0 E0            [24] 1349 	push	acc
      0000E8 E4               [12] 1350 	clr	a
      0000E9 C0 E0            [24] 1351 	push	acc
      0000EB C0 07            [24] 1352 	push	ar7
      0000ED C0 06            [24] 1353 	push	ar6
      0000EF C0 05            [24] 1354 	push	ar5
      0000F1 8B 82            [24] 1355 	mov	dpl,r3
      0000F3 8C 83            [24] 1356 	mov	dph,r4
      0000F5 8A F0            [24] 1357 	mov	b,r2
      0000F7 78r00            [12] 1358 	mov	r0,#___memcpy
      0000F9 79s00            [12] 1359 	mov	r1,#(___memcpy >> 8)
      0000FB 7As00            [12] 1360 	mov	r2,#(___memcpy >> 16)
      0000FD 12r00r00         [24] 1361 	lcall	__sdcc_banked_call
      000100 E5 81            [12] 1362 	mov	a,sp
      000102 24 FB            [12] 1363 	add	a,#0xfb
                                   1364 ;	../../../platform/cc2530dk/./viztool.c:105: len += sizeof(uip_ipaddr_t);
      000104 F5 81            [12] 1365 	mov	sp,a
      000106 24 EE            [12] 1366 	add	a,#0xee
      000108 F8               [12] 1367 	mov	r0,a
      000109 E5 81            [12] 1368 	mov	a,sp
      00010B 24 F1            [12] 1369 	add	a,#0xf1
      00010D F9               [12] 1370 	mov	r1,a
      00010E 74 10            [12] 1371 	mov	a,#0x10
      000110 26               [12] 1372 	add	a,@r0
      000111 F7               [12] 1373 	mov	@r1,a
                                   1374 ;	../../../platform/cc2530dk/./viztool.c:106: memcpy(buf + len, &uip_ds6_nbr_cache[i].lladdr, sizeof(uip_lladdr_t));
      000112 E5 81            [12] 1375 	mov	a,sp
      000114 24 FC            [12] 1376 	add	a,#0xfc
      000116 F8               [12] 1377 	mov	r0,a
      000117 E6               [12] 1378 	mov	a,@r0
      000118 75 F0 2E         [24] 1379 	mov	b,#0x2e
      00011B A4               [48] 1380 	mul	ab
      00011C 24r00            [12] 1381 	add	a,#_uip_ds6_nbr_cache
      00011E FA               [12] 1382 	mov	r2,a
      00011F 74s00            [12] 1383 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      000121 35 F0            [12] 1384 	addc	a,b
      000123 FB               [12] 1385 	mov	r3,a
      000124 74 11            [12] 1386 	mov	a,#0x11
      000126 2A               [12] 1387 	add	a,r2
      000127 FA               [12] 1388 	mov	r2,a
      000128 E4               [12] 1389 	clr	a
      000129 3B               [12] 1390 	addc	a,r3
      00012A FB               [12] 1391 	mov	r3,a
      00012B 8A 07            [24] 1392 	mov	ar7,r2
      00012D 8B 06            [24] 1393 	mov	ar6,r3
      00012F 7D 00            [12] 1394 	mov	r5,#0x00
      000131 E5 81            [12] 1395 	mov	a,sp
      000133 24 F1            [12] 1396 	add	a,#0xf1
      000135 F8               [12] 1397 	mov	r0,a
      000136 E6               [12] 1398 	mov	a,@r0
      000137 24r03            [12] 1399 	add	a,#_buf
      000139 FB               [12] 1400 	mov	r3,a
      00013A E4               [12] 1401 	clr	a
      00013B 34s00            [12] 1402 	addc	a,#(_buf >> 8)
      00013D FC               [12] 1403 	mov	r4,a
      00013E 7A 00            [12] 1404 	mov	r2,#0x00
      000140 74 08            [12] 1405 	mov	a,#0x08
      000142 C0 E0            [24] 1406 	push	acc
      000144 E4               [12] 1407 	clr	a
      000145 C0 E0            [24] 1408 	push	acc
      000147 C0 07            [24] 1409 	push	ar7
      000149 C0 06            [24] 1410 	push	ar6
      00014B C0 05            [24] 1411 	push	ar5
      00014D 8B 82            [24] 1412 	mov	dpl,r3
      00014F 8C 83            [24] 1413 	mov	dph,r4
      000151 8A F0            [24] 1414 	mov	b,r2
      000153 78r00            [12] 1415 	mov	r0,#___memcpy
      000155 79s00            [12] 1416 	mov	r1,#(___memcpy >> 8)
      000157 7As00            [12] 1417 	mov	r2,#(___memcpy >> 16)
      000159 12r00r00         [24] 1418 	lcall	__sdcc_banked_call
      00015C E5 81            [12] 1419 	mov	a,sp
      00015E 24 FB            [12] 1420 	add	a,#0xfb
                                   1421 ;	../../../platform/cc2530dk/./viztool.c:107: len += sizeof(uip_lladdr_t);
      000160 F5 81            [12] 1422 	mov	sp,a
      000162 24 F1            [12] 1423 	add	a,#0xf1
      000164 F8               [12] 1424 	mov	r0,a
      000165 E5 81            [12] 1425 	mov	a,sp
      000167 24 F1            [12] 1426 	add	a,#0xf1
      000169 F9               [12] 1427 	mov	r1,a
      00016A 74 08            [12] 1428 	mov	a,#0x08
      00016C 26               [12] 1429 	add	a,@r0
      00016D F7               [12] 1430 	mov	@r1,a
                                   1431 ;	../../../platform/cc2530dk/./viztool.c:108: memcpy(buf + len, &uip_ds6_nbr_cache[i].state,
      00016E E5 81            [12] 1432 	mov	a,sp
      000170 24 FC            [12] 1433 	add	a,#0xfc
      000172 F8               [12] 1434 	mov	r0,a
      000173 E6               [12] 1435 	mov	a,@r0
      000174 75 F0 2E         [24] 1436 	mov	b,#0x2e
      000177 A4               [48] 1437 	mul	ab
      000178 24r00            [12] 1438 	add	a,#_uip_ds6_nbr_cache
      00017A FA               [12] 1439 	mov	r2,a
      00017B 74s00            [12] 1440 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      00017D 35 F0            [12] 1441 	addc	a,b
      00017F FB               [12] 1442 	mov	r3,a
      000180 74 2D            [12] 1443 	mov	a,#0x2d
      000182 2A               [12] 1444 	add	a,r2
      000183 FA               [12] 1445 	mov	r2,a
      000184 E4               [12] 1446 	clr	a
      000185 3B               [12] 1447 	addc	a,r3
      000186 FB               [12] 1448 	mov	r3,a
      000187 8A 07            [24] 1449 	mov	ar7,r2
      000189 8B 06            [24] 1450 	mov	ar6,r3
      00018B 7D 00            [12] 1451 	mov	r5,#0x00
      00018D E5 81            [12] 1452 	mov	a,sp
      00018F 24 F1            [12] 1453 	add	a,#0xf1
      000191 F8               [12] 1454 	mov	r0,a
      000192 E6               [12] 1455 	mov	a,@r0
      000193 24r03            [12] 1456 	add	a,#_buf
      000195 FB               [12] 1457 	mov	r3,a
      000196 E4               [12] 1458 	clr	a
      000197 34s00            [12] 1459 	addc	a,#(_buf >> 8)
      000199 FC               [12] 1460 	mov	r4,a
      00019A 7A 00            [12] 1461 	mov	r2,#0x00
      00019C 74 01            [12] 1462 	mov	a,#0x01
      00019E C0 E0            [24] 1463 	push	acc
      0001A0 E4               [12] 1464 	clr	a
      0001A1 C0 E0            [24] 1465 	push	acc
      0001A3 C0 07            [24] 1466 	push	ar7
      0001A5 C0 06            [24] 1467 	push	ar6
      0001A7 C0 05            [24] 1468 	push	ar5
      0001A9 8B 82            [24] 1469 	mov	dpl,r3
      0001AB 8C 83            [24] 1470 	mov	dph,r4
      0001AD 8A F0            [24] 1471 	mov	b,r2
      0001AF 78r00            [12] 1472 	mov	r0,#___memcpy
      0001B1 79s00            [12] 1473 	mov	r1,#(___memcpy >> 8)
      0001B3 7As00            [12] 1474 	mov	r2,#(___memcpy >> 16)
      0001B5 12r00r00         [24] 1475 	lcall	__sdcc_banked_call
      0001B8 E5 81            [12] 1476 	mov	a,sp
      0001BA 24 FB            [12] 1477 	add	a,#0xfb
                                   1478 ;	../../../platform/cc2530dk/./viztool.c:110: len += sizeof(uip_ds6_nbr_cache[i].state);
      0001BC F5 81            [12] 1479 	mov	sp,a
      0001BE 24 F1            [12] 1480 	add	a,#0xf1
      0001C0 F8               [12] 1481 	mov	r0,a
      0001C1 E6               [12] 1482 	mov	a,@r0
      0001C2 04               [12] 1483 	inc	a
      0001C3 FE               [12] 1484 	mov	r6,a
                                   1485 ;	../../../platform/cc2530dk/./viztool.c:112: count++;
      0001C4 E5 81            [12] 1486 	mov	a,sp
      0001C6 24 EC            [12] 1487 	add	a,#0xec
      0001C8 F8               [12] 1488 	mov	r0,a
      0001C9 06               [12] 1489 	inc	@r0
                                   1490 ;	../../../platform/cc2530dk/./viztool.c:113: left -= entry_size;
      0001CA E5 81            [12] 1491 	mov	a,sp
      0001CC 24 ED            [12] 1492 	add	a,#0xed
      0001CE F8               [12] 1493 	mov	r0,a
      0001CF E6               [12] 1494 	mov	a,@r0
      0001D0 24 E6            [12] 1495 	add	a,#0xe6
      0001D2 F6               [12] 1496 	mov	@r0,a
                                   1497 ;	../../../platform/cc2530dk/./viztool.c:115: if(left < entry_size) {
      0001D3 E5 81            [12] 1498 	mov	a,sp
      0001D5 24 ED            [12] 1499 	add	a,#0xed
      0001D7 F8               [12] 1500 	mov	r0,a
      0001D8 B6 1A 00         [24] 1501 	cjne	@r0,#0x1a,00306$
      0001DB                       1502 00306$:
      0001DB 50 03            [24] 1503 	jnc	00307$
      0001DD 02r08rF5         [24] 1504 	ljmp	00180$
      0001E0                       1505 00307$:
                                   1506 ;	../../../platform/cc2530dk/./viztool.c:116: break;
      0001E0                       1507 00144$:
                                   1508 ;	../../../platform/cc2530dk/./viztool.c:92: for(i = buf[1]; i < UIP_DS6_NBR_NB; i++) {
      0001E0 E5 81            [12] 1509 	mov	a,sp
      0001E2 24 FC            [12] 1510 	add	a,#0xfc
      0001E4 F8               [12] 1511 	mov	r0,a
      0001E5 06               [12] 1512 	inc	@r0
      0001E6 02r00r3B         [24] 1513 	ljmp	00143$
      0001E9                       1514 00140$:
                                   1515 ;	../../../platform/cc2530dk/./viztool.c:120: } else if(buf[0] == REQUEST_TYPE_RT) {
      0001E9 90r00r03         [24] 1516 	mov	dptr,#_buf
      0001EC E0               [24] 1517 	movx	a,@dptr
      0001ED FC               [12] 1518 	mov	r4,a
      0001EE BC 02 02         [24] 1519 	cjne	r4,#0x02,00308$
      0001F1 80 03            [24] 1520 	sjmp	00309$
      0001F3                       1521 00308$:
      0001F3 02r05r64         [24] 1522 	ljmp	00137$
      0001F6                       1523 00309$:
                                   1524 ;	../../../platform/cc2530dk/./viztool.c:121: uint32_t flip = 0;
      0001F6 E5 81            [12] 1525 	mov	a,sp
      0001F8 24 FD            [12] 1526 	add	a,#0xfd
      0001FA F8               [12] 1527 	mov	r0,a
      0001FB E4               [12] 1528 	clr	a
      0001FC F6               [12] 1529 	mov	@r0,a
      0001FD 08               [12] 1530 	inc	r0
      0001FE F6               [12] 1531 	mov	@r0,a
      0001FF 08               [12] 1532 	inc	r0
      000200 F6               [12] 1533 	mov	@r0,a
      000201 08               [12] 1534 	inc	r0
      000202 F6               [12] 1535 	mov	@r0,a
                                   1536 ;	../../../platform/cc2530dk/./viztool.c:124: rt = uip_ds6_route_list_head();
      000203 C0 07            [24] 1537 	push	ar7
      000205 C0 06            [24] 1538 	push	ar6
      000207 78r00            [12] 1539 	mov	r0,#_uip_ds6_route_list_head
      000209 79s00            [12] 1540 	mov	r1,#(_uip_ds6_route_list_head >> 8)
      00020B 7As00            [12] 1541 	mov	r2,#(_uip_ds6_route_list_head >> 16)
      00020D 12r00r00         [24] 1542 	lcall	__sdcc_banked_call
      000210 AA 82            [24] 1543 	mov	r2,dpl
      000212 AB 83            [24] 1544 	mov	r3,dph
      000214 AC F0            [24] 1545 	mov	r4,b
      000216 D0 06            [24] 1546 	pop	ar6
      000218 D0 07            [24] 1547 	pop	ar7
      00021A 90r00r40         [24] 1548 	mov	dptr,#_rt
      00021D EA               [12] 1549 	mov	a,r2
      00021E F0               [24] 1550 	movx	@dptr,a
      00021F EB               [12] 1551 	mov	a,r3
      000220 A3               [24] 1552 	inc	dptr
      000221 F0               [24] 1553 	movx	@dptr,a
      000222 EC               [12] 1554 	mov	a,r4
      000223 A3               [24] 1555 	inc	dptr
      000224 F0               [24] 1556 	movx	@dptr,a
                                   1557 ;	../../../platform/cc2530dk/./viztool.c:126: for(i = buf[1]; i < uip_ds6_route_num_routes(); i++) {
      000225 90r00r04         [24] 1558 	mov	dptr,#(_buf + 0x0001)
      000228 E5 81            [12] 1559 	mov	a,sp
      00022A 24 FC            [12] 1560 	add	a,#0xfc
      00022C F8               [12] 1561 	mov	r0,a
      00022D E0               [24] 1562 	movx	a,@dptr
      00022E F6               [12] 1563 	mov	@r0,a
      00022F E5 81            [12] 1564 	mov	a,sp
      000231 24 FB            [12] 1565 	add	a,#0xfb
      000233 F8               [12] 1566 	mov	r0,a
      000234 E5 81            [12] 1567 	mov	a,sp
      000236 24 EE            [12] 1568 	add	a,#0xee
      000238 F9               [12] 1569 	mov	r1,a
      000239 E6               [12] 1570 	mov	a,@r0
      00023A F7               [12] 1571 	mov	@r1,a
      00023B E5 81            [12] 1572 	mov	a,sp
      00023D 24 ED            [12] 1573 	add	a,#0xed
      00023F F8               [12] 1574 	mov	r0,a
      000240 A6 07            [24] 1575 	mov	@r0,ar7
      000242                       1576 00146$:
      000242 C0 06            [24] 1577 	push	ar6
      000244 78r00            [12] 1578 	mov	r0,#_uip_ds6_route_num_routes
      000246 79s00            [12] 1579 	mov	r1,#(_uip_ds6_route_num_routes >> 8)
      000248 7As00            [12] 1580 	mov	r2,#(_uip_ds6_route_num_routes >> 16)
      00024A 12r00r00         [24] 1581 	lcall	__sdcc_banked_call
      00024D AF 82            [24] 1582 	mov	r7,dpl
      00024F AD 83            [24] 1583 	mov	r5,dph
      000251 D0 06            [24] 1584 	pop	ar6
      000253 E5 81            [12] 1585 	mov	a,sp
      000255 24 FC            [12] 1586 	add	a,#0xfc
      000257 F8               [12] 1587 	mov	r0,a
      000258 86 02            [24] 1588 	mov	ar2,@r0
      00025A 7C 00            [12] 1589 	mov	r4,#0x00
      00025C C3               [12] 1590 	clr	c
      00025D EA               [12] 1591 	mov	a,r2
      00025E 9F               [12] 1592 	subb	a,r7
      00025F EC               [12] 1593 	mov	a,r4
      000260 64 80            [12] 1594 	xrl	a,#0x80
      000262 8D F0            [24] 1595 	mov	b,r5
      000264 63 F0 80         [24] 1596 	xrl	b,#0x80
      000267 95 F0            [12] 1597 	subb	a,b
      000269 40 03            [24] 1598 	jc	00310$
      00026B 02r09r03         [24] 1599 	ljmp	00181$
      00026E                       1600 00310$:
                                   1601 ;	../../../platform/cc2530dk/./viztool.c:127: if(rt != NULL) {
      00026E 90r00r40         [24] 1602 	mov	dptr,#_rt
      000271 E0               [24] 1603 	movx	a,@dptr
      000272 F5 F0            [12] 1604 	mov	b,a
      000274 A3               [24] 1605 	inc	dptr
      000275 E0               [24] 1606 	movx	a,@dptr
      000276 45 F0            [12] 1607 	orl	a,b
      000278 70 03            [24] 1608 	jnz	00311$
      00027A 02r05r5B         [24] 1609 	ljmp	00147$
      00027D                       1610 00311$:
                                   1611 ;	../../../platform/cc2530dk/./viztool.c:135: memcpy(buf + len, &i, sizeof(i));
      00027D E5 81            [12] 1612 	mov	a,sp
      00027F 24 FC            [12] 1613 	add	a,#0xfc
      000281 FA               [12] 1614 	mov	r2,a
      000282 E5 81            [12] 1615 	mov	a,sp
      000284 24 F1            [12] 1616 	add	a,#0xf1
      000286 F8               [12] 1617 	mov	r0,a
      000287 A6 02            [24] 1618 	mov	@r0,ar2
      000289 08               [12] 1619 	inc	r0
      00028A 76 00            [12] 1620 	mov	@r0,#0x00
      00028C 08               [12] 1621 	inc	r0
      00028D 76 40            [12] 1622 	mov	@r0,#0x40
      00028F EE               [12] 1623 	mov	a,r6
      000290 24r03            [12] 1624 	add	a,#_buf
      000292 FB               [12] 1625 	mov	r3,a
      000293 E4               [12] 1626 	clr	a
      000294 34s00            [12] 1627 	addc	a,#(_buf >> 8)
      000296 FC               [12] 1628 	mov	r4,a
      000297 7A 00            [12] 1629 	mov	r2,#0x00
      000299 C0 06            [24] 1630 	push	ar6
      00029B 74 01            [12] 1631 	mov	a,#0x01
      00029D C0 E0            [24] 1632 	push	acc
      00029F E4               [12] 1633 	clr	a
      0002A0 C0 E0            [24] 1634 	push	acc
      0002A2 E5 81            [12] 1635 	mov	a,sp
      0002A4 24 EE            [12] 1636 	add	a,#0xee
      0002A6 F8               [12] 1637 	mov	r0,a
      0002A7 E6               [12] 1638 	mov	a,@r0
      0002A8 C0 E0            [24] 1639 	push	acc
      0002AA 08               [12] 1640 	inc	r0
      0002AB E6               [12] 1641 	mov	a,@r0
      0002AC C0 E0            [24] 1642 	push	acc
      0002AE 08               [12] 1643 	inc	r0
      0002AF E6               [12] 1644 	mov	a,@r0
      0002B0 C0 E0            [24] 1645 	push	acc
      0002B2 8B 82            [24] 1646 	mov	dpl,r3
      0002B4 8C 83            [24] 1647 	mov	dph,r4
      0002B6 8A F0            [24] 1648 	mov	b,r2
      0002B8 78r00            [12] 1649 	mov	r0,#___memcpy
      0002BA 79s00            [12] 1650 	mov	r1,#(___memcpy >> 8)
      0002BC 7As00            [12] 1651 	mov	r2,#(___memcpy >> 16)
      0002BE 12r00r00         [24] 1652 	lcall	__sdcc_banked_call
      0002C1 E5 81            [12] 1653 	mov	a,sp
      0002C3 24 FB            [12] 1654 	add	a,#0xfb
      0002C5 F5 81            [12] 1655 	mov	sp,a
      0002C7 D0 06            [24] 1656 	pop	ar6
                                   1657 ;	../../../platform/cc2530dk/./viztool.c:136: len += sizeof(i);
      0002C9 E5 81            [12] 1658 	mov	a,sp
      0002CB 24 F1            [12] 1659 	add	a,#0xf1
      0002CD F8               [12] 1660 	mov	r0,a
      0002CE EE               [12] 1661 	mov	a,r6
      0002CF 04               [12] 1662 	inc	a
      0002D0 F6               [12] 1663 	mov	@r0,a
                                   1664 ;	../../../platform/cc2530dk/./viztool.c:137: memcpy(buf + len, &rt->ipaddr, sizeof(rt->ipaddr));
      0002D1 90r00r40         [24] 1665 	mov	dptr,#_rt
      0002D4 E0               [24] 1666 	movx	a,@dptr
      0002D5 FA               [12] 1667 	mov	r2,a
      0002D6 A3               [24] 1668 	inc	dptr
      0002D7 E0               [24] 1669 	movx	a,@dptr
      0002D8 FB               [12] 1670 	mov	r3,a
      0002D9 A3               [24] 1671 	inc	dptr
      0002DA E0               [24] 1672 	movx	a,@dptr
      0002DB FC               [12] 1673 	mov	r4,a
      0002DC 74 03            [12] 1674 	mov	a,#0x03
      0002DE 2A               [12] 1675 	add	a,r2
      0002DF FA               [12] 1676 	mov	r2,a
      0002E0 E4               [12] 1677 	clr	a
      0002E1 3B               [12] 1678 	addc	a,r3
      0002E2 FB               [12] 1679 	mov	r3,a
      0002E3 8A 07            [24] 1680 	mov	ar7,r2
      0002E5 8B 06            [24] 1681 	mov	ar6,r3
      0002E7 8C 05            [24] 1682 	mov	ar5,r4
      0002E9 E5 81            [12] 1683 	mov	a,sp
      0002EB 24 F1            [12] 1684 	add	a,#0xf1
      0002ED F8               [12] 1685 	mov	r0,a
      0002EE E6               [12] 1686 	mov	a,@r0
      0002EF 24r03            [12] 1687 	add	a,#_buf
      0002F1 FB               [12] 1688 	mov	r3,a
      0002F2 E4               [12] 1689 	clr	a
      0002F3 34s00            [12] 1690 	addc	a,#(_buf >> 8)
      0002F5 FC               [12] 1691 	mov	r4,a
      0002F6 7A 00            [12] 1692 	mov	r2,#0x00
      0002F8 74 10            [12] 1693 	mov	a,#0x10
      0002FA C0 E0            [24] 1694 	push	acc
      0002FC E4               [12] 1695 	clr	a
      0002FD C0 E0            [24] 1696 	push	acc
      0002FF C0 07            [24] 1697 	push	ar7
      000301 C0 06            [24] 1698 	push	ar6
      000303 C0 05            [24] 1699 	push	ar5
      000305 8B 82            [24] 1700 	mov	dpl,r3
      000307 8C 83            [24] 1701 	mov	dph,r4
      000309 8A F0            [24] 1702 	mov	b,r2
      00030B 78r00            [12] 1703 	mov	r0,#___memcpy
      00030D 79s00            [12] 1704 	mov	r1,#(___memcpy >> 8)
      00030F 7As00            [12] 1705 	mov	r2,#(___memcpy >> 16)
      000311 12r00r00         [24] 1706 	lcall	__sdcc_banked_call
      000314 E5 81            [12] 1707 	mov	a,sp
      000316 24 FB            [12] 1708 	add	a,#0xfb
                                   1709 ;	../../../platform/cc2530dk/./viztool.c:138: len += sizeof(rt->ipaddr);
      000318 F5 81            [12] 1710 	mov	sp,a
      00031A 24 F1            [12] 1711 	add	a,#0xf1
      00031C F8               [12] 1712 	mov	r0,a
      00031D E5 81            [12] 1713 	mov	a,sp
      00031F 24 F4            [12] 1714 	add	a,#0xf4
      000321 F9               [12] 1715 	mov	r1,a
      000322 74 10            [12] 1716 	mov	a,#0x10
      000324 26               [12] 1717 	add	a,@r0
      000325 F7               [12] 1718 	mov	@r1,a
                                   1719 ;	../../../platform/cc2530dk/./viztool.c:139: memcpy(buf + len, &rt->length, sizeof(rt->length));
      000326 90r00r40         [24] 1720 	mov	dptr,#_rt
      000329 E0               [24] 1721 	movx	a,@dptr
      00032A FA               [12] 1722 	mov	r2,a
      00032B A3               [24] 1723 	inc	dptr
      00032C E0               [24] 1724 	movx	a,@dptr
      00032D FB               [12] 1725 	mov	r3,a
      00032E A3               [24] 1726 	inc	dptr
      00032F E0               [24] 1727 	movx	a,@dptr
      000330 FC               [12] 1728 	mov	r4,a
      000331 74 23            [12] 1729 	mov	a,#0x23
      000333 2A               [12] 1730 	add	a,r2
      000334 FA               [12] 1731 	mov	r2,a
      000335 E4               [12] 1732 	clr	a
      000336 3B               [12] 1733 	addc	a,r3
      000337 FB               [12] 1734 	mov	r3,a
      000338 8A 07            [24] 1735 	mov	ar7,r2
      00033A 8B 06            [24] 1736 	mov	ar6,r3
      00033C 8C 05            [24] 1737 	mov	ar5,r4
      00033E E5 81            [12] 1738 	mov	a,sp
      000340 24 F4            [12] 1739 	add	a,#0xf4
      000342 F8               [12] 1740 	mov	r0,a
      000343 E6               [12] 1741 	mov	a,@r0
      000344 24r03            [12] 1742 	add	a,#_buf
      000346 FB               [12] 1743 	mov	r3,a
      000347 E4               [12] 1744 	clr	a
      000348 34s00            [12] 1745 	addc	a,#(_buf >> 8)
      00034A FC               [12] 1746 	mov	r4,a
      00034B 7A 00            [12] 1747 	mov	r2,#0x00
      00034D 74 01            [12] 1748 	mov	a,#0x01
      00034F C0 E0            [24] 1749 	push	acc
      000351 E4               [12] 1750 	clr	a
      000352 C0 E0            [24] 1751 	push	acc
      000354 C0 07            [24] 1752 	push	ar7
      000356 C0 06            [24] 1753 	push	ar6
      000358 C0 05            [24] 1754 	push	ar5
      00035A 8B 82            [24] 1755 	mov	dpl,r3
      00035C 8C 83            [24] 1756 	mov	dph,r4
      00035E 8A F0            [24] 1757 	mov	b,r2
      000360 78r00            [12] 1758 	mov	r0,#___memcpy
      000362 79s00            [12] 1759 	mov	r1,#(___memcpy >> 8)
      000364 7As00            [12] 1760 	mov	r2,#(___memcpy >> 16)
      000366 12r00r00         [24] 1761 	lcall	__sdcc_banked_call
      000369 E5 81            [12] 1762 	mov	a,sp
      00036B 24 FB            [12] 1763 	add	a,#0xfb
                                   1764 ;	../../../platform/cc2530dk/./viztool.c:140: len += sizeof(rt->length);
      00036D F5 81            [12] 1765 	mov	sp,a
      00036F 24 F4            [12] 1766 	add	a,#0xf4
      000371 F8               [12] 1767 	mov	r0,a
      000372 E6               [12] 1768 	mov	a,@r0
      000373 04               [12] 1769 	inc	a
      000374 FF               [12] 1770 	mov	r7,a
                                   1771 ;	../../../platform/cc2530dk/./viztool.c:141: memcpy(buf + len, &rt->metric, sizeof(rt->metric));
      000375 90r00r40         [24] 1772 	mov	dptr,#_rt
      000378 E0               [24] 1773 	movx	a,@dptr
      000379 FA               [12] 1774 	mov	r2,a
      00037A A3               [24] 1775 	inc	dptr
      00037B E0               [24] 1776 	movx	a,@dptr
      00037C FB               [12] 1777 	mov	r3,a
      00037D A3               [24] 1778 	inc	dptr
      00037E E0               [24] 1779 	movx	a,@dptr
      00037F FC               [12] 1780 	mov	r4,a
      000380 74 24            [12] 1781 	mov	a,#0x24
      000382 2A               [12] 1782 	add	a,r2
      000383 FA               [12] 1783 	mov	r2,a
      000384 E4               [12] 1784 	clr	a
      000385 3B               [12] 1785 	addc	a,r3
      000386 FB               [12] 1786 	mov	r3,a
      000387 E5 81            [12] 1787 	mov	a,sp
      000389 24 F4            [12] 1788 	add	a,#0xf4
      00038B F8               [12] 1789 	mov	r0,a
      00038C A6 02            [24] 1790 	mov	@r0,ar2
      00038E 08               [12] 1791 	inc	r0
      00038F A6 03            [24] 1792 	mov	@r0,ar3
      000391 08               [12] 1793 	inc	r0
      000392 A6 04            [24] 1794 	mov	@r0,ar4
      000394 EF               [12] 1795 	mov	a,r7
      000395 24r03            [12] 1796 	add	a,#_buf
      000397 FB               [12] 1797 	mov	r3,a
      000398 E4               [12] 1798 	clr	a
      000399 34s00            [12] 1799 	addc	a,#(_buf >> 8)
      00039B FC               [12] 1800 	mov	r4,a
      00039C 7A 00            [12] 1801 	mov	r2,#0x00
      00039E C0 07            [24] 1802 	push	ar7
      0003A0 74 01            [12] 1803 	mov	a,#0x01
      0003A2 C0 E0            [24] 1804 	push	acc
      0003A4 E4               [12] 1805 	clr	a
      0003A5 C0 E0            [24] 1806 	push	acc
      0003A7 E5 81            [12] 1807 	mov	a,sp
      0003A9 24 F1            [12] 1808 	add	a,#0xf1
      0003AB F8               [12] 1809 	mov	r0,a
      0003AC E6               [12] 1810 	mov	a,@r0
      0003AD C0 E0            [24] 1811 	push	acc
      0003AF 08               [12] 1812 	inc	r0
      0003B0 E6               [12] 1813 	mov	a,@r0
      0003B1 C0 E0            [24] 1814 	push	acc
      0003B3 08               [12] 1815 	inc	r0
      0003B4 E6               [12] 1816 	mov	a,@r0
      0003B5 C0 E0            [24] 1817 	push	acc
      0003B7 8B 82            [24] 1818 	mov	dpl,r3
      0003B9 8C 83            [24] 1819 	mov	dph,r4
      0003BB 8A F0            [24] 1820 	mov	b,r2
      0003BD 78r00            [12] 1821 	mov	r0,#___memcpy
      0003BF 79s00            [12] 1822 	mov	r1,#(___memcpy >> 8)
      0003C1 7As00            [12] 1823 	mov	r2,#(___memcpy >> 16)
      0003C3 12r00r00         [24] 1824 	lcall	__sdcc_banked_call
      0003C6 E5 81            [12] 1825 	mov	a,sp
      0003C8 24 FB            [12] 1826 	add	a,#0xfb
      0003CA F5 81            [12] 1827 	mov	sp,a
      0003CC D0 07            [24] 1828 	pop	ar7
                                   1829 ;	../../../platform/cc2530dk/./viztool.c:142: len += sizeof(rt->metric);
      0003CE E5 81            [12] 1830 	mov	a,sp
      0003D0 24 F4            [12] 1831 	add	a,#0xf4
      0003D2 F8               [12] 1832 	mov	r0,a
      0003D3 EF               [12] 1833 	mov	a,r7
      0003D4 04               [12] 1834 	inc	a
      0003D5 F6               [12] 1835 	mov	@r0,a
                                   1836 ;	../../../platform/cc2530dk/./viztool.c:143: memcpy(buf + len, &rt->nexthop, sizeof(rt->nexthop));
      0003D6 90r00r40         [24] 1837 	mov	dptr,#_rt
      0003D9 E0               [24] 1838 	movx	a,@dptr
      0003DA FA               [12] 1839 	mov	r2,a
      0003DB A3               [24] 1840 	inc	dptr
      0003DC E0               [24] 1841 	movx	a,@dptr
      0003DD FB               [12] 1842 	mov	r3,a
      0003DE A3               [24] 1843 	inc	dptr
      0003DF E0               [24] 1844 	movx	a,@dptr
      0003E0 FC               [12] 1845 	mov	r4,a
      0003E1 74 13            [12] 1846 	mov	a,#0x13
      0003E3 2A               [12] 1847 	add	a,r2
      0003E4 FA               [12] 1848 	mov	r2,a
      0003E5 E4               [12] 1849 	clr	a
      0003E6 3B               [12] 1850 	addc	a,r3
      0003E7 FB               [12] 1851 	mov	r3,a
      0003E8 8A 07            [24] 1852 	mov	ar7,r2
      0003EA 8B 06            [24] 1853 	mov	ar6,r3
      0003EC 8C 05            [24] 1854 	mov	ar5,r4
      0003EE E5 81            [12] 1855 	mov	a,sp
      0003F0 24 F4            [12] 1856 	add	a,#0xf4
      0003F2 F8               [12] 1857 	mov	r0,a
      0003F3 E6               [12] 1858 	mov	a,@r0
      0003F4 24r03            [12] 1859 	add	a,#_buf
      0003F6 FB               [12] 1860 	mov	r3,a
      0003F7 E4               [12] 1861 	clr	a
      0003F8 34s00            [12] 1862 	addc	a,#(_buf >> 8)
      0003FA FC               [12] 1863 	mov	r4,a
      0003FB 7A 00            [12] 1864 	mov	r2,#0x00
      0003FD 74 10            [12] 1865 	mov	a,#0x10
      0003FF C0 E0            [24] 1866 	push	acc
      000401 E4               [12] 1867 	clr	a
      000402 C0 E0            [24] 1868 	push	acc
      000404 C0 07            [24] 1869 	push	ar7
      000406 C0 06            [24] 1870 	push	ar6
      000408 C0 05            [24] 1871 	push	ar5
      00040A 8B 82            [24] 1872 	mov	dpl,r3
      00040C 8C 83            [24] 1873 	mov	dph,r4
      00040E 8A F0            [24] 1874 	mov	b,r2
      000410 78r00            [12] 1875 	mov	r0,#___memcpy
      000412 79s00            [12] 1876 	mov	r1,#(___memcpy >> 8)
      000414 7As00            [12] 1877 	mov	r2,#(___memcpy >> 16)
      000416 12r00r00         [24] 1878 	lcall	__sdcc_banked_call
      000419 E5 81            [12] 1879 	mov	a,sp
      00041B 24 FB            [12] 1880 	add	a,#0xfb
                                   1881 ;	../../../platform/cc2530dk/./viztool.c:144: len += sizeof(rt->nexthop);
      00041D F5 81            [12] 1882 	mov	sp,a
      00041F 24 F4            [12] 1883 	add	a,#0xf4
      000421 F8               [12] 1884 	mov	r0,a
      000422 E5 81            [12] 1885 	mov	a,sp
      000424 24 F4            [12] 1886 	add	a,#0xf4
      000426 F9               [12] 1887 	mov	r1,a
      000427 74 10            [12] 1888 	mov	a,#0x10
      000429 26               [12] 1889 	add	a,@r0
      00042A F7               [12] 1890 	mov	@r1,a
                                   1891 ;	../../../platform/cc2530dk/./viztool.c:152: flip = uip_htonl(rt->state.lifetime);
      00042B 90r00r40         [24] 1892 	mov	dptr,#_rt
      00042E E0               [24] 1893 	movx	a,@dptr
      00042F FA               [12] 1894 	mov	r2,a
      000430 A3               [24] 1895 	inc	dptr
      000431 E0               [24] 1896 	movx	a,@dptr
      000432 FB               [12] 1897 	mov	r3,a
      000433 A3               [24] 1898 	inc	dptr
      000434 E0               [24] 1899 	movx	a,@dptr
      000435 FC               [12] 1900 	mov	r4,a
      000436 74 25            [12] 1901 	mov	a,#0x25
      000438 2A               [12] 1902 	add	a,r2
      000439 FA               [12] 1903 	mov	r2,a
      00043A E4               [12] 1904 	clr	a
      00043B 3B               [12] 1905 	addc	a,r3
      00043C FB               [12] 1906 	mov	r3,a
      00043D 8A 82            [24] 1907 	mov	dpl,r2
      00043F 8B 83            [24] 1908 	mov	dph,r3
      000441 8C F0            [24] 1909 	mov	b,r4
      000443 12r00r00         [24] 1910 	lcall	__gptrget
      000446 FF               [12] 1911 	mov	r7,a
      000447 A3               [24] 1912 	inc	dptr
      000448 12r00r00         [24] 1913 	lcall	__gptrget
      00044B FE               [12] 1914 	mov	r6,a
      00044C A3               [24] 1915 	inc	dptr
      00044D 12r00r00         [24] 1916 	lcall	__gptrget
      000450 FD               [12] 1917 	mov	r5,a
      000451 A3               [24] 1918 	inc	dptr
      000452 12r00r00         [24] 1919 	lcall	__gptrget
      000455 8F 82            [24] 1920 	mov	dpl,r7
      000457 8E 83            [24] 1921 	mov	dph,r6
      000459 8D F0            [24] 1922 	mov	b,r5
      00045B 78r00            [12] 1923 	mov	r0,#_uip_htonl
      00045D 79s00            [12] 1924 	mov	r1,#(_uip_htonl >> 8)
      00045F 7As00            [12] 1925 	mov	r2,#(_uip_htonl >> 16)
      000461 12r00r00         [24] 1926 	lcall	__sdcc_banked_call
      000464 AF 82            [24] 1927 	mov	r7,dpl
      000466 AE 83            [24] 1928 	mov	r6,dph
      000468 AD F0            [24] 1929 	mov	r5,b
      00046A FC               [12] 1930 	mov	r4,a
      00046B E5 81            [12] 1931 	mov	a,sp
      00046D 24 FD            [12] 1932 	add	a,#0xfd
      00046F F8               [12] 1933 	mov	r0,a
      000470 A6 07            [24] 1934 	mov	@r0,ar7
      000472 08               [12] 1935 	inc	r0
      000473 A6 06            [24] 1936 	mov	@r0,ar6
      000475 08               [12] 1937 	inc	r0
      000476 A6 05            [24] 1938 	mov	@r0,ar5
      000478 08               [12] 1939 	inc	r0
      000479 A6 04            [24] 1940 	mov	@r0,ar4
                                   1941 ;	../../../platform/cc2530dk/./viztool.c:153: memcpy(buf + len, &flip, sizeof(flip));
      00047B E5 81            [12] 1942 	mov	a,sp
      00047D 24 FD            [12] 1943 	add	a,#0xfd
      00047F FF               [12] 1944 	mov	r7,a
      000480 7E 00            [12] 1945 	mov	r6,#0x00
      000482 7D 40            [12] 1946 	mov	r5,#0x40
      000484 E5 81            [12] 1947 	mov	a,sp
      000486 24 F4            [12] 1948 	add	a,#0xf4
      000488 F8               [12] 1949 	mov	r0,a
      000489 E6               [12] 1950 	mov	a,@r0
      00048A 24r03            [12] 1951 	add	a,#_buf
      00048C FB               [12] 1952 	mov	r3,a
      00048D E4               [12] 1953 	clr	a
      00048E 34s00            [12] 1954 	addc	a,#(_buf >> 8)
      000490 FC               [12] 1955 	mov	r4,a
      000491 7A 00            [12] 1956 	mov	r2,#0x00
      000493 74 04            [12] 1957 	mov	a,#0x04
      000495 C0 E0            [24] 1958 	push	acc
      000497 E4               [12] 1959 	clr	a
      000498 C0 E0            [24] 1960 	push	acc
      00049A C0 07            [24] 1961 	push	ar7
      00049C C0 06            [24] 1962 	push	ar6
      00049E C0 05            [24] 1963 	push	ar5
      0004A0 8B 82            [24] 1964 	mov	dpl,r3
      0004A2 8C 83            [24] 1965 	mov	dph,r4
      0004A4 8A F0            [24] 1966 	mov	b,r2
      0004A6 78r00            [12] 1967 	mov	r0,#___memcpy
      0004A8 79s00            [12] 1968 	mov	r1,#(___memcpy >> 8)
      0004AA 7As00            [12] 1969 	mov	r2,#(___memcpy >> 16)
      0004AC 12r00r00         [24] 1970 	lcall	__sdcc_banked_call
      0004AF E5 81            [12] 1971 	mov	a,sp
      0004B1 24 FB            [12] 1972 	add	a,#0xfb
                                   1973 ;	../../../platform/cc2530dk/./viztool.c:154: len += sizeof(flip);
      0004B3 F5 81            [12] 1974 	mov	sp,a
      0004B5 24 F4            [12] 1975 	add	a,#0xf4
      0004B7 F8               [12] 1976 	mov	r0,a
      0004B8 E5 81            [12] 1977 	mov	a,sp
      0004BA 24 F7            [12] 1978 	add	a,#0xf7
      0004BC F9               [12] 1979 	mov	r1,a
      0004BD 74 04            [12] 1980 	mov	a,#0x04
      0004BF 26               [12] 1981 	add	a,@r0
      0004C0 F7               [12] 1982 	mov	@r1,a
                                   1983 ;	../../../platform/cc2530dk/./viztool.c:157: memcpy(buf + len, &rt->state.learned_from,
      0004C1 90r00r40         [24] 1984 	mov	dptr,#_rt
      0004C4 E0               [24] 1985 	movx	a,@dptr
      0004C5 FA               [12] 1986 	mov	r2,a
      0004C6 A3               [24] 1987 	inc	dptr
      0004C7 E0               [24] 1988 	movx	a,@dptr
      0004C8 FB               [12] 1989 	mov	r3,a
      0004C9 A3               [24] 1990 	inc	dptr
      0004CA E0               [24] 1991 	movx	a,@dptr
      0004CB FC               [12] 1992 	mov	r4,a
      0004CC 74 30            [12] 1993 	mov	a,#0x30
      0004CE 2A               [12] 1994 	add	a,r2
      0004CF FA               [12] 1995 	mov	r2,a
      0004D0 E4               [12] 1996 	clr	a
      0004D1 3B               [12] 1997 	addc	a,r3
      0004D2 FB               [12] 1998 	mov	r3,a
      0004D3 8A 07            [24] 1999 	mov	ar7,r2
      0004D5 8B 06            [24] 2000 	mov	ar6,r3
      0004D7 8C 05            [24] 2001 	mov	ar5,r4
      0004D9 E5 81            [12] 2002 	mov	a,sp
      0004DB 24 F7            [12] 2003 	add	a,#0xf7
      0004DD F8               [12] 2004 	mov	r0,a
      0004DE E6               [12] 2005 	mov	a,@r0
      0004DF 24r03            [12] 2006 	add	a,#_buf
      0004E1 FB               [12] 2007 	mov	r3,a
      0004E2 E4               [12] 2008 	clr	a
      0004E3 34s00            [12] 2009 	addc	a,#(_buf >> 8)
      0004E5 FC               [12] 2010 	mov	r4,a
      0004E6 7A 00            [12] 2011 	mov	r2,#0x00
      0004E8 74 01            [12] 2012 	mov	a,#0x01
      0004EA C0 E0            [24] 2013 	push	acc
      0004EC E4               [12] 2014 	clr	a
      0004ED C0 E0            [24] 2015 	push	acc
      0004EF C0 07            [24] 2016 	push	ar7
      0004F1 C0 06            [24] 2017 	push	ar6
      0004F3 C0 05            [24] 2018 	push	ar5
      0004F5 8B 82            [24] 2019 	mov	dpl,r3
      0004F7 8C 83            [24] 2020 	mov	dph,r4
      0004F9 8A F0            [24] 2021 	mov	b,r2
      0004FB 78r00            [12] 2022 	mov	r0,#___memcpy
      0004FD 79s00            [12] 2023 	mov	r1,#(___memcpy >> 8)
      0004FF 7As00            [12] 2024 	mov	r2,#(___memcpy >> 16)
      000501 12r00r00         [24] 2025 	lcall	__sdcc_banked_call
      000504 E5 81            [12] 2026 	mov	a,sp
      000506 24 FB            [12] 2027 	add	a,#0xfb
                                   2028 ;	../../../platform/cc2530dk/./viztool.c:159: len += sizeof(rt->state.learned_from);
      000508 F5 81            [12] 2029 	mov	sp,a
      00050A 24 F7            [12] 2030 	add	a,#0xf7
      00050C F8               [12] 2031 	mov	r0,a
      00050D E6               [12] 2032 	mov	a,@r0
      00050E 04               [12] 2033 	inc	a
      00050F FE               [12] 2034 	mov	r6,a
                                   2035 ;	../../../platform/cc2530dk/./viztool.c:163: count++;
      000510 E5 81            [12] 2036 	mov	a,sp
      000512 24 EE            [12] 2037 	add	a,#0xee
      000514 F8               [12] 2038 	mov	r0,a
      000515 06               [12] 2039 	inc	@r0
                                   2040 ;	../../../platform/cc2530dk/./viztool.c:164: left -= entry_size;
      000516 E5 81            [12] 2041 	mov	a,sp
      000518 24 ED            [12] 2042 	add	a,#0xed
      00051A F8               [12] 2043 	mov	r0,a
      00051B E6               [12] 2044 	mov	a,@r0
      00051C 24 D8            [12] 2045 	add	a,#0xd8
      00051E F6               [12] 2046 	mov	@r0,a
                                   2047 ;	../../../platform/cc2530dk/./viztool.c:166: rt = list_item_next(rt);
      00051F 90r00r40         [24] 2048 	mov	dptr,#_rt
      000522 E0               [24] 2049 	movx	a,@dptr
      000523 FA               [12] 2050 	mov	r2,a
      000524 A3               [24] 2051 	inc	dptr
      000525 E0               [24] 2052 	movx	a,@dptr
      000526 FB               [12] 2053 	mov	r3,a
      000527 A3               [24] 2054 	inc	dptr
      000528 E0               [24] 2055 	movx	a,@dptr
      000529 FC               [12] 2056 	mov	r4,a
      00052A 8A 82            [24] 2057 	mov	dpl,r2
      00052C 8B 83            [24] 2058 	mov	dph,r3
      00052E 8C F0            [24] 2059 	mov	b,r4
      000530 C0 06            [24] 2060 	push	ar6
      000532 78r00            [12] 2061 	mov	r0,#_list_item_next
      000534 79s00            [12] 2062 	mov	r1,#(_list_item_next >> 8)
      000536 7As00            [12] 2063 	mov	r2,#(_list_item_next >> 16)
      000538 12r00r00         [24] 2064 	lcall	__sdcc_banked_call
      00053B AA 82            [24] 2065 	mov	r2,dpl
      00053D AB 83            [24] 2066 	mov	r3,dph
      00053F AC F0            [24] 2067 	mov	r4,b
      000541 D0 06            [24] 2068 	pop	ar6
      000543 90r00r40         [24] 2069 	mov	dptr,#_rt
      000546 EA               [12] 2070 	mov	a,r2
      000547 F0               [24] 2071 	movx	@dptr,a
      000548 EB               [12] 2072 	mov	a,r3
      000549 A3               [24] 2073 	inc	dptr
      00054A F0               [24] 2074 	movx	@dptr,a
      00054B EC               [12] 2075 	mov	a,r4
      00054C A3               [24] 2076 	inc	dptr
      00054D F0               [24] 2077 	movx	@dptr,a
                                   2078 ;	../../../platform/cc2530dk/./viztool.c:168: if(left < entry_size) {
      00054E E5 81            [12] 2079 	mov	a,sp
      000550 24 ED            [12] 2080 	add	a,#0xed
      000552 F8               [12] 2081 	mov	r0,a
      000553 B6 28 00         [24] 2082 	cjne	@r0,#0x28,00312$
      000556                       2083 00312$:
      000556 50 03            [24] 2084 	jnc	00313$
      000558 02r09r03         [24] 2085 	ljmp	00181$
      00055B                       2086 00313$:
                                   2087 ;	../../../platform/cc2530dk/./viztool.c:169: break;
      00055B                       2088 00147$:
                                   2089 ;	../../../platform/cc2530dk/./viztool.c:126: for(i = buf[1]; i < uip_ds6_route_num_routes(); i++) {
      00055B E5 81            [12] 2090 	mov	a,sp
      00055D 24 FC            [12] 2091 	add	a,#0xfc
      00055F F8               [12] 2092 	mov	r0,a
      000560 06               [12] 2093 	inc	@r0
      000561 02r02r42         [24] 2094 	ljmp	00146$
      000564                       2095 00137$:
                                   2096 ;	../../../platform/cc2530dk/./viztool.c:173: } else if(buf[0] == REQUEST_TYPE_DRT) {
      000564 90r00r03         [24] 2097 	mov	dptr,#_buf
      000567 E0               [24] 2098 	movx	a,@dptr
      000568 FC               [12] 2099 	mov	r4,a
      000569 BC 03 02         [24] 2100 	cjne	r4,#0x03,00314$
      00056C 80 03            [24] 2101 	sjmp	00315$
      00056E                       2102 00314$:
      00056E 02r06rF9         [24] 2103 	ljmp	00134$
      000571                       2104 00315$:
                                   2105 ;	../../../platform/cc2530dk/./viztool.c:177: addr = uip_ds6_defrt_choose();
      000571 C0 06            [24] 2106 	push	ar6
      000573 78r00            [12] 2107 	mov	r0,#_uip_ds6_defrt_choose
      000575 79s00            [12] 2108 	mov	r1,#(_uip_ds6_defrt_choose >> 8)
      000577 7As00            [12] 2109 	mov	r2,#(_uip_ds6_defrt_choose >> 16)
      000579 12r00r00         [24] 2110 	lcall	__sdcc_banked_call
      00057C AA 82            [24] 2111 	mov	r2,dpl
      00057E AB 83            [24] 2112 	mov	r3,dph
      000580 AC F0            [24] 2113 	mov	r4,b
      000582 D0 06            [24] 2114 	pop	ar6
      000584 90r00r46         [24] 2115 	mov	dptr,#_addr
      000587 EA               [12] 2116 	mov	a,r2
      000588 F0               [24] 2117 	movx	@dptr,a
      000589 EB               [12] 2118 	mov	a,r3
      00058A A3               [24] 2119 	inc	dptr
      00058B F0               [24] 2120 	movx	@dptr,a
      00058C EC               [12] 2121 	mov	a,r4
      00058D A3               [24] 2122 	inc	dptr
      00058E F0               [24] 2123 	movx	@dptr,a
                                   2124 ;	../../../platform/cc2530dk/./viztool.c:178: if(addr != NULL) {
      00058F EA               [12] 2125 	mov	a,r2
      000590 4B               [12] 2126 	orl	a,r3
      000591 60 2F            [24] 2127 	jz	00112$
                                   2128 ;	../../../platform/cc2530dk/./viztool.c:179: defrt = uip_ds6_defrt_lookup(addr);
      000593 90r00r46         [24] 2129 	mov	dptr,#_addr
      000596 E0               [24] 2130 	movx	a,@dptr
      000597 FA               [12] 2131 	mov	r2,a
      000598 A3               [24] 2132 	inc	dptr
      000599 E0               [24] 2133 	movx	a,@dptr
      00059A FB               [12] 2134 	mov	r3,a
      00059B A3               [24] 2135 	inc	dptr
      00059C E0               [24] 2136 	movx	a,@dptr
      00059D FC               [12] 2137 	mov	r4,a
      00059E 8A 82            [24] 2138 	mov	dpl,r2
      0005A0 8B 83            [24] 2139 	mov	dph,r3
      0005A2 8C F0            [24] 2140 	mov	b,r4
      0005A4 C0 06            [24] 2141 	push	ar6
      0005A6 78r00            [12] 2142 	mov	r0,#_uip_ds6_defrt_lookup
      0005A8 79s00            [12] 2143 	mov	r1,#(_uip_ds6_defrt_lookup >> 8)
      0005AA 7As00            [12] 2144 	mov	r2,#(_uip_ds6_defrt_lookup >> 16)
      0005AC 12r00r00         [24] 2145 	lcall	__sdcc_banked_call
      0005AF AA 82            [24] 2146 	mov	r2,dpl
      0005B1 AB 83            [24] 2147 	mov	r3,dph
      0005B3 AC F0            [24] 2148 	mov	r4,b
      0005B5 D0 06            [24] 2149 	pop	ar6
      0005B7 90r00r43         [24] 2150 	mov	dptr,#_defrt
      0005BA EA               [12] 2151 	mov	a,r2
      0005BB F0               [24] 2152 	movx	@dptr,a
      0005BC EB               [12] 2153 	mov	a,r3
      0005BD A3               [24] 2154 	inc	dptr
      0005BE F0               [24] 2155 	movx	@dptr,a
      0005BF EC               [12] 2156 	mov	a,r4
      0005C0 A3               [24] 2157 	inc	dptr
      0005C1 F0               [24] 2158 	movx	@dptr,a
      0005C2                       2159 00112$:
                                   2160 ;	../../../platform/cc2530dk/./viztool.c:182: i = buf[1];
      0005C2 90r00r04         [24] 2161 	mov	dptr,#(_buf + 0x0001)
      0005C5 E5 81            [12] 2162 	mov	a,sp
      0005C7 24 FC            [12] 2163 	add	a,#0xfc
      0005C9 F8               [12] 2164 	mov	r0,a
      0005CA E0               [24] 2165 	movx	a,@dptr
      0005CB F6               [12] 2166 	mov	@r0,a
                                   2167 ;	../../../platform/cc2530dk/./viztool.c:184: if(defrt != NULL && i < 1) {
      0005CC 90r00r43         [24] 2168 	mov	dptr,#_defrt
      0005CF E0               [24] 2169 	movx	a,@dptr
      0005D0 F5 F0            [12] 2170 	mov	b,a
      0005D2 A3               [24] 2171 	inc	dptr
      0005D3 E0               [24] 2172 	movx	a,@dptr
      0005D4 45 F0            [12] 2173 	orl	a,b
      0005D6 70 03            [24] 2174 	jnz	00317$
      0005D8 02r09r1D         [24] 2175 	ljmp	00141$
      0005DB                       2176 00317$:
      0005DB E5 81            [12] 2177 	mov	a,sp
      0005DD 24 FC            [12] 2178 	add	a,#0xfc
      0005DF F8               [12] 2179 	mov	r0,a
      0005E0 B6 01 00         [24] 2180 	cjne	@r0,#0x01,00318$
      0005E3                       2181 00318$:
      0005E3 40 03            [24] 2182 	jc	00319$
      0005E5 02r09r1D         [24] 2183 	ljmp	00141$
      0005E8                       2184 00319$:
                                   2185 ;	../../../platform/cc2530dk/./viztool.c:188: memcpy(buf + len, &i, sizeof(i));
      0005E8 E5 81            [12] 2186 	mov	a,sp
      0005EA 24 FC            [12] 2187 	add	a,#0xfc
      0005EC FC               [12] 2188 	mov	r4,a
      0005ED E5 81            [12] 2189 	mov	a,sp
      0005EF 24 F7            [12] 2190 	add	a,#0xf7
      0005F1 F8               [12] 2191 	mov	r0,a
      0005F2 A6 04            [24] 2192 	mov	@r0,ar4
      0005F4 08               [12] 2193 	inc	r0
      0005F5 76 00            [12] 2194 	mov	@r0,#0x00
      0005F7 08               [12] 2195 	inc	r0
      0005F8 76 40            [12] 2196 	mov	@r0,#0x40
      0005FA EE               [12] 2197 	mov	a,r6
      0005FB 24r03            [12] 2198 	add	a,#_buf
      0005FD FC               [12] 2199 	mov	r4,a
      0005FE E4               [12] 2200 	clr	a
      0005FF 34s00            [12] 2201 	addc	a,#(_buf >> 8)
      000601 FD               [12] 2202 	mov	r5,a
      000602 7B 00            [12] 2203 	mov	r3,#0x00
      000604 C0 06            [24] 2204 	push	ar6
      000606 74 01            [12] 2205 	mov	a,#0x01
      000608 C0 E0            [24] 2206 	push	acc
      00060A E4               [12] 2207 	clr	a
      00060B C0 E0            [24] 2208 	push	acc
      00060D E5 81            [12] 2209 	mov	a,sp
      00060F 24 F4            [12] 2210 	add	a,#0xf4
      000611 F8               [12] 2211 	mov	r0,a
      000612 E6               [12] 2212 	mov	a,@r0
      000613 C0 E0            [24] 2213 	push	acc
      000615 08               [12] 2214 	inc	r0
      000616 E6               [12] 2215 	mov	a,@r0
      000617 C0 E0            [24] 2216 	push	acc
      000619 08               [12] 2217 	inc	r0
      00061A E6               [12] 2218 	mov	a,@r0
      00061B C0 E0            [24] 2219 	push	acc
      00061D 8C 82            [24] 2220 	mov	dpl,r4
      00061F 8D 83            [24] 2221 	mov	dph,r5
      000621 8B F0            [24] 2222 	mov	b,r3
      000623 78r00            [12] 2223 	mov	r0,#___memcpy
      000625 79s00            [12] 2224 	mov	r1,#(___memcpy >> 8)
      000627 7As00            [12] 2225 	mov	r2,#(___memcpy >> 16)
      000629 12r00r00         [24] 2226 	lcall	__sdcc_banked_call
      00062C E5 81            [12] 2227 	mov	a,sp
      00062E 24 FB            [12] 2228 	add	a,#0xfb
      000630 F5 81            [12] 2229 	mov	sp,a
      000632 D0 06            [24] 2230 	pop	ar6
                                   2231 ;	../../../platform/cc2530dk/./viztool.c:189: len += sizeof(i);
      000634 EE               [12] 2232 	mov	a,r6
      000635 04               [12] 2233 	inc	a
      000636 FD               [12] 2234 	mov	r5,a
                                   2235 ;	../../../platform/cc2530dk/./viztool.c:190: memcpy(buf + len, &defrt->ipaddr, sizeof(defrt->ipaddr));
      000637 90r00r43         [24] 2236 	mov	dptr,#_defrt
      00063A E0               [24] 2237 	movx	a,@dptr
      00063B FA               [12] 2238 	mov	r2,a
      00063C A3               [24] 2239 	inc	dptr
      00063D E0               [24] 2240 	movx	a,@dptr
      00063E FB               [12] 2241 	mov	r3,a
      00063F A3               [24] 2242 	inc	dptr
      000640 E0               [24] 2243 	movx	a,@dptr
      000641 FC               [12] 2244 	mov	r4,a
      000642 74 03            [12] 2245 	mov	a,#0x03
      000644 2A               [12] 2246 	add	a,r2
      000645 FA               [12] 2247 	mov	r2,a
      000646 E4               [12] 2248 	clr	a
      000647 3B               [12] 2249 	addc	a,r3
      000648 FB               [12] 2250 	mov	r3,a
      000649 E5 81            [12] 2251 	mov	a,sp
      00064B 24 F7            [12] 2252 	add	a,#0xf7
      00064D F8               [12] 2253 	mov	r0,a
      00064E A6 02            [24] 2254 	mov	@r0,ar2
      000650 08               [12] 2255 	inc	r0
      000651 A6 03            [24] 2256 	mov	@r0,ar3
      000653 08               [12] 2257 	inc	r0
      000654 A6 04            [24] 2258 	mov	@r0,ar4
      000656 ED               [12] 2259 	mov	a,r5
      000657 24r03            [12] 2260 	add	a,#_buf
      000659 FB               [12] 2261 	mov	r3,a
      00065A E4               [12] 2262 	clr	a
      00065B 34s00            [12] 2263 	addc	a,#(_buf >> 8)
      00065D FC               [12] 2264 	mov	r4,a
      00065E 7A 00            [12] 2265 	mov	r2,#0x00
      000660 C0 05            [24] 2266 	push	ar5
      000662 74 10            [12] 2267 	mov	a,#0x10
      000664 C0 E0            [24] 2268 	push	acc
      000666 E4               [12] 2269 	clr	a
      000667 C0 E0            [24] 2270 	push	acc
      000669 E5 81            [12] 2271 	mov	a,sp
      00066B 24 F4            [12] 2272 	add	a,#0xf4
      00066D F8               [12] 2273 	mov	r0,a
      00066E E6               [12] 2274 	mov	a,@r0
      00066F C0 E0            [24] 2275 	push	acc
      000671 08               [12] 2276 	inc	r0
      000672 E6               [12] 2277 	mov	a,@r0
      000673 C0 E0            [24] 2278 	push	acc
      000675 08               [12] 2279 	inc	r0
      000676 E6               [12] 2280 	mov	a,@r0
      000677 C0 E0            [24] 2281 	push	acc
      000679 8B 82            [24] 2282 	mov	dpl,r3
      00067B 8C 83            [24] 2283 	mov	dph,r4
      00067D 8A F0            [24] 2284 	mov	b,r2
      00067F 78r00            [12] 2285 	mov	r0,#___memcpy
      000681 79s00            [12] 2286 	mov	r1,#(___memcpy >> 8)
      000683 7As00            [12] 2287 	mov	r2,#(___memcpy >> 16)
      000685 12r00r00         [24] 2288 	lcall	__sdcc_banked_call
      000688 E5 81            [12] 2289 	mov	a,sp
      00068A 24 FB            [12] 2290 	add	a,#0xfb
      00068C F5 81            [12] 2291 	mov	sp,a
      00068E D0 05            [24] 2292 	pop	ar5
                                   2293 ;	../../../platform/cc2530dk/./viztool.c:191: len += sizeof(defrt->ipaddr);
      000690 74 10            [12] 2294 	mov	a,#0x10
      000692 2D               [12] 2295 	add	a,r5
      000693 FD               [12] 2296 	mov	r5,a
                                   2297 ;	../../../platform/cc2530dk/./viztool.c:192: memcpy(buf + len, &defrt->isinfinite, sizeof(defrt->isinfinite));
      000694 90r00r43         [24] 2298 	mov	dptr,#_defrt
      000697 E0               [24] 2299 	movx	a,@dptr
      000698 FA               [12] 2300 	mov	r2,a
      000699 A3               [24] 2301 	inc	dptr
      00069A E0               [24] 2302 	movx	a,@dptr
      00069B FB               [12] 2303 	mov	r3,a
      00069C A3               [24] 2304 	inc	dptr
      00069D E0               [24] 2305 	movx	a,@dptr
      00069E FC               [12] 2306 	mov	r4,a
      00069F 74 1B            [12] 2307 	mov	a,#0x1b
      0006A1 2A               [12] 2308 	add	a,r2
      0006A2 FA               [12] 2309 	mov	r2,a
      0006A3 E4               [12] 2310 	clr	a
      0006A4 3B               [12] 2311 	addc	a,r3
      0006A5 FB               [12] 2312 	mov	r3,a
      0006A6 E5 81            [12] 2313 	mov	a,sp
      0006A8 24 F7            [12] 2314 	add	a,#0xf7
      0006AA F8               [12] 2315 	mov	r0,a
      0006AB A6 02            [24] 2316 	mov	@r0,ar2
      0006AD 08               [12] 2317 	inc	r0
      0006AE A6 03            [24] 2318 	mov	@r0,ar3
      0006B0 08               [12] 2319 	inc	r0
      0006B1 A6 04            [24] 2320 	mov	@r0,ar4
      0006B3 ED               [12] 2321 	mov	a,r5
      0006B4 24r03            [12] 2322 	add	a,#_buf
      0006B6 FB               [12] 2323 	mov	r3,a
      0006B7 E4               [12] 2324 	clr	a
      0006B8 34s00            [12] 2325 	addc	a,#(_buf >> 8)
      0006BA FC               [12] 2326 	mov	r4,a
      0006BB 7A 00            [12] 2327 	mov	r2,#0x00
      0006BD C0 05            [24] 2328 	push	ar5
      0006BF 74 01            [12] 2329 	mov	a,#0x01
      0006C1 C0 E0            [24] 2330 	push	acc
      0006C3 E4               [12] 2331 	clr	a
      0006C4 C0 E0            [24] 2332 	push	acc
      0006C6 E5 81            [12] 2333 	mov	a,sp
      0006C8 24 F4            [12] 2334 	add	a,#0xf4
      0006CA F8               [12] 2335 	mov	r0,a
      0006CB E6               [12] 2336 	mov	a,@r0
      0006CC C0 E0            [24] 2337 	push	acc
      0006CE 08               [12] 2338 	inc	r0
      0006CF E6               [12] 2339 	mov	a,@r0
      0006D0 C0 E0            [24] 2340 	push	acc
      0006D2 08               [12] 2341 	inc	r0
      0006D3 E6               [12] 2342 	mov	a,@r0
      0006D4 C0 E0            [24] 2343 	push	acc
      0006D6 8B 82            [24] 2344 	mov	dpl,r3
      0006D8 8C 83            [24] 2345 	mov	dph,r4
      0006DA 8A F0            [24] 2346 	mov	b,r2
      0006DC 78r00            [12] 2347 	mov	r0,#___memcpy
      0006DE 79s00            [12] 2348 	mov	r1,#(___memcpy >> 8)
      0006E0 7As00            [12] 2349 	mov	r2,#(___memcpy >> 16)
      0006E2 12r00r00         [24] 2350 	lcall	__sdcc_banked_call
      0006E5 E5 81            [12] 2351 	mov	a,sp
      0006E7 24 FB            [12] 2352 	add	a,#0xfb
      0006E9 F5 81            [12] 2353 	mov	sp,a
      0006EB D0 05            [24] 2354 	pop	ar5
                                   2355 ;	../../../platform/cc2530dk/./viztool.c:193: len += sizeof(defrt->isinfinite);
      0006ED ED               [12] 2356 	mov	a,r5
      0006EE 04               [12] 2357 	inc	a
      0006EF FE               [12] 2358 	mov	r6,a
                                   2359 ;	../../../platform/cc2530dk/./viztool.c:197: count++;
      0006F0 E5 81            [12] 2360 	mov	a,sp
      0006F2 24 FB            [12] 2361 	add	a,#0xfb
      0006F4 F8               [12] 2362 	mov	r0,a
      0006F5 06               [12] 2363 	inc	@r0
                                   2364 ;	../../../platform/cc2530dk/./viztool.c:198: left -= entry_size;
      0006F6 02r09r1D         [24] 2365 	ljmp	00141$
      0006F9                       2366 00134$:
                                   2367 ;	../../../platform/cc2530dk/./viztool.c:200: } else if(buf[0] == REQUEST_TYPE_ADDR) {
      0006F9 90r00r03         [24] 2368 	mov	dptr,#_buf
      0006FC E0               [24] 2369 	movx	a,@dptr
      0006FD FD               [12] 2370 	mov	r5,a
      0006FE BD 04 02         [24] 2371 	cjne	r5,#0x04,00320$
      000701 80 03            [24] 2372 	sjmp	00321$
      000703                       2373 00320$:
      000703 02r08r17         [24] 2374 	ljmp	00131$
      000706                       2375 00321$:
                                   2376 ;	../../../platform/cc2530dk/./viztool.c:202: for(i = buf[1]; i < UIP_DS6_ADDR_NB; i++) {
      000706 90r00r04         [24] 2377 	mov	dptr,#(_buf + 0x0001)
      000709 E5 81            [12] 2378 	mov	a,sp
      00070B 24 FC            [12] 2379 	add	a,#0xfc
      00070D F8               [12] 2380 	mov	r0,a
      00070E E0               [24] 2381 	movx	a,@dptr
      00070F F6               [12] 2382 	mov	@r0,a
      000710 E5 81            [12] 2383 	mov	a,sp
      000712 24 FB            [12] 2384 	add	a,#0xfb
      000714 F8               [12] 2385 	mov	r0,a
      000715 E5 81            [12] 2386 	mov	a,sp
      000717 24 F4            [12] 2387 	add	a,#0xf4
      000719 F9               [12] 2388 	mov	r1,a
      00071A E6               [12] 2389 	mov	a,@r0
      00071B F7               [12] 2390 	mov	@r1,a
      00071C                       2391 00149$:
      00071C E5 81            [12] 2392 	mov	a,sp
      00071E 24 FC            [12] 2393 	add	a,#0xfc
      000720 F8               [12] 2394 	mov	r0,a
      000721 B6 03 00         [24] 2395 	cjne	@r0,#0x03,00322$
      000724                       2396 00322$:
      000724 40 03            [24] 2397 	jc	00323$
      000726 02r09r11         [24] 2398 	ljmp	00182$
      000729                       2399 00323$:
                                   2400 ;	../../../platform/cc2530dk/./viztool.c:203: if(uip_ds6_if.addr_list[i].isused) {
      000729 E5 81            [12] 2401 	mov	a,sp
      00072B 24 FC            [12] 2402 	add	a,#0xfc
      00072D F8               [12] 2403 	mov	r0,a
      00072E E6               [12] 2404 	mov	a,@r0
      00072F 75 F0 1C         [24] 2405 	mov	b,#0x1c
      000732 A4               [48] 2406 	mul	ab
      000733 24r12            [12] 2407 	add	a,#(_uip_ds6_if + 0x0012)
      000735 FB               [12] 2408 	mov	r3,a
      000736 E4               [12] 2409 	clr	a
      000737 34s00            [12] 2410 	addc	a,#((_uip_ds6_if + 0x0012) >> 8)
      000739 FC               [12] 2411 	mov	r4,a
      00073A 8B 82            [24] 2412 	mov	dpl,r3
      00073C 8C 83            [24] 2413 	mov	dph,r4
      00073E E0               [24] 2414 	movx	a,@dptr
      00073F 70 03            [24] 2415 	jnz	00324$
      000741 02r08r0E         [24] 2416 	ljmp	00150$
      000744                       2417 00324$:
                                   2418 ;	../../../platform/cc2530dk/./viztool.c:206: memcpy(buf + len, &i, sizeof(i));
      000744 E5 81            [12] 2419 	mov	a,sp
      000746 24 FC            [12] 2420 	add	a,#0xfc
      000748 FC               [12] 2421 	mov	r4,a
      000749 E5 81            [12] 2422 	mov	a,sp
      00074B 24 F7            [12] 2423 	add	a,#0xf7
      00074D F8               [12] 2424 	mov	r0,a
      00074E A6 04            [24] 2425 	mov	@r0,ar4
      000750 08               [12] 2426 	inc	r0
      000751 76 00            [12] 2427 	mov	@r0,#0x00
      000753 08               [12] 2428 	inc	r0
      000754 76 40            [12] 2429 	mov	@r0,#0x40
      000756 EE               [12] 2430 	mov	a,r6
      000757 24r03            [12] 2431 	add	a,#_buf
      000759 FB               [12] 2432 	mov	r3,a
      00075A E4               [12] 2433 	clr	a
      00075B 34s00            [12] 2434 	addc	a,#(_buf >> 8)
      00075D FC               [12] 2435 	mov	r4,a
      00075E 7A 00            [12] 2436 	mov	r2,#0x00
      000760 C0 07            [24] 2437 	push	ar7
      000762 C0 06            [24] 2438 	push	ar6
      000764 74 01            [12] 2439 	mov	a,#0x01
      000766 C0 E0            [24] 2440 	push	acc
      000768 E4               [12] 2441 	clr	a
      000769 C0 E0            [24] 2442 	push	acc
      00076B E5 81            [12] 2443 	mov	a,sp
      00076D 24 F3            [12] 2444 	add	a,#0xf3
      00076F F8               [12] 2445 	mov	r0,a
      000770 E6               [12] 2446 	mov	a,@r0
      000771 C0 E0            [24] 2447 	push	acc
      000773 08               [12] 2448 	inc	r0
      000774 E6               [12] 2449 	mov	a,@r0
      000775 C0 E0            [24] 2450 	push	acc
      000777 08               [12] 2451 	inc	r0
      000778 E6               [12] 2452 	mov	a,@r0
      000779 C0 E0            [24] 2453 	push	acc
      00077B 8B 82            [24] 2454 	mov	dpl,r3
      00077D 8C 83            [24] 2455 	mov	dph,r4
      00077F 8A F0            [24] 2456 	mov	b,r2
      000781 78r00            [12] 2457 	mov	r0,#___memcpy
      000783 79s00            [12] 2458 	mov	r1,#(___memcpy >> 8)
      000785 7As00            [12] 2459 	mov	r2,#(___memcpy >> 16)
      000787 12r00r00         [24] 2460 	lcall	__sdcc_banked_call
      00078A E5 81            [12] 2461 	mov	a,sp
      00078C 24 FB            [12] 2462 	add	a,#0xfb
      00078E F5 81            [12] 2463 	mov	sp,a
      000790 D0 06            [24] 2464 	pop	ar6
      000792 D0 07            [24] 2465 	pop	ar7
                                   2466 ;	../../../platform/cc2530dk/./viztool.c:207: len += sizeof(i);
      000794 EE               [12] 2467 	mov	a,r6
      000795 04               [12] 2468 	inc	a
      000796 FC               [12] 2469 	mov	r4,a
                                   2470 ;	../../../platform/cc2530dk/./viztool.c:208: memcpy(buf + len, &uip_ds6_if.addr_list[i].ipaddr,
      000797 E5 81            [12] 2471 	mov	a,sp
      000799 24 FC            [12] 2472 	add	a,#0xfc
      00079B F8               [12] 2473 	mov	r0,a
      00079C E6               [12] 2474 	mov	a,@r0
      00079D 75 F0 1C         [24] 2475 	mov	b,#0x1c
      0007A0 A4               [48] 2476 	mul	ab
      0007A1 24r12            [12] 2477 	add	a,#(_uip_ds6_if + 0x0012)
      0007A3 FA               [12] 2478 	mov	r2,a
      0007A4 E4               [12] 2479 	clr	a
      0007A5 34s00            [12] 2480 	addc	a,#((_uip_ds6_if + 0x0012) >> 8)
      0007A7 FB               [12] 2481 	mov	r3,a
      0007A8 0A               [12] 2482 	inc	r2
      0007A9 BA 00 01         [24] 2483 	cjne	r2,#0x00,00325$
      0007AC 0B               [12] 2484 	inc	r3
      0007AD                       2485 00325$:
      0007AD E5 81            [12] 2486 	mov	a,sp
      0007AF 24 F7            [12] 2487 	add	a,#0xf7
      0007B1 F8               [12] 2488 	mov	r0,a
      0007B2 A6 02            [24] 2489 	mov	@r0,ar2
      0007B4 08               [12] 2490 	inc	r0
      0007B5 A6 03            [24] 2491 	mov	@r0,ar3
      0007B7 08               [12] 2492 	inc	r0
      0007B8 76 00            [12] 2493 	mov	@r0,#0x00
      0007BA EC               [12] 2494 	mov	a,r4
      0007BB 24r03            [12] 2495 	add	a,#_buf
      0007BD FB               [12] 2496 	mov	r3,a
      0007BE E4               [12] 2497 	clr	a
      0007BF 34s00            [12] 2498 	addc	a,#(_buf >> 8)
      0007C1 FD               [12] 2499 	mov	r5,a
      0007C2 7A 00            [12] 2500 	mov	r2,#0x00
      0007C4 C0 07            [24] 2501 	push	ar7
      0007C6 C0 04            [24] 2502 	push	ar4
      0007C8 74 10            [12] 2503 	mov	a,#0x10
      0007CA C0 E0            [24] 2504 	push	acc
      0007CC E4               [12] 2505 	clr	a
      0007CD C0 E0            [24] 2506 	push	acc
      0007CF E5 81            [12] 2507 	mov	a,sp
      0007D1 24 F3            [12] 2508 	add	a,#0xf3
      0007D3 F8               [12] 2509 	mov	r0,a
      0007D4 E6               [12] 2510 	mov	a,@r0
      0007D5 C0 E0            [24] 2511 	push	acc
      0007D7 08               [12] 2512 	inc	r0
      0007D8 E6               [12] 2513 	mov	a,@r0
      0007D9 C0 E0            [24] 2514 	push	acc
      0007DB 08               [12] 2515 	inc	r0
      0007DC E6               [12] 2516 	mov	a,@r0
      0007DD C0 E0            [24] 2517 	push	acc
      0007DF 8B 82            [24] 2518 	mov	dpl,r3
      0007E1 8D 83            [24] 2519 	mov	dph,r5
      0007E3 8A F0            [24] 2520 	mov	b,r2
      0007E5 78r00            [12] 2521 	mov	r0,#___memcpy
      0007E7 79s00            [12] 2522 	mov	r1,#(___memcpy >> 8)
      0007E9 7As00            [12] 2523 	mov	r2,#(___memcpy >> 16)
      0007EB 12r00r00         [24] 2524 	lcall	__sdcc_banked_call
      0007EE E5 81            [12] 2525 	mov	a,sp
      0007F0 24 FB            [12] 2526 	add	a,#0xfb
      0007F2 F5 81            [12] 2527 	mov	sp,a
      0007F4 D0 04            [24] 2528 	pop	ar4
      0007F6 D0 07            [24] 2529 	pop	ar7
                                   2530 ;	../../../platform/cc2530dk/./viztool.c:210: len += sizeof(uip_ds6_if.addr_list[i].ipaddr);
      0007F8 74 10            [12] 2531 	mov	a,#0x10
      0007FA 2C               [12] 2532 	add	a,r4
      0007FB FE               [12] 2533 	mov	r6,a
                                   2534 ;	../../../platform/cc2530dk/./viztool.c:214: count++;
      0007FC E5 81            [12] 2535 	mov	a,sp
      0007FE 24 F4            [12] 2536 	add	a,#0xf4
      000800 F8               [12] 2537 	mov	r0,a
      000801 06               [12] 2538 	inc	@r0
                                   2539 ;	../../../platform/cc2530dk/./viztool.c:215: left -= entry_size;
      000802 EF               [12] 2540 	mov	a,r7
      000803 24 EF            [12] 2541 	add	a,#0xef
      000805 FF               [12] 2542 	mov	r7,a
                                   2543 ;	../../../platform/cc2530dk/./viztool.c:217: if(left < entry_size) {
      000806 BF 11 00         [24] 2544 	cjne	r7,#0x11,00326$
      000809                       2545 00326$:
      000809 50 03            [24] 2546 	jnc	00327$
      00080B 02r09r11         [24] 2547 	ljmp	00182$
      00080E                       2548 00327$:
                                   2549 ;	../../../platform/cc2530dk/./viztool.c:218: break;
      00080E                       2550 00150$:
                                   2551 ;	../../../platform/cc2530dk/./viztool.c:202: for(i = buf[1]; i < UIP_DS6_ADDR_NB; i++) {
      00080E E5 81            [12] 2552 	mov	a,sp
      000810 24 FC            [12] 2553 	add	a,#0xfc
      000812 F8               [12] 2554 	mov	r0,a
      000813 06               [12] 2555 	inc	@r0
      000814 02r07r1C         [24] 2556 	ljmp	00149$
      000817                       2557 00131$:
                                   2558 ;	../../../platform/cc2530dk/./viztool.c:222: } else if(buf[0] == REQUEST_TYPE_TOTALS) {
      000817 90r00r03         [24] 2559 	mov	dptr,#_buf
      00081A E0               [24] 2560 	movx	a,@dptr
      00081B FF               [12] 2561 	mov	r7,a
      00081C BF FF 02         [24] 2562 	cjne	r7,#0xff,00328$
      00081F 80 03            [24] 2563 	sjmp	00329$
      000821                       2564 00328$:
      000821 02r08rF0         [24] 2565 	ljmp	00128$
      000824                       2566 00329$:
                                   2567 ;	../../../platform/cc2530dk/./viztool.c:223: memset(&buf[2], 0, 4);
      000824 C0 06            [24] 2568 	push	ar6
      000826 74 04            [12] 2569 	mov	a,#0x04
      000828 C0 E0            [24] 2570 	push	acc
      00082A E4               [12] 2571 	clr	a
      00082B C0 E0            [24] 2572 	push	acc
      00082D C0 E0            [24] 2573 	push	acc
      00082F 90r00r05         [24] 2574 	mov	dptr,#(_buf + 0x0002)
      000832 75 F0 00         [24] 2575 	mov	b,#0x00
      000835 78r00            [12] 2576 	mov	r0,#_memset
      000837 79s00            [12] 2577 	mov	r1,#(_memset >> 8)
      000839 7As00            [12] 2578 	mov	r2,#(_memset >> 16)
      00083B 12r00r00         [24] 2579 	lcall	__sdcc_banked_call
      00083E 15 81            [12] 2580 	dec	sp
      000840 15 81            [12] 2581 	dec	sp
      000842 15 81            [12] 2582 	dec	sp
      000844 D0 06            [24] 2583 	pop	ar6
                                   2584 ;	../../../platform/cc2530dk/./viztool.c:224: for(i = 0; i < UIP_DS6_ADDR_NB; i++) {
      000846 E5 81            [12] 2585 	mov	a,sp
      000848 24 FC            [12] 2586 	add	a,#0xfc
      00084A F8               [12] 2587 	mov	r0,a
      00084B 76 00            [12] 2588 	mov	@r0,#0x00
      00084D E5 81            [12] 2589 	mov	a,sp
      00084F 24 FC            [12] 2590 	add	a,#0xfc
      000851 F8               [12] 2591 	mov	r0,a
      000852 86 07            [24] 2592 	mov	ar7,@r0
      000854                       2593 00151$:
                                   2594 ;	../../../platform/cc2530dk/./viztool.c:225: if(uip_ds6_if.addr_list[i].isused) {
      000854 EF               [12] 2595 	mov	a,r7
      000855 75 F0 1C         [24] 2596 	mov	b,#0x1c
      000858 A4               [48] 2597 	mul	ab
      000859 24r12            [12] 2598 	add	a,#(_uip_ds6_if + 0x0012)
      00085B FC               [12] 2599 	mov	r4,a
      00085C E4               [12] 2600 	clr	a
      00085D 34s00            [12] 2601 	addc	a,#((_uip_ds6_if + 0x0012) >> 8)
      00085F FD               [12] 2602 	mov	r5,a
      000860 8C 82            [24] 2603 	mov	dpl,r4
      000862 8D 83            [24] 2604 	mov	dph,r5
      000864 E0               [24] 2605 	movx	a,@dptr
      000865 60 0B            [24] 2606 	jz	00152$
                                   2607 ;	../../../platform/cc2530dk/./viztool.c:226: buf[2]++;
      000867 90r00r05         [24] 2608 	mov	dptr,#(_buf + 0x0002)
      00086A E0               [24] 2609 	movx	a,@dptr
      00086B FD               [12] 2610 	mov	r5,a
      00086C 0D               [12] 2611 	inc	r5
      00086D 90r00r05         [24] 2612 	mov	dptr,#(_buf + 0x0002)
      000870 ED               [12] 2613 	mov	a,r5
      000871 F0               [24] 2614 	movx	@dptr,a
      000872                       2615 00152$:
                                   2616 ;	../../../platform/cc2530dk/./viztool.c:224: for(i = 0; i < UIP_DS6_ADDR_NB; i++) {
      000872 0F               [12] 2617 	inc	r7
      000873 E5 81            [12] 2618 	mov	a,sp
      000875 24 FC            [12] 2619 	add	a,#0xfc
      000877 F8               [12] 2620 	mov	r0,a
      000878 A6 07            [24] 2621 	mov	@r0,ar7
      00087A BF 03 00         [24] 2622 	cjne	r7,#0x03,00331$
      00087D                       2623 00331$:
      00087D 40 D5            [24] 2624 	jc	00151$
                                   2625 ;	../../../platform/cc2530dk/./viztool.c:229: for(i = 0; i < UIP_DS6_NBR_NB; i++) {
      00087F E5 81            [12] 2626 	mov	a,sp
      000881 24 FC            [12] 2627 	add	a,#0xfc
      000883 F8               [12] 2628 	mov	r0,a
      000884 A6 07            [24] 2629 	mov	@r0,ar7
      000886 E5 81            [12] 2630 	mov	a,sp
      000888 24 FC            [12] 2631 	add	a,#0xfc
      00088A F8               [12] 2632 	mov	r0,a
      00088B 76 00            [12] 2633 	mov	@r0,#0x00
      00088D E5 81            [12] 2634 	mov	a,sp
      00088F 24 FC            [12] 2635 	add	a,#0xfc
      000891 F8               [12] 2636 	mov	r0,a
      000892 86 07            [24] 2637 	mov	ar7,@r0
      000894                       2638 00153$:
                                   2639 ;	../../../platform/cc2530dk/./viztool.c:230: if(uip_ds6_nbr_cache[i].isused) {
      000894 EF               [12] 2640 	mov	a,r7
      000895 75 F0 2E         [24] 2641 	mov	b,#0x2e
      000898 A4               [48] 2642 	mul	ab
      000899 24r00            [12] 2643 	add	a,#_uip_ds6_nbr_cache
      00089B FC               [12] 2644 	mov	r4,a
      00089C 74s00            [12] 2645 	mov	a,#(_uip_ds6_nbr_cache >> 8)
      00089E 35 F0            [12] 2646 	addc	a,b
      0008A0 FD               [12] 2647 	mov	r5,a
      0008A1 8C 82            [24] 2648 	mov	dpl,r4
      0008A3 8D 83            [24] 2649 	mov	dph,r5
      0008A5 E0               [24] 2650 	movx	a,@dptr
      0008A6 60 0B            [24] 2651 	jz	00154$
                                   2652 ;	../../../platform/cc2530dk/./viztool.c:231: buf[3]++;
      0008A8 90r00r06         [24] 2653 	mov	dptr,#(_buf + 0x0003)
      0008AB E0               [24] 2654 	movx	a,@dptr
      0008AC FD               [12] 2655 	mov	r5,a
      0008AD 0D               [12] 2656 	inc	r5
      0008AE 90r00r06         [24] 2657 	mov	dptr,#(_buf + 0x0003)
      0008B1 ED               [12] 2658 	mov	a,r5
      0008B2 F0               [24] 2659 	movx	@dptr,a
      0008B3                       2660 00154$:
                                   2661 ;	../../../platform/cc2530dk/./viztool.c:229: for(i = 0; i < UIP_DS6_NBR_NB; i++) {
      0008B3 0F               [12] 2662 	inc	r7
      0008B4 E5 81            [12] 2663 	mov	a,sp
      0008B6 24 FC            [12] 2664 	add	a,#0xfc
      0008B8 F8               [12] 2665 	mov	r0,a
      0008B9 A6 07            [24] 2666 	mov	@r0,ar7
      0008BB BF 04 00         [24] 2667 	cjne	r7,#0x04,00334$
      0008BE                       2668 00334$:
      0008BE 40 D4            [24] 2669 	jc	00153$
                                   2670 ;	../../../platform/cc2530dk/./viztool.c:235: buf[4] = uip_ds6_route_num_routes();
      0008C0 E5 81            [12] 2671 	mov	a,sp
      0008C2 24 FC            [12] 2672 	add	a,#0xfc
      0008C4 F8               [12] 2673 	mov	r0,a
      0008C5 A6 07            [24] 2674 	mov	@r0,ar7
      0008C7 C0 06            [24] 2675 	push	ar6
      0008C9 78r00            [12] 2676 	mov	r0,#_uip_ds6_route_num_routes
      0008CB 79s00            [12] 2677 	mov	r1,#(_uip_ds6_route_num_routes >> 8)
      0008CD 7As00            [12] 2678 	mov	r2,#(_uip_ds6_route_num_routes >> 16)
      0008CF 12r00r00         [24] 2679 	lcall	__sdcc_banked_call
      0008D2 AD 82            [24] 2680 	mov	r5,dpl
      0008D4 D0 06            [24] 2681 	pop	ar6
      0008D6 90r00r07         [24] 2682 	mov	dptr,#(_buf + 0x0004)
      0008D9 ED               [12] 2683 	mov	a,r5
      0008DA F0               [24] 2684 	movx	@dptr,a
                                   2685 ;	../../../platform/cc2530dk/./viztool.c:236: buf[5] = 1;
      0008DB 90r00r08         [24] 2686 	mov	dptr,#(_buf + 0x0005)
      0008DE 74 01            [12] 2687 	mov	a,#0x01
      0008E0 F0               [24] 2688 	movx	@dptr,a
                                   2689 ;	../../../platform/cc2530dk/./viztool.c:238: len += 4;
      0008E1 8E 07            [24] 2690 	mov	ar7,r6
      0008E3 74 04            [12] 2691 	mov	a,#0x04
      0008E5 2F               [12] 2692 	add	a,r7
      0008E6 FE               [12] 2693 	mov	r6,a
                                   2694 ;	../../../platform/cc2530dk/./viztool.c:239: count = 4;
      0008E7 E5 81            [12] 2695 	mov	a,sp
      0008E9 24 FB            [12] 2696 	add	a,#0xfb
      0008EB F8               [12] 2697 	mov	r0,a
      0008EC 76 04            [12] 2698 	mov	@r0,#0x04
      0008EE 80 2D            [24] 2699 	sjmp	00141$
      0008F0                       2700 00128$:
                                   2701 ;	../../../platform/cc2530dk/./viztool.c:241: return 0;
      0008F0 75 82 00         [24] 2702 	mov	dpl,#0x00
      0008F3 80 34            [24] 2703 	sjmp	00155$
      0008F5                       2704 00180$:
      0008F5 E5 81            [12] 2705 	mov	a,sp
      0008F7 24 EC            [12] 2706 	add	a,#0xec
      0008F9 F8               [12] 2707 	mov	r0,a
      0008FA E5 81            [12] 2708 	mov	a,sp
      0008FC 24 FB            [12] 2709 	add	a,#0xfb
      0008FE F9               [12] 2710 	mov	r1,a
      0008FF E6               [12] 2711 	mov	a,@r0
      000900 F7               [12] 2712 	mov	@r1,a
                                   2713 ;	../../../platform/cc2530dk/./viztool.c:244: return len;
                                   2714 ;	../../../platform/cc2530dk/./viztool.c:241: return 0;
      000901 80 1A            [24] 2715 	sjmp	00141$
      000903                       2716 00181$:
      000903 E5 81            [12] 2717 	mov	a,sp
      000905 24 EE            [12] 2718 	add	a,#0xee
      000907 F8               [12] 2719 	mov	r0,a
      000908 E5 81            [12] 2720 	mov	a,sp
      00090A 24 FB            [12] 2721 	add	a,#0xfb
      00090C F9               [12] 2722 	mov	r1,a
      00090D E6               [12] 2723 	mov	a,@r0
      00090E F7               [12] 2724 	mov	@r1,a
                                   2725 ;	../../../platform/cc2530dk/./viztool.c:244: return len;
                                   2726 ;	../../../platform/cc2530dk/./viztool.c:241: return 0;
      00090F 80 0C            [24] 2727 	sjmp	00141$
      000911                       2728 00182$:
      000911 E5 81            [12] 2729 	mov	a,sp
      000913 24 F4            [12] 2730 	add	a,#0xf4
      000915 F8               [12] 2731 	mov	r0,a
      000916 E5 81            [12] 2732 	mov	a,sp
      000918 24 FB            [12] 2733 	add	a,#0xfb
      00091A F9               [12] 2734 	mov	r1,a
      00091B E6               [12] 2735 	mov	a,@r0
      00091C F7               [12] 2736 	mov	@r1,a
      00091D                       2737 00141$:
                                   2738 ;	../../../platform/cc2530dk/./viztool.c:243: buf[1] = count;
      00091D 90r00r04         [24] 2739 	mov	dptr,#(_buf + 0x0001)
      000920 E5 81            [12] 2740 	mov	a,sp
      000922 24 FB            [12] 2741 	add	a,#0xfb
      000924 F8               [12] 2742 	mov	r0,a
      000925 E6               [12] 2743 	mov	a,@r0
      000926 F0               [24] 2744 	movx	@dptr,a
                                   2745 ;	../../../platform/cc2530dk/./viztool.c:244: return len;
      000927 8E 82            [24] 2746 	mov	dpl,r6
      000929                       2747 00155$:
                                   2748 ;	../../../platform/cc2530dk/./viztool.c:245: }
      000929 E5 81            [12] 2749 	mov	a,sp
      00092B 24 EB            [12] 2750 	add	a,#0xeb
      00092D F5 81            [12] 2751 	mov	sp,a
      00092F 22               [24] 2752 	ret
                                   2753 ;------------------------------------------------------------
                                   2754 ;Allocation info for local variables in function 'tcpip_handler'
                                   2755 ;------------------------------------------------------------
                                   2756 ;	../../../platform/cc2530dk/./viztool.c:250: tcpip_handler(void) CC_NON_BANKED
                                   2757 ;	-----------------------------------------
                                   2758 ;	 function tcpip_handler
                                   2759 ;	-----------------------------------------
      000930                       2760 _tcpip_handler:
                                   2761 ;	../../../platform/cc2530dk/./viztool.c:252: if(uip_newdata()) {
      000930 90r00r00         [24] 2762 	mov	dptr,#_uip_flags
      000933 E0               [24] 2763 	movx	a,@dptr
      000934 20 E1 01         [24] 2764 	jb	acc.1,00118$
      000937 22               [24] 2765 	ret
      000938                       2766 00118$:
                                   2767 ;	../../../platform/cc2530dk/./viztool.c:253: memset(buf, 0, VIZTOOL_MAX_PAYLOAD_LEN);
      000938 74 3C            [12] 2768 	mov	a,#0x3c
      00093A C0 E0            [24] 2769 	push	acc
      00093C E4               [12] 2770 	clr	a
      00093D C0 E0            [24] 2771 	push	acc
      00093F C0 E0            [24] 2772 	push	acc
      000941 90r00r03         [24] 2773 	mov	dptr,#_buf
      000944 75 F0 00         [24] 2774 	mov	b,#0x00
      000947 78r00            [12] 2775 	mov	r0,#_memset
      000949 79s00            [12] 2776 	mov	r1,#(_memset >> 8)
      00094B 7As00            [12] 2777 	mov	r2,#(_memset >> 16)
      00094D 12r00r00         [24] 2778 	lcall	__sdcc_banked_call
      000950 15 81            [12] 2779 	dec	sp
      000952 15 81            [12] 2780 	dec	sp
      000954 15 81            [12] 2781 	dec	sp
                                   2782 ;	../../../platform/cc2530dk/./viztool.c:259: memcpy(buf, uip_appdata, uip_datalen());
      000956 90r00r00         [24] 2783 	mov	dptr,#_uip_len
      000959 E0               [24] 2784 	movx	a,@dptr
      00095A C0 E0            [24] 2785 	push	acc
      00095C A3               [24] 2786 	inc	dptr
      00095D E0               [24] 2787 	movx	a,@dptr
      00095E C0 E0            [24] 2788 	push	acc
      000960 90r00r00         [24] 2789 	mov	dptr,#_uip_appdata
      000963 E0               [24] 2790 	movx	a,@dptr
      000964 C0 E0            [24] 2791 	push	acc
      000966 A3               [24] 2792 	inc	dptr
      000967 E0               [24] 2793 	movx	a,@dptr
      000968 C0 E0            [24] 2794 	push	acc
      00096A A3               [24] 2795 	inc	dptr
      00096B E0               [24] 2796 	movx	a,@dptr
      00096C C0 E0            [24] 2797 	push	acc
      00096E 90r00r03         [24] 2798 	mov	dptr,#_buf
      000971 75 F0 00         [24] 2799 	mov	b,#0x00
      000974 78r00            [12] 2800 	mov	r0,#___memcpy
      000976 79s00            [12] 2801 	mov	r1,#(___memcpy >> 8)
      000978 7As00            [12] 2802 	mov	r2,#(___memcpy >> 16)
      00097A 12r00r00         [24] 2803 	lcall	__sdcc_banked_call
      00097D E5 81            [12] 2804 	mov	a,sp
      00097F 24 FB            [12] 2805 	add	a,#0xfb
      000981 F5 81            [12] 2806 	mov	sp,a
                                   2807 ;	../../../platform/cc2530dk/./viztool.c:261: len = process_request();
      000983 12r00r00         [24] 2808 	lcall	_process_request
      000986 AF 82            [24] 2809 	mov	r7,dpl
      000988 90r00r3F         [24] 2810 	mov	dptr,#_len
      00098B EF               [12] 2811 	mov	a,r7
      00098C F0               [24] 2812 	movx	@dptr,a
                                   2813 ;	../../../platform/cc2530dk/./viztool.c:262: if(len) {
      00098D EF               [12] 2814 	mov	a,r7
      00098E 70 03            [24] 2815 	jnz	00119$
      000990 02r0Ar3D         [24] 2816 	ljmp	00103$
      000993                       2817 00119$:
                                   2818 ;	../../../platform/cc2530dk/./viztool.c:263: server_conn->rport = UIP_UDP_BUF->srcport;
      000993 90r00r00         [24] 2819 	mov	dptr,#_server_conn
      000996 E0               [24] 2820 	movx	a,@dptr
      000997 FD               [12] 2821 	mov	r5,a
      000998 A3               [24] 2822 	inc	dptr
      000999 E0               [24] 2823 	movx	a,@dptr
      00099A FE               [12] 2824 	mov	r6,a
      00099B A3               [24] 2825 	inc	dptr
      00099C E0               [24] 2826 	movx	a,@dptr
      00099D FF               [12] 2827 	mov	r7,a
      00099E 74 12            [12] 2828 	mov	a,#0x12
      0009A0 2D               [12] 2829 	add	a,r5
      0009A1 FD               [12] 2830 	mov	r5,a
      0009A2 E4               [12] 2831 	clr	a
      0009A3 3E               [12] 2832 	addc	a,r6
      0009A4 FE               [12] 2833 	mov	r6,a
      0009A5 90r00r00         [24] 2834 	mov	dptr,#_uip_ext_len
      0009A8 E0               [24] 2835 	movx	a,@dptr
      0009A9 FC               [12] 2836 	mov	r4,a
      0009AA 7B 00            [12] 2837 	mov	r3,#0x00
      0009AC 74 28            [12] 2838 	mov	a,#0x28
      0009AE 2C               [12] 2839 	add	a,r4
      0009AF FC               [12] 2840 	mov	r4,a
      0009B0 E4               [12] 2841 	clr	a
      0009B1 3B               [12] 2842 	addc	a,r3
      0009B2 FB               [12] 2843 	mov	r3,a
      0009B3 EC               [12] 2844 	mov	a,r4
      0009B4 24r00            [12] 2845 	add	a,#_uip_aligned_buf
      0009B6 FC               [12] 2846 	mov	r4,a
      0009B7 EB               [12] 2847 	mov	a,r3
      0009B8 34s00            [12] 2848 	addc	a,#(_uip_aligned_buf >> 8)
      0009BA FB               [12] 2849 	mov	r3,a
      0009BB 8C 82            [24] 2850 	mov	dpl,r4
      0009BD 8B 83            [24] 2851 	mov	dph,r3
      0009BF E0               [24] 2852 	movx	a,@dptr
      0009C0 FB               [12] 2853 	mov	r3,a
      0009C1 A3               [24] 2854 	inc	dptr
      0009C2 E0               [24] 2855 	movx	a,@dptr
      0009C3 FC               [12] 2856 	mov	r4,a
      0009C4 8D 82            [24] 2857 	mov	dpl,r5
      0009C6 8E 83            [24] 2858 	mov	dph,r6
      0009C8 8F F0            [24] 2859 	mov	b,r7
      0009CA EB               [12] 2860 	mov	a,r3
      0009CB 12r00r00         [24] 2861 	lcall	__gptrput
      0009CE A3               [24] 2862 	inc	dptr
      0009CF EC               [12] 2863 	mov	a,r4
      0009D0 12r00r00         [24] 2864 	lcall	__gptrput
                                   2865 ;	../../../platform/cc2530dk/./viztool.c:264: uip_ipaddr_copy(&server_conn->ripaddr, &UIP_IP_BUF->srcipaddr);
      0009D3 90r00r00         [24] 2866 	mov	dptr,#_server_conn
      0009D6 E0               [24] 2867 	movx	a,@dptr
      0009D7 FD               [12] 2868 	mov	r5,a
      0009D8 A3               [24] 2869 	inc	dptr
      0009D9 E0               [24] 2870 	movx	a,@dptr
      0009DA FE               [12] 2871 	mov	r6,a
      0009DB A3               [24] 2872 	inc	dptr
      0009DC E0               [24] 2873 	movx	a,@dptr
      0009DD FF               [12] 2874 	mov	r7,a
      0009DE 74 10            [12] 2875 	mov	a,#0x10
      0009E0 C0 E0            [24] 2876 	push	acc
      0009E2 E4               [12] 2877 	clr	a
      0009E3 C0 E0            [24] 2878 	push	acc
      0009E5 74r08            [12] 2879 	mov	a,#(_uip_aligned_buf + 0x0008)
      0009E7 C0 E0            [24] 2880 	push	acc
      0009E9 74s00            [12] 2881 	mov	a,#((_uip_aligned_buf + 0x0008) >> 8)
      0009EB C0 E0            [24] 2882 	push	acc
      0009ED E4               [12] 2883 	clr	a
      0009EE C0 E0            [24] 2884 	push	acc
      0009F0 8D 82            [24] 2885 	mov	dpl,r5
      0009F2 8E 83            [24] 2886 	mov	dph,r6
      0009F4 8F F0            [24] 2887 	mov	b,r7
      0009F6 78r00            [12] 2888 	mov	r0,#___memcpy
      0009F8 79s00            [12] 2889 	mov	r1,#(___memcpy >> 8)
      0009FA 7As00            [12] 2890 	mov	r2,#(___memcpy >> 16)
      0009FC 12r00r00         [24] 2891 	lcall	__sdcc_banked_call
      0009FF E5 81            [12] 2892 	mov	a,sp
      000A01 24 FB            [12] 2893 	add	a,#0xfb
      000A03 F5 81            [12] 2894 	mov	sp,a
                                   2895 ;	../../../platform/cc2530dk/./viztool.c:265: uip_udp_packet_send(server_conn, buf, len);
      000A05 90r00r3F         [24] 2896 	mov	dptr,#_len
      000A08 E0               [24] 2897 	movx	a,@dptr
      000A09 FF               [12] 2898 	mov	r7,a
      000A0A 33               [12] 2899 	rlc	a
      000A0B 95 E0            [12] 2900 	subb	a,acc
      000A0D FE               [12] 2901 	mov	r6,a
      000A0E 90r00r00         [24] 2902 	mov	dptr,#_server_conn
      000A11 E0               [24] 2903 	movx	a,@dptr
      000A12 FB               [12] 2904 	mov	r3,a
      000A13 A3               [24] 2905 	inc	dptr
      000A14 E0               [24] 2906 	movx	a,@dptr
      000A15 FC               [12] 2907 	mov	r4,a
      000A16 A3               [24] 2908 	inc	dptr
      000A17 E0               [24] 2909 	movx	a,@dptr
      000A18 FD               [12] 2910 	mov	r5,a
      000A19 C0 07            [24] 2911 	push	ar7
      000A1B C0 06            [24] 2912 	push	ar6
      000A1D 74r03            [12] 2913 	mov	a,#_buf
      000A1F C0 E0            [24] 2914 	push	acc
      000A21 74s00            [12] 2915 	mov	a,#(_buf >> 8)
      000A23 C0 E0            [24] 2916 	push	acc
      000A25 E4               [12] 2917 	clr	a
      000A26 C0 E0            [24] 2918 	push	acc
      000A28 8B 82            [24] 2919 	mov	dpl,r3
      000A2A 8C 83            [24] 2920 	mov	dph,r4
      000A2C 8D F0            [24] 2921 	mov	b,r5
      000A2E 78r00            [12] 2922 	mov	r0,#_uip_udp_packet_send
      000A30 79s00            [12] 2923 	mov	r1,#(_uip_udp_packet_send >> 8)
      000A32 7As00            [12] 2924 	mov	r2,#(_uip_udp_packet_send >> 16)
      000A34 12r00r00         [24] 2925 	lcall	__sdcc_banked_call
      000A37 E5 81            [12] 2926 	mov	a,sp
      000A39 24 FB            [12] 2927 	add	a,#0xfb
      000A3B F5 81            [12] 2928 	mov	sp,a
                                   2929 ;	../../../platform/cc2530dk/./viztool.c:270: uip_create_unspecified(&server_conn->ripaddr);
      000A3D                       2930 00103$:
      000A3D 90r00r00         [24] 2931 	mov	dptr,#_server_conn
      000A40 E0               [24] 2932 	movx	a,@dptr
      000A41 FD               [12] 2933 	mov	r5,a
      000A42 A3               [24] 2934 	inc	dptr
      000A43 E0               [24] 2935 	movx	a,@dptr
      000A44 FE               [12] 2936 	mov	r6,a
      000A45 A3               [24] 2937 	inc	dptr
      000A46 E0               [24] 2938 	movx	a,@dptr
      000A47 FF               [12] 2939 	mov	r7,a
      000A48 8D 82            [24] 2940 	mov	dpl,r5
      000A4A 8E 83            [24] 2941 	mov	dph,r6
      000A4C 8F F0            [24] 2942 	mov	b,r7
      000A4E E4               [12] 2943 	clr	a
      000A4F 12r00r00         [24] 2944 	lcall	__gptrput
      000A52 A3               [24] 2945 	inc	dptr
      000A53 12r00r00         [24] 2946 	lcall	__gptrput
      000A56 90r00r00         [24] 2947 	mov	dptr,#_server_conn
      000A59 E0               [24] 2948 	movx	a,@dptr
      000A5A FD               [12] 2949 	mov	r5,a
      000A5B A3               [24] 2950 	inc	dptr
      000A5C E0               [24] 2951 	movx	a,@dptr
      000A5D FE               [12] 2952 	mov	r6,a
      000A5E A3               [24] 2953 	inc	dptr
      000A5F E0               [24] 2954 	movx	a,@dptr
      000A60 FF               [12] 2955 	mov	r7,a
      000A61 74 02            [12] 2956 	mov	a,#0x02
      000A63 2D               [12] 2957 	add	a,r5
      000A64 FD               [12] 2958 	mov	r5,a
      000A65 E4               [12] 2959 	clr	a
      000A66 3E               [12] 2960 	addc	a,r6
      000A67 FE               [12] 2961 	mov	r6,a
      000A68 8D 82            [24] 2962 	mov	dpl,r5
      000A6A 8E 83            [24] 2963 	mov	dph,r6
      000A6C 8F F0            [24] 2964 	mov	b,r7
      000A6E E4               [12] 2965 	clr	a
      000A6F 12r00r00         [24] 2966 	lcall	__gptrput
      000A72 A3               [24] 2967 	inc	dptr
      000A73 12r00r00         [24] 2968 	lcall	__gptrput
      000A76 90r00r00         [24] 2969 	mov	dptr,#_server_conn
      000A79 E0               [24] 2970 	movx	a,@dptr
      000A7A FD               [12] 2971 	mov	r5,a
      000A7B A3               [24] 2972 	inc	dptr
      000A7C E0               [24] 2973 	movx	a,@dptr
      000A7D FE               [12] 2974 	mov	r6,a
      000A7E A3               [24] 2975 	inc	dptr
      000A7F E0               [24] 2976 	movx	a,@dptr
      000A80 FF               [12] 2977 	mov	r7,a
      000A81 74 04            [12] 2978 	mov	a,#0x04
      000A83 2D               [12] 2979 	add	a,r5
      000A84 FD               [12] 2980 	mov	r5,a
      000A85 E4               [12] 2981 	clr	a
      000A86 3E               [12] 2982 	addc	a,r6
      000A87 FE               [12] 2983 	mov	r6,a
      000A88 8D 82            [24] 2984 	mov	dpl,r5
      000A8A 8E 83            [24] 2985 	mov	dph,r6
      000A8C 8F F0            [24] 2986 	mov	b,r7
      000A8E E4               [12] 2987 	clr	a
      000A8F 12r00r00         [24] 2988 	lcall	__gptrput
      000A92 A3               [24] 2989 	inc	dptr
      000A93 12r00r00         [24] 2990 	lcall	__gptrput
      000A96 90r00r00         [24] 2991 	mov	dptr,#_server_conn
      000A99 E0               [24] 2992 	movx	a,@dptr
      000A9A FD               [12] 2993 	mov	r5,a
      000A9B A3               [24] 2994 	inc	dptr
      000A9C E0               [24] 2995 	movx	a,@dptr
      000A9D FE               [12] 2996 	mov	r6,a
      000A9E A3               [24] 2997 	inc	dptr
      000A9F E0               [24] 2998 	movx	a,@dptr
      000AA0 FF               [12] 2999 	mov	r7,a
      000AA1 74 06            [12] 3000 	mov	a,#0x06
      000AA3 2D               [12] 3001 	add	a,r5
      000AA4 FD               [12] 3002 	mov	r5,a
      000AA5 E4               [12] 3003 	clr	a
      000AA6 3E               [12] 3004 	addc	a,r6
      000AA7 FE               [12] 3005 	mov	r6,a
      000AA8 8D 82            [24] 3006 	mov	dpl,r5
      000AAA 8E 83            [24] 3007 	mov	dph,r6
      000AAC 8F F0            [24] 3008 	mov	b,r7
      000AAE E4               [12] 3009 	clr	a
      000AAF 12r00r00         [24] 3010 	lcall	__gptrput
      000AB2 A3               [24] 3011 	inc	dptr
      000AB3 12r00r00         [24] 3012 	lcall	__gptrput
      000AB6 90r00r00         [24] 3013 	mov	dptr,#_server_conn
      000AB9 E0               [24] 3014 	movx	a,@dptr
      000ABA FD               [12] 3015 	mov	r5,a
      000ABB A3               [24] 3016 	inc	dptr
      000ABC E0               [24] 3017 	movx	a,@dptr
      000ABD FE               [12] 3018 	mov	r6,a
      000ABE A3               [24] 3019 	inc	dptr
      000ABF E0               [24] 3020 	movx	a,@dptr
      000AC0 FF               [12] 3021 	mov	r7,a
      000AC1 74 08            [12] 3022 	mov	a,#0x08
      000AC3 2D               [12] 3023 	add	a,r5
      000AC4 FD               [12] 3024 	mov	r5,a
      000AC5 E4               [12] 3025 	clr	a
      000AC6 3E               [12] 3026 	addc	a,r6
      000AC7 FE               [12] 3027 	mov	r6,a
      000AC8 8D 82            [24] 3028 	mov	dpl,r5
      000ACA 8E 83            [24] 3029 	mov	dph,r6
      000ACC 8F F0            [24] 3030 	mov	b,r7
      000ACE E4               [12] 3031 	clr	a
      000ACF 12r00r00         [24] 3032 	lcall	__gptrput
      000AD2 A3               [24] 3033 	inc	dptr
      000AD3 12r00r00         [24] 3034 	lcall	__gptrput
      000AD6 90r00r00         [24] 3035 	mov	dptr,#_server_conn
      000AD9 E0               [24] 3036 	movx	a,@dptr
      000ADA FD               [12] 3037 	mov	r5,a
      000ADB A3               [24] 3038 	inc	dptr
      000ADC E0               [24] 3039 	movx	a,@dptr
      000ADD FE               [12] 3040 	mov	r6,a
      000ADE A3               [24] 3041 	inc	dptr
      000ADF E0               [24] 3042 	movx	a,@dptr
      000AE0 FF               [12] 3043 	mov	r7,a
      000AE1 74 0A            [12] 3044 	mov	a,#0x0a
      000AE3 2D               [12] 3045 	add	a,r5
      000AE4 FD               [12] 3046 	mov	r5,a
      000AE5 E4               [12] 3047 	clr	a
      000AE6 3E               [12] 3048 	addc	a,r6
      000AE7 FE               [12] 3049 	mov	r6,a
      000AE8 8D 82            [24] 3050 	mov	dpl,r5
      000AEA 8E 83            [24] 3051 	mov	dph,r6
      000AEC 8F F0            [24] 3052 	mov	b,r7
      000AEE E4               [12] 3053 	clr	a
      000AEF 12r00r00         [24] 3054 	lcall	__gptrput
      000AF2 A3               [24] 3055 	inc	dptr
      000AF3 12r00r00         [24] 3056 	lcall	__gptrput
      000AF6 90r00r00         [24] 3057 	mov	dptr,#_server_conn
      000AF9 E0               [24] 3058 	movx	a,@dptr
      000AFA FD               [12] 3059 	mov	r5,a
      000AFB A3               [24] 3060 	inc	dptr
      000AFC E0               [24] 3061 	movx	a,@dptr
      000AFD FE               [12] 3062 	mov	r6,a
      000AFE A3               [24] 3063 	inc	dptr
      000AFF E0               [24] 3064 	movx	a,@dptr
      000B00 FF               [12] 3065 	mov	r7,a
      000B01 74 0C            [12] 3066 	mov	a,#0x0c
      000B03 2D               [12] 3067 	add	a,r5
      000B04 FD               [12] 3068 	mov	r5,a
      000B05 E4               [12] 3069 	clr	a
      000B06 3E               [12] 3070 	addc	a,r6
      000B07 FE               [12] 3071 	mov	r6,a
      000B08 8D 82            [24] 3072 	mov	dpl,r5
      000B0A 8E 83            [24] 3073 	mov	dph,r6
      000B0C 8F F0            [24] 3074 	mov	b,r7
      000B0E E4               [12] 3075 	clr	a
      000B0F 12r00r00         [24] 3076 	lcall	__gptrput
      000B12 A3               [24] 3077 	inc	dptr
      000B13 12r00r00         [24] 3078 	lcall	__gptrput
      000B16 90r00r00         [24] 3079 	mov	dptr,#_server_conn
      000B19 E0               [24] 3080 	movx	a,@dptr
      000B1A FD               [12] 3081 	mov	r5,a
      000B1B A3               [24] 3082 	inc	dptr
      000B1C E0               [24] 3083 	movx	a,@dptr
      000B1D FE               [12] 3084 	mov	r6,a
      000B1E A3               [24] 3085 	inc	dptr
      000B1F E0               [24] 3086 	movx	a,@dptr
      000B20 FF               [12] 3087 	mov	r7,a
      000B21 74 0E            [12] 3088 	mov	a,#0x0e
      000B23 2D               [12] 3089 	add	a,r5
      000B24 FD               [12] 3090 	mov	r5,a
      000B25 E4               [12] 3091 	clr	a
      000B26 3E               [12] 3092 	addc	a,r6
      000B27 FE               [12] 3093 	mov	r6,a
      000B28 8D 82            [24] 3094 	mov	dpl,r5
      000B2A 8E 83            [24] 3095 	mov	dph,r6
      000B2C 8F F0            [24] 3096 	mov	b,r7
      000B2E E4               [12] 3097 	clr	a
      000B2F 12r00r00         [24] 3098 	lcall	__gptrput
      000B32 A3               [24] 3099 	inc	dptr
      000B33 12r00r00         [24] 3100 	lcall	__gptrput
                                   3101 ;	../../../platform/cc2530dk/./viztool.c:271: server_conn->rport = 0;
      000B36 90r00r00         [24] 3102 	mov	dptr,#_server_conn
      000B39 E0               [24] 3103 	movx	a,@dptr
      000B3A FD               [12] 3104 	mov	r5,a
      000B3B A3               [24] 3105 	inc	dptr
      000B3C E0               [24] 3106 	movx	a,@dptr
      000B3D FE               [12] 3107 	mov	r6,a
      000B3E A3               [24] 3108 	inc	dptr
      000B3F E0               [24] 3109 	movx	a,@dptr
      000B40 FF               [12] 3110 	mov	r7,a
      000B41 74 12            [12] 3111 	mov	a,#0x12
      000B43 2D               [12] 3112 	add	a,r5
      000B44 FD               [12] 3113 	mov	r5,a
      000B45 E4               [12] 3114 	clr	a
      000B46 3E               [12] 3115 	addc	a,r6
      000B47 FE               [12] 3116 	mov	r6,a
      000B48 8D 82            [24] 3117 	mov	dpl,r5
      000B4A 8E 83            [24] 3118 	mov	dph,r6
      000B4C 8F F0            [24] 3119 	mov	b,r7
      000B4E E4               [12] 3120 	clr	a
      000B4F 12r00r00         [24] 3121 	lcall	__gptrput
      000B52 A3               [24] 3122 	inc	dptr
      000B53 12r00r00         [24] 3123 	lcall	__gptrput
                                   3124 ;	../../../platform/cc2530dk/./viztool.c:273: return;
                                   3125 ;	../../../platform/cc2530dk/./viztool.c:274: }
      000B56 22               [24] 3126 	ret
                                   3127 ;------------------------------------------------------------
                                   3128 ;Allocation info for local variables in function 'process_thread_viztool_process'
                                   3129 ;------------------------------------------------------------
                                   3130 ;ev                        Allocated to stack - sp -3
                                   3131 ;data                      Allocated to stack - sp -6
                                   3132 ;process_pt                Allocated to registers r5 r6 r7 
                                   3133 ;PT_YIELD_FLAG             Allocated to registers r4 
                                   3134 ;------------------------------------------------------------
                                   3135 ;	../../../platform/cc2530dk/./viztool.c:276: PROCESS_THREAD(viztool_process, ev, data)
                                   3136 ;	-----------------------------------------
                                   3137 ;	 function process_thread_viztool_process
                                   3138 ;	-----------------------------------------
      000B57                       3139 _process_thread_viztool_process:
                                   3140 ;	../../../platform/cc2530dk/./viztool.c:279: PROCESS_BEGIN();
      000B57 AD 82            [24] 3141 	mov	r5,dpl
      000B59 AE 83            [24] 3142 	mov	r6,dph
      000B5B AF F0            [24] 3143 	mov	r7,b
      000B5D 7C 01            [12] 3144 	mov	r4,#0x01
      000B5F 12r00r00         [24] 3145 	lcall	__gptrget
      000B62 FA               [12] 3146 	mov	r2,a
      000B63 A3               [24] 3147 	inc	dptr
      000B64 12r00r00         [24] 3148 	lcall	__gptrget
      000B67 FB               [12] 3149 	mov	r3,a
      000B68 BA 00 05         [24] 3150 	cjne	r2,#0x00,00136$
      000B6B BB 00 02         [24] 3151 	cjne	r3,#0x00,00136$
      000B6E 80 0B            [24] 3152 	sjmp	00101$
      000B70                       3153 00136$:
      000B70 BA 1D 05         [24] 3154 	cjne	r2,#0x1d,00137$
      000B73 BB 01 02         [24] 3155 	cjne	r3,#0x01,00137$
      000B76 80 73            [24] 3156 	sjmp	00102$
      000B78                       3157 00137$:
      000B78 02r0Cr12         [24] 3158 	ljmp	00113$
      000B7B                       3159 00101$:
                                   3160 ;	../../../platform/cc2530dk/./viztool.c:281: server_conn = udp_new(NULL, UIP_HTONS(0), NULL);
      000B7B C0 05            [24] 3161 	push	ar5
      000B7D C0 06            [24] 3162 	push	ar6
      000B7F C0 07            [24] 3163 	push	ar7
      000B81 C0 06            [24] 3164 	push	ar6
      000B83 C0 05            [24] 3165 	push	ar5
      000B85 E4               [12] 3166 	clr	a
      000B86 C0 E0            [24] 3167 	push	acc
      000B88 C0 E0            [24] 3168 	push	acc
      000B8A C0 E0            [24] 3169 	push	acc
      000B8C C0 E0            [24] 3170 	push	acc
      000B8E C0 E0            [24] 3171 	push	acc
      000B90 90 00 00         [24] 3172 	mov	dptr,#0x0000
      000B93 75 F0 00         [24] 3173 	mov	b,#0x00
      000B96 78r00            [12] 3174 	mov	r0,#_udp_new
      000B98 79s00            [12] 3175 	mov	r1,#(_udp_new >> 8)
      000B9A 7As00            [12] 3176 	mov	r2,#(_udp_new >> 16)
      000B9C 12r00r00         [24] 3177 	lcall	__sdcc_banked_call
      000B9F AA 82            [24] 3178 	mov	r2,dpl
      000BA1 AB 83            [24] 3179 	mov	r3,dph
      000BA3 AF F0            [24] 3180 	mov	r7,b
      000BA5 E5 81            [12] 3181 	mov	a,sp
      000BA7 24 FB            [12] 3182 	add	a,#0xfb
      000BA9 F5 81            [12] 3183 	mov	sp,a
      000BAB D0 05            [24] 3184 	pop	ar5
      000BAD D0 06            [24] 3185 	pop	ar6
      000BAF 90r00r00         [24] 3186 	mov	dptr,#_server_conn
      000BB2 EA               [12] 3187 	mov	a,r2
      000BB3 F0               [24] 3188 	movx	@dptr,a
      000BB4 EB               [12] 3189 	mov	a,r3
      000BB5 A3               [24] 3190 	inc	dptr
      000BB6 F0               [24] 3191 	movx	@dptr,a
      000BB7 EF               [12] 3192 	mov	a,r7
      000BB8 A3               [24] 3193 	inc	dptr
      000BB9 F0               [24] 3194 	movx	@dptr,a
                                   3195 ;	../../../platform/cc2530dk/./viztool.c:282: udp_bind(server_conn, UIP_HTONS(VIZTOOL_UDP_PORT));
      000BBA 74 10            [12] 3196 	mov	a,#0x10
      000BBC 2A               [12] 3197 	add	a,r2
      000BBD FA               [12] 3198 	mov	r2,a
      000BBE E4               [12] 3199 	clr	a
      000BBF 3B               [12] 3200 	addc	a,r3
      000BC0 FB               [12] 3201 	mov	r3,a
      000BC1 8A 82            [24] 3202 	mov	dpl,r2
      000BC3 8B 83            [24] 3203 	mov	dph,r3
      000BC5 8F F0            [24] 3204 	mov	b,r7
      000BC7 74 EA            [12] 3205 	mov	a,#0xea
      000BC9 12r00r00         [24] 3206 	lcall	__gptrput
      000BCC A3               [24] 3207 	inc	dptr
      000BCD 74 61            [12] 3208 	mov	a,#0x61
      000BCF 12r00r00         [24] 3209 	lcall	__gptrput
                                   3210 ;	../../../platform/cc2530dk/./viztool.c:291: PROCESS_END();
      000BD2 D0 07            [24] 3211 	pop	ar7
      000BD4 D0 06            [24] 3212 	pop	ar6
      000BD6 D0 05            [24] 3213 	pop	ar5
                                   3214 ;	../../../platform/cc2530dk/./viztool.c:284: while(1) {
      000BD8                       3215 00111$:
                                   3216 ;	../../../platform/cc2530dk/./viztool.c:285: PROCESS_YIELD();
      000BD8 7C 00            [12] 3217 	mov	r4,#0x00
      000BDA 8D 82            [24] 3218 	mov	dpl,r5
      000BDC 8E 83            [24] 3219 	mov	dph,r6
      000BDE 8F F0            [24] 3220 	mov	b,r7
      000BE0 74 1D            [12] 3221 	mov	a,#0x1d
      000BE2 12r00r00         [24] 3222 	lcall	__gptrput
      000BE5 A3               [24] 3223 	inc	dptr
      000BE6 74 01            [12] 3224 	mov	a,#0x01
      000BE8 12r00r00         [24] 3225 	lcall	__gptrput
      000BEB                       3226 00102$:
      000BEB EC               [12] 3227 	mov	a,r4
      000BEC 70 05            [24] 3228 	jnz	00106$
      000BEE 75 82 01         [24] 3229 	mov	dpl,#0x01
      000BF1 80 30            [24] 3230 	sjmp	00114$
      000BF3                       3231 00106$:
                                   3232 ;	../../../platform/cc2530dk/./viztool.c:286: if(ev == tcpip_event) {
      000BF3 90r00r00         [24] 3233 	mov	dptr,#_tcpip_event
      000BF6 E0               [24] 3234 	movx	a,@dptr
      000BF7 FC               [12] 3235 	mov	r4,a
      000BF8 E5 81            [12] 3236 	mov	a,sp
      000BFA 24 FD            [12] 3237 	add	a,#0xfd
      000BFC F8               [12] 3238 	mov	r0,a
      000BFD E6               [12] 3239 	mov	a,@r0
      000BFE B5 04 D7         [24] 3240 	cjne	a,ar4,00111$
                                   3241 ;	../../../platform/cc2530dk/./viztool.c:287: tcpip_handler();
      000C01 C0 07            [24] 3242 	push	ar7
      000C03 C0 06            [24] 3243 	push	ar6
      000C05 C0 05            [24] 3244 	push	ar5
      000C07 12r09r30         [24] 3245 	lcall	_tcpip_handler
      000C0A D0 05            [24] 3246 	pop	ar5
      000C0C D0 06            [24] 3247 	pop	ar6
      000C0E D0 07            [24] 3248 	pop	ar7
                                   3249 ;	../../../platform/cc2530dk/./viztool.c:291: PROCESS_END();
      000C10 80 C6            [24] 3250 	sjmp	00111$
      000C12                       3251 00113$:
      000C12 8D 82            [24] 3252 	mov	dpl,r5
      000C14 8E 83            [24] 3253 	mov	dph,r6
      000C16 8F F0            [24] 3254 	mov	b,r7
      000C18 E4               [12] 3255 	clr	a
      000C19 12r00r00         [24] 3256 	lcall	__gptrput
      000C1C A3               [24] 3257 	inc	dptr
      000C1D 12r00r00         [24] 3258 	lcall	__gptrput
      000C20 75 82 03         [24] 3259 	mov	dpl,#0x03
      000C23                       3260 00114$:
                                   3261 ;	../../../platform/cc2530dk/./viztool.c:292: }
      000C23 02r00r00         [24] 3262 	ljmp	__sdcc_banked_ret
                                   3263 	.area CSEG    (CODE)
                                   3264 	.area CONST   (CODE)
      000000                       3265 ___str_0:
      000000 4E 65 74 77 6F 72 6B  3266 	.ascii "Network Visualization Tool Process"
             20 56 69 73 75 61 6C
             69 7A 61 74 69 6F 6E
             20 54 6F 6F 6C 20 50
             72 6F 63 65 73 73
      000022 00                    3267 	.db 0x00
                                   3268 	.area XINIT   (CODE)
      000000                       3269 __xinit__viztool_process:
                                   3270 ; generic printIvalPtr
      000000 00 00 00              3271 	.byte #0x00,#0x00,#0x00
      000003r00s00 80              3272 	.byte ___str_0, (___str_0 >> 8),#0x80
      000006r57s0Bs00              3273 	.byte _process_thread_viztool_process, (_process_thread_viztool_process >> 8), (_process_thread_viztool_process >> 16)
      000009 00 00                 3274 	.byte #0x00, #0x00
      00000B 00                    3275 	.db #0x00	; 0
      00000C 00                    3276 	.db #0x00	; 0
                                   3277 	.area CABS    (ABS,CODE)
