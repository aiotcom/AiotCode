                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.4 #10774 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module autostart
                                      6 	.optsdcc -mmcs51 --model-huge
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _process_exit
                                     12 	.globl _process_start
                                     13 	.globl _autostart_start
                                     14 	.globl _autostart_exit
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 	.area RSEG    (ABS,DATA)
      000000                         19 	.org 0x0000
                                     20 ;--------------------------------------------------------
                                     21 ; special function bits
                                     22 ;--------------------------------------------------------
                                     23 	.area RSEG    (ABS,DATA)
      000000                         24 	.org 0x0000
                                     25 ;--------------------------------------------------------
                                     26 ; overlayable register banks
                                     27 ;--------------------------------------------------------
                                     28 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         29 	.ds 8
                                     30 ;--------------------------------------------------------
                                     31 ; internal ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DSEG    (DATA)
                                     34 ;--------------------------------------------------------
                                     35 ; overlayable items in internal ram 
                                     36 ;--------------------------------------------------------
                                     37 ;--------------------------------------------------------
                                     38 ; indirectly addressable internal ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area ISEG    (DATA)
                                     41 ;--------------------------------------------------------
                                     42 ; absolute internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area IABS    (ABS,DATA)
                                     45 	.area IABS    (ABS,DATA)
                                     46 ;--------------------------------------------------------
                                     47 ; bit data
                                     48 ;--------------------------------------------------------
                                     49 	.area BSEG    (BIT)
                                     50 ;--------------------------------------------------------
                                     51 ; paged external ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area PSEG    (PAG,XDATA)
                                     54 ;--------------------------------------------------------
                                     55 ; external ram data
                                     56 ;--------------------------------------------------------
                                     57 	.area XSEG    (XDATA)
                                     58 ;--------------------------------------------------------
                                     59 ; absolute external ram data
                                     60 ;--------------------------------------------------------
                                     61 	.area XABS    (ABS,XDATA)
                                     62 ;--------------------------------------------------------
                                     63 ; external initialized ram data
                                     64 ;--------------------------------------------------------
                                     65 	.area XISEG   (XDATA)
                                     66 	.area HOME    (CODE)
                                     67 	.area GSINIT0 (CODE)
                                     68 	.area GSINIT1 (CODE)
                                     69 	.area GSINIT2 (CODE)
                                     70 	.area GSINIT3 (CODE)
                                     71 	.area GSINIT4 (CODE)
                                     72 	.area GSINIT5 (CODE)
                                     73 	.area GSINIT  (CODE)
                                     74 	.area GSFINAL (CODE)
                                     75 	.area CSEG    (CODE)
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME    (CODE)
                                     80 	.area GSINIT  (CODE)
                                     81 	.area GSFINAL (CODE)
                                     82 	.area GSINIT  (CODE)
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME    (CODE)
                                     87 	.area HOME    (CODE)
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area BANK1   (CODE)
                                     92 ;------------------------------------------------------------
                                     93 ;Allocation info for local variables in function 'autostart_start'
                                     94 ;------------------------------------------------------------
                                     95 ;processes                 Allocated to stack - sp -4
                                     96 ;i                         Allocated to registers r3 r4 
                                     97 ;sloc0                     Allocated to stack - sp -1
                                     98 ;------------------------------------------------------------
                                     99 ;	../../../core/sys/autostart.c:52: autostart_start(struct process * const processes[])
                                    100 ;	-----------------------------------------
                                    101 ;	 function autostart_start
                                    102 ;	-----------------------------------------
      000000                        103 _autostart_start:
                           000007   104 	ar7 = 0x07
                           000006   105 	ar6 = 0x06
                           000005   106 	ar5 = 0x05
                           000004   107 	ar4 = 0x04
                           000003   108 	ar3 = 0x03
                           000002   109 	ar2 = 0x02
                           000001   110 	ar1 = 0x01
                           000000   111 	ar0 = 0x00
      000000 C0 82            [24]  112 	push	dpl
      000002 C0 83            [24]  113 	push	dph
      000004 C0 F0            [24]  114 	push	b
      000006 05 81            [12]  115 	inc	sp
      000008 05 81            [12]  116 	inc	sp
                                    117 ;	../../../core/sys/autostart.c:56: for(i = 0; processes[i] != NULL; ++i) {
      00000A E4               [12]  118 	clr	a
      00000B FB               [12]  119 	mov	r3,a
      00000C FC               [12]  120 	mov	r4,a
      00000D 74 03            [12]  121 	mov	a,#0x03
      00000F C0 E0            [24]  122 	push	acc
      000011 E4               [12]  123 	clr	a
      000012 C0 E0            [24]  124 	push	acc
      000014 8B 82            [24]  125 	mov	dpl,r3
      000016 8C 83            [24]  126 	mov	dph,r4
      000018 12r00r00         [24]  127 	lcall	__mulint
      00001B AB 82            [24]  128 	mov	r3,dpl
      00001D AC 83            [24]  129 	mov	r4,dph
      00001F 15 81            [12]  130 	dec	sp
      000021 15 81            [12]  131 	dec	sp
      000023 A8 81            [24]  132 	mov	r0,sp
      000025 18               [12]  133 	dec	r0
      000026 A6 03            [24]  134 	mov	@r0,ar3
      000028 08               [12]  135 	inc	r0
      000029 A6 04            [24]  136 	mov	@r0,ar4
      00002B                        137 00103$:
      00002B C0 03            [24]  138 	push	ar3
      00002D C0 04            [24]  139 	push	ar4
      00002F E5 81            [12]  140 	mov	a,sp
      000031 24 FA            [12]  141 	add	a,#0xfa
      000033 F8               [12]  142 	mov	r0,a
      000034 E5 81            [12]  143 	mov	a,sp
      000036 24 FD            [12]  144 	add	a,#0xfd
      000038 F9               [12]  145 	mov	r1,a
      000039 E7               [12]  146 	mov	a,@r1
      00003A 26               [12]  147 	add	a,@r0
      00003B FA               [12]  148 	mov	r2,a
      00003C 09               [12]  149 	inc	r1
      00003D E7               [12]  150 	mov	a,@r1
      00003E 08               [12]  151 	inc	r0
      00003F 36               [12]  152 	addc	a,@r0
      000040 FB               [12]  153 	mov	r3,a
      000041 08               [12]  154 	inc	r0
      000042 86 04            [24]  155 	mov	ar4,@r0
      000044 8A 82            [24]  156 	mov	dpl,r2
      000046 8B 83            [24]  157 	mov	dph,r3
      000048 8C F0            [24]  158 	mov	b,r4
      00004A 12r00r00         [24]  159 	lcall	__gptrget
      00004D FA               [12]  160 	mov	r2,a
      00004E A3               [24]  161 	inc	dptr
      00004F 12r00r00         [24]  162 	lcall	__gptrget
      000052 FB               [12]  163 	mov	r3,a
      000053 A3               [24]  164 	inc	dptr
      000054 12r00r00         [24]  165 	lcall	__gptrget
      000057 EA               [12]  166 	mov	a,r2
      000058 4B               [12]  167 	orl	a,r3
      000059 D0 04            [24]  168 	pop	ar4
      00005B D0 03            [24]  169 	pop	ar3
      00005D 60 5C            [24]  170 	jz	00105$
                                    171 ;	../../../core/sys/autostart.c:57: process_start(processes[i], NULL);
      00005F E5 81            [12]  172 	mov	a,sp
      000061 24 FC            [12]  173 	add	a,#0xfc
      000063 F8               [12]  174 	mov	r0,a
      000064 EB               [12]  175 	mov	a,r3
      000065 26               [12]  176 	add	a,@r0
      000066 FA               [12]  177 	mov	r2,a
      000067 EC               [12]  178 	mov	a,r4
      000068 08               [12]  179 	inc	r0
      000069 36               [12]  180 	addc	a,@r0
      00006A FE               [12]  181 	mov	r6,a
      00006B 08               [12]  182 	inc	r0
      00006C 86 07            [24]  183 	mov	ar7,@r0
      00006E 8A 82            [24]  184 	mov	dpl,r2
      000070 8E 83            [24]  185 	mov	dph,r6
      000072 8F F0            [24]  186 	mov	b,r7
      000074 12r00r00         [24]  187 	lcall	__gptrget
      000077 FA               [12]  188 	mov	r2,a
      000078 A3               [24]  189 	inc	dptr
      000079 12r00r00         [24]  190 	lcall	__gptrget
      00007C FE               [12]  191 	mov	r6,a
      00007D A3               [24]  192 	inc	dptr
      00007E 12r00r00         [24]  193 	lcall	__gptrget
      000081 FF               [12]  194 	mov	r7,a
      000082 C0 04            [24]  195 	push	ar4
      000084 C0 03            [24]  196 	push	ar3
      000086 E4               [12]  197 	clr	a
      000087 C0 E0            [24]  198 	push	acc
      000089 C0 E0            [24]  199 	push	acc
      00008B C0 E0            [24]  200 	push	acc
      00008D 8A 82            [24]  201 	mov	dpl,r2
      00008F 8E 83            [24]  202 	mov	dph,r6
      000091 8F F0            [24]  203 	mov	b,r7
      000093 78r00            [12]  204 	mov	r0,#_process_start
      000095 79s00            [12]  205 	mov	r1,#(_process_start >> 8)
      000097 7As00            [12]  206 	mov	r2,#(_process_start >> 16)
      000099 12r00r00         [24]  207 	lcall	__sdcc_banked_call
      00009C 15 81            [12]  208 	dec	sp
      00009E 15 81            [12]  209 	dec	sp
      0000A0 15 81            [12]  210 	dec	sp
      0000A2 D0 03            [24]  211 	pop	ar3
      0000A4 D0 04            [24]  212 	pop	ar4
                                    213 ;	../../../core/sys/autostart.c:56: for(i = 0; processes[i] != NULL; ++i) {
      0000A6 74 03            [12]  214 	mov	a,#0x03
      0000A8 2B               [12]  215 	add	a,r3
      0000A9 FB               [12]  216 	mov	r3,a
      0000AA E4               [12]  217 	clr	a
      0000AB 3C               [12]  218 	addc	a,r4
      0000AC FC               [12]  219 	mov	r4,a
      0000AD A8 81            [24]  220 	mov	r0,sp
      0000AF 18               [12]  221 	dec	r0
      0000B0 74 03            [12]  222 	mov	a,#0x03
      0000B2 26               [12]  223 	add	a,@r0
      0000B3 F6               [12]  224 	mov	@r0,a
      0000B4 E4               [12]  225 	clr	a
      0000B5 08               [12]  226 	inc	r0
      0000B6 36               [12]  227 	addc	a,@r0
      0000B7 F6               [12]  228 	mov	@r0,a
      0000B8 02r00r2B         [24]  229 	ljmp	00103$
      0000BB                        230 00105$:
                                    231 ;	../../../core/sys/autostart.c:60: }
      0000BB E5 81            [12]  232 	mov	a,sp
      0000BD 24 FB            [12]  233 	add	a,#0xfb
      0000BF F5 81            [12]  234 	mov	sp,a
      0000C1 02r00r00         [24]  235 	ljmp	__sdcc_banked_ret
                                    236 ;------------------------------------------------------------
                                    237 ;Allocation info for local variables in function 'autostart_exit'
                                    238 ;------------------------------------------------------------
                                    239 ;processes                 Allocated to stack - sp -4
                                    240 ;i                         Allocated to registers r3 r4 
                                    241 ;sloc0                     Allocated to stack - sp -1
                                    242 ;------------------------------------------------------------
                                    243 ;	../../../core/sys/autostart.c:63: autostart_exit(struct process * const processes[])
                                    244 ;	-----------------------------------------
                                    245 ;	 function autostart_exit
                                    246 ;	-----------------------------------------
      0000C4                        247 _autostart_exit:
      0000C4 C0 82            [24]  248 	push	dpl
      0000C6 C0 83            [24]  249 	push	dph
      0000C8 C0 F0            [24]  250 	push	b
      0000CA 05 81            [12]  251 	inc	sp
      0000CC 05 81            [12]  252 	inc	sp
                                    253 ;	../../../core/sys/autostart.c:67: for(i = 0; processes[i] != NULL; ++i) {
      0000CE E4               [12]  254 	clr	a
      0000CF FB               [12]  255 	mov	r3,a
      0000D0 FC               [12]  256 	mov	r4,a
      0000D1 74 03            [12]  257 	mov	a,#0x03
      0000D3 C0 E0            [24]  258 	push	acc
      0000D5 E4               [12]  259 	clr	a
      0000D6 C0 E0            [24]  260 	push	acc
      0000D8 8B 82            [24]  261 	mov	dpl,r3
      0000DA 8C 83            [24]  262 	mov	dph,r4
      0000DC 12r00r00         [24]  263 	lcall	__mulint
      0000DF AB 82            [24]  264 	mov	r3,dpl
      0000E1 AC 83            [24]  265 	mov	r4,dph
      0000E3 15 81            [12]  266 	dec	sp
      0000E5 15 81            [12]  267 	dec	sp
      0000E7 A8 81            [24]  268 	mov	r0,sp
      0000E9 18               [12]  269 	dec	r0
      0000EA A6 03            [24]  270 	mov	@r0,ar3
      0000EC 08               [12]  271 	inc	r0
      0000ED A6 04            [24]  272 	mov	@r0,ar4
      0000EF                        273 00103$:
      0000EF C0 03            [24]  274 	push	ar3
      0000F1 C0 04            [24]  275 	push	ar4
      0000F3 E5 81            [12]  276 	mov	a,sp
      0000F5 24 FA            [12]  277 	add	a,#0xfa
      0000F7 F8               [12]  278 	mov	r0,a
      0000F8 E5 81            [12]  279 	mov	a,sp
      0000FA 24 FD            [12]  280 	add	a,#0xfd
      0000FC F9               [12]  281 	mov	r1,a
      0000FD E7               [12]  282 	mov	a,@r1
      0000FE 26               [12]  283 	add	a,@r0
      0000FF FA               [12]  284 	mov	r2,a
      000100 09               [12]  285 	inc	r1
      000101 E7               [12]  286 	mov	a,@r1
      000102 08               [12]  287 	inc	r0
      000103 36               [12]  288 	addc	a,@r0
      000104 FB               [12]  289 	mov	r3,a
      000105 08               [12]  290 	inc	r0
      000106 86 04            [24]  291 	mov	ar4,@r0
      000108 8A 82            [24]  292 	mov	dpl,r2
      00010A 8B 83            [24]  293 	mov	dph,r3
      00010C 8C F0            [24]  294 	mov	b,r4
      00010E 12r00r00         [24]  295 	lcall	__gptrget
      000111 FA               [12]  296 	mov	r2,a
      000112 A3               [24]  297 	inc	dptr
      000113 12r00r00         [24]  298 	lcall	__gptrget
      000116 FB               [12]  299 	mov	r3,a
      000117 A3               [24]  300 	inc	dptr
      000118 12r00r00         [24]  301 	lcall	__gptrget
      00011B EA               [12]  302 	mov	a,r2
      00011C 4B               [12]  303 	orl	a,r3
      00011D D0 04            [24]  304 	pop	ar4
      00011F D0 03            [24]  305 	pop	ar3
      000121 60 4F            [24]  306 	jz	00105$
                                    307 ;	../../../core/sys/autostart.c:68: process_exit(processes[i]);
      000123 E5 81            [12]  308 	mov	a,sp
      000125 24 FC            [12]  309 	add	a,#0xfc
      000127 F8               [12]  310 	mov	r0,a
      000128 EB               [12]  311 	mov	a,r3
      000129 26               [12]  312 	add	a,@r0
      00012A FA               [12]  313 	mov	r2,a
      00012B EC               [12]  314 	mov	a,r4
      00012C 08               [12]  315 	inc	r0
      00012D 36               [12]  316 	addc	a,@r0
      00012E FE               [12]  317 	mov	r6,a
      00012F 08               [12]  318 	inc	r0
      000130 86 07            [24]  319 	mov	ar7,@r0
      000132 8A 82            [24]  320 	mov	dpl,r2
      000134 8E 83            [24]  321 	mov	dph,r6
      000136 8F F0            [24]  322 	mov	b,r7
      000138 12r00r00         [24]  323 	lcall	__gptrget
      00013B FA               [12]  324 	mov	r2,a
      00013C A3               [24]  325 	inc	dptr
      00013D 12r00r00         [24]  326 	lcall	__gptrget
      000140 FE               [12]  327 	mov	r6,a
      000141 A3               [24]  328 	inc	dptr
      000142 12r00r00         [24]  329 	lcall	__gptrget
      000145 FF               [12]  330 	mov	r7,a
      000146 8A 82            [24]  331 	mov	dpl,r2
      000148 8E 83            [24]  332 	mov	dph,r6
      00014A 8F F0            [24]  333 	mov	b,r7
      00014C C0 04            [24]  334 	push	ar4
      00014E C0 03            [24]  335 	push	ar3
      000150 78r00            [12]  336 	mov	r0,#_process_exit
      000152 79s00            [12]  337 	mov	r1,#(_process_exit >> 8)
      000154 7As00            [12]  338 	mov	r2,#(_process_exit >> 16)
      000156 12r00r00         [24]  339 	lcall	__sdcc_banked_call
      000159 D0 03            [24]  340 	pop	ar3
      00015B D0 04            [24]  341 	pop	ar4
                                    342 ;	../../../core/sys/autostart.c:67: for(i = 0; processes[i] != NULL; ++i) {
      00015D 74 03            [12]  343 	mov	a,#0x03
      00015F 2B               [12]  344 	add	a,r3
      000160 FB               [12]  345 	mov	r3,a
      000161 E4               [12]  346 	clr	a
      000162 3C               [12]  347 	addc	a,r4
      000163 FC               [12]  348 	mov	r4,a
      000164 A8 81            [24]  349 	mov	r0,sp
      000166 18               [12]  350 	dec	r0
      000167 74 03            [12]  351 	mov	a,#0x03
      000169 26               [12]  352 	add	a,@r0
      00016A F6               [12]  353 	mov	@r0,a
      00016B E4               [12]  354 	clr	a
      00016C 08               [12]  355 	inc	r0
      00016D 36               [12]  356 	addc	a,@r0
      00016E F6               [12]  357 	mov	@r0,a
      00016F 02r00rEF         [24]  358 	ljmp	00103$
      000172                        359 00105$:
                                    360 ;	../../../core/sys/autostart.c:71: }
      000172 E5 81            [12]  361 	mov	a,sp
      000174 24 FB            [12]  362 	add	a,#0xfb
      000176 F5 81            [12]  363 	mov	sp,a
      000178 02r00r00         [24]  364 	ljmp	__sdcc_banked_ret
                                    365 	.area CSEG    (CODE)
                                    366 	.area CONST   (CODE)
                                    367 	.area XINIT   (CODE)
                                    368 	.area CABS    (ABS,CODE)
