///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        21/Feb/2019  15:00:21 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee×éÍøÊµÑé\ /
//                          broadcast¹ã²¥\Projects\zstack\Samples\SampleApp\S /
//                          ource\SampleApp - TeHu.c                          /
//    Command line       =  -f D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee×éÍøÊµ /
//                          Ñé\broadcast¹ã²¥\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg   /
//                          (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS) -f   /
//                          D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee×éÍøÊµÑé\ /
//                          broadcast¹ã²¥\Projects\zstack\Samples\SampleApp\C /
//                          C2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg     /
//                          (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR     /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFF11                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000        /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 "D:\ZigBee\KJXY-ZigBee\use /
//                          ful_code\ZigBee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zs /
//                          tack\Samples\SampleApp\Source\SampleApp -         /
//                          TeHu.c" -D NWK_AUTO_POLL -D ZTOOL_P1 -D           /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                     /
//                          LCD_SUPPORTED=DEBUG -lC                           /
//                          D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee×éÍøÊµÑé\ /
//                          broadcast¹ã²¥\Projects\zstack\Samples\SampleApp\C /
//                          C2530DB\EndDeviceEB-TeHu\List\ -lA                /
//                          D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee×éÍøÊµÑé\ /
//                          broadcast¹ã²¥\Projects\zstack\Samples\SampleApp\C /
//                          C2530DB\EndDeviceEB-TeHu\List\ --diag_suppress    /
//                          Pe001,Pa010 -o D:\ZigBee\KJXY-ZigBee\useful_code\ /
//                          ZigBee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Samp /
//                          les\SampleApp\CC2530DB\EndDeviceEB-TeHu\Obj\ -e   /
//                          --no_unroll --no_inline --no_tbaa --debug         /
//                          --core=plain --dptr=16,1 --data_model=large       /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee×éÍøÊµÑé\ /
//                          broadcast¹ã²¥\Projects\zstack\Samples\SampleApp\C /
//                          C2530DB\ -I D:\ZigBee\KJXY-ZigBee\useful_code\Zig /
//                          Bee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Samples /
//                          \SampleApp\CC2530DB\..\SOURCE\ -I                 /
//                          D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee×éÍøÊµÑé\ /
//                          broadcast¹ã²¥\Projects\zstack\Samples\SampleApp\C /
//                          C2530DB\..\..\..\ZMAIN\TI2530DB\ -I               /
//                          D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee×éÍøÊµÑé\ /
//                          broadcast¹ã²¥\Projects\zstack\Samples\SampleApp\C /
//                          C2530DB\..\..\..\..\..\COMPONENTS\MT\ -I          /
//                          D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee×éÍøÊµÑé\ /
//                          broadcast¹ã²¥\Projects\zstack\Samples\SampleApp\C /
//                          C2530DB\..\..\..\..\..\COMPONENTS\HAL\INCLUDE\    /
//                          -I D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee×éÍøÊµ /
//                          Ñé\broadcast¹ã²¥\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\..\..\..\..\COMPONENTS\HAL\TARGET\C /
//                          C2530EB\ -I D:\ZigBee\KJXY-ZigBee\useful_code\Zig /
//                          Bee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Samples /
//                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\OSA /
//                          L\MCU\CCSOC\ -I D:\ZigBee\KJXY-ZigBee\useful_code /
//                          \ZigBee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \OSAL\INCLUDE\ -I D:\ZigBee\KJXY-ZigBee\useful_co /
//                          de\ZigBee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\S /
//                          amples\SampleApp\CC2530DB\..\..\..\..\..\COMPONEN /
//                          TS\STACK\AF\ -I D:\ZigBee\KJXY-ZigBee\useful_code /
//                          \ZigBee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Sam /
//                          ples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS /
//                          \STACK\NWK\ -I D:\ZigBee\KJXY-ZigBee\useful_code\ /
//                          ZigBee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Samp /
//                          les\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ /
//                          STACK\SEC\ -I D:\ZigBee\KJXY-ZigBee\useful_code\Z /
//                          igBee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\S /
//                          TACK\SAPI\ -I D:\ZigBee\KJXY-ZigBee\useful_code\Z /
//                          igBee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Sampl /
//                          es\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\S /
//                          TACK\SYS\ -I D:\ZigBee\KJXY-ZigBee\useful_code\Zi /
//                          gBee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ST /
//                          ACK\ZDO\ -I D:\ZigBee\KJXY-ZigBee\useful_code\Zig /
//                          Bee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Samples /
//                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ZMA /
//                          C\F8W\ -I D:\ZigBee\KJXY-ZigBee\useful_code\ZigBe /
//                          e×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Samples\S /
//                          ampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\ZMAC\ /
//                           -I D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee×éÍøÊ /
//                          µÑé\broadcast¹ã²¥\Projects\zstack\Samples\SampleA /
//                          pp\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICES\SA /
//                          DDR\ -I D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee× /
//                          éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Samples\Sam /
//                          pleApp\CC2530DB\..\..\..\..\..\COMPONENTS\SERVICE /
//                          S\SDATA\ -I D:\ZigBee\KJXY-ZigBee\useful_code\Zig /
//                          Bee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Samples /
//                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MAC /
//                          \INCLUDE\ -I D:\ZigBee\KJXY-ZigBee\useful_code\Zi /
//                          gBee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Sample /
//                          s\SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\MA /
//                          C\HIGH_LEVEL\ -I D:\ZigBee\KJXY-ZigBee\useful_cod /
//                          e\ZigBee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Sa /
//                          mples\SampleApp\CC2530DB\..\..\..\..\..\COMPONENT /
//                          S\MAC\LOW_LEVEL\srf04\ -I                         /
//                          D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee×éÍøÊµÑé\ /
//                          broadcast¹ã²¥\Projects\zstack\Samples\SampleApp\C /
//                          C2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\s /
//                          rf04\SINGLE_CHIP\ -I D:\ZigBee\KJXY-ZigBee\useful /
//                          _code\ZigBee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstac /
//                          k\Samples\SampleApp\CC2530DB\..\..\..\..\..\COMPO /
//                          NENTS\HARDWARE\ -Om                               /
//    List file          =  D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee×éÍøÊµÑé\ /
//                          broadcast¹ã²¥\Projects\zstack\Samples\SampleApp\C /
//                          C2530DB\EndDeviceEB-TeHu\List\SampleApp -         /
//                          TeHu.s51                                          /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME `SampleApp - TeHu`

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??SampleApp_Init?relay
        FUNCTION ??SampleApp_Init?relay,0203H
        PUBLIC ??SampleApp_MessageMSGCB?relay
        FUNCTION ??SampleApp_MessageMSGCB?relay,0203H
        PUBLIC ??SampleApp_ProcessEvent?relay
        FUNCTION ??SampleApp_ProcessEvent?relay,0203H
        PUBLIC ??SendTemperature?relay
        FUNCTION ??SendTemperature?relay,0203H
        PUBLIC ReadTempHumiControl
        PUBLIC SampleApp_ClusterList
        PUBLIC SampleApp_Init
        FUNCTION SampleApp_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC SampleApp_MessageMSGCB
        FUNCTION SampleApp_MessageMSGCB,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        PUBLIC SampleApp_NwkState
        PUBLIC SampleApp_ProcessEvent
        FUNCTION SampleApp_ProcessEvent,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC SampleApp_SimpleDesc
        PUBLIC SampleApp_TaskID
        PUBLIC SampleApp_TransID
        PUBLIC SampleApp_epDesc
        PUBLIC SendIndicate
        PUBLIC SendTemperature
        FUNCTION SendTemperature,021203H
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC TempHumiNodeReport_DstAddr
        PUBLIC test
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
MT_UartInit         SYMBOL "MT_UartInit"
printf              SYMBOL "printf"
OLED_P8x16Str       SYMBOL "OLED_P8x16Str"
afRegister          SYMBOL "afRegister"
osal_msg_receive    SYMBOL "osal_msg_receive"
osal_set_event      SYMBOL "osal_set_event"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
SHT2x_ReadHumi      SYMBOL "SHT2x_ReadHumi"
SHT2x_ReadTemp      SYMBOL "SHT2x_ReadTemp"
osal_start_timerEx  SYMBOL "osal_start_timerEx"
Bottom_Blue         SYMBOL "Bottom_Blue"
Bottom_BlackOut     SYMBOL "Bottom_BlackOut"
osal_rand           SYMBOL "osal_rand"
SHT2x_GetTemp       SYMBOL "SHT2x_GetTemp"
SHT2x_GetHumi       SYMBOL "SHT2x_GetHumi"
AF_DataRequest      SYMBOL "AF_DataRequest"
??AF_DataRequest?relay SYMBOL "?relay", AF_DataRequest
??Bottom_BlackOut?relay SYMBOL "?relay", Bottom_BlackOut
??Bottom_Blue?relay SYMBOL "?relay", Bottom_Blue
??MT_UartInit?relay SYMBOL "?relay", MT_UartInit
??OLED_P8x16Str?relay SYMBOL "?relay", OLED_P8x16Str
??SHT2x_GetHumi?relay SYMBOL "?relay", SHT2x_GetHumi
??SHT2x_GetTemp?relay SYMBOL "?relay", SHT2x_GetTemp
??SHT2x_ReadHumi?relay SYMBOL "?relay", SHT2x_ReadHumi
??SHT2x_ReadTemp?relay SYMBOL "?relay", SHT2x_ReadTemp
??afRegister?relay  SYMBOL "?relay", afRegister
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
??osal_rand?relay   SYMBOL "?relay", osal_rand
??osal_set_event?relay SYMBOL "?relay", osal_set_event
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
??printf?relay      SYMBOL "?relay", printf
SampleApp_Init      SYMBOL "SampleApp_Init"
??SampleApp_Init?relay SYMBOL "?relay", SampleApp_Init
SampleApp_MessageMSGCB SYMBOL "SampleApp_MessageMSGCB"
??SampleApp_MessageMSGCB?relay SYMBOL "?relay", SampleApp_MessageMSGCB
SampleApp_ProcessEvent SYMBOL "SampleApp_ProcessEvent"
??SampleApp_ProcessEvent?relay SYMBOL "?relay", SampleApp_ProcessEvent
SendTemperature     SYMBOL "SendTemperature"
??SendTemperature?relay SYMBOL "?relay", SendTemperature

        EXTERN MT_UartInit
        FUNCTION MT_UartInit,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN printf
        FUNCTION printf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN OLED_P8x16Str
        FUNCTION OLED_P8x16Str,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN SHT2x_ReadHumi
        FUNCTION SHT2x_ReadHumi,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN SHT2x_ReadTemp
        FUNCTION SHT2x_ReadTemp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Bottom_Blue
        FUNCTION Bottom_Blue,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Bottom_BlackOut
        FUNCTION Bottom_BlackOut,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_rand
        FUNCTION osal_rand,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN SHT2x_GetTemp
        FUNCTION SHT2x_GetTemp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN SHT2x_GetHumi
        FUNCTION SHT2x_GetHumi,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??AF_DataRequest?relay
        FUNCTION ??AF_DataRequest?relay,00H
        EXTERN ??Bottom_BlackOut?relay
        FUNCTION ??Bottom_BlackOut?relay,00H
        EXTERN ??Bottom_Blue?relay
        FUNCTION ??Bottom_Blue?relay,00H
        EXTERN ??MT_UartInit?relay
        FUNCTION ??MT_UartInit?relay,00H
        EXTERN ??OLED_P8x16Str?relay
        FUNCTION ??OLED_P8x16Str?relay,00H
        EXTERN ??SHT2x_GetHumi?relay
        FUNCTION ??SHT2x_GetHumi?relay,00H
        EXTERN ??SHT2x_GetTemp?relay
        FUNCTION ??SHT2x_GetTemp?relay,00H
        EXTERN ??SHT2x_ReadHumi?relay
        FUNCTION ??SHT2x_ReadHumi?relay,00H
        EXTERN ??SHT2x_ReadTemp?relay
        FUNCTION ??SHT2x_ReadTemp?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H
        EXTERN ??osal_rand?relay
        FUNCTION ??osal_rand?relay,00H
        EXTERN ??osal_set_event?relay
        FUNCTION ??osal_set_event?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H
        EXTERN ??printf?relay
        FUNCTION ??printf?relay,00H

// D:\ZigBee\KJXY-ZigBee\useful_code\ZigBee×éÍøÊµÑé\broadcast¹ã²¥\Projects\zstack\Samples\SampleApp\Source\SampleApp - TeHu.c
//    1 /**************************************************************************************************
//    2   Filename:       SampleApp.c
//    3   Revised:        $Date: 2009-03-18 15:56:27 -0700 (Wed, 18 Mar 2009) $
//    4   Revision:       $Revision: 19453 $
//    5 
//    6   Description:    Sample Application (no Profile).
//    7 
//    8 
//    9   Copyright 2007 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License").  You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product.  Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED AS IS?WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41   This application isn't intended to do anything useful, it is
//   42   intended to be a simple example of an application's structure.
//   43 
//   44   This application sends it's messages either as broadcast or
//   45   broadcast filtered group messages.  The other (more normal)
//   46   message addressing is unicast.  Most of the other sample
//   47   applications are written to support the unicast message model.
//   48 
//   49   Key control:
//   50     SW1:  Sends a flash command to all devices in Group 1.
//   51     SW2:  Adds/Removes (toggles) this device in and out
//   52           of Group 1.  This will enable and disable the
//   53           reception of the flash command.
//   54 *********************************************************************/
//   55 
//   56 /*********************************************************************
//   57  * INCLUDES
//   58  */
//   59 #include "OSAL.h"
//   60 #include "ZGlobals.h"
//   61 #include "AF.h"
//   62 #include "aps_groups.h"
//   63 #include "ZDApp.h"
//   64 
//   65 #include "SampleApp.h"
//   66 #include "SampleAppHw.h"
//   67 
//   68 #include "OnBoard.h"
//   69 
//   70 /* HAL */
//   71 #include "hal_lcd.h"
//   72 #include "hal_led.h"
//   73 #include "hal_key.h"
//   74 #include "string.h"
//   75 
//   76 #include "MT_UART.h"
//   77 #include "MT_APP.h"
//   78 #include "MT.h"
//   79 #include "OLED.h"
//   80 #include "SHT20.h"
//   81 #include "bottom_led.h"
//   82 #include "stdio.h"
//   83 void PointToPoint_SendTemperature(void);
//   84 void Group_SendTemperature(void);
//   85 /*********************************************************************
//   86  * MACROS
//   87  */
//   88 
//   89 /*********************************************************************
//   90  * CONSTANTS
//   91  */
//   92 
//   93 /*********************************************************************
//   94  * TYPEDEFS
//   95  */
//   96 
//   97 /*********************************************************************
//   98  * GLOBAL VARIABLES
//   99  */
//  100 
//  101 // This list should be filled with Application specific Cluster IDs.

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
//  102 const cId_t SampleApp_ClusterList[SAMPLEAPP_MAX_CLUSTERS] =
SampleApp_ClusterList:
        DATA16
        DW 1
        DW 2
//  103 {
//  104   SAMPLEAPP_PERIODIC_CLUSTERID,
//  105   SAMPLEAPP_FLASH_CLUSTERID
//  106 };
//  107 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  108 const SimpleDescriptionFormat_t SampleApp_SimpleDesc =
SampleApp_SimpleDesc:
        DB 25
        DATA16
        DW 3848
        DW 1
        DATA8
        DB 0
        DB 2
        DATA16
        DW SampleApp_ClusterList
        DATA8
        DB 2
        DATA16
        DW SampleApp_ClusterList
//  109 {
//  110   SAMPLEAPP_ENDPOINT,              //  int Endpoint;
//  111   SAMPLEAPP_PROFID,                //  uint16 AppProfId[2];
//  112   SAMPLEAPP_DEVICEID,              //  uint16 AppDeviceId[2];
//  113   SAMPLEAPP_DEVICE_VERSION,        //  int   AppDevVer:4;
//  114   SAMPLEAPP_FLAGS,                 //  int   AppFlags:4;
//  115   SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
//  116   (cId_t *)SampleApp_ClusterList,  //  uint8 *pAppInClusterList;
//  117   SAMPLEAPP_MAX_CLUSTERS,          //  uint8  AppNumInClusters;
//  118   (cId_t *)SampleApp_ClusterList   //  uint8 *pAppInClusterList;
//  119 };
//  120 
//  121 // This is the Endpoint/Interface description.  It is defined here, but
//  122 // filled-in in SampleApp_Init().  Another way to go would be to fill
//  123 // in the structure here and make it a "const" (in code space).  The
//  124 // way it's defined in this sample app it is define in RAM.

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  125 endPointDesc_t SampleApp_epDesc;
SampleApp_epDesc:
        DS 6
        REQUIRE __INIT_XDATA_Z
//  126 
//  127 /*********************************************************************
//  128  * EXTERNAL VARIABLES
//  129  */
//  130 
//  131 /*********************************************************************
//  132  * EXTERNAL FUNCTIONS
//  133  */
//  134 
//  135 /*********************************************************************
//  136  * LOCAL VARIABLES
//  137  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  138 uint8 SampleApp_TaskID;   // Task ID for internal task/event processing
SampleApp_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  139                           // This variable will be received when
//  140                           // SampleApp_Init() is called.

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  141 devStates_t SampleApp_NwkState;
SampleApp_NwkState:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  142 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  143 uint8 SampleApp_TransID;  // This is the unique message ID (counter)
SampleApp_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  144 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  145 afAddrType_t TempHumiNodeReport_DstAddr;//ÎÂÊª¶È½ÚµãÉÏ±¨²ÎÊýÄ¿µÄµØÖ·
TempHumiNodeReport_DstAddr:
        DS 12
        REQUIRE __INIT_XDATA_Z
//  146 

        RSEG XDATA_I:XDATA:NOROOT(0)
//  147 uint8 SendIndicate = 1;
SendIndicate:
        DATA8
        DS 1
        REQUIRE `?<Initializer for SendIndicate>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_I:XDATA:NOROOT(0)
//  148 uint8 ReadTempHumiControl = 1;//ReadTempHumiControl=0 ¶ÁÎÂ¶È ;=1 ¶ÁÊª¶È
ReadTempHumiControl:
        DATA8
        DS 1
        REQUIRE `?<Initializer for ReadTempHumiControl>`
        REQUIRE __INIT_XDATA_I
//  149 /*********************************************************************
//  150  * LOCAL FUNCTIONS
//  151  */
//  152 void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pckt );
//  153 void SendTemperature( void );
//  154 /*********************************************************************
//  155  * NETWORK LAYER CALLBACKS
//  156  */
//  157 
//  158 /*********************************************************************
//  159  * PUBLIC FUNCTIONS
//  160  */
//  161 
//  162 /*********************************************************************
//  163  * @fn      SampleApp_Init
//  164  *
//  165  * @brief   Initialization function for the Generic App Task.
//  166  *          This is called during initialization and should contain
//  167  *          any application specific initialization (ie. hardware
//  168  *          initialization/setup, table initialization, power up
//  169  *          notificaiton ... ).
//  170  *
//  171  * @param   task_id - the ID assigned by OSAL.  This ID should be
//  172  *                    used to send messages and set timers.
//  173  *
//  174  * @return  none
//  175  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  176 uint8 test = 0;
test:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  177 void SampleApp_Init( uint8 task_id )
SampleApp_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function SampleApp_Init
        CODE
//  178 {
        FUNCALL SampleApp_Init, MT_UartInit
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, OLED_P8x16Str
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
//  179   SampleApp_TaskID = task_id;
        MOV     DPTR,#SampleApp_TaskID
        MOVX    @DPTR,A
//  180   SampleApp_NwkState = DEV_INIT;
        MOV     DPTR,#SampleApp_NwkState
        MOV     A,#0x1
        MOVX    @DPTR,A
//  181   SampleApp_TransID = 0;
        MOV     DPTR,#SampleApp_TransID
        CLR     A
        MOVX    @DPTR,A
//  182   
//  183  /***********´®¿Ú³õÊ¼»¯************/
//  184   MT_UartInit();//´®¿Ú³õÊ¼»¯  
        ; Setup parameters for call to function MT_UartInit
        LCALL   ??MT_UartInit?relay
//  185   if ( ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE  )
//  186   {
//  187     printf("i am coordinator\r\n");
//  188     OLED_P8x16Str(0,0,"coordinator");
//  189   }
//  190   if ( ZG_DEVICE_ENDDEVICE_TYPE && ZG_BUILD_ENDDEVICE_TYPE  )
//  191   {
//  192     printf("i am end device\r\n");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "i am end device\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "i am end device\\r\\n">` >> 8) & 0xff
        LCALL   ??printf?relay
//  193     OLED_P8x16Str(0,0,"end device");
        ; Setup parameters for call to function OLED_P8x16Str
        MOV     R4,#`?<Constant "end device">` & 0xff
        MOV     R5,#(`?<Constant "end device">` >> 8) & 0xff
        MOV     R2,#0x0
        MOV     R1,#0x0
        LCALL   ??OLED_P8x16Str?relay
//  194   } 
//  195   printf("hello world\r\n");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "hello world\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "hello world\\r\\n">` >> 8) & 0xff
        LCALL   ??printf?relay
//  196 //***************ÉèÖÃÍ¨ÐÅÄ¿µÄµØÖ·²ÎÊý****************************** 
//  197   TempHumiNodeReport_DstAddr.addrMode       = (afAddrMode_t)Addr16Bit;//µØÖ·ÀàÐÍÎª¹ã²¥µØÖ·
        MOV     DPTR,#TempHumiNodeReport_DstAddr + 8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  198   TempHumiNodeReport_DstAddr.endPoint       = SAMPLEAPP_ENDPOINT;//Ä¿µÄ½ÓÊÕ¶ËµãÎªSAMPLEAPP_ENDPOINT
        INC     DPTR
        MOV     A,#0x19
        MOVX    @DPTR,A
//  199   TempHumiNodeReport_DstAddr.addr.shortAddr = 0x0000;//Ä¬ÈÏµØÖ·¡£  
        MOV     DPTR,#TempHumiNodeReport_DstAddr
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  200 //***************ÉèÖÃÍ¨ÐÅÄ¿µÄµØÖ·²ÎÊý******************************    
//  201   
//  202 //*********×¢²á¶Ëµã**************************************
//  203   SampleApp_epDesc.endPoint     = SAMPLEAPP_ENDPOINT;
        MOV     DPTR,#SampleApp_epDesc
        MOV     A,#0x19
        MOVX    @DPTR,A
//  204   SampleApp_epDesc.task_id      = &SampleApp_TaskID;
        INC     DPTR
        MOV     A,#SampleApp_TaskID & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(SampleApp_TaskID >> 8) & 0xff
        MOVX    @DPTR,A
//  205   SampleApp_epDesc.simpleDesc   = (SimpleDescriptionFormat_t *)&SampleApp_SimpleDesc;
        INC     DPTR
        MOV     A,#SampleApp_SimpleDesc & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(SampleApp_SimpleDesc >> 8) & 0xff
        MOVX    @DPTR,A
//  206   SampleApp_epDesc.latencyReq   = noLatencyReqs;
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//  207 
//  208   afRegister( &SampleApp_epDesc );//×¢²á¶Ëµã
        ; Setup parameters for call to function afRegister
        MOV     R2,#SampleApp_epDesc & 0xff
        MOV     R3,#(SampleApp_epDesc >> 8) & 0xff
        LCALL   ??afRegister?relay
//  209 //*********×¢²á¶Ëµã**************************************  
//  210 }
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
//  211 
//  212 /*********************************************************************
//  213  * @fn      SampleApp_ProcessEvent
//  214  *
//  215  * @brief   Generic Application Task event processor.  This function
//  216  *          is called to process all events for the task.  Events
//  217  *          include timers, messages and any other user defined events.
//  218  *
//  219  * @param   task_id  - The OSAL assigned task ID.
//  220  * @param   events - events to process.  This is a bit map and can
//  221  *                   contain more than one event.
//  222  *
//  223  * @return  none
//  224  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  225 uint16 SampleApp_ProcessEvent( uint8 task_id, uint16 events )
SampleApp_ProcessEvent:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function SampleApp_ProcessEvent
        CODE
//  226 {
        FUNCALL SampleApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, SampleApp_MessageMSGCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, SHT2x_ReadHumi
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, SHT2x_ReadTemp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_ProcessEvent, SendTemperature
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  227   afIncomingMSGPacket_t *MSGpkt;
//  228   (void)task_id;  // Intentionally unreferenced parameter
//  229 
//  230   if ( events & SYS_EVENT_MSG )
        ANL     A,#0x80
        JZ      ??SampleApp_ProcessEvent_0
//  231   {
//  232     MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
        SJMP    ??SampleApp_ProcessEvent_1
//  233     while ( MSGpkt )
//  234     {
//  235       switch ( MSGpkt->hdr.event )
//  236       {        
//  237         // Received when a messages is received (OTA) for this endpoint
//  238         case AF_INCOMING_MSG_CMD:
//  239           SampleApp_MessageMSGCB( MSGpkt );
//  240           break;
//  241 
//  242         // Received whenever the device changes state in the network
//  243         case ZDO_STATE_CHANGE:
//  244           SampleApp_NwkState = (devStates_t)(MSGpkt->hdr.status);
??SampleApp_ProcessEvent_2:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPTR,#SampleApp_NwkState
        MOVX    @DPTR,A
//  245           if (  (SampleApp_NwkState == DEV_ROUTER)
//  246               ||(SampleApp_NwkState == DEV_END_DEVICE) )
        MOVX    A,@DPTR
        XRL     A,#0x7
        JZ      ??SampleApp_ProcessEvent_3
        MOVX    A,@DPTR
        XRL     A,#0x6
        JNZ     ??SampleApp_ProcessEvent_4
//  247           {
//  248             //ÉèÖÃ¶ÁÎÂÊª¶È´«¸ÐÆ÷Öµ£¬¶Á³öµÄÊý¾Ý±£´æÔÚ±äÁ¿·¢ËÍÊ±ÔÙ½«Êý¾Ý¶Á³öÀ´¡£
//  249             osal_set_event( SampleApp_TaskID,
//  250                             READ_TEMP_HUMI_MSG_EVT);
??SampleApp_ProcessEvent_3:
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x2
        MOV     R3,#0x0
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_set_event?relay
//  251           }
//  252           break;
//  253 
//  254         default:
//  255           break;
//  256       }
//  257       // Release the memory
//  258       osal_msg_deallocate( (uint8 *)MSGpkt );
??SampleApp_ProcessEvent_4:
        ; Setup parameters for call to function osal_msg_deallocate
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_msg_deallocate?relay
//  259       // Next - if one is available
//  260       MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( SampleApp_TaskID );
        ; Setup parameters for call to function osal_msg_receive
??SampleApp_ProcessEvent_1:
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??SampleApp_ProcessEvent_5
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        ADD     A,#-0x1a
        JZ      ??SampleApp_ProcessEvent_6
        ADD     A,#0x49
        JZ      ??SampleApp_ProcessEvent_2
        SJMP    ??SampleApp_ProcessEvent_4
??SampleApp_ProcessEvent_6:
        ; Setup parameters for call to function SampleApp_MessageMSGCB
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??SampleApp_MessageMSGCB?relay
        SJMP    ??SampleApp_ProcessEvent_4
//  261     }
//  262     // return unprocessed events
//  263     return (events ^ SYS_EVENT_MSG);
??SampleApp_ProcessEvent_5:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        XRL     A,#0x80
??SampleApp_ProcessEvent_7:
        MOV     R3,A
        SJMP    ??SampleApp_ProcessEvent_8
//  264   }
//  265 
//  266   if(events & READ_TEMP_HUMI_MSG_EVT )
??SampleApp_ProcessEvent_0:
        MOV     A,R6
        ANL     A,#0x2
        JZ      ??SampleApp_ProcessEvent_9
//  267   {
//  268     printf("read temp and humi\r\n") ;     
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "read temp and humi\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "read temp and humi\\r\\n">` >> 8) & 0xff
        LCALL   ??printf?relay
//  269     ReadTempHumiControl?SHT2x_ReadHumi():SHT2x_ReadTemp(); 
        MOV     DPTR,#ReadTempHumiControl
        MOVX    A,@DPTR
        JZ      ??SampleApp_ProcessEvent_10
        ; Setup parameters for call to function SHT2x_ReadHumi
        LCALL   ??SHT2x_ReadHumi?relay
        SJMP    ??SampleApp_ProcessEvent_11
??SampleApp_ProcessEvent_10:
        ; Setup parameters for call to function SHT2x_ReadTemp
        LCALL   ??SHT2x_ReadTemp?relay
//  270     ReadTempHumiControl = 1-ReadTempHumiControl;
??SampleApp_ProcessEvent_11:
        MOV     DPTR,#ReadTempHumiControl
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x1
        CLR     C
        SUBB    A,R0
        MOVX    @DPTR,A
//  271     osal_start_timerEx( SampleApp_TaskID, READ_TEMP_HUMI_MSG_EVT,READ_TEMP_HUMI_MSG_TIMEOUT);
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#-0x30
        MOV     R5,#0x7
        MOV     R2,#0x2
        MOV     R3,#0x0
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//  272     return (events ^ READ_TEMP_HUMI_MSG_EVT);
        MOV     A,R6
        XRL     A,#0x2
        MOV     R2,A
        MOV     A,R7
        SJMP    ??SampleApp_ProcessEvent_7
//  273   }
//  274   
//  275   if(events & SEND_TEMP_HUMI_MSG_EVT)
??SampleApp_ProcessEvent_9:
        MOV     A,R6
        ANL     A,#0x8
        JZ      ??SampleApp_ProcessEvent_12
//  276   {
//  277      printf("send temp humi\r\n");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "send temp humi\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "send temp humi\\r\\n">` >> 8) & 0xff
        LCALL   ??printf?relay
//  278      SendTemperature();    
        ; Setup parameters for call to function SendTemperature
        LCALL   ??SendTemperature?relay
//  279   }
//  280   // Discard unknown events
//  281   return 0;
??SampleApp_ProcessEvent_12:
        MOV     R2,#0x0
        MOV     R3,#0x0
??SampleApp_ProcessEvent_8:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//  282 }
//  283 /*********************************************************************
//  284  * LOCAL FUNCTIONS
//  285  */
//  286 
//  287 /*********************************************************************
//  288  * @fn      SampleApp_MessageMSGCB
//  289  *
//  290  * @brief   Data message processor callback.  This function processes
//  291  *          any incoming data - probably from other devices.  So, based
//  292  *          on cluster ID, perform the intended action.
//  293  *
//  294  * @param   none
//  295  *
//  296  * @return  none
//  297  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  298 void SampleApp_MessageMSGCB( afIncomingMSGPacket_t *pkt )
SampleApp_MessageMSGCB:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function SampleApp_MessageMSGCB
        CODE
//  299 {
        FUNCALL SampleApp_MessageMSGCB, Bottom_Blue
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_MessageMSGCB, Bottom_BlackOut
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_MessageMSGCB, osal_rand
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SampleApp_MessageMSGCB, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  300   switch ( pkt->clusterId )
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x6
        JNZ     ??SampleApp_MessageMSGCB_0
        INC     DPTR
        MOVX    A,@DPTR
??SampleApp_MessageMSGCB_0:
        JNZ     ??SampleApp_MessageMSGCB_1
//  301   {
//  302     case BOARDCAST_REQUERY_DATA:
//  303           TempHumiNodeReport_DstAddr.addr.shortAddr = pkt->srcAddr.addr.shortAddr;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPTR,#TempHumiNodeReport_DstAddr
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
//  304           SendIndicate?Bottom_Blue():Bottom_BlackOut();//Ã¿½ÓÊÕµ½Ò»´ÎÇÐ»»µ××ùµÆÑÕÉ«
        MOV     DPTR,#SendIndicate
        MOVX    A,@DPTR
        JZ      ??SampleApp_MessageMSGCB_2
        ; Setup parameters for call to function Bottom_Blue
        LCALL   ??Bottom_Blue?relay
        SJMP    ??SampleApp_MessageMSGCB_3
??SampleApp_MessageMSGCB_2:
        ; Setup parameters for call to function Bottom_BlackOut
        LCALL   ??Bottom_BlackOut?relay
//  305           SendIndicate = 1-SendIndicate;
??SampleApp_MessageMSGCB_3:
        MOV     DPTR,#SendIndicate
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x1
        CLR     C
        SUBB    A,R0
        MOVX    @DPTR,A
//  306                   
//  307           osal_start_timerEx( SampleApp_TaskID, 
//  308                               SEND_TEMP_HUMI_MSG_EVT,
//  309                               (osal_rand() & 0x00FF) );
        ; Setup parameters for call to function osal_rand
        LCALL   ??osal_rand?relay
        ; Setup parameters for call to function osal_start_timerEx
        MOV     A,R2
        MOV     R4,A
        MOV     R5,#0x0
        MOV     R2,#0x8
        MOV     R3,#0x0
        MOV     DPTR,#SampleApp_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//  310     break;    
//  311   }
//  312 }
??SampleApp_MessageMSGCB_1:
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  313 void SendTemperature( void )
SendTemperature:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function SendTemperature
        CODE
//  314 {
        FUNCALL SendTemperature, SHT2x_GetTemp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SendTemperature, SHT2x_GetHumi
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SendTemperature, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL SendTemperature, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
//  315   uint8 sendbuf[2];
//  316   sendbuf[0] = SHT2x_GetTemp();//»ñÈ¡ÎÂ¶ÈÖµ
        ; Setup parameters for call to function SHT2x_GetTemp
        LCALL   ??SHT2x_GetTemp?relay
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
//  317   sendbuf[1] = SHT2x_GetHumi();//»ñÈ¡Êª¶ÈÖµ  
        ; Setup parameters for call to function SHT2x_GetHumi
        LCALL   ??SHT2x_GetHumi?relay
        MOV     A,R1
        PUSH    A
        CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
        CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  318   if ( AF_DataRequest( &TempHumiNodeReport_DstAddr, &SampleApp_epDesc,
//  319                        TEMP_HUMI_CLUSTERID,
//  320                        2,
//  321                        sendbuf,
//  322                        &SampleApp_TransID,
//  323                        AF_DISCV_ROUTE,
//  324                        AF_DEFAULT_RADIUS ) == afStatus_SUCCESS )
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V0 + 0,#0x1e
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 13)
        MOV     ?V0 + 0,#SampleApp_TransID & 0xff
        MOV     ?V0 + 1,#(SampleApp_TransID >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 15)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 19)
        MOV     ?V0 + 0,#0x4
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,#0x20
        MOV     R4,#SampleApp_epDesc & 0xff
        MOV     R5,#(SampleApp_epDesc >> 8) & 0xff
        MOV     R2,#TempHumiNodeReport_DstAddr & 0xff
        MOV     R3,#(TempHumiNodeReport_DstAddr >> 8) & 0xff
        LCALL   ??AF_DataRequest?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R1
        JNZ     ??SendTemperature_0
//  325   {
//  326     printf("tx sucess\r\n");
        ; Setup parameters for call to function printf
        MOV     R2,#`?<Constant "tx sucess\\r\\n">` & 0xff
        MOV     R3,#(`?<Constant "tx sucess\\r\\n">` >> 8) & 0xff
        LCALL   ??printf?relay
//  327   }
//  328 }
??SendTemperature_0:
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock3

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for SendIndicate>`:
        DATA8
        DB 1

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for ReadTempHumiControl>`:
        DATA8
        DB 1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SampleApp_MessageMSGCB?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SampleApp_MessageMSGCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??SendTemperature?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    SendTemperature

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "i am end device\\r\\n">`:
        DB "i am end device\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "end device">`:
        DB "end device"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "hello world\\r\\n">`:
        DB "hello world\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "read temp and humi\\r\\n">`:
        DB "read temp and humi\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "send temp humi\\r\\n">`:
        DB "send temp humi\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "tx sucess\\r\\n">`:
        DB "tx sucess\015\012"

        END
//  329 /*********************************************************************
//  330 *********************************************************************/
// 
// 508 bytes in segment BANKED_CODE
//  24 bytes in segment BANK_RELAYS
//   2 bytes in segment XDATA_I
//   2 bytes in segment XDATA_ID
// 109 bytes in segment XDATA_ROM_C
//  22 bytes in segment XDATA_Z
// 
// 534 bytes of CODE  memory
// 109 bytes of CONST memory
//  24 bytes of XDATA memory
//
//Errors: none
//Warnings: none
