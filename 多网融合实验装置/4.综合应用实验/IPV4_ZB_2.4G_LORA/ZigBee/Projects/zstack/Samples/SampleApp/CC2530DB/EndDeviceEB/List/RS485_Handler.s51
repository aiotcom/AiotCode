///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        02/Jan/2020  11:22:42 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Components\HARDWARE\RS485_Handler.c       /
//    Command line       =  -f D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_L /
//                          ORA\ZigBee\Projects\zstack\Samples\SampleApp\CC25 /
//                          30DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg         /
//                          (-DCPU32MHZ -DROOT=__near_func -DBLINK_LEDS) -f   /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\Tools\CC2530DB\f8wConfig.cfg           /
//                          (-DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR     /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFF11                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          "-DCONST=const __code" -DGENERIC=__generic        /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 D:\DWRH\mode-exp\stm32\ZHO /
//                          NG_HE\IPV4_ZB_2.4G_LORA\ZigBee\Components\HARDWAR /
//                          E\RS485_Handler.c -D NWK_AUTO_POLL -D ZTOOL_P1    /
//                          -D MT_SYS_FUNC -D MT_ZDO_FUNC -D                  /
//                          LCD_SUPPORTED=DEBUG -lC                           /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\EndDeviceEB\List\ -lA                           /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\EndDeviceEB\List\ --diag_suppress Pe001,Pa010   /
//                          -o D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_L /
//                          ORA\ZigBee\Projects\zstack\Samples\SampleApp\CC25 /
//                          30DB\EndDeviceEB\Obj\ -e --no_unroll --no_inline  /
//                          --no_tbaa --debug --core=plain --dptr=16,1        /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 16   /
//                          -I D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_L /
//                          ORA\ZigBee\Projects\zstack\Samples\SampleApp\CC25 /
//                          30DB\ -I D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_ /
//                          2.4G_LORA\ZigBee\Projects\zstack\Samples\SampleAp /
//                          p\CC2530DB\..\SOURCE\ -I                          /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\ZMAIN\TI2530DB\ -I                     /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\MT\ -I                /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\HAL\INCLUDE\ -I       /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\HAL\TARGET\CC2530EB\  /
//                          -I D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_L /
//                          ORA\ZigBee\Projects\zstack\Samples\SampleApp\CC25 /
//                          30DB\..\..\..\..\..\COMPONENTS\OSAL\MCU\CCSOC\    /
//                          -I D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_L /
//                          ORA\ZigBee\Projects\zstack\Samples\SampleApp\CC25 /
//                          30DB\..\..\..\..\..\COMPONENTS\OSAL\INCLUDE\ -I   /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\STACK\AF\ -I          /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\STACK\NWK\ -I         /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\STACK\SEC\ -I         /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\STACK\SAPI\ -I        /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\STACK\SYS\ -I         /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\STACK\ZDO\ -I         /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\ZMAC\F8W\ -I          /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\ZMAC\ -I              /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\SERVICES\SADDR\ -I    /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\SERVICES\SDATA\ -I    /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\MAC\INCLUDE\ -I       /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\ -I    /
//                          D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf04\  /
//                          -I D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_L /
//                          ORA\ZigBee\Projects\zstack\Samples\SampleApp\CC25 /
//                          30DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf0 /
//                          4\SINGLE_CHIP\ -I D:\DWRH\mode-exp\stm32\ZHONG_HE /
//                          \IPV4_ZB_2.4G_LORA\ZigBee\Projects\zstack\Samples /
//                          \SampleApp\CC2530DB\..\..\..\..\..\COMPONENTS\HAR /
//                          DWARE\ -Om                                        /
//    List file          =  D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA /
//                          \ZigBee\Projects\zstack\Samples\SampleApp\CC2530D /
//                          B\EndDeviceEB\List\RS485_Handler.s51              /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME RS485_Handler

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN __INIT_XDATA_Z

        PUBLIC ??RS485_Handler_Init?relay
        FUNCTION ??RS485_Handler_Init?relay,0203H
        PUBLIC ??RS485_Handler_ProcessEvent?relay
        FUNCTION ??RS485_Handler_ProcessEvent?relay,0203H
        PUBLIC RS485_Handler_Init
        FUNCTION RS485_Handler_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC RS485_Handler_ProcessEvent
        FUNCTION RS485_Handler_ProcessEvent,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC RS485_Handler_TaskId
        PUBLIC ReceiveBuffer
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
Rs485_Init          SYMBOL "Rs485_Init"
osal_start_timerEx  SYMBOL "osal_start_timerEx"
Hal_UART_RxBufLen   SYMBOL "Hal_UART_RxBufLen"
HalUARTRead         SYMBOL "HalUARTRead"
Rs485_Receive       SYMBOL "Rs485_Receive"
DataHandling_485    SYMBOL "DataHandling_485"
Rs485_Send          SYMBOL "Rs485_Send"
??DataHandling_485?relay SYMBOL "?relay", DataHandling_485
??HalUARTRead?relay SYMBOL "?relay", HalUARTRead
??Hal_UART_RxBufLen?relay SYMBOL "?relay", Hal_UART_RxBufLen
??Rs485_Init?relay  SYMBOL "?relay", Rs485_Init
??Rs485_Receive?relay SYMBOL "?relay", Rs485_Receive
??Rs485_Send?relay  SYMBOL "?relay", Rs485_Send
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
RS485_Handler_Init  SYMBOL "RS485_Handler_Init"
??RS485_Handler_Init?relay SYMBOL "?relay", RS485_Handler_Init
RS485_Handler_ProcessEvent SYMBOL "RS485_Handler_ProcessEvent"
??RS485_Handler_ProcessEvent?relay SYMBOL "?relay", RS485_Handler_ProcessEvent

        EXTERN Rs485_Init
        FUNCTION Rs485_Init,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Hal_UART_RxBufLen
        FUNCTION Hal_UART_RxBufLen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalUARTRead
        FUNCTION HalUARTRead,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Rs485_Receive
        FUNCTION Rs485_Receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN DataHandling_485
        FUNCTION DataHandling_485,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Rs485_Send
        FUNCTION Rs485_Send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??DataHandling_485?relay
        FUNCTION ??DataHandling_485?relay,00H
        EXTERN ??HalUARTRead?relay
        FUNCTION ??HalUARTRead?relay,00H
        EXTERN ??Hal_UART_RxBufLen?relay
        FUNCTION ??Hal_UART_RxBufLen?relay,00H
        EXTERN ??Rs485_Init?relay
        FUNCTION ??Rs485_Init?relay,00H
        EXTERN ??Rs485_Receive?relay
        FUNCTION ??Rs485_Receive?relay,00H
        EXTERN ??Rs485_Send?relay
        FUNCTION ??Rs485_Send?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H
        EXTERN SHT20_Data

// D:\DWRH\mode-exp\stm32\ZHONG_HE\IPV4_ZB_2.4G_LORA\ZigBee\Components\HARDWARE\RS485_Handler.c
//    1 #include "RS485_Handler.h"
//    2 
//    3 #define RS485_HANDLER_MSG_EVT  0x0003

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//    4 uint8 RS485_Handler_TaskId;
RS485_Handler_TaskId:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//    5 uint8 ReceiveBuffer[64]={0};
ReceiveBuffer:
        DS 64
        REQUIRE __INIT_XDATA_Z
//    6 extern uint8_t SHT20_Data[ ];

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//    7 static uint8 RxLen,state = 0,count=0;
RxLen:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
state:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
count:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG BANKED_CODE:CODE:NOROOT(0)
//    8 void RS485_Handler_Init( uint8 task_id )
RS485_Handler_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function RS485_Handler_Init
        CODE
//    9 {
        FUNCALL RS485_Handler_Init, Rs485_Init
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL RS485_Handler_Init, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
//   10 	RS485_Handler_TaskId = task_id;
        MOV     DPTR,#RS485_Handler_TaskId
        MOVX    @DPTR,A
//   11 	Rs485_Init();
        ; Setup parameters for call to function Rs485_Init
        LCALL   ??Rs485_Init?relay
//   12 	osal_start_timerEx( RS485_Handler_TaskId, RS485_HANDLER_MSG_EVT,50);
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#0x32
        MOV     R5,#0x0
        MOV     R2,#0x3
        MOV     R3,#0x0
        MOV     DPTR,#RS485_Handler_TaskId
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//   13 }
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
//   14 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   15 uint16 RS485_Handler_ProcessEvent( uint8 task_id, uint16 events )
RS485_Handler_ProcessEvent:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function RS485_Handler_ProcessEvent
        CODE
//   16 {
        FUNCALL RS485_Handler_ProcessEvent, Hal_UART_RxBufLen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL RS485_Handler_ProcessEvent, Hal_UART_RxBufLen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL RS485_Handler_ProcessEvent, HalUARTRead
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL RS485_Handler_ProcessEvent, Rs485_Receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL RS485_Handler_ProcessEvent, DataHandling_485
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL RS485_Handler_ProcessEvent, Rs485_Send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL RS485_Handler_ProcessEvent, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//   17   if ( events & SYS_EVENT_MSG )
        ANL     A,#0x80
        JZ      ??RS485_Handler_ProcessEvent_0
//   18   {
//   19     return (events ^ SYS_EVENT_MSG);
        MOV     A,R7
        XRL     A,#0x80
??RS485_Handler_ProcessEvent_1:
        MOV     R3,A
        LJMP    ??RS485_Handler_ProcessEvent_2 & 0xFFFF
//   20   } 
//   21   
//   22   if ( (events & RS485_HANDLER_MSG_EVT) == RS485_HANDLER_MSG_EVT )
??RS485_Handler_ProcessEvent_0:
        MOV     A,R6
        ANL     A,#0x3
        XRL     A,#0x3
        JZ      $+5
        LJMP    ??RS485_Handler_ProcessEvent_3 & 0xFFFF
//   23   {
//   24     if(state == 0)
        MOV     DPTR,#state
        MOVX    A,@DPTR
        JNZ     ??RS485_Handler_ProcessEvent_4
//   25 	{
//   26 		if(Hal_UART_RxBufLen(HAL_UART_PORT_1))
        ; Setup parameters for call to function Hal_UART_RxBufLen
        MOV     R1,#0x1
        LCALL   ??Hal_UART_RxBufLen?relay
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??RS485_Handler_ProcessEvent_5 & 0xFFFF
//   27 		{
//   28 		  	count = 0;
        MOV     DPTR,#count
        CLR     A
        MOVX    @DPTR,A
//   29 			state = 1;
        MOV     DPTR,#state
        INC     A
        SJMP    ??RS485_Handler_ProcessEvent_6
//   30 		}
//   31 	}
//   32 	else if(state == 1)
??RS485_Handler_ProcessEvent_4:
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??RS485_Handler_ProcessEvent_5
//   33 	{
//   34 	  	RxLen = Hal_UART_RxBufLen(HAL_UART_PORT_1);
        ; Setup parameters for call to function Hal_UART_RxBufLen
        MOV     R1,#0x1
        LCALL   ??Hal_UART_RxBufLen?relay
        MOV     A,R2
        MOV     DPTR,#RxLen
        MOVX    @DPTR,A
//   35 		HalUARTRead(HAL_UART_PORT_1,ReceiveBuffer,RxLen);
        ; Setup parameters for call to function HalUARTRead
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     R2,#ReceiveBuffer & 0xff
        MOV     R3,#(ReceiveBuffer >> 8) & 0xff
        MOV     R1,#0x1
        LCALL   ??HalUARTRead?relay
        SJMP    ??RS485_Handler_ProcessEvent_7
//   36 		while(count<RxLen)
//   37 		{
//   38 			Rs485_Receive(ReceiveBuffer[count]);
??RS485_Handler_ProcessEvent_8:
        ; Setup parameters for call to function Rs485_Receive
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#ReceiveBuffer & 0xff
        ADD     A,R0
        MOV     DPL,A
        MOV     A,#(ReceiveBuffer >> 8) & 0xff
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??Rs485_Receive?relay
//   39 			count++;
        MOV     DPTR,#count
        MOVX    A,@DPTR
        INC     A
        MOVX    @DPTR,A
//   40 		}
??RS485_Handler_ProcessEvent_7:
        MOV     DPTR,#RxLen
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPTR,#count
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R0
        JC      ??RS485_Handler_ProcessEvent_8
//   41 		if(!DataHandling_485(Addr_ZigBee))
        ; Setup parameters for call to function DataHandling_485
        MOV     R2,#0x1
        MOV     R3,#0x1d
        LCALL   ??DataHandling_485?relay
        MOV     A,R1
        JNZ     ??RS485_Handler_ProcessEvent_9
//   42 		{
//   43 			Rs485_Send(Addr_ZigBee,Addr_IPV4,SHT20_All,2,SHT20_Data);
        ; Setup parameters for call to function Rs485_Send
        MOV     ?V0 + 0,#SHT20_Data & 0xff
        MOV     ?V0 + 1,#(SHT20_Data >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 0,#0x31
        MOV     ?V0 + 1,#0x16
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 14)
        MOV     R1,#0x2
        MOV     R4,#0x1
        MOV     R5,#0x23
        MOV     R2,#0x1
        MOV     R3,#0x1d
        LCALL   ??Rs485_Send?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
//   44 		}
//   45 		state = 0;
??RS485_Handler_ProcessEvent_9:
        MOV     DPTR,#state
        CLR     A
??RS485_Handler_ProcessEvent_6:
        MOVX    @DPTR,A
//   46 	}
//   47 	osal_start_timerEx( RS485_Handler_TaskId, RS485_HANDLER_MSG_EVT,20);
??RS485_Handler_ProcessEvent_5:
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#0x14
        MOV     R5,#0x0
        MOV     R2,#0x3
        MOV     R3,#0x0
        MOV     DPTR,#RS485_Handler_TaskId
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//   48 	return (events ^ RS485_HANDLER_MSG_EVT);
        MOV     A,R6
        XRL     A,#0x3
        MOV     R2,A
        MOV     A,R7
        LJMP    ??RS485_Handler_ProcessEvent_1 & 0xFFFF
//   49   }
//   50   
//   51   return 0;
??RS485_Handler_ProcessEvent_3:
        MOV     R2,#0x0
        MOV     R3,#0x0
??RS485_Handler_ProcessEvent_2:
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
//   52 }

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??RS485_Handler_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    RS485_Handler_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??RS485_Handler_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    RS485_Handler_ProcessEvent

        END
// 
// 251 bytes in segment BANKED_CODE
//  12 bytes in segment BANK_RELAYS
//  68 bytes in segment XDATA_Z
// 
// 263 bytes of CODE  memory
//  68 bytes of XDATA memory
//
//Errors: none
//Warnings: none
